    CHECK_SIZE(PDMDEVINS, 264);
    CHECK_OFF(PDMDEVINS, 104, Internal);
    CHECK_OFF(PDMDEVINS, 72, pReg);
    CHECK_OFF(PDMDEVINS, 80, pCfg);
    CHECK_OFF(PDMDEVINS, 4, iInstance);
    CHECK_OFF(PDMDEVINS, 88, IBase);
    CHECK_OFF(PDMDEVINS, 48, pHlpR3);
    CHECK_OFF(PDMDEVINS, 24, pHlpR0);
    CHECK_OFF(PDMDEVINS, 8, pHlpRC);
    CHECK_OFF(PDMDEVINS, 56, pvInstanceDataR3);
    CHECK_OFF(PDMDEVINS, 32, pvInstanceDataR0);
    CHECK_OFF(PDMDEVINS, 12, pvInstanceDataRC);
    CHECK_OFF(PDMDEVINS, 256, achInstanceData);
    CHECK_SIZE(PCIDEVICE, 608);
    CHECK_SIZE(PCIDEVICEINT, 328);
    CHECK_SIZE(PCIIOREGION, 32);
    CHECK_OFF(PCIDEVICE, 0, config);
    CHECK_OFF(PCIDEVICE, 584, devfn);
    CHECK_OFF(PCIDEVICE, 592, name);
    CHECK_OFF(PCIDEVICE, 600, pDevIns);
    CHECK_OFF(PCIDEVICE, 256, Int);
    CHECK_OFF(PCIDEVICE, 256, Int.s.aIORegions);
    CHECK_OFF(PCIDEVICE, 288, Int.s.aIORegions[1]);
    CHECK_OFF(PCIDEVICE, 448, Int.s.aIORegions[PCI_NUM_REGIONS - 1]);
    CHECK_OFF(PCIDEVICE, 256, Int.s.aIORegions[0].addr);
    CHECK_OFF(PCIDEVICE, 264, Int.s.aIORegions[0].size);
    CHECK_OFF(PCIDEVICE, 272, Int.s.aIORegions[0].type);
    CHECK_OFF(PCIDEVICE, 273, Int.s.aIORegions[0].padding);
    CHECK_OFF(PCIDEVICE, 480, Int.s.pBusR3);
    CHECK_OFF(PCIDEVICE, 488, Int.s.pBusR0);
    CHECK_OFF(PCIDEVICE, 496, Int.s.pBusRC);
    CHECK_OFF(PCIDEVICE, 528, Int.s.pfnConfigRead);
    CHECK_OFF(PCIDEVICE, 536, Int.s.pfnConfigWrite);
    CHECK_OFF(PCIDEVICE, 544, Int.s.fFlags);
    CHECK_OFF(PCIDEVICE, 548, Int.s.uIrqPinState);
    CHECK_OFF(PCIDEVICE, 568, Int.s.pfnBridgeConfigRead);
    CHECK_OFF(PCIDEVICE, 576, Int.s.pfnBridgeConfigWrite);
    CHECK_PADDING(PCIDEVICE, Int, 8);
    CHECK_SIZE(PIIX3State, 608);
    CHECK_SIZE(PCIBUS, 2720);
    CHECK_OFF(PCIBUS, 0, iBus);
    CHECK_OFF(PCIBUS, 4, iDevSearch);
    CHECK_OFF(PCIBUS, 8, cBridges);
    CHECK_OFF(PCIBUS, 16, devices);
    CHECK_OFF(PCIBUS, 24, devices[1]);
    CHECK_OFF(PCIBUS, 2072, pDevInsR3);
    CHECK_OFF(PCIBUS, 2080, pPciHlpR3);
    CHECK_OFF(PCIBUS, 2064, papBridgesR3);
    CHECK_OFF(PCIBUS, 2088, pDevInsR0);
    CHECK_OFF(PCIBUS, 2096, pPciHlpR0);
    CHECK_OFF(PCIBUS, 2104, pDevInsRC);
    CHECK_OFF(PCIBUS, 2108, pPciHlpRC);
    CHECK_OFF(PCIBUS, 2112, PciDev);
    CHECK_SIZE(PCIGLOBALS, 3424);
    CHECK_OFF(PCIGLOBALS, 16, pci_bios_io_addr);
    CHECK_OFF(PCIGLOBALS, 20, pci_bios_mem_addr);
    CHECK_OFF(PCIGLOBALS, 0, pci_irq_levels);
    CHECK_OFF(PCIGLOBALS, 4, pci_irq_levels[1]);
    CHECK_OFF(PCIGLOBALS, 25, fUseIoApic);
    CHECK_OFF(PCIGLOBALS, 28, pci_apic_irq_levels);
    CHECK_OFF(PCIGLOBALS, 32, pci_apic_irq_levels[1]);
    CHECK_OFF(PCIGLOBALS, 60, acpi_irq_level);
    CHECK_OFF(PCIGLOBALS, 64, acpi_irq);
    CHECK_OFF(PCIGLOBALS, 68, uConfigReg);
    CHECK_OFF(PCIGLOBALS, 72, pDevInsR3);
    CHECK_OFF(PCIGLOBALS, 80, pDevInsR0);
    CHECK_OFF(PCIGLOBALS, 88, pDevInsRC);
    CHECK_OFF(PCIGLOBALS, 96, PIIX3State);
    CHECK_OFF(PCIGLOBALS, 704, PciBus);
    CHECK_SIZE(ICH9PCIBUS, 2712);
    CHECK_OFF(ICH9PCIBUS, 0, iBus);
    CHECK_OFF(ICH9PCIBUS, 4, cBridges);
    CHECK_OFF(ICH9PCIBUS, 8, apDevices);
    CHECK_OFF(ICH9PCIBUS, 16, apDevices[1]);
    CHECK_OFF(ICH9PCIBUS, 2064, pDevInsR3);
    CHECK_OFF(ICH9PCIBUS, 2072, pPciHlpR3);
    CHECK_OFF(ICH9PCIBUS, 2056, papBridgesR3);
    CHECK_OFF(ICH9PCIBUS, 2080, pDevInsR0);
    CHECK_OFF(ICH9PCIBUS, 2088, pPciHlpR0);
    CHECK_OFF(ICH9PCIBUS, 2096, pDevInsRC);
    CHECK_OFF(ICH9PCIBUS, 2100, pPciHlpRC);
    CHECK_OFF(ICH9PCIBUS, 2104, aPciDev);
    CHECK_SIZE(ICH9PCIGLOBALS, 2800);
    CHECK_OFF(ICH9PCIGLOBALS, 0, pDevInsR3);
    CHECK_OFF(ICH9PCIGLOBALS, 8, pDevInsR0);
    CHECK_OFF(ICH9PCIGLOBALS, 16, pDevInsRC);
    CHECK_OFF(ICH9PCIGLOBALS, 24, uConfigReg);
    CHECK_OFF(ICH9PCIGLOBALS, 28, uaPciApicIrqLevels);
    CHECK_OFF(ICH9PCIGLOBALS, 32, uaPciApicIrqLevels[1]);
    CHECK_OFF(ICH9PCIGLOBALS, 60, uPciBiosIo);
    CHECK_OFF(ICH9PCIGLOBALS, 64, uPciBiosMmio);
    CHECK_OFF(ICH9PCIGLOBALS, 68, uBus);
    CHECK_OFF(ICH9PCIGLOBALS, 72, u64PciConfigMMioAddress);
    CHECK_OFF(ICH9PCIGLOBALS, 80, u64PciConfigMMioLength);
    CHECK_OFF(ICH9PCIGLOBALS, 88, aPciBus);
    CHECK_SIZE(DEVSMC, 244);
    CHECK_OFF(DEVSMC, 0, bCmd);
    CHECK_OFF(DEVSMC, 1, offKey);
    CHECK_OFF(DEVSMC, 2, offValue);
    CHECK_OFF(DEVSMC, 3, cKeys);
    CHECK_OFF(DEVSMC, 4, CurKey);
    CHECK_OFF(DEVSMC, 144, u);
    CHECK_OFF(DEVSMC, 144, u.s);
    CHECK_OFF(DEVSMC, 148, u.s.bState);
    CHECK_OFF(DEVSMC, 174, u.s.bStatusCode);
    CHECK_OFF(DEVSMC, 174, u.s.bStatusCode);
    CHECK_OFF(DEVSMC, 176, szOsk0And1);
    CHECK_OFF(DEVSMC, 241, bDollaryNumber);
    CHECK_OFF(DEVSMC, 242, bShutdownReason);
    CHECK_OFF(DEVSMC, 243, bNinjaActionTimerJob);
    CHECK_SIZE(VGASTATE, 80736);
    CHECK_OFF(VGASTATE, 0, vram_ptrR3);
    CHECK_OFF(VGASTATE, 8, get_bpp);
    CHECK_OFF(VGASTATE, 16, get_offsets);
    CHECK_OFF(VGASTATE, 24, get_resolution);
    CHECK_OFF(VGASTATE, 32, rgb_to_pixel);
    CHECK_OFF(VGASTATE, 40, cursor_invalidate);
    CHECK_OFF(VGASTATE, 48, cursor_draw_line);
    CHECK_OFF(VGASTATE, 64, vram_size);
    CHECK_OFF(VGASTATE, 68, latch);
    CHECK_OFF(VGASTATE, 72, sr_index);
    CHECK_OFF(VGASTATE, 73, sr);
    CHECK_OFF(VGASTATE, 74, sr[1]);
    CHECK_OFF(VGASTATE, 329, gr_index);
    CHECK_OFF(VGASTATE, 330, gr);
    CHECK_OFF(VGASTATE, 331, gr[1]);
    CHECK_OFF(VGASTATE, 586, ar_index);
    CHECK_OFF(VGASTATE, 587, ar);
    CHECK_OFF(VGASTATE, 588, ar[1]);
    CHECK_OFF(VGASTATE, 608, ar_flip_flop);
    CHECK_OFF(VGASTATE, 612, cr_index);
    CHECK_OFF(VGASTATE, 613, cr);
    CHECK_OFF(VGASTATE, 614, cr[1]);
    CHECK_OFF(VGASTATE, 869, msr);
    CHECK_OFF(VGASTATE, 869, msr);
    CHECK_OFF(VGASTATE, 870, fcr);
    CHECK_OFF(VGASTATE, 871, st00);
    CHECK_OFF(VGASTATE, 872, st01);
    CHECK_OFF(VGASTATE, 873, dac_state);
    CHECK_OFF(VGASTATE, 874, dac_sub_index);
    CHECK_OFF(VGASTATE, 875, dac_read_index);
    CHECK_OFF(VGASTATE, 876, dac_write_index);
    CHECK_OFF(VGASTATE, 877, dac_cache);
    CHECK_OFF(VGASTATE, 878, dac_cache[1]);
    CHECK_OFF(VGASTATE, 880, palette);
    CHECK_OFF(VGASTATE, 881, palette[1]);
    CHECK_OFF(VGASTATE, 1648, bank_offset);
    CHECK_OFF(VGASTATE, 1652, vbe_index);
    CHECK_OFF(VGASTATE, 1654, vbe_regs);
    CHECK_OFF(VGASTATE, 1656, vbe_regs[1]);
    CHECK_OFF(VGASTATE, 1676, vbe_regs[VBE_DISPI_INDEX_NB - 1]);
    CHECK_OFF(VGASTATE, 1684, vbe_start_addr);
    CHECK_OFF(VGASTATE, 1688, vbe_line_offset);
    CHECK_OFF(VGASTATE, 1692, vbe_bank_max);
    CHECK_OFF(VGASTATE, 1696, font_offsets);
    CHECK_OFF(VGASTATE, 1700, font_offsets[1]);
    CHECK_OFF(VGASTATE, 1704, graphic_mode);
    CHECK_OFF(VGASTATE, 1708, shift_control);
    CHECK_OFF(VGASTATE, 1709, double_scan);
    CHECK_OFF(VGASTATE, 1712, line_offset);
    CHECK_OFF(VGASTATE, 1716, line_compare);
    CHECK_OFF(VGASTATE, 1720, start_addr);
    CHECK_OFF(VGASTATE, 1724, plane_updated);
    CHECK_OFF(VGASTATE, 1728, last_cw);
    CHECK_OFF(VGASTATE, 1729, last_ch);
    CHECK_OFF(VGASTATE, 1732, last_width);
    CHECK_OFF(VGASTATE, 1736, last_height);
    CHECK_OFF(VGASTATE, 1740, last_scr_width);
    CHECK_OFF(VGASTATE, 1744, last_scr_height);
    CHECK_OFF(VGASTATE, 1748, last_bpp);
    CHECK_OFF(VGASTATE, 1752, cursor_start);
    CHECK_OFF(VGASTATE, 1753, cursor_end);
    CHECK_OFF(VGASTATE, 1756, cursor_offset);
    CHECK_OFF(VGASTATE, 1760, invalidated_y_table);
    CHECK_OFF(VGASTATE, 1764, invalidated_y_table[1]);
    CHECK_OFF(VGASTATE, 3804, invalidated_y_table[(VGA_MAX_HEIGHT / 32) - 1]);
    CHECK_OFF(VGASTATE, 3808, last_palette);
    CHECK_OFF(VGASTATE, 3812, last_palette[1]);
    CHECK_OFF(VGASTATE, 4832, last_ch_attr);
    CHECK_OFF(VGASTATE, 68828, last_ch_attr[CH_ATTR_SIZE - 1]);
    CHECK_OFF(VGASTATE, 68832, u32Marker);
    CHECK_OFF(VGASTATE, 68836, pDevInsRC);
    CHECK_OFF(VGASTATE, 68840, vram_ptrRC);
    CHECK_OFF(VGASTATE, 68848, pDevInsR3);
    CHECK_OFF(VGASTATE, 68856, pHGSMI);
    CHECK_OFF(VGASTATE, 68864, pVdma);
    CHECK_OFF(VGASTATE, 68872, IBase);
    CHECK_OFF(VGASTATE, 68880, IPort);
    CHECK_OFF(VGASTATE, 68992, IVBVACallbacks);
    CHECK_OFF(VGASTATE, 69032, pDrvBase);
    CHECK_OFF(VGASTATE, 69040, pDrv);
    CHECK_OFF(VGASTATE, 69048, RefreshTimer);
    CHECK_OFF(VGASTATE, 69056, pDevInsR0);
    CHECK_OFF(VGASTATE, 69072, svga.u64HostWindowId);
    CHECK_OFF(VGASTATE, 69080, svga.pFIFOR3);
    CHECK_OFF(VGASTATE, 69088, svga.pFIFOR0);
    CHECK_OFF(VGASTATE, 69096, svga.pSVGAState);
    CHECK_OFF(VGASTATE, 69104, svga.p3dState);
    CHECK_OFF(VGASTATE, 69112, svga.pFrameBufferBackup);
    CHECK_OFF(VGASTATE, 69128, svga.GCPhysFIFO);
    CHECK_OFF(VGASTATE, 69136, svga.cbFIFO);
    CHECK_OFF(VGASTATE, 70216, svga.BasePort);
    CHECK_OFF(VGASTATE, 70248, svga.pFIFOIOThread);
    CHECK_OFF(VGASTATE, 70256, svga.uWidth);
    CHECK_OFF(VGASTATE, 70296, svga.u32ActionFlags);
    CHECK_OFF(VGASTATE, 70300, svga.f3DEnabled);
    CHECK_OFF(VGASTATE, 70301, svga.fVRAMTracking);
    CHECK_OFF(VGASTATE, 70304, cMonitors);
    CHECK_OFF(VGASTATE, 70308, cMilliesRefreshInterval);
    CHECK_OFF(VGASTATE, 70312, au32DirtyBitmap);
    CHECK_OFF(VGASTATE, 70316, au32DirtyBitmap[1]);
    CHECK_OFF(VGASTATE, 78500, au32DirtyBitmap[(VGA_VRAM_MAX / PAGE_SIZE / 32) - 1]);
    CHECK_OFF(VGASTATE, 78504, fHasDirtyBits);
    CHECK_OFF(VGASTATE, 78505, fLFBUpdated);
    CHECK_OFF(VGASTATE, 78506, fGCEnabled);
    CHECK_OFF(VGASTATE, 78507, fR0Enabled);
    CHECK_OFF(VGASTATE, 78508, fRemappedVGA);
    CHECK_OFF(VGASTATE, 78509, fRenderVRAM);
    CHECK_OFF(VGASTATE, 78512, GCPhysVRAM);
    CHECK_OFF(VGASTATE, 78520, CritSect);
    CHECK_OFF(VGASTATE, 78712, Dev);
    CHECK_OFF(VGASTATE, 79320, StatRZMemoryRead);
    CHECK_OFF(VGASTATE, 79352, StatR3MemoryRead);
    CHECK_OFF(VGASTATE, 79384, StatRZMemoryWrite);
    CHECK_OFF(VGASTATE, 79416, StatR3MemoryWrite);
    CHECK_OFF(VGASTATE, 79480, fReadVBEData);
    CHECK_OFF(VGASTATE, 79481, fWriteVBEData);
    CHECK_OFF(VGASTATE, 79482, fReadVBEIndex);
    CHECK_OFF(VGASTATE, 79483, fWriteVBEIndex);
    CHECK_OFF(VGASTATE, 79484, cbWriteVBEData);
    CHECK_OFF(VGASTATE, 79485, cbWriteVBEIndex);
    CHECK_OFF(VGASTATE, 79486, cbWriteVBEExtraAddress);
    CHECK_OFF(VGASTATE, 79560, pu8VBEExtraData);
    CHECK_OFF(VGASTATE, 79568, cbVBEExtraData);
    CHECK_OFF(VGASTATE, 79570, u16VBEExtraAddress);
    CHECK_OFF(VGASTATE, 79576, pu8Logo);
    CHECK_OFF(VGASTATE, 79584, pszLogoFile);
    CHECK_OFF(VGASTATE, 79592, pu8LogoBitmap);
    CHECK_OFF(VGASTATE, 79600, offLogoData);
    CHECK_OFF(VGASTATE, 79604, cbLogo);
    CHECK_OFF(VGASTATE, 79608, LogoCommand);
    CHECK_OFF(VGASTATE, 79610, cxLogo);
    CHECK_OFF(VGASTATE, 79612, cyLogo);
    CHECK_OFF(VGASTATE, 79614, cLogoPlanes);
    CHECK_OFF(VGASTATE, 79616, cLogoBits);
    CHECK_OFF(VGASTATE, 79618, LogoCompression);
    CHECK_OFF(VGASTATE, 79620, cLogoUsedColors);
    CHECK_OFF(VGASTATE, 79622, cLogoPalEntries);
    CHECK_OFF(VGASTATE, 79624, fLogoClearScreen);
    CHECK_OFF(VGASTATE, 79632, au32LogoPalette);
    CHECK_OFF(VGASTATE, 80656, pu8VgaBios);
    CHECK_OFF(VGASTATE, 80664, cbVgaBios);
    CHECK_OFF(VGASTATE, 80672, pszVgaBiosFile);
    CHECK_OFF(VGASTATE, 80680, IOPortBase);
    CHECK_OFF(VGASTATE, 80684, fGuestCaps);
    CHECK_SIZE(MouseCmdQueue, 20);
    CHECK_OFF(MouseCmdQueue, 0, data);
    CHECK_OFF(MouseCmdQueue, 8, rptr);
    CHECK_OFF(MouseCmdQueue, 12, wptr);
    CHECK_OFF(MouseCmdQueue, 16, count);
    CHECK_SIZE(MouseEventQueue, 268);
    CHECK_OFF(MouseEventQueue, 0, data);
    CHECK_OFF(MouseEventQueue, 256, rptr);
    CHECK_OFF(MouseEventQueue, 260, wptr);
    CHECK_OFF(MouseEventQueue, 264, count);
    CHECK_SIZE(KBDState, 920);
    CHECK_OFF(KBDState, 288, write_cmd);
    CHECK_OFF(KBDState, 289, status);
    CHECK_OFF(KBDState, 290, mode);
    CHECK_OFF(KBDState, 0, mouse_command_queue);
    CHECK_OFF(KBDState, 20, mouse_event_queue);
    CHECK_OFF(KBDState, 300, mouse_write_cmd);
    CHECK_OFF(KBDState, 304, mouse_status);
    CHECK_OFF(KBDState, 305, mouse_resolution);
    CHECK_OFF(KBDState, 306, mouse_sample_rate);
    CHECK_OFF(KBDState, 307, mouse_wrap);
    CHECK_OFF(KBDState, 308, mouse_type);
    CHECK_OFF(KBDState, 309, mouse_detect_state);
    CHECK_OFF(KBDState, 312, mouse_dx);
    CHECK_OFF(KBDState, 316, mouse_dy);
    CHECK_OFF(KBDState, 320, mouse_dz);
    CHECK_OFF(KBDState, 324, mouse_dw);
    CHECK_OFF(KBDState, 332, mouse_buttons);
    CHECK_OFF(KBDState, 344, pDevInsR3);
    CHECK_OFF(KBDState, 352, pDevInsR0);
    CHECK_OFF(KBDState, 340, pDevInsRC);
    CHECK_SIZE(KbdKeyQ, 80);
    CHECK_OFF(KbdCmdQ, 0, rpos);
    CHECK_OFF(KbdCmdQ, 4, wpos);
    CHECK_OFF(KbdCmdQ, 8, cUsed);
    CHECK_OFF(KbdCmdQ, 12, cSize);
    CHECK_OFF(KbdCmdQ, 16, abQueue);
    CHECK_SIZE(KbdCmdQ, 20);
    CHECK_SIZE(PS2K, 456);
    CHECK_OFF(PS2K, 8, fScanning);
    CHECK_OFF(PS2K, 9, fNumLockOn);
    CHECK_OFF(PS2K, 10, u8ScanSet);
    CHECK_OFF(PS2K, 14, u8Typematic);
    CHECK_OFF(PS2K, 16, enmTypematicState);
    CHECK_OFF(PS2K, 20, keyQ);
    CHECK_OFF(PS2K, 100, cmdQ);
    CHECK_OFF(PS2K, 352, uTypematicDelay);
    CHECK_OFF(PS2K, 360, pKbdDelayTimerRC);
    CHECK_OFF(PS2K, 376, pKbdDelayTimerR3);
    CHECK_OFF(PS2K, 400, pKbdDelayTimerR0);
    CHECK_OFF(PS2K, 364, pKbdTypematicTimerRC);
    CHECK_OFF(PS2K, 384, pKbdTypematicTimerR3);
    CHECK_OFF(PS2K, 408, pKbdTypematicTimerR0);
    CHECK_OFF(PS2K, 368, pCritSectR3);
    CHECK_OFF(PS2K, 424, Keyboard.IBase);
    CHECK_OFF(PS2K, 432, Keyboard.IPort);
    CHECK_OFF(PS2K, 440, Keyboard.pDrvBase);
    CHECK_OFF(PS2K, 448, Keyboard.pDrv);
    CHECK_OFF(KBDState, 872, Mouse.IBase);
    CHECK_OFF(KBDState, 880, Mouse.IPort);
    CHECK_OFF(KBDState, 904, Mouse.pDrvBase);
    CHECK_OFF(KBDState, 912, Mouse.pDrv);
    CHECK_SIZE(PCNETSTATE, 11128);
    CHECK_OFF(PCNETSTATE, 0, PciDev);
    CHECK_OFF(PCNETSTATE, 720, pTimerPollR3);
    CHECK_OFF(PCNETSTATE, 776, pTimerPollR0);
    CHECK_OFF(PCNETSTATE, 804, pTimerPollRC);
    CHECK_OFF(PCNETSTATE, 712, pTimerSoftIntR3);
    CHECK_OFF(PCNETSTATE, 768, pTimerSoftIntR0);
    CHECK_OFF(PCNETSTATE, 800, pTimerSoftIntRC);
    CHECK_OFF(PCNETSTATE, 812, u32RAP);
    CHECK_OFF(PCNETSTATE, 816, iISR);
    CHECK_OFF(PCNETSTATE, 820, u32Lnkst);
    CHECK_OFF(PCNETSTATE, 824, GCRDRA);
    CHECK_OFF(PCNETSTATE, 828, GCTDRA);
    CHECK_OFF(PCNETSTATE, 832, aPROM);
    CHECK_OFF(PCNETSTATE, 833, aPROM[1]);
    CHECK_OFF(PCNETSTATE, 848, aCSR);
    CHECK_OFF(PCNETSTATE, 850, aCSR[1]);
    CHECK_OFF(PCNETSTATE, 1102, aCSR[CSR_MAX_REG - 1]);
    CHECK_OFF(PCNETSTATE, 1104, aBCR);
    CHECK_OFF(PCNETSTATE, 1106, aBCR[1]);
    CHECK_OFF(PCNETSTATE, 1202, aBCR[BCR_MAX_RAP - 1]);
    CHECK_OFF(PCNETSTATE, 1204, aMII);
    CHECK_OFF(PCNETSTATE, 1206, aMII[1]);
    CHECK_OFF(PCNETSTATE, 1266, aMII[MII_MAX_REG - 1]);
    CHECK_OFF(PCNETSTATE, 1268, u16CSR0LastSeenByGuest);
    CHECK_OFF(PCNETSTATE, 1272, u64LastPoll);
    CHECK_OFF(PCNETSTATE, 1280, abLoopBuf);
    CHECK_OFF(PCNETSTATE, 5376, abRecvBuf);
    CHECK_OFF(PCNETSTATE, 9476, iLog2DescSize);
    CHECK_OFF(PCNETSTATE, 9480, GCUpperPhys);
    CHECK_OFF(PCNETSTATE, 616, pXmitQueueR3);
    CHECK_OFF(PCNETSTATE, 752, pXmitQueueR0);
    CHECK_OFF(PCNETSTATE, 792, pXmitQueueRC);
    CHECK_OFF(PCNETSTATE, 624, pCanRxQueueR3);
    CHECK_OFF(PCNETSTATE, 744, pCanRxQueueR0);
    CHECK_OFF(PCNETSTATE, 788, pCanRxQueueRC);
    CHECK_OFF(PCNETSTATE, 728, pTimerRestore);
    CHECK_OFF(PCNETSTATE, 608, pDevInsR3);
    CHECK_OFF(PCNETSTATE, 736, pDevInsR0);
    CHECK_OFF(PCNETSTATE, 784, pDevInsRC);
    CHECK_OFF(PCNETSTATE, 632, pDrvR3);
    CHECK_OFF(PCNETSTATE, 640, pDrvBase);
    CHECK_OFF(PCNETSTATE, 648, IBase);
    CHECK_OFF(PCNETSTATE, 656, INetworkDown);
    CHECK_OFF(PCNETSTATE, 688, INetworkConfig);
    CHECK_OFF(PCNETSTATE, 9484, MMIOBase);
    CHECK_OFF(PCNETSTATE, 9488, IOPortBase);
    CHECK_OFF(PCNETSTATE, 9490, fLinkUp);
    CHECK_OFF(PCNETSTATE, 9491, fLinkTempDown);
    CHECK_OFF(PCNETSTATE, 9492, cLinkDownReported);
    CHECK_OFF(PCNETSTATE, 9496, MacConfigured);
    CHECK_OFF(PCNETSTATE, 9504, Led);
    CHECK_OFF(PCNETSTATE, 9520, ILeds);
    CHECK_OFF(PCNETSTATE, 9528, pLedsConnector);
    CHECK_OFF(PCNETSTATE, 9536, CritSect);
    CHECK_OFF(PCNETSTATE, 9744, fGCEnabled);
    CHECK_OFF(PCNETSTATE, 9745, fR0Enabled);
    CHECK_OFF(PCNETSTATE, 9746, fAm79C973);
    CHECK_OFF(PCNETSTATE, 9748, u32LinkSpeed);
    CHECK_OFF(PCNETSTATE, 9760, StatReceiveBytes);
    CHECK_OFF(PCNETSTATE, 9768, StatTransmitBytes);
    CHECK_OFF(PCNETSTATE, 9816, StatMMIOReadR3);
    CHECK_OFF(PCNETSTATE, 9776, StatMMIOReadRZ);
    CHECK_OFF(PCNETSTATE, 11120, StatMIIReads);
    CHECK_SIZE(ACPIState, 5328);
    CHECK_OFF(ACPIState, 0, dev);
    CHECK_OFF(ACPIState, 800, pm1a_en);
    CHECK_OFF(ACPIState, 802, pm1a_sts);
    CHECK_OFF(ACPIState, 804, pm1a_ctl);
    CHECK_OFF(ACPIState, 808, u64PmTimerInitial);
    CHECK_OFF(ACPIState, 816, pPmTimerR3);
    CHECK_OFF(ACPIState, 824, pPmTimerR0);
    CHECK_OFF(ACPIState, 832, pPmTimerRC);
    CHECK_OFF(ACPIState, 836, uPmTimerVal);
    CHECK_OFF(ACPIState, 844, gpe0_en);
    CHECK_OFF(ACPIState, 848, gpe0_sts);
    CHECK_OFF(ACPIState, 852, uBatteryIndex);
    CHECK_OFF(ACPIState, 856, au8BatteryInfo);
    CHECK_OFF(ACPIState, 908, uSystemInfoIndex);
    CHECK_OFF(ACPIState, 912, u64RamSize);
    CHECK_OFF(ACPIState, 932, uSleepState);
    CHECK_OFF(ACPIState, 936, au8RSDPPage);
    CHECK_OFF(ACPIState, 5032, u8IndexShift);
    CHECK_OFF(ACPIState, 5033, u8UseIOApic);
    CHECK_OFF(ACPIState, 5034, fUseFdc);
    CHECK_OFF(ACPIState, 5035, fUseHpet);
    CHECK_OFF(ACPIState, 5036, fUseSmc);
    CHECK_OFF(ACPIState, 5044, CpuSetAttached);
    CHECK_OFF(ACPIState, 5076, idCpuLockCheck);
    CHECK_OFF(ACPIState, 5080, CpuSetLocked);
    CHECK_OFF(ACPIState, 5112, u32CpuEventType);
    CHECK_OFF(ACPIState, 5116, u32CpuEvent);
    CHECK_OFF(ACPIState, 5120, fCpuHotPlug);
    CHECK_OFF(ACPIState, 5168, IBase);
    CHECK_OFF(ACPIState, 5176, IACPIPort);
    CHECK_OFF(ACPIState, 5224, pDevInsR3);
    CHECK_OFF(ACPIState, 5232, pDevInsR0);
    CHECK_OFF(ACPIState, 5248, pDrvBase);
    CHECK_OFF(ACPIState, 5256, pDrv);
    CHECK_SIZE(PICSTATE, 72);
    CHECK_OFF(PICSTATE, 0, last_irr);
    CHECK_OFF(PICSTATE, 1, irr);
    CHECK_OFF(PICSTATE, 2, imr);
    CHECK_OFF(PICSTATE, 3, isr);
    CHECK_OFF(PICSTATE, 4, priority_add);
    CHECK_OFF(PICSTATE, 5, irq_base);
    CHECK_OFF(PICSTATE, 6, read_reg_select);
    CHECK_OFF(PICSTATE, 7, poll);
    CHECK_OFF(PICSTATE, 8, special_mask);
    CHECK_OFF(PICSTATE, 9, init_state);
    CHECK_OFF(PICSTATE, 10, auto_eoi);
    CHECK_OFF(PICSTATE, 11, rotate_on_auto_eoi);
    CHECK_OFF(PICSTATE, 12, special_fully_nested_mode);
    CHECK_OFF(PICSTATE, 13, init4);
    CHECK_OFF(PICSTATE, 14, elcr);
    CHECK_OFF(PICSTATE, 15, elcr_mask);
    CHECK_OFF(PICSTATE, 16, pDevInsR3);
    CHECK_OFF(PICSTATE, 24, pDevInsR0);
    CHECK_OFF(PICSTATE, 32, pDevInsRC);
    CHECK_OFF(PICSTATE, 36, idxPic);
    CHECK_OFF(PICSTATE, 40, auTags);
    CHECK_SIZE(DEVPIC, 232);
    CHECK_OFF(DEVPIC, 0, aPics);
    CHECK_OFF(DEVPIC, 72, aPics[1]);
    CHECK_OFF(DEVPIC, 144, pDevInsR3);
    CHECK_OFF(DEVPIC, 160, pDevInsR0);
    CHECK_OFF(DEVPIC, 176, pDevInsRC);
    CHECK_OFF(DEVPIC, 152, pPicHlpR3);
    CHECK_OFF(DEVPIC, 168, pPicHlpR0);
    CHECK_OFF(DEVPIC, 180, pPicHlpRC);
    CHECK_OFF(DEVPIC, 192, StatSetIrqGC);
    CHECK_OFF(DEVPIC, 224, StatClearedActiveSlaveIRQ);
    CHECK_SIZE(PITCHANNEL, 96);
    CHECK_OFF(PITCHANNEL, 0, pPitR3);
    CHECK_OFF(PITCHANNEL, 8, pTimerR3);
    CHECK_OFF(PITCHANNEL, 16, pPitR0);
    CHECK_OFF(PITCHANNEL, 24, pTimerR0);
    CHECK_OFF(PITCHANNEL, 32, pPitRC);
    CHECK_OFF(PITCHANNEL, 36, pTimerRC);
    CHECK_OFF(PITCHANNEL, 40, u64ReloadTS);
    CHECK_OFF(PITCHANNEL, 48, u64NextTS);
    CHECK_OFF(PITCHANNEL, 56, count_load_time);
    CHECK_OFF(PITCHANNEL, 64, next_transition_time);
    CHECK_OFF(PITCHANNEL, 72, irq);
    CHECK_OFF(PITCHANNEL, 76, cRelLogEntries);
    CHECK_OFF(PITCHANNEL, 80, count);
    CHECK_OFF(PITCHANNEL, 84, latched_count);
    CHECK_OFF(PITCHANNEL, 86, count_latched);
    CHECK_OFF(PITCHANNEL, 87, status_latched);
    CHECK_OFF(PITCHANNEL, 88, status);
    CHECK_OFF(PITCHANNEL, 89, read_state);
    CHECK_OFF(PITCHANNEL, 90, write_state);
    CHECK_OFF(PITCHANNEL, 91, write_latch);
    CHECK_OFF(PITCHANNEL, 92, rw_mode);
    CHECK_OFF(PITCHANNEL, 93, mode);
    CHECK_OFF(PITCHANNEL, 94, bcd);
    CHECK_OFF(PITCHANNEL, 95, gate);
    CHECK_SIZE(PITSTATE, 560);
    CHECK_OFF(PITSTATE, 0, channels);
    CHECK_OFF(PITSTATE, 96, channels[1]);
    CHECK_OFF(PITSTATE, 288, speaker_data_on);
    CHECK_OFF(PITSTATE, 296, IOPortBaseCfg);
    CHECK_OFF(PITSTATE, 298, fSpeakerCfg);
    CHECK_OFF(PITSTATE, 312, pDevIns);
    CHECK_OFF(PITSTATE, 320, StatPITIrq);
    CHECK_OFF(PITSTATE, 328, StatPITHandler);
    CHECK_SIZE(RTCSTATE, 456);
    CHECK_OFF(RTCSTATE, 0, cmos_data);
    CHECK_OFF(RTCSTATE, 1, cmos_data[1]);
    CHECK_OFF(RTCSTATE, 256, cmos_index);
    CHECK_OFF(RTCSTATE, 264, current_tm);
    CHECK_OFF(RTCSTATE, 264, current_tm.tm_sec);
    CHECK_OFF(RTCSTATE, 268, current_tm.tm_min);
    CHECK_OFF(RTCSTATE, 272, current_tm.tm_hour);
    CHECK_OFF(RTCSTATE, 276, current_tm.tm_mday);
    CHECK_OFF(RTCSTATE, 280, current_tm.tm_mon);
    CHECK_OFF(RTCSTATE, 284, current_tm.tm_year);
    CHECK_OFF(RTCSTATE, 288, current_tm.tm_wday);
    CHECK_OFF(RTCSTATE, 292, current_tm.tm_yday);
    CHECK_OFF(RTCSTATE, 296, irq);
    CHECK_OFF(RTCSTATE, 302, fUTC);
    CHECK_OFF(RTCSTATE, 300, IOPortBase);
    CHECK_OFF(RTCSTATE, 360, pPeriodicTimerR0);
    CHECK_OFF(RTCSTATE, 328, pPeriodicTimerR3);
    CHECK_OFF(RTCSTATE, 388, pPeriodicTimerRC);
    CHECK_OFF(RTCSTATE, 304, next_periodic_time);
    CHECK_OFF(RTCSTATE, 312, next_second_time);
    CHECK_OFF(RTCSTATE, 368, pSecondTimerR0);
    CHECK_OFF(RTCSTATE, 336, pSecondTimerR3);
    CHECK_OFF(RTCSTATE, 392, pSecondTimerRC);
    CHECK_OFF(RTCSTATE, 376, pSecondTimer2R0);
    CHECK_OFF(RTCSTATE, 344, pSecondTimer2R3);
    CHECK_OFF(RTCSTATE, 396, pSecondTimer2RC);
    CHECK_OFF(RTCSTATE, 352, pDevInsR0);
    CHECK_OFF(RTCSTATE, 320, pDevInsR3);
    CHECK_OFF(RTCSTATE, 384, pDevInsRC);
    CHECK_OFF(RTCSTATE, 400, RtcReg);
    CHECK_OFF(RTCSTATE, 424, pRtcHlpR3);
    CHECK_OFF(RTCSTATE, 432, cRelLogEntries);
    CHECK_OFF(RTCSTATE, 436, CurLogPeriod);
    CHECK_OFF(RTCSTATE, 440, CurHintPeriod);
    CHECK_SIZE(APICState, 1336);
    CHECK_OFF(APICState, 120, apicbase);
    CHECK_OFF(APICState, 128, id);
    CHECK_OFF(APICState, 136, arb_id);
    CHECK_OFF(APICState, 124, tpr);
    CHECK_OFF(APICState, 140, spurious_vec);
    CHECK_OFF(APICState, 144, log_dest);
    CHECK_OFF(APICState, 145, dest_mode);
    CHECK_OFF(APICState, 0, isr);
    CHECK_OFF(APICState, 4, isr.au32Bitmap[1]);
    CHECK_OFF(APICState, 32, tmr);
    CHECK_OFF(APICState, 36, tmr.au32Bitmap[1]);
    CHECK_OFF(APICState, 64, irr);
    CHECK_OFF(APICState, 68, irr.au32Bitmap[1]);
    CHECK_OFF(APICState, 96, lvt);
    CHECK_OFF(APICState, 100, lvt[1]);
    CHECK_OFF(APICState, 116, lvt[APIC_LVT_NB - 1]);
    CHECK_OFF(APICState, 148, esr);
    CHECK_OFF(APICState, 152, icr);
    CHECK_OFF(APICState, 156, icr[1]);
    CHECK_OFF(APICState, 160, divide_conf);
    CHECK_OFF(APICState, 164, count_shift);
    CHECK_OFF(APICState, 168, initial_count);
    CHECK_OFF(APICState, 176, initial_count_load_time);
    CHECK_OFF(APICState, 184, next_time);
    CHECK_OFF(APICState, 192, pTimerR3);
    CHECK_OFF(APICState, 200, pTimerR0);
    CHECK_OFF(APICState, 208, pTimerRC);
    CHECK_OFF(APICState, 212, fTimerArmed);
    CHECK_OFF(APICState, 216, uHintedInitialCount);
    CHECK_OFF(APICState, 220, uHintedCountShift);
    CHECK_OFF(APICState, 224, pszDesc);
    CHECK_OFF(APICState, 1256, StatTimerSetInitialCount);
    CHECK_OFF(APICState, 1328, StatTimerSetLvtNoRelevantChange);
    CHECK_SIZE(APICDeviceInfo, 136);
    CHECK_OFF(APICDeviceInfo, 0, pDevInsR3);
    CHECK_OFF(APICDeviceInfo, 8, pApicHlpR3);
    CHECK_OFF(APICDeviceInfo, 16, paLapicsR3);
    CHECK_OFF(APICDeviceInfo, 24, pCritSectR3);
    CHECK_OFF(APICDeviceInfo, 32, pDevInsR0);
    CHECK_OFF(APICDeviceInfo, 40, pApicHlpR0);
    CHECK_OFF(APICDeviceInfo, 48, paLapicsR0);
    CHECK_OFF(APICDeviceInfo, 56, pCritSectR0);
    CHECK_OFF(APICDeviceInfo, 64, pDevInsRC);
    CHECK_OFF(APICDeviceInfo, 68, pApicHlpRC);
    CHECK_OFF(APICDeviceInfo, 72, paLapicsRC);
    CHECK_OFF(APICDeviceInfo, 76, pCritSectRC);
    CHECK_OFF(APICDeviceInfo, 80, enmVersion);
    CHECK_OFF(APICDeviceInfo, 84, cTPRPatchAttempts);
    CHECK_OFF(APICDeviceInfo, 88, cCpus);
    CHECK_OFF(APICDeviceInfo, 96, StatMMIOReadGC);
    CHECK_OFF(APICDeviceInfo, 120, StatMMIOWriteHC);
    CHECK_SIZE(IOAPIC, 384);
    CHECK_OFF(IOAPIC, 0, id);
    CHECK_OFF(IOAPIC, 1, ioregsel);
    CHECK_OFF(IOAPIC, 4, irr);
    CHECK_OFF(IOAPIC, 8, ioredtbl);
    CHECK_OFF(IOAPIC, 16, ioredtbl[1]);
    CHECK_OFF(IOAPIC, 192, ioredtbl[IOAPIC_NUM_PINS - 1]);
    CHECK_OFF(IOAPIC, 296, pDevInsR3);
    CHECK_OFF(IOAPIC, 304, pIoApicHlpR3);
    CHECK_OFF(IOAPIC, 312, pDevInsR0);
    CHECK_OFF(IOAPIC, 320, pIoApicHlpR0);
    CHECK_OFF(IOAPIC, 328, pDevInsRC);
    CHECK_OFF(IOAPIC, 332, pIoApicHlpRC);
    CHECK_OFF(IOAPIC, 336, StatMMIOReadGC);
    CHECK_OFF(IOAPIC, 376, StatSetIrqHC);
    CHECK_SIZE(BMDMAState, 8);
    CHECK_OFF(BMDMAState, 0, u8Cmd);
    CHECK_OFF(BMDMAState, 1, u8Status);
    CHECK_OFF(BMDMAState, 4, pvAddr);
    CHECK_SIZE(BMDMADesc, 8);
    CHECK_OFF(BMDMADesc, 0, pBuffer);
    CHECK_OFF(BMDMADesc, 4, cbBuffer);
    CHECK_SIZE(ATADevState, 640);
    CHECK_OFF(ATADevState, 0, fLBA48);
    CHECK_OFF(ATADevState, 1, fATAPI);
    CHECK_OFF(ATADevState, 2, fIrqPending);
    CHECK_OFF(ATADevState, 3, cMultSectors);
    CHECK_OFF(ATADevState, 24, cbSector);
    CHECK_OFF(ATADevState, 4, PCHSGeometry.cCylinders);
    CHECK_OFF(ATADevState, 8, PCHSGeometry.cHeads);
    CHECK_OFF(ATADevState, 12, PCHSGeometry.cSectors);
    CHECK_OFF(ATADevState, 28, cSectorsPerIRQ);
    CHECK_OFF(ATADevState, 16, cTotalSectors);
    CHECK_OFF(ATADevState, 32, uATARegFeature);
    CHECK_OFF(ATADevState, 33, uATARegFeatureHOB);
    CHECK_OFF(ATADevState, 34, uATARegError);
    CHECK_OFF(ATADevState, 35, uATARegNSector);
    CHECK_OFF(ATADevState, 36, uATARegNSectorHOB);
    CHECK_OFF(ATADevState, 37, uATARegSector);
    CHECK_OFF(ATADevState, 38, uATARegSectorHOB);
    CHECK_OFF(ATADevState, 39, uATARegLCyl);
    CHECK_OFF(ATADevState, 40, uATARegLCylHOB);
    CHECK_OFF(ATADevState, 41, uATARegHCyl);
    CHECK_OFF(ATADevState, 42, uATARegHCylHOB);
    CHECK_OFF(ATADevState, 43, uATARegSelect);
    CHECK_OFF(ATADevState, 44, uATARegStatus);
    CHECK_OFF(ATADevState, 45, uATARegCommand);
    CHECK_OFF(ATADevState, 46, uATARegDevCtl);
    CHECK_OFF(ATADevState, 47, uATATransferMode);
    CHECK_OFF(ATADevState, 48, uTxDir);
    CHECK_OFF(ATADevState, 49, iBeginTransfer);
    CHECK_OFF(ATADevState, 50, iSourceSink);
    CHECK_OFF(ATADevState, 51, fDMA);
    CHECK_OFF(ATADevState, 52, fATAPITransfer);
    CHECK_OFF(ATADevState, 56, cbTotalTransfer);
    CHECK_OFF(ATADevState, 60, cbElementaryTransfer);
    CHECK_OFF(ATADevState, 72, iIOBufferCur);
    CHECK_OFF(ATADevState, 76, iIOBufferEnd);
    CHECK_OFF(ATADevState, 84, iIOBufferPIODataStart);
    CHECK_OFF(ATADevState, 88, iIOBufferPIODataEnd);
    CHECK_OFF(ATADevState, 92, iATAPILBA);
    CHECK_OFF(ATADevState, 96, cbATAPISector);
    CHECK_OFF(ATADevState, 100, aATAPICmd);
    CHECK_OFF(ATADevState, 111, aATAPICmd[ATAPI_PACKET_SIZE - 1]);
    CHECK_OFF(ATADevState, 112, abATAPISense);
    CHECK_OFF(ATADevState, 175, abATAPISense[ATAPI_SENSE_SIZE - 1]);
    CHECK_OFF(ATADevState, 176, cNotifiedMediaChange);
    CHECK_OFF(ATADevState, 180, MediaEventStatus);
    CHECK_OFF(ATADevState, 184, MediaTrackType);
    CHECK_OFF(ATADevState, 188, Led);
    CHECK_OFF(ATADevState, 204, cbIOBuffer);
    CHECK_OFF(ATADevState, 208, pbIOBufferR3);
    CHECK_OFF(ATADevState, 216, pbIOBufferR0);
    CHECK_OFF(ATADevState, 224, pbIOBufferRC);
    CHECK_OFF(ATADevState, 232, StatATADMA);
    CHECK_OFF(ATADevState, 240, StatATAPIO);
    CHECK_OFF(ATADevState, 248, StatATAPIDMA);
    CHECK_OFF(ATADevState, 256, StatATAPIPIO);
    CHECK_OFF(ATADevState, 264, StatReads);
    CHECK_OFF(ATADevState, 304, StatBytesRead);
    CHECK_OFF(ATADevState, 312, StatWrites);
    CHECK_OFF(ATADevState, 352, StatBytesWritten);
    CHECK_OFF(ATADevState, 360, StatFlushes);
    CHECK_OFF(ATADevState, 392, fNonRotational);
    CHECK_OFF(ATADevState, 393, fATAPIPassthrough);
    CHECK_OFF(ATADevState, 394, fOverwriteInquiry);
    CHECK_OFF(ATADevState, 396, cErrors);
    CHECK_OFF(ATADevState, 408, pDrvBase);
    CHECK_OFF(ATADevState, 416, pDrvBlock);
    CHECK_OFF(ATADevState, 424, pDrvBlockBios);
    CHECK_OFF(ATADevState, 432, pDrvMount);
    CHECK_OFF(ATADevState, 440, IBase);
    CHECK_OFF(ATADevState, 448, IPort);
    CHECK_OFF(ATADevState, 456, IMountNotify);
    CHECK_OFF(ATADevState, 472, iLUN);
    CHECK_OFF(ATADevState, 480, pDevInsR3);
    CHECK_OFF(ATADevState, 496, pDevInsR0);
    CHECK_OFF(ATADevState, 512, pDevInsRC);
    CHECK_OFF(ATADevState, 488, pControllerR3);
    CHECK_OFF(ATADevState, 504, pControllerR0);
    CHECK_OFF(ATADevState, 516, pControllerRC);
    CHECK_OFF(ATADevState, 520, szSerialNumber);
    CHECK_OFF(ATADevState, 540, szSerialNumber[ATA_SERIAL_NUMBER_LENGTH]);
    CHECK_OFF(ATADevState, 541, szFirmwareRevision);
    CHECK_OFF(ATADevState, 549, szFirmwareRevision[ATA_FIRMWARE_REVISION_LENGTH]);
    CHECK_OFF(ATADevState, 550, szModelNumber);
    CHECK_OFF(ATADevState, 590, szModelNumber[ATA_MODEL_NUMBER_LENGTH]);
    CHECK_OFF(ATADevState, 591, szInquiryVendorId);
    CHECK_OFF(ATADevState, 599, szInquiryVendorId[ATAPI_INQUIRY_VENDOR_ID_LENGTH]);
    CHECK_OFF(ATADevState, 600, szInquiryProductId);
    CHECK_OFF(ATADevState, 616, szInquiryProductId[ATAPI_INQUIRY_PRODUCT_ID_LENGTH]);
    CHECK_OFF(ATADevState, 617, szInquiryRevision);
    CHECK_OFF(ATADevState, 621, szInquiryRevision[ATAPI_INQUIRY_REVISION_LENGTH]);
    CHECK_OFF(ATADevState, 624, pTrackList);
    CHECK_SIZE(ATATransferRequest, 12);
    CHECK_OFF(ATATransferRequest, 0, iIf);
    CHECK_OFF(ATATransferRequest, 1, iBeginTransfer);
    CHECK_OFF(ATATransferRequest, 2, iSourceSink);
    CHECK_OFF(ATATransferRequest, 4, cbTotalTransfer);
    CHECK_OFF(ATATransferRequest, 8, uTxDir);
    CHECK_SIZE(ATAAbortRequest, 2);
    CHECK_OFF(ATAAbortRequest, 0, iIf);
    CHECK_OFF(ATAAbortRequest, 1, fResetDrive);
    CHECK_SIZE(ATARequest, 16);
    CHECK_OFF(ATARequest, 0, ReqType);
    CHECK_OFF(ATARequest, 4, u);
    CHECK_OFF(ATARequest, 4, u.t);
    CHECK_OFF(ATARequest, 4, u.a);
    CHECK_SIZE(ATACONTROLLER, 1752);
    CHECK_OFF(ATACONTROLLER, 0, IOPortBase1);
    CHECK_OFF(ATACONTROLLER, 2, IOPortBase2);
    CHECK_OFF(ATACONTROLLER, 4, irq);
    CHECK_OFF(ATACONTROLLER, 8, lock);
    CHECK_OFF(ATACONTROLLER, 200, iSelectedIf);
    CHECK_OFF(ATACONTROLLER, 201, iAIOIf);
    CHECK_OFF(ATACONTROLLER, 202, uAsyncIOState);
    CHECK_OFF(ATACONTROLLER, 203, fChainedTransfer);
    CHECK_OFF(ATACONTROLLER, 204, fReset);
    CHECK_OFF(ATACONTROLLER, 205, fRedo);
    CHECK_OFF(ATACONTROLLER, 206, fRedoIdle);
    CHECK_OFF(ATACONTROLLER, 207, fRedoDMALastDesc);
    CHECK_OFF(ATACONTROLLER, 208, BmDma);
    CHECK_OFF(ATACONTROLLER, 216, pFirstDMADesc);
    CHECK_OFF(ATACONTROLLER, 220, pLastDMADesc);
    CHECK_OFF(ATACONTROLLER, 224, pRedoDMABuffer);
    CHECK_OFF(ATACONTROLLER, 228, cbRedoDMABuffer);
    CHECK_OFF(ATACONTROLLER, 232, aIfs);
    CHECK_OFF(ATACONTROLLER, 872, aIfs[1]);
    CHECK_OFF(ATACONTROLLER, 1512, pDevInsR3);
    CHECK_OFF(ATACONTROLLER, 1520, pDevInsR0);
    CHECK_OFF(ATACONTROLLER, 1528, pDevInsRC);
    CHECK_OFF(ATACONTROLLER, 1532, fShutdown);
    CHECK_OFF(ATACONTROLLER, 1536, AsyncIOThread);
    CHECK_OFF(ATACONTROLLER, 1544, AsyncIOSem);
    CHECK_OFF(ATACONTROLLER, 1616, aAsyncIORequests[4]);
    CHECK_OFF(ATACONTROLLER, 1616, AsyncIOReqHead);
    CHECK_OFF(ATACONTROLLER, 1617, AsyncIOReqTail);
    CHECK_OFF(ATACONTROLLER, 1624, AsyncIORequestMutex);
    CHECK_OFF(ATACONTROLLER, 1632, SuspendIOSem);
    CHECK_OFF(ATACONTROLLER, 1618, fSignalIdle);
    CHECK_OFF(ATACONTROLLER, 1620, DelayIRQMillies);
    CHECK_OFF(ATACONTROLLER, 1640, u64ResetTime);
    CHECK_OFF(ATACONTROLLER, 1648, StatAsyncOps);
    CHECK_OFF(ATACONTROLLER, 1656, StatAsyncMinWait);
    CHECK_OFF(ATACONTROLLER, 1664, StatAsyncMaxWait);
    CHECK_OFF(ATACONTROLLER, 1672, StatAsyncTimeUS);
    CHECK_OFF(ATACONTROLLER, 1680, StatAsyncTime);
    CHECK_OFF(ATACONTROLLER, 1720, StatLockWait);
    CHECK_SIZE(PCIATAState, 4160);
    CHECK_OFF(PCIATAState, 0, dev);
    CHECK_OFF(PCIATAState, 608, aCts);
    CHECK_OFF(PCIATAState, 2360, aCts[1]);
    CHECK_OFF(PCIATAState, 4112, pDevIns);
    CHECK_OFF(PCIATAState, 4120, IBase);
    CHECK_OFF(PCIATAState, 4128, ILeds);
    CHECK_OFF(PCIATAState, 4136, pLedsConnector);
    CHECK_OFF(PCIATAState, 4152, fGCEnabled);
    CHECK_OFF(PCIATAState, 4153, fR0Enabled);
    CHECK_SIZE(OHCIHUBPORT, 16);
    CHECK_OFF(OHCIHUBPORT, 0, fReg);
    CHECK_OFF(OHCIHUBPORT, 8, pDev);
    CHECK_SIZE(OHCIROOTHUB, 280);
    CHECK_OFF(OHCIROOTHUB, 0, pIBase);
    CHECK_OFF(OHCIROOTHUB, 8, pIRhConn);
    CHECK_OFF(OHCIROOTHUB, 16, pIDev);
    CHECK_OFF(OHCIROOTHUB, 24, IBase);
    CHECK_OFF(OHCIROOTHUB, 32, IRhPort);
    CHECK_OFF(OHCIROOTHUB, 128, status);
    CHECK_OFF(OHCIROOTHUB, 132, desc_a);
    CHECK_OFF(OHCIROOTHUB, 136, desc_b);
    CHECK_OFF(OHCIROOTHUB, 144, aPorts);
    CHECK_OFF(OHCIROOTHUB, 160, aPorts[1]);
    CHECK_OFF(OHCIROOTHUB, 256, aPorts[OHCI_NDP - 1]);
    CHECK_OFF(OHCIROOTHUB, 272, pOhci);
    CHECK_SIZE(OHCI, 5776);
    CHECK_OFF(OHCI, 0, PciDev);
    CHECK_OFF(OHCI, 660, MMIOBase);
    CHECK_OFF(OHCI, 616, pEndOfFrameTimerR3);
    CHECK_OFF(OHCI, 632, pEndOfFrameTimerR0);
    CHECK_OFF(OHCI, 644, pEndOfFrameTimerRC);
    CHECK_OFF(OHCI, 608, pDevInsR3);
    CHECK_OFF(OHCI, 624, pDevInsR0);
    CHECK_OFF(OHCI, 640, pDevInsRC);
    CHECK_OFF(OHCI, 648, SofTime);
    CHECK_OFF(OHCI, 664, RootHub);
    CHECK_OFF(OHCI, 944, ctl);
    CHECK_OFF(OHCI, 948, status);
    CHECK_OFF(OHCI, 952, intr_status);
    CHECK_OFF(OHCI, 956, intr);
    CHECK_OFF(OHCI, 960, hcca);
    CHECK_OFF(OHCI, 964, per_cur);
    CHECK_OFF(OHCI, 968, ctrl_cur);
    CHECK_OFF(OHCI, 972, ctrl_head);
    CHECK_OFF(OHCI, 976, bulk_cur);
    CHECK_OFF(OHCI, 980, bulk_head);
    CHECK_OFF(OHCI, 984, done);
    CHECK_OFF(OHCI, 992, HcFmNumber);
    CHECK_OFF(OHCI, 996, pstart);
    CHECK_OFF(OHCI, 1000, cTicksPerFrame);
    CHECK_OFF(OHCI, 1008, cTicksPerUsbTick);
    CHECK_OFF(OHCI, 1016, cInFlight);
    CHECK_OFF(OHCI, 1024, aInFlight);
    CHECK_OFF(OHCI, 1024, aInFlight[0].GCPhysTD);
    CHECK_OFF(OHCI, 1032, aInFlight[0].pUrb);
    CHECK_OFF(OHCI, 1040, aInFlight[1]);
    CHECK_OFF(OHCI, 5136, cInDoneQueue);
    CHECK_OFF(OHCI, 5140, aInDoneQueue);
    CHECK_OFF(OHCI, 5140, aInDoneQueue[0].GCPhysTD);
    CHECK_OFF(OHCI, 5144, aInDoneQueue[1]);
    CHECK_OFF(OHCI, 5396, u32FmDoneQueueTail);
    CHECK_OFF(OHCI, 5400, pLoad);
    CHECK_OFF(OHCI, 5408, StatCanceledIsocUrbs);
    CHECK_OFF(OHCI, 5416, StatCanceledGenUrbs);
    CHECK_OFF(OHCI, 5424, StatDroppedUrbs);
    CHECK_OFF(OHCI, 5432, StatTimer);
    CHECK_OFF(OHCI, 5688, hThreadFrame);
    CHECK_OFF(OHCI, 5696, hSemEventFrame);
    CHECK_OFF(OHCI, 5712, fBusStarted);
    CHECK_OFF(OHCI, 5496, CsIrq);
    CHECK_OFF(OHCI, 5720, nsWait);
    CHECK_OFF(OHCI, 5728, CritSect);
    CHECK_SIZE(PARALLELPORT, 80);
    CHECK_OFF(PARALLELPORT, 0, pDevInsR3);
    CHECK_OFF(PARALLELPORT, 8, pDevInsR0);
    CHECK_OFF(PARALLELPORT, 16, pDevInsRC);
    CHECK_OFF(PARALLELPORT, 24, IBase);
    CHECK_OFF(PARALLELPORT, 32, IHostParallelPort);
    CHECK_OFF(PARALLELPORT, 48, pDrvHostParallelConnector);
    CHECK_OFF(PARALLELPORT, 56, fGCEnabled);
    CHECK_OFF(PARALLELPORT, 57, fR0Enabled);
    CHECK_OFF(PARALLELPORT, 58, fEppTimeout);
    CHECK_OFF(PARALLELPORT, 60, IOBase);
    CHECK_OFF(PARALLELPORT, 64, iIrq);
    CHECK_OFF(PARALLELPORT, 68, regData);
    CHECK_OFF(PARALLELPORT, 69, regStatus);
    CHECK_OFF(PARALLELPORT, 70, regControl);
    CHECK_OFF(PARALLELPORT, 71, regEppAddr);
    CHECK_OFF(PARALLELPORT, 72, regEppData);
    CHECK_SIZE(SerialState, 424);
    CHECK_OFF(SerialState, 0, CritSect);
    CHECK_OFF(SerialState, 192, pDevInsR3);
    CHECK_OFF(SerialState, 200, pDevInsR0);
    CHECK_OFF(SerialState, 208, pDevInsRC);
    CHECK_OFF(SerialState, 216, IBase);
    CHECK_OFF(SerialState, 224, ICharPort);
    CHECK_OFF(SerialState, 256, pDrvBase);
    CHECK_OFF(SerialState, 264, pDrvChar);
    CHECK_OFF(SerialState, 272, ReceiveSem);
    CHECK_OFF(SerialState, 352, base);
    CHECK_OFF(SerialState, 356, divider);
    CHECK_OFF(SerialState, 312, recv_fifo);
    CHECK_OFF(SerialState, 332, xmit_fifo);
    CHECK_OFF(SerialState, 360, rbr);
    CHECK_OFF(SerialState, 361, thr);
    CHECK_OFF(SerialState, 362, tsr);
    CHECK_OFF(SerialState, 363, ier);
    CHECK_OFF(SerialState, 364, iir);
    CHECK_OFF(SerialState, 365, lcr);
    CHECK_OFF(SerialState, 366, mcr);
    CHECK_OFF(SerialState, 367, lsr);
    CHECK_OFF(SerialState, 368, msr);
    CHECK_OFF(SerialState, 369, scr);
    CHECK_OFF(SerialState, 370, fcr);
    CHECK_OFF(SerialState, 371, fcr_vmstate);
    CHECK_OFF(SerialState, 372, thr_ipending);
    CHECK_OFF(SerialState, 376, timeout_ipending);
    CHECK_OFF(SerialState, 380, irq);
    CHECK_OFF(SerialState, 384, last_break_enable);
    CHECK_OFF(SerialState, 388, tsr_retry);
    CHECK_OFF(SerialState, 404, msr_changed);
    CHECK_OFF(SerialState, 405, fGCEnabled);
    CHECK_OFF(SerialState, 406, fR0Enabled);
    CHECK_OFF(SerialState, 407, fYieldOnLSRRead);
    CHECK_OFF(SerialState, 416, char_transmit_time);
    CHECK_SIZE(AHCIPort, 864);
    CHECK_OFF(AHCIPort, 0, pDevInsR3);
    CHECK_OFF(AHCIPort, 8, pDevInsR0);
    CHECK_OFF(AHCIPort, 16, pDevInsRC);
    CHECK_OFF(AHCIPort, 24, pAhciR3);
    CHECK_OFF(AHCIPort, 32, pAhciR0);
    CHECK_OFF(AHCIPort, 40, pAhciRC);
    CHECK_OFF(AHCIPort, 44, regCLB);
    CHECK_OFF(AHCIPort, 48, regCLBU);
    CHECK_OFF(AHCIPort, 52, regFB);
    CHECK_OFF(AHCIPort, 56, regFBU);
    CHECK_OFF(AHCIPort, 60, regIS);
    CHECK_OFF(AHCIPort, 64, regIE);
    CHECK_OFF(AHCIPort, 68, regCMD);
    CHECK_OFF(AHCIPort, 72, regTFD);
    CHECK_OFF(AHCIPort, 76, regSIG);
    CHECK_OFF(AHCIPort, 80, regSSTS);
    CHECK_OFF(AHCIPort, 84, regSCTL);
    CHECK_OFF(AHCIPort, 88, regSERR);
    CHECK_OFF(AHCIPort, 92, regSACT);
    CHECK_OFF(AHCIPort, 96, regCI);
    CHECK_OFF(AHCIPort, 104, GCPhysAddrClb);
    CHECK_OFF(AHCIPort, 112, GCPhysAddrFb);
    CHECK_OFF(AHCIPort, 120, cTasksActive);
    CHECK_OFF(AHCIPort, 124, fPoweredOn);
    CHECK_OFF(AHCIPort, 125, fSpunUp);
    CHECK_OFF(AHCIPort, 126, fFirstD2HFisSend);
    CHECK_OFF(AHCIPort, 128, fATAPI);
    CHECK_OFF(AHCIPort, 129, fATAPIPassthrough);
    CHECK_OFF(AHCIPort, 130, fPortReset);
    CHECK_OFF(AHCIPort, 131, fAsyncInterface);
    CHECK_OFF(AHCIPort, 132, fResetDevice);
    CHECK_OFF(AHCIPort, 133, fRedo);
    CHECK_OFF(AHCIPort, 134, fWrkThreadSleeping);
    CHECK_OFF(AHCIPort, 136, cTotalSectors);
    CHECK_OFF(AHCIPort, 144, cbSector);
    CHECK_OFF(AHCIPort, 148, cMultSectors);
    CHECK_OFF(AHCIPort, 152, uATATransferMode);
    CHECK_OFF(AHCIPort, 153, abATAPISense);
    CHECK_OFF(AHCIPort, 217, cNotifiedMediaChange);
    CHECK_OFF(AHCIPort, 218, cLogSectorsPerPhysicalExp);
    CHECK_OFF(AHCIPort, 220, MediaEventStatus);
    CHECK_OFF(AHCIPort, 224, MediaTrackType);
    CHECK_OFF(AHCIPort, 228, iLUN);
    CHECK_OFF(AHCIPort, 232, u32TasksFinished);
    CHECK_OFF(AHCIPort, 236, u32QueuedTasksFinished);
    CHECK_OFF(AHCIPort, 240, u32TasksNew);
    CHECK_OFF(AHCIPort, 244, u32TasksRedo);
    CHECK_OFF(AHCIPort, 248, u32CurrentCommandSlot);
    CHECK_OFF(AHCIPort, 256, pDrvBase);
    CHECK_OFF(AHCIPort, 264, pDrvBlock);
    CHECK_OFF(AHCIPort, 272, pDrvBlockAsync);
    CHECK_OFF(AHCIPort, 280, pDrvBlockBios);
    CHECK_OFF(AHCIPort, 288, pDrvMount);
    CHECK_OFF(AHCIPort, 296, IBase);
    CHECK_OFF(AHCIPort, 304, IPort);
    CHECK_OFF(AHCIPort, 312, IPortAsync);
    CHECK_OFF(AHCIPort, 320, IMountNotify);
    CHECK_OFF(AHCIPort, 336, PCHSGeometry);
    CHECK_OFF(AHCIPort, 348, Led);
    CHECK_OFF(AHCIPort, 368, pAsyncIOThread);
    CHECK_OFF(AHCIPort, 376, aCachedTasks);
    CHECK_OFF(AHCIPort, 632, pTaskErr);
    CHECK_OFF(AHCIPort, 640, pTrackList);
    CHECK_OFF(AHCIPort, 648, hEvtProcess);
    CHECK_OFF(AHCIPort, 656, StatDMA);
    CHECK_OFF(AHCIPort, 664, StatBytesWritten);
    CHECK_OFF(AHCIPort, 672, StatBytesRead);
    CHECK_OFF(AHCIPort, 680, StatIORequestsPerSecond);
    CHECK_OFF(AHCIPort, 688, StatProfileProcessTime);
    CHECK_OFF(AHCIPort, 720, StatProfileReadWrite);
    CHECK_OFF(AHCIPort, 752, szSerialNumber);
    CHECK_OFF(AHCIPort, 772, szSerialNumber[AHCI_SERIAL_NUMBER_LENGTH]);
    CHECK_OFF(AHCIPort, 773, szFirmwareRevision);
    CHECK_OFF(AHCIPort, 781, szFirmwareRevision[AHCI_FIRMWARE_REVISION_LENGTH]);
    CHECK_OFF(AHCIPort, 782, szModelNumber);
    CHECK_OFF(AHCIPort, 822, szModelNumber[AHCI_MODEL_NUMBER_LENGTH]);
    CHECK_OFF(AHCIPort, 831, szInquiryVendorId[AHCI_ATAPI_INQUIRY_VENDOR_ID_LENGTH]);
    CHECK_OFF(AHCIPort, 832, szInquiryProductId);
    CHECK_OFF(AHCIPort, 848, szInquiryProductId[AHCI_ATAPI_INQUIRY_PRODUCT_ID_LENGTH]);
    CHECK_OFF(AHCIPort, 849, szInquiryRevision);
    CHECK_OFF(AHCIPort, 853, szInquiryRevision[AHCI_ATAPI_INQUIRY_REVISION_LENGTH]);
    CHECK_OFF(AHCIPort, 856, cErrors);
    CHECK_OFF(AHCIPort, 133, fRedo);
    CHECK_SIZE(AHCI, 26936);
    CHECK_OFF(AHCI, 0, dev);
    CHECK_OFF(AHCI, 608, pDevInsR3);
    CHECK_OFF(AHCI, 616, pDevInsR0);
    CHECK_OFF(AHCI, 624, pDevInsRC);
    CHECK_OFF(AHCI, 632, IBase);
    CHECK_OFF(AHCI, 640, ILeds);
    CHECK_OFF(AHCI, 648, pLedsConnector);
    CHECK_OFF(AHCI, 664, MMIOBase);
    CHECK_OFF(AHCI, 676, regHbaCap);
    CHECK_OFF(AHCI, 680, regHbaCtrl);
    CHECK_OFF(AHCI, 684, regHbaIs);
    CHECK_OFF(AHCI, 688, regHbaPi);
    CHECK_OFF(AHCI, 692, regHbaVs);
    CHECK_OFF(AHCI, 696, regHbaCccCtl);
    CHECK_OFF(AHCI, 700, regHbaCccPorts);
    CHECK_OFF(AHCI, 704, regIdx);
    CHECK_OFF(AHCI, 712, pHbaCccTimerR3);
    CHECK_OFF(AHCI, 720, pHbaCccTimerR0);
    CHECK_OFF(AHCI, 728, pHbaCccTimerRC);
    CHECK_OFF(AHCI, 736, pNotifierQueueR3);
    CHECK_OFF(AHCI, 744, pNotifierQueueR0);
    CHECK_OFF(AHCI, 752, pNotifierQueueRC);
    CHECK_OFF(AHCI, 760, uCccPortNr);
    CHECK_OFF(AHCI, 768, uCccTimeout);
    CHECK_OFF(AHCI, 776, uCccNr);
    CHECK_OFF(AHCI, 780, uCccCurrentNr);
    CHECK_OFF(AHCI, 784, ahciPort);
    CHECK_OFF(AHCI, 25840, ahciPort[AHCI_MAX_NR_PORTS_IMPL-1]);
    CHECK_OFF(AHCI, 26704, lock);
    CHECK_OFF(AHCI, 26896, u32PortsInterrupted);
    CHECK_OFF(AHCI, 26900, cThreadsActive);
    CHECK_OFF(AHCI, 26904, fReset);
    CHECK_OFF(AHCI, 26905, f64BitAddr);
    CHECK_OFF(AHCI, 26906, fGCEnabled);
    CHECK_OFF(AHCI, 26907, fR0Enabled);
    CHECK_OFF(AHCI, 26909, fSignalIdle);
    CHECK_OFF(AHCI, 26910, fBootable);
    CHECK_OFF(AHCI, 26911, fLegacyPortResetMethod);
    CHECK_OFF(AHCI, 26912, cPortsImpl);
    CHECK_OFF(AHCI, 26916, cCmdSlotsAvail);
    CHECK_OFF(AHCI, 26920, f8ByteMMIO4BytesWrittenSuccessfully);
    CHECK_OFF(AHCI, 26921, fPortsHotpluggable);
    CHECK_OFF(AHCI, 26928, pSupDrvSession);
    CHECK_SIZE(EEPROM93C46, 152);
    CHECK_OFF(EEPROM93C46, 128, m_eState);
    CHECK_OFF(EEPROM93C46, 0, m_au16Data);
    CHECK_OFF(EEPROM93C46, 132, m_fWriteEnabled);
    CHECK_OFF(EEPROM93C46, 134, m_u16Word);
    CHECK_OFF(EEPROM93C46, 136, m_u16Mask);
    CHECK_OFF(EEPROM93C46, 138, m_u16Addr);
    CHECK_OFF(EEPROM93C46, 140, m_u32InternalWires);
    CHECK_OFF(EEPROM93C46, 144, m_eOp);
    CHECK_SIZE(E1KSTATE, 24200);
    CHECK_OFF(E1KSTATE, 8, IBase);
    CHECK_OFF(E1KSTATE, 16, INetworkDown);
    CHECK_OFF(E1KSTATE, 48, INetworkConfig);
    CHECK_OFF(E1KSTATE, 72, ILeds);
    CHECK_OFF(E1KSTATE, 80, pDrvBase);
    CHECK_OFF(E1KSTATE, 120, pDrvR3);
    CHECK_OFF(E1KSTATE, 216, pDrvR0);
    CHECK_OFF(E1KSTATE, 300, pDrvRC);
    CHECK_OFF(E1KSTATE, 88, pLedsConnector);
    CHECK_OFF(E1KSTATE, 96, pDevInsR3);
    CHECK_OFF(E1KSTATE, 192, pDevInsR0);
    CHECK_OFF(E1KSTATE, 288, pDevInsRC);
    CHECK_OFF(E1KSTATE, 104, pTxQueueR3);
    CHECK_OFF(E1KSTATE, 200, pTxQueueR0);
    CHECK_OFF(E1KSTATE, 292, pTxQueueRC);
    CHECK_OFF(E1KSTATE, 112, pCanRxQueueR3);
    CHECK_OFF(E1KSTATE, 208, pCanRxQueueR0);
    CHECK_OFF(E1KSTATE, 296, pCanRxQueueRC);
    CHECK_OFF(E1KSTATE, 128, pRIDTimerR3);
    CHECK_OFF(E1KSTATE, 224, pRIDTimerR0);
    CHECK_OFF(E1KSTATE, 304, pRIDTimerRC);
    CHECK_OFF(E1KSTATE, 136, pRADTimerR3);
    CHECK_OFF(E1KSTATE, 232, pRADTimerR0);
    CHECK_OFF(E1KSTATE, 308, pRADTimerRC);
    CHECK_OFF(E1KSTATE, 144, pTIDTimerR3);
    CHECK_OFF(E1KSTATE, 240, pTIDTimerR0);
    CHECK_OFF(E1KSTATE, 312, pTIDTimerRC);
    CHECK_OFF(E1KSTATE, 152, pTADTimerR3);
    CHECK_OFF(E1KSTATE, 248, pTADTimerR0);
    CHECK_OFF(E1KSTATE, 316, pTADTimerRC);
    CHECK_OFF(E1KSTATE, 168, pIntTimerR3);
    CHECK_OFF(E1KSTATE, 264, pIntTimerR0);
    CHECK_OFF(E1KSTATE, 324, pIntTimerRC);
    CHECK_OFF(E1KSTATE, 176, pLUTimerR3);
    CHECK_OFF(E1KSTATE, 272, pLUTimerR0);
    CHECK_OFF(E1KSTATE, 328, pLUTimerRC);
    CHECK_OFF(E1KSTATE, 344, cs);
    CHECK_OFF(E1KSTATE, 536, csRx);
    CHECK_OFF(E1KSTATE, 920, addrMMReg);
    CHECK_OFF(E1KSTATE, 928, macConfigured);
    CHECK_OFF(E1KSTATE, 934, IOPortBase);
    CHECK_OFF(E1KSTATE, 936, pciDevice);
    CHECK_OFF(E1KSTATE, 1544, u64AckedAt);
    CHECK_OFF(E1KSTATE, 1552, fIntRaised);
    CHECK_OFF(E1KSTATE, 1553, fCableConnected);
    CHECK_OFF(E1KSTATE, 1554, fR0Enabled);
    CHECK_OFF(E1KSTATE, 1555, fRCEnabled);
    CHECK_OFF(E1KSTATE, 2048, auRegs[E1K_NUM_OF_32BIT_REGS]);
    CHECK_OFF(E1KSTATE, 2048, led);
    CHECK_OFF(E1KSTATE, 2064, u32PktNo);
    CHECK_OFF(E1KSTATE, 2068, uSelectedReg);
    CHECK_OFF(E1KSTATE, 2584, auMTA[128]);
    CHECK_OFF(E1KSTATE, 2584, aRecAddr);
    CHECK_OFF(E1KSTATE, 3224, auVFTA[128]);
    CHECK_OFF(E1KSTATE, 3224, u16RxBSize);
    CHECK_OFF(E1KSTATE, 3226, fLocked);
    CHECK_OFF(E1KSTATE, 3227, fDelayInts);
    CHECK_OFF(E1KSTATE, 3228, fIntMaskUsed);
    CHECK_OFF(E1KSTATE, 3229, fMaybeOutOfSpace);
    CHECK_OFF(E1KSTATE, 3232, hEventMoreRxDescAvail);
    CHECK_OFF(E1KSTATE, 3504, contextTSE);
    CHECK_OFF(E1KSTATE, 3520, contextNormal);
    CHECK_OFF(E1KSTATE, 3536, aTxDescriptors);
    CHECK_OFF(E1KSTATE, 4560, nTxDFetched);
    CHECK_OFF(E1KSTATE, 4561, iTxDCurrent);
    CHECK_OFF(E1KSTATE, 4562, fGSO);
    CHECK_OFF(E1KSTATE, 4564, cbTxAlloc);
    CHECK_OFF(E1KSTATE, 4568, GsoCtx);
    CHECK_OFF(E1KSTATE, 4576, uTxFallback);
    CHECK_OFF(E1KSTATE, 20933, fVTag);
    CHECK_OFF(E1KSTATE, 20934, u16VTagTCI);
    CHECK_OFF(E1KSTATE, 20928, aTxPacketFallback[E1K_MAX_TX_PKT_SIZE]);
    CHECK_OFF(E1KSTATE, 20928, u16TxPktLen);
    CHECK_OFF(E1KSTATE, 20931, fIPcsum);
    CHECK_OFF(E1KSTATE, 20932, fTCPcsum);
    CHECK_OFF(E1KSTATE, 20936, u32PayRemain);
    CHECK_OFF(E1KSTATE, 20940, u16HdrRemain);
    CHECK_OFF(E1KSTATE, 20942, u16SavedFlags);
    CHECK_OFF(E1KSTATE, 20944, u32SavedCsum);
    CHECK_OFF(E1KSTATE, 20952, eeprom);
    CHECK_OFF(E1KSTATE, 21104, phy);
    CHECK_OFF(E1KSTATE, 21160, StatReceiveBytes);
    CHECK_OFF(VPCISTATE, 0, cs);
    CHECK_OFF(VPCISTATE, 192, szInstance);
    CHECK_OFF(VPCISTATE, 200, IBase);
    CHECK_OFF(VPCISTATE, 208, ILeds);
    CHECK_OFF(VPCISTATE, 216, pLedsConnector);
    CHECK_OFF(VPCISTATE, 224, pDevInsR3);
    CHECK_OFF(VPCISTATE, 232, pDevInsR0);
    CHECK_OFF(VPCISTATE, 240, pDevInsRC);
    CHECK_OFF(VPCISTATE, 248, pciDevice);
    CHECK_OFF(VPCISTATE, 856, IOPortBase);
    CHECK_OFF(VPCISTATE, 860, led);
    CHECK_OFF(VPCISTATE, 876, uGuestFeatures);
    CHECK_OFF(VPCISTATE, 880, uQueueSelector);
    CHECK_OFF(VPCISTATE, 882, uStatus);
    CHECK_OFF(VPCISTATE, 883, uISR);
    CHECK_OFF(VPCISTATE, 888, Queues);
    CHECK_OFF(VPCISTATE, 1056, Queues[VIRTIO_MAX_NQUEUES]);
    CHECK_OFF(VNETSTATE, 0, VPCI);
    CHECK_OFF(VNETSTATE, 1296, INetworkDown);
    CHECK_OFF(VNETSTATE, 1328, INetworkConfig);
    CHECK_OFF(VNETSTATE, 1352, pDrvBase);
    CHECK_OFF(VNETSTATE, 1368, pCanRxQueueR3);
    CHECK_OFF(VNETSTATE, 1376, pCanRxQueueR0);
    CHECK_OFF(VNETSTATE, 1384, pCanRxQueueRC);
    CHECK_OFF(VNETSTATE, 1392, pLinkUpTimer);
    CHECK_OFF(VNETSTATE, 1400, pTxTimerR3);
    CHECK_OFF(VNETSTATE, 1408, pTxTimerR0);
    CHECK_OFF(VNETSTATE, 1416, pTxTimerRC);
    CHECK_OFF(VNETSTATE, 1452, config);
    CHECK_OFF(VNETSTATE, 1460, macConfigured);
    CHECK_OFF(VNETSTATE, 1466, fCableConnected);
    CHECK_OFF(VNETSTATE, 1476, u32PktNo);
    CHECK_OFF(VNETSTATE, 1481, fPromiscuous);
    CHECK_OFF(VNETSTATE, 1482, fAllMulti);
    CHECK_OFF(VNETSTATE, 5776, pRxQueue);
    CHECK_OFF(VNETSTATE, 5784, pTxQueue);
    CHECK_OFF(VNETSTATE, 5792, pCtlQueue);
    CHECK_OFF(VNETSTATE, 1480, fMaybeOutOfSpace);
    CHECK_OFF(VNETSTATE, 5800, hEventMoreRxDescAvail);
    CHECK_SIZE(VBOXSCSI, 56);
    CHECK_OFF(VBOXSCSI, 0, regIdentify);
    CHECK_OFF(VBOXSCSI, 1, uTargetDevice);
    CHECK_OFF(VBOXSCSI, 2, uTxDir);
    CHECK_OFF(VBOXSCSI, 3, cbCDB);
    CHECK_OFF(VBOXSCSI, 4, abCDB);
    CHECK_OFF(VBOXSCSI, 15, abCDB[11]);
    CHECK_OFF(VBOXSCSI, 16, iCDB);
    CHECK_OFF(VBOXSCSI, 24, pbBuf);
    CHECK_OFF(VBOXSCSI, 32, cbBuf);
    CHECK_OFF(VBOXSCSI, 36, iBuf);
    CHECK_OFF(VBOXSCSI, 48, fBusy);
    CHECK_OFF(VBOXSCSI, 52, enmState);
    CHECK_SIZE(VMMDEV, 11688);
    CHECK_OFF(VMMDEV, 0, PciDev);
    CHECK_OFF(VMMDEV, 608, CritSect);
    CHECK_OFF(VMMDEV, 800, hypervisorSize);
    CHECK_OFF(VMMDEV, 804, mouseCapabilities);
    CHECK_OFF(VMMDEV, 808, mouseXAbs);
    CHECK_OFF(VMMDEV, 812, mouseYAbs);
    CHECK_OFF(VMMDEV, 816, fHostCursorRequested);
    CHECK_OFF(VMMDEV, 824, pDevIns);
    CHECK_OFF(VMMDEV, 832, IBase);
    CHECK_OFF(VMMDEV, 840, IPort);
    CHECK_OFF(VMMDEV, 944, IHGCMPort);
    CHECK_OFF(VMMDEV, 952, pDrvBase);
    CHECK_OFF(VMMDEV, 960, pDrv);
    CHECK_OFF(VMMDEV, 968, pHGCMDrv);
    CHECK_OFF(VMMDEV, 984, szMsg);
    CHECK_OFF(VMMDEV, 1496, iMsg);
    CHECK_OFF(VMMDEV, 1504, irq);
    CHECK_OFF(VMMDEV, 1508, u32HostEventFlags);
    CHECK_OFF(VMMDEV, 1512, u32GuestFilterMask);
    CHECK_OFF(VMMDEV, 1516, u32NewGuestFilterMask);
    CHECK_OFF(VMMDEV, 1520, fNewGuestFilterMask);
    CHECK_OFF(VMMDEV, 1524, GCPhysVMMDevRAM);
    CHECK_OFF(VMMDEV, 1528, pVMMDevRAMR3);
    CHECK_OFF(VMMDEV, 1536, pVMMDevHeapR3);
    CHECK_OFF(VMMDEV, 1544, GCPhysVMMDevHeap);
    CHECK_OFF(VMMDEV, 1548, guestInfo);
    CHECK_OFF(VMMDEV, 2468, guestCaps);
    CHECK_OFF(VMMDEV, 2472, fu32AdditionsOk);
    CHECK_OFF(VMMDEV, 2476, u32VideoAccelEnabled);
    CHECK_OFF(VMMDEV, 2480, displayChangeData);
    CHECK_OFF(VMMDEV, 6328, pCredentials);
    CHECK_OFF(VMMDEV, 6344, cMbMemoryBalloon);
    CHECK_OFF(VMMDEV, 6348, cMbMemoryBalloonLast);
    CHECK_OFF(VMMDEV, 6352, cbGuestRAM);
    CHECK_OFF(VMMDEV, 6360, idSession);
    CHECK_OFF(VMMDEV, 6368, u32StatIntervalSize);
    CHECK_OFF(VMMDEV, 6372, u32LastStatIntervalSize);
    CHECK_OFF(VMMDEV, 6376, fLastSeamlessEnabled);
    CHECK_OFF(VMMDEV, 6377, fSeamlessEnabled);
    CHECK_OFF(VMMDEV, 6379, fVRDPEnabled);
    CHECK_OFF(VMMDEV, 6380, uVRDPExperienceLevel);
    CHECK_OFF(VMMDEV, 6384, hostTime);
    CHECK_OFF(VMMDEV, 6392, fTimesyncBackdoorLo);
    CHECK_OFF(VMMDEV, 6396, fGetHostTimeDisabled);
    CHECK_OFF(VMMDEV, 6397, fBackdoorLogDisabled);
    CHECK_OFF(VMMDEV, 6398, fKeepCredentials);
    CHECK_OFF(VMMDEV, 6399, fHeapEnabled);
    CHECK_OFF(VMMDEV, 10512, pHGCMCmdList);
    CHECK_OFF(VMMDEV, 10520, critsectHGCMCmdList);
    CHECK_OFF(VMMDEV, 10568, u32HGCMEnabled);
    CHECK_OFF(VMMDEV, 10576, SharedFolders);
    CHECK_OFF(VMMDEV, 10576, SharedFolders.Led);
    CHECK_OFF(VMMDEV, 10592, SharedFolders.ILeds);
    CHECK_OFF(VMMDEV, 10600, SharedFolders.pLedsConnector);
    CHECK_OFF(VMMDEV, 10608, fCpuHotPlugEventsEnabled);
    CHECK_OFF(VMMDEV, 10612, enmCpuHotPlugEvent);
    CHECK_OFF(VMMDEV, 10616, idCpuCore);
    CHECK_OFF(VMMDEV, 10620, idCpuPackage);
    CHECK_OFF(VMMDEV, 10624, StatMemBalloonChunks);
    CHECK_OFF(VMMDEV, 10628, fRZEnabled);
    CHECK_OFF(VMMDEV, 10629, fTestingEnabled);
    CHECK_OFF(VMMDEV, 10630, fTestingMMIO);
    CHECK_OFF(VMMDEV, 10636, u32TestingHighTimestamp);
    CHECK_OFF(VMMDEV, 10640, u32TestingCmd);
    CHECK_OFF(VMMDEV, 10644, offTestingData);
    CHECK_OFF(VMMDEV, 10648, TestingData);
    CHECK_OFF(VMMDEV, 10648, TestingData.Value.u64Value);
    CHECK_OFF(VMMDEV, 10656, TestingData.Value.u32Unit);
    CHECK_OFF(VMMDEV, 10660, TestingData.Value.szName);
    CHECK_SIZE(BUSLOGICDEVICE, 104);
    CHECK_OFF(BUSLOGICDEVICE, 0, pBusLogicR3);
    CHECK_OFF(BUSLOGICDEVICE, 8, pBusLogicR0);
    CHECK_OFF(BUSLOGICDEVICE, 16, pBusLogicRC);
    CHECK_OFF(BUSLOGICDEVICE, 20, fPresent);
    CHECK_OFF(BUSLOGICDEVICE, 24, iLUN);
    CHECK_OFF(BUSLOGICDEVICE, 32, IBase);
    CHECK_OFF(BUSLOGICDEVICE, 40, ISCSIPort);
    CHECK_OFF(BUSLOGICDEVICE, 56, ILed);
    CHECK_OFF(BUSLOGICDEVICE, 64, pDrvBase);
    CHECK_OFF(BUSLOGICDEVICE, 72, pDrvSCSIConnector);
    CHECK_OFF(BUSLOGICDEVICE, 80, Led);
    CHECK_OFF(BUSLOGICDEVICE, 100, cOutstandingRequests);
    CHECK_SIZE(BUSLOGIC, 3080);
    CHECK_OFF(BUSLOGIC, 0, dev);
    CHECK_OFF(BUSLOGIC, 608, pDevInsR3);
    CHECK_OFF(BUSLOGIC, 616, pDevInsR0);
    CHECK_OFF(BUSLOGIC, 624, pDevInsRC);
    CHECK_OFF(BUSLOGIC, 630, IOPortBase);
    CHECK_OFF(BUSLOGIC, 632, MMIOBase);
    CHECK_OFF(BUSLOGIC, 640, regStatus);
    CHECK_OFF(BUSLOGIC, 641, regInterrupt);
    CHECK_OFF(BUSLOGIC, 642, regGeometry);
    CHECK_OFF(BUSLOGIC, 644, LocalRam);
    CHECK_OFF(BUSLOGIC, 900, uOperationCode);
    CHECK_OFF(BUSLOGIC, 901, aCommandBuffer);
    CHECK_OFF(BUSLOGIC, 954, aCommandBuffer[BUSLOGIC_COMMAND_SIZE_MAX]);
    CHECK_OFF(BUSLOGIC, 954, iParameter);
    CHECK_OFF(BUSLOGIC, 955, cbCommandParametersLeft);
    CHECK_OFF(BUSLOGIC, 956, fUseLocalRam);
    CHECK_OFF(BUSLOGIC, 957, aReplyBuffer);
    CHECK_OFF(BUSLOGIC, 1021, aReplyBuffer[BUSLOGIC_REPLY_SIZE_MAX]);
    CHECK_OFF(BUSLOGIC, 1021, iReply);
    CHECK_OFF(BUSLOGIC, 1022, cbReplyParametersLeft);
    CHECK_OFF(BUSLOGIC, 1023, fIRQEnabled);
    CHECK_OFF(BUSLOGIC, 1032, cMailbox);
    CHECK_OFF(BUSLOGIC, 1048, GCPhysAddrMailboxOutgoingBase);
    CHECK_OFF(BUSLOGIC, 1056, uMailboxOutgoingPositionCurrent);
    CHECK_OFF(BUSLOGIC, 1060, cMailboxesReady);
    CHECK_OFF(BUSLOGIC, 1064, fNotificationSend);
    CHECK_OFF(BUSLOGIC, 1072, GCPhysAddrMailboxIncomingBase);
    CHECK_OFF(BUSLOGIC, 1080, uMailboxIncomingPositionCurrent);
    CHECK_OFF(BUSLOGIC, 1084, fStrictRoundRobinMode);
    CHECK_OFF(BUSLOGIC, 1085, fExtendedLunCCBFormat);
    CHECK_OFF(BUSLOGIC, 1088, pNotifierQueueR3);
    CHECK_OFF(BUSLOGIC, 1096, pNotifierQueueR0);
    CHECK_OFF(BUSLOGIC, 1104, pNotifierQueueRC);
    CHECK_OFF(BUSLOGIC, 1112, CritSectIntr);
    CHECK_OFF(BUSLOGIC, 1304, hTaskCache);
    CHECK_OFF(BUSLOGIC, 1312, VBoxSCSI);
    CHECK_OFF(BUSLOGIC, 1368, aDeviceStates);
    CHECK_OFF(BUSLOGIC, 2928, aDeviceStates[BUSLOGIC_MAX_DEVICES-1]);
    CHECK_OFF(BUSLOGIC, 3032, IBase);
    CHECK_OFF(BUSLOGIC, 3040, ILeds);
    CHECK_OFF(BUSLOGIC, 3048, pLedsConnector);
    CHECK_OFF(BUSLOGIC, 3060, fSignalIdle);
    CHECK_OFF(BUSLOGIC, 3061, fRedo);
    CHECK_OFF(BUSLOGIC, 3064, pTasksRedoHead);
    CHECK_SIZE(LSILOGICSCSI, 1600);
    CHECK_OFF(LSILOGICSCSI, 0, PciDev);
    CHECK_OFF(LSILOGICSCSI, 608, pDevInsR3);
    CHECK_OFF(LSILOGICSCSI, 616, pDevInsR0);
    CHECK_OFF(LSILOGICSCSI, 624, pDevInsRC);
    CHECK_OFF(LSILOGICSCSI, 628, fGCEnabled);
    CHECK_OFF(LSILOGICSCSI, 629, fR0Enabled);
    CHECK_OFF(LSILOGICSCSI, 632, enmState);
    CHECK_OFF(LSILOGICSCSI, 636, enmWhoInit);
    CHECK_OFF(LSILOGICSCSI, 640, enmDoorbellState);
    CHECK_OFF(LSILOGICSCSI, 644, fDiagnosticEnabled);
    CHECK_OFF(LSILOGICSCSI, 645, fNotificationSent);
    CHECK_OFF(LSILOGICSCSI, 646, fEventNotificationEnabled);
    CHECK_OFF(LSILOGICSCSI, 647, fDiagRegsEnabled);
    CHECK_OFF(LSILOGICSCSI, 648, pNotificationQueueR3);
    CHECK_OFF(LSILOGICSCSI, 656, pNotificationQueueR0);
    CHECK_OFF(LSILOGICSCSI, 664, pNotificationQueueRC);
    CHECK_OFF(LSILOGICSCSI, 668, cDeviceStates);
    CHECK_OFF(LSILOGICSCSI, 672, paDeviceStates);
    CHECK_OFF(LSILOGICSCSI, 928, GCPhysMMIOBase);
    CHECK_OFF(LSILOGICSCSI, 926, IOPortBase);
    CHECK_OFF(LSILOGICSCSI, 680, uInterruptMask);
    CHECK_OFF(LSILOGICSCSI, 684, uInterruptStatus);
    CHECK_OFF(LSILOGICSCSI, 688, aMessage);
    CHECK_OFF(LSILOGICSCSI, 844, aMessage[sizeof(MptConfigurationRequest)-1]);
    CHECK_OFF(LSILOGICSCSI, 848, iMessage);
    CHECK_OFF(LSILOGICSCSI, 852, cMessage);
    CHECK_OFF(LSILOGICSCSI, 856, ReplyBuffer);
    CHECK_OFF(LSILOGICSCSI, 916, uNextReplyEntryRead);
    CHECK_OFF(LSILOGICSCSI, 920, cReplySize);
    CHECK_OFF(LSILOGICSCSI, 924, u16IOCFaultCode);
    CHECK_OFF(LSILOGICSCSI, 936, u32HostMFAHighAddr);
    CHECK_OFF(LSILOGICSCSI, 940, u32SenseBufferHighAddr);
    CHECK_OFF(LSILOGICSCSI, 944, cMaxDevices);
    CHECK_OFF(LSILOGICSCSI, 945, cMaxBuses);
    CHECK_OFF(LSILOGICSCSI, 946, cbReplyFrame);
    CHECK_OFF(LSILOGICSCSI, 948, iDiagnosticAccess);
    CHECK_OFF(LSILOGICSCSI, 952, cReplyQueueEntries);
    CHECK_OFF(LSILOGICSCSI, 956, cRequestQueueEntries);
    CHECK_OFF(LSILOGICSCSI, 960, ReplyPostQueueCritSect);
    CHECK_OFF(LSILOGICSCSI, 1152, ReplyFreeQueueCritSect);
    CHECK_OFF(LSILOGICSCSI, 1344, pReplyFreeQueueBaseR3);
    CHECK_OFF(LSILOGICSCSI, 1352, pReplyPostQueueBaseR3);
    CHECK_OFF(LSILOGICSCSI, 1360, pRequestQueueBaseR3);
    CHECK_OFF(LSILOGICSCSI, 1368, pReplyFreeQueueBaseR0);
    CHECK_OFF(LSILOGICSCSI, 1376, pReplyPostQueueBaseR0);
    CHECK_OFF(LSILOGICSCSI, 1384, pRequestQueueBaseR0);
    CHECK_OFF(LSILOGICSCSI, 1392, pReplyFreeQueueBaseRC);
    CHECK_OFF(LSILOGICSCSI, 1396, pReplyPostQueueBaseRC);
    CHECK_OFF(LSILOGICSCSI, 1400, pRequestQueueBaseRC);
    CHECK_OFF(LSILOGICSCSI, 1408, uReplyFreeQueueNextEntryFreeWrite);
    CHECK_OFF(LSILOGICSCSI, 1412, uReplyFreeQueueNextAddressRead);
    CHECK_OFF(LSILOGICSCSI, 1416, uReplyPostQueueNextEntryFreeWrite);
    CHECK_OFF(LSILOGICSCSI, 1420, uReplyPostQueueNextAddressRead);
    CHECK_OFF(LSILOGICSCSI, 1424, uRequestQueueNextEntryFreeWrite);
    CHECK_OFF(LSILOGICSCSI, 1428, uRequestQueueNextAddressRead);
    CHECK_OFF(LSILOGICSCSI, 1436, u16NextHandle);
    CHECK_OFF(LSILOGICSCSI, 1432, enmCtrlType);
    CHECK_OFF(LSILOGICSCSI, 1440, VBoxSCSI);
    CHECK_OFF(LSILOGICSCSI, 1496, hTaskCache);
    CHECK_OFF(LSILOGICSCSI, 1504, IBase);
    CHECK_OFF(LSILOGICSCSI, 1512, ILeds);
    CHECK_OFF(LSILOGICSCSI, 1520, pLedsConnector);
    CHECK_OFF(LSILOGICSCSI, 1528, pConfigurationPages);
    CHECK_OFF(LSILOGICSCSI, 1536, fSignalIdle);
    CHECK_OFF(LSILOGICSCSI, 1537, fRedo);
    CHECK_OFF(LSILOGICSCSI, 1538, fWrkThreadSleeping);
    CHECK_OFF(LSILOGICSCSI, 1544, pTasksRedoHead);
    CHECK_OFF(LSILOGICSCSI, 1552, u32DiagMemAddr);
    CHECK_OFF(LSILOGICSCSI, 1556, cbMemRegns);
    CHECK_OFF(LSILOGICSCSI, 1560, ListMemRegns);
    CHECK_OFF(LSILOGICSCSI, 1576, pSupDrvSession);
    CHECK_OFF(LSILOGICSCSI, 1584, pThreadWrk);
    CHECK_OFF(LSILOGICSCSI, 1592, hEvtProcess);
    CHECK_SIZE(HPET, 600);
    CHECK_OFF(HPET, 0, pDevInsR3);
    CHECK_OFF(HPET, 16, pDevInsR0);
    CHECK_OFF(HPET, 32, pDevInsRC);
    CHECK_OFF(HPET, 360, u64HpetOffset);
    CHECK_OFF(HPET, 368, u32Capabilities);
    CHECK_OFF(HPET, 372, u32Period);
    CHECK_OFF(HPET, 376, u64HpetConfig);
    CHECK_OFF(HPET, 384, u64Isr);
    CHECK_OFF(HPET, 392, u64HpetCounter);
    CHECK_OFF(HPET, 400, CritSect);
    CHECK_OFF(HPET, 592, fIch9);
    CHECK_SIZE(HPETTIMER, 80);
    CHECK_OFF(HPETTIMER, 0, pTimerR3);
    CHECK_OFF(HPETTIMER, 8, pHpetR3);
    CHECK_OFF(HPETTIMER, 16, pTimerR0);
    CHECK_OFF(HPETTIMER, 24, pHpetR0);
    CHECK_OFF(HPETTIMER, 32, pTimerRC);
    CHECK_OFF(HPETTIMER, 36, pHpetRC);
    CHECK_OFF(HPETTIMER, 40, idxTimer);
    CHECK_OFF(HPETTIMER, 48, u64Config);
    CHECK_OFF(HPETTIMER, 56, u64Cmp);
    CHECK_OFF(HPETTIMER, 64, u64Fsb);
    CHECK_OFF(HPETTIMER, 72, u64Period);
    CHECK_OFF(HPETTIMER, 41, u8Wrap);
    CHECK_SIZE(HDASTATE, 2056);
    CHECK_OFF(HDASTATE, 0, PciDev);
    CHECK_OFF(HDASTATE, 608, pDevInsR3);
    CHECK_OFF(HDASTATE, 616, pDevInsR0);
    CHECK_OFF(HDASTATE, 624, pDevInsRC);
    CHECK_OFF(HDASTATE, 640, pDrvBase);
    CHECK_OFF(HDASTATE, 648, IBase);
    CHECK_OFF(HDASTATE, 656, MMIOBaseAddr);
    CHECK_OFF(HDASTATE, 664, au32Regs[0]);
    CHECK_OFF(HDASTATE, 1112, au32Regs[HDA_NREGS]);
    CHECK_OFF(HDASTATE, 1112, StInBdle);
    CHECK_OFF(HDASTATE, 1400, StOutBdle);
    CHECK_OFF(HDASTATE, 1688, StMicBdle);
    CHECK_OFF(HDASTATE, 1976, u64CORBBase);
    CHECK_OFF(HDASTATE, 1984, u64RIRBBase);
    CHECK_OFF(HDASTATE, 1992, u64DPBase);
    CHECK_OFF(HDASTATE, 2000, pu32CorbBuf);
    CHECK_OFF(HDASTATE, 2008, cbCorbBuf);
    CHECK_OFF(HDASTATE, 2016, pu64RirbBuf);
    CHECK_OFF(HDASTATE, 2024, cbRirbBuf);
    CHECK_OFF(HDASTATE, 2028, fInReset);
    CHECK_OFF(HDASTATE, 2029, fCviIoc);
    CHECK_OFF(HDASTATE, 2030, fR0Enabled);
    CHECK_OFF(HDASTATE, 2031, fRCEnabled);
    CHECK_OFF(HDASTATE, 2032, pCodec);
    CHECK_OFF(HDASTATE, 2048, u8Counter);
    CHECK_OFF(HDASTATE, 2040, u64BaseTS);
