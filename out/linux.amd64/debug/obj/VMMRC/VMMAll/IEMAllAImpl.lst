     1                                 %line 1+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 %line 1+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 
    41                                 
    42                                 
    43                                 
    44                                 
    45                                 
    46                                 
    47                                 
    48                                 %line 28+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
    49                                 
    50                                 
    51                                 
    52                                 
    53                                 %line 37+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
    54                                 
    55                                 %line 1+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    56                                 
    57                                 
    58                                 
    59                                 
    60                                 
    61                                 
    62                                 
    63                                 
    64                                 
    65                                 
    66                                 
    67                                 
    68                                 
    69                                 
    70                                 
    71                                 
    72                                 
    73                                 
    74                                 
    75                                 
    76                                 
    77                                 
    78                                 
    79                                 
    80                                 
    81                                 %line 28+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    82                                 
    83                                 
    84                                 
    85                                 
    86                                 
    87                                 
    88                                 %line 35+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    89                                 
    90                                 %line 37+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    91                                 
    92                                 %line 39+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    93                                 
    94                                 %line 41+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    95                                 
    96                                 %line 43+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    97                                 
    98                                 %line 45+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    99                                 
   100                                 %line 47+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   101                                 
   102                                 %line 49+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   103                                 
   104                                 %line 51+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   105                                 
   106                                 %line 53+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   107                                 
   108                                 %line 55+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   109                                 
   110                                 %line 57+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   111                                 
   112                                 %line 59+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   113                                 
   114                                 %line 61+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   115                                 
   116                                 %line 63+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   117                                 
   118                                 %line 65+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   119                                 
   120                                 %line 67+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   121                                 
   122                                 
   123                                 
   124                                 
   125                                 
   126                                 %line 73+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   127                                 
   128                                 
   129                                 
   130                                 %line 77+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   131                                 
   132                                 
   133                                 %line 84+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   134                                 
   135                                 
   136                                 
   137                                 %line 92+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   138                                 
   139                                 
   140                                 
   141                                 %line 100+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   142                                 
   143                                 
   144                                 
   145                                 %line 108+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   146                                 
   147                                 
   148                                 
   149                                 %line 116+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   150                                 
   151                                 
   152                                 
   153                                 
   154                                 %line 121+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   155                                 
   156                                 
   157                                 
   158                                 %line 125+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   159                                 
   160                                 
   161                                 
   162                                 %line 129+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   163                                 
   164                                 
   165                                 
   166                                 
   167                                 
   168                                 %line 137+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   169                                 
   170                                 
   171                                 
   172                                 
   173                                 %line 157+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   174                                 
   175                                 
   176                                 
   177                                 %line 165+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   178                                 
   179                                 
   180                                 
   181                                 %line 177+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   182                                 
   183                                 
   184                                 
   185                                 
   186                                 %line 188+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   187                                 
   188                                 
   189                                 
   190                                 %line 211+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   191                                 
   192                                 
   193                                 
   194                                 
   195                                 
   196                                 %line 222+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   197                                 
   198                                 
   199                                 
   200                                 %line 236+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   201                                 
   202                                 
   203                                 
   204                                 %line 249+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   205                                 
   206                                 
   207                                 
   208                                 %line 263+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   209                                 
   210                                 
   211                                 
   212                                 %line 274+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   213                                 
   214                                 
   215                                 
   216                                 %line 288+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   217                                 
   218                                 
   219                                 
   220                                 %line 302+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   221                                 
   222                                 
   223                                 
   224                                 
   225                                 
   226                                 
   227                                 
   228                                 
   229                                 %line 356+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   230                                 
   231                                 %line 363+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   232                                 
   233                                 
   234                                 
   235                                 
   236                                 %line 376+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   237                                 
   238                                 
   239                                 
   240                                 
   241                                 
   242                                 
   243                                 
   244                                 %line 396+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   245                                 
   246                                 
   247                                 
   248                                 %line 408+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   249                                 
   250                                 
   251                                 
   252                                 %line 420+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   253                                 
   254                                 
   255                                 
   256                                 
   257                                 
   258                                 %line 432+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   259                                 
   260                                 
   261                                 
   262                                 %line 442+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   263                                 
   264                                 
   265                                 
   266                                 %line 452+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   267                                 
   268                                 
   269                                 
   270                                 %line 462+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   271                                 
   272                                 
   273                                 
   274                                 %line 472+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   275                                 
   276                                 
   277                                 
   278                                 
   279                                 
   280                                 %line 482+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   281                                 
   282                                 
   283                                 
   284                                 
   285                                 %line 491+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   286                                 
   287                                 
   288                                 
   289                                 %line 499+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   290                                 
   291                                 
   292                                 
   293                                 %line 507+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   294                                 
   295                                 
   296                                 
   297                                 
   298                                 
   299                                 %line 517+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   300                                 
   301                                 
   302                                 
   303                                 
   304                                 %line 526+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   305                                 
   306                                 
   307                                 
   308                                 %line 534+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   309                                 
   310                                 
   311                                 
   312                                 %line 542+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   313                                 
   314                                 
   315                                 
   316                                 
   317                                 
   318                                 %line 552+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   319                                 
   320                                 
   321                                 
   322                                 
   323                                 %line 561+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   324                                 
   325                                 
   326                                 
   327                                 %line 569+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   328                                 
   329                                 
   330                                 
   331                                 %line 577+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   332                                 
   333                                 
   334                                 
   335                                 
   336                                 
   337                                 %line 587+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   338                                 
   339                                 
   340                                 
   341                                 
   342                                 %line 596+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   343                                 
   344                                 %line 599+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   345                                 
   346                                 
   347                                 
   348                                 %line 607+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   349                                 
   350                                 
   351                                 
   352                                 %line 615+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   353                                 
   354                                 
   355                                 
   356                                 
   357                                 %line 620+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   358                                 
   359                                 
   360                                 
   361                                 
   362                                 %line 625+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   363                                 
   364                                 
   365                                 
   366                                 %line 629+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   367                                 
   368                                 
   369                                 
   370                                 %line 633+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   371                                 
   372                                 
   373                                 
   374                                 
   375                                 
   376                                 
   377                                 
   378                                 
   379                                 
   380                                 
   381                                 
   382                                 
   383                                 
   384                                 
   385                                 
   386                                 %line 666+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   387                                 
   388                                 
   389                                 
   390                                 
   391                                 
   392                                 %line 672+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   393                                 
   394                                 
   395                                 
   396                                 
   397                                 %line 677+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   398                                 
   399                                 
   400                                 
   401                                 %line 681+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   402                                 
   403                                 
   404                                 
   405                                 %line 685+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   406                                 
   407                                 
   408                                 
   409                                 
   410                                 
   411                                 %line 691+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   412                                 
   413                                 
   414                                 
   415                                 
   416                                 %line 696+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   417                                 
   418                                 
   419                                 
   420                                 %line 700+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   421                                 
   422                                 
   423                                 
   424                                 %line 704+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   425                                 
   426                                 
   427                                 
   428                                 
   429                                 
   430                                 
   431                                 
   432                                 
   433                                 %line 721+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   434                                 
   435                                 
   436                                 
   437                                 
   438                                 
   439                                 
   440                                 
   441                                 
   442                                 
   443                                 
   444                                 
   445                                 
   446                                 
   447                                 
   448                                 %line 752+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   449                                 
   450                                 
   451                                 
   452                                 
   453                                 
   454                                 
   455                                 
   456                                 
   457                                 
   458                                 
   459                                 
   460                                 
   461                                 
   462                                 %line 770+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   463                                 
   464                                 
   465                                 
   466                                 
   467                                 
   468                                 
   469                                 
   470                                 %line 791+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   471                                 
   472                                 %line 797+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   473                                 
   474                                 
   475                                 
   476                                 
   477                                 
   478                                 
   479                                 
   480                                 
   481                                 
   482                                 
   483                                 
   484                                 
   485                                 
   486                                 
   487                                 
   488                                 
   489                                 
   490                                 
   491                                 
   492                                 
   493                                 
   494                                 
   495                                 
   496                                 
   497                                 
   498                                 
   499                                 
   500                                 
   501                                 
   502                                 
   503                                 
   504                                 
   505                                 
   506                                 %line 853+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   507                                 
   508                                 
   509                                 
   510                                 
   511                                 
   512                                 
   513                                 
   514                                 
   515                                 
   516                                 
   517                                 %line 873+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   518                                 
   519                                 
   520                                 
   521                                 %line 886+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   522                                 
   523                                 %line 39+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   524                                 
   525                                 
   526                                 
   527                                 
   528                                 %line 51+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   529                                 
   530                                 
   531                                 %line 66+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   532                                 
   533                                 
   534                                 
   535                                 
   536                                 
   537                                 
   538                                 
   539                                 %line 116+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   540                                 
   541                                 
   542                                 
   543                                 
   544                                 
   545                                 
   546                                 %line 159+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   547                                 
   548                                 %line 195+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   549                                 
   550                                 %line 203+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   551                                 
   552                                 
   553                                 
   554                                 
   555                                 %line 232+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   556                                 
   557                                 
   558                                 
   559                                 
   560                                 
   561                                 %line 260+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   562                                 
   563                                 %line 284+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   564                                 
   565                                 %line 292+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   566                                 
   567                                 
   568                                 
   569                                 
   570                                 %line 331+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   571                                 
   572                                 
   573                                 
   574                                 
   575                                 
   576                                 %line 369+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   577                                 
   578                                 %line 403+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   579                                 
   580                                 %line 411+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   581                                 
   582                                 
   583                                 
   584                                 
   585                                 
   586                                 %line 453+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   587                                 
   588                                 
   589                                 
   590                                 
   591                                 
   592                                 %line 494+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   593                                 
   594                                 %line 531+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   595                                 
   596                                 %line 539+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   597                                 
   598                                 
   599                                 
   600                                 
   601                                 %line 579+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   602                                 
   603                                 
   604                                 
   605                                 
   606                                 
   607                                 %line 621+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   608                                 
   609                                 %line 659+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   610                                 
   611                                 %line 667+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   612                                 
   613                                 
   614                                 
   615                                 
   616                                 
   617                                 
   618                                 %line 701+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   619                                 
   620                                 %line 730+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   621                                 
   622                                 %line 738+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   623                                 
   624                                 
   625                                 
   626                                 
   627                                 
   628                                 %line 756+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   629                                 
   630                                 
   631                                 
   632                                 
   633                                 
   634                                 %line 773+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   635                                 
   636                                 %line 775+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   637                                 
   638                                 %line 1+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   639                                 
   640                                 
   641                                 
   642                                 
   643                                 
   644                                 
   645                                 
   646                                 
   647                                 
   648                                 
   649                                 
   650                                 
   651                                 
   652                                 
   653                                 
   654                                 
   655                                 
   656                                 
   657                                 
   658                                 
   659                                 
   660                                 
   661                                 
   662                                 
   663                                 
   664                                 
   665                                 %line 29+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   666                                 
   667                                 
   668                                 %line 52+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   669                                 
   670                                 %line 54+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   671                                 
   672                                 
   673                                 
   674                                 
   675                                 
   676                                 [absolute 0]
   677                                 %line 59+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   678                                 X86FSTENV32P:
   679                                 %line 60+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   680                                  .FCW resw 1
   681                                  .padding1 resw 1
   682                                  .FSW resw 1
   683                                  .padding2 resw 1
   684                                  .FTW resw 1
   685                                  .padding3 resw 1
   686                                  .FPUIP resd 1
   687                                  .FPUCS resw 1
   688                                  .FOP resw 1
   689                                  .FPUDP resd 1
   690                                  .FPUDS resw 1
   691                                  .padding4 resw 1
   692                                 X86FSTENV32P_size:
   693                                 %line 72+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   694                                 [section .text]
   695                                 %line 73+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   696                                 
   697                                 
   698                                 
   699                                 
   700                                 
   701                                 [absolute 0]
   702                                 %line 78+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   703                                 X86FXSTATE:
   704                                 %line 79+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   705                                  .FCW resw 1
   706                                  .FSW resw 1
   707                                  .FTW resw 1
   708                                  .FOP resw 1
   709                                  .FPUIP resd 1
   710                                  .FPUCS resw 1
   711                                  .Rsrvd1 resw 1
   712                                  .FPUDP resd 1
   713                                  .FPUDS resw 1
   714                                  .Rsrvd2 resw 1
   715                                  .MXCSR resd 1
   716                                  .MXCSR_MASK resd 1
   717                                  .st0 resd 4
   718                                  .st1 resd 4
   719                                  .st2 resd 4
   720                                  .st3 resd 4
   721                                  .st4 resd 4
   722                                  .st5 resd 4
   723                                  .st6 resd 4
   724                                  .st7 resd 4
   725                                  .xmm0 resd 4
   726                                  .xmm1 resd 4
   727                                  .xmm2 resd 4
   728                                  .xmm3 resd 4
   729                                  .xmm4 resd 4
   730                                  .xmm5 resd 4
   731                                  .xmm6 resd 4
   732                                  .xmm7 resd 4
   733                                  .xmm8 resd 4
   734                                  .xmm9 resd 4
   735                                  .xmm10 resd 4
   736                                  .xmm11 resd 4
   737                                  .xmm12 resd 4
   738                                  .xmm13 resd 4
   739                                  .xmm14 resd 4
   740                                  .xmm15 resd 4
   741                                  .au32RsrvdRest resd 24
   742                                 X86FXSTATE_size:
   743                                 %line 116+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   744                                 [section .text]
   745                                 %line 117+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   746                                 
   747                                 
   748                                 [absolute 0]
   749                                 %line 119+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   750                                 X86TSS16:
   751                                 %line 120+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   752                                  .selPrev resw 1
   753                                  .sp0 resw 1
   754                                  .ss0 resw 1
   755                                  .sp1 resw 1
   756                                  .ss1 resw 1
   757                                  .sp2 resw 1
   758                                  .ss2 resw 1
   759                                  .ip resw 1
   760                                  .flags resw 1
   761                                  .ax resw 1
   762                                  .cx resw 1
   763                                  .dx resw 1
   764                                  .bx resw 1
   765                                  .sp resw 1
   766                                  .bp resw 1
   767                                  .si resw 1
   768                                  .di resw 1
   769                                  .es resw 1
   770                                  .cs resw 1
   771                                  .ss resw 1
   772                                  .ds resw 1
   773                                  .selLdt resw 1
   774                                 X86TSS16_size:
   775                                 %line 142+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   776                                 [section .text]
   777                                 %line 144+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   778                                 
   779                                 
   780                                 [absolute 0]
   781                                 %line 146+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   782                                 X86TSS32:
   783                                 %line 147+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   784                                  .selPrev resw 1
   785                                  .padding1 resw 1
   786                                  .esp0 resd 1
   787                                  .ss0 resw 1
   788                                  .padding_ss0 resw 1
   789                                  .esp1 resd 1
   790                                  .ss1 resw 1
   791                                  .padding_ss1 resw 1
   792                                  .esp2 resd 1
   793                                  .ss2 resw 1
   794                                  .padding_ss2 resw 1
   795                                  .cr3 resd 1
   796                                  .eip resd 1
   797                                  .eflags resd 1
   798                                  .eax resd 1
   799                                  .ecx resd 1
   800                                  .edx resd 1
   801                                  .ebx resd 1
   802                                  .esp resd 1
   803                                  .ebp resd 1
   804                                  .esi resd 1
   805                                  .edi resd 1
   806                                  .es resw 1
   807                                  .padding_es resw 1
   808                                  .cs resw 1
   809                                  .padding_cs resw 1
   810                                  .ss resw 1
   811                                  .padding_ss resw 1
   812                                  .ds resw 1
   813                                  .padding_ds resw 1
   814                                  .fs resw 1
   815                                  .padding_fs resw 1
   816                                  .gs resw 1
   817                                  .padding_gs resw 1
   818                                  .selLdt resw 1
   819                                  .padding_ldt resw 1
   820                                  .fDebugTrap resw 1
   821                                  .offIoBitmap resw 1
   822                                  .IntRedirBitmap resb 32
   823                                 X86TSS32_size:
   824                                 %line 186+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   825                                 [section .text]
   826                                 %line 187+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   827                                 
   828                                 
   829                                 [absolute 0]
   830                                 %line 189+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   831                                 X86TSS64:
   832                                 %line 190+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   833                                  .u32Reserved resd 1
   834                                  .rsp0 resq 1
   835                                  .rsp1 resq 1
   836                                  .rsp2 resq 1
   837                                  .u32Reserved2 resd 2
   838                                  .ist1 resq 1
   839                                  .ist2 resq 1
   840                                  .ist3 resq 1
   841                                  .ist4 resq 1
   842                                  .ist5 resq 1
   843                                  .ist6 resq 1
   844                                  .ist7 resq 1
   845                                  .u16Reserved resw 5
   846                                  .offIoBitmap resw 1
   847                                  .IntRedirBitmap resb 32
   848                                 X86TSS64_size:
   849                                 %line 205+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   850                                 [section .text]
   851                                 %line 207+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   852                                 
   853                                 %line 209+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   854                                 
   855                                 %line 24+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   856                                 
   857                                 
   858                                 
   859                                 
   860                                 
   861                                 
   862                                 
   863                                 
   864                                 
   865                                 %line 44+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   866                                 
   867                                 
   868                                 
   869                                 
   870                                 
   871                                 
   872                                 
   873                                 
   874                                 %line 59+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   875                                 
   876                                 
   877                                 
   878                                 
   879                                 
   880                                 
   881                                 
   882                                 %line 80+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   883                                 
   884                                 
   885                                 
   886                                 
   887                                 
   888                                 %line 175+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   889                                 
   890                                 %line 187+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   891                                 
   892                                 %line 199+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   893                                 
   894                                 %line 216+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   895                                 
   896                                 %line 236+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   897                                 
   898                                 %line 241+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   899                                 
   900                                 %line 246+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   901                                 
   902                                 %line 251+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   903                                 
   904                                 %line 255+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   905                                 
   906                                 %line 260+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   907                                 
   908                                 %line 265+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   909                                 
   910                                 
   911                                 
   912                                 
   913                                 
   914                                 
   915                                 
   916                                 
   917                                 
   918                                 
   919                                 
   920                                 %line 286+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   921                                 
   922                                 
   923                                 
   924                                 
   925                                 
   926                                 
   927                                 
   928                                 
   929                                 
   930                                 %line 306+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   931                                 
   932                                 
   933                                 
   934                                 
   935                                 
   936                                 
   937                                 
   938                                 
   939                                 
   940                                 
   941                                 
   942                                 
   943                                 
   944                                 
   945                                 
   946                                 
   947                                 
   948                                 %line 396+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   949                                 
   950                                 
   951                                 [section .text]
   952                                 %line 398+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   953                                 [global iemAImpl_add_u8]
   954                                 iemAImpl_add_u8:
   955 00000000 53                      push ebx
   956 00000001 8B5C2408                mov ebx, [esp + 4 + 4]
   957 00000005 57                      push edi
   958                                 
   959 00000006 9C                      pushf
   960 00000007 8B03                    mov eax, [ebx]
   961 00000009 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   962 00000010 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   963 00000015 090424                  or [esp], eax
   964 00000018 9D                      popf
   965                                 
   966 00000019 0011                    add byte [ecx], dl
   967 0000001B 9C                      pushf
   968 0000001C 5F                      pop edi
   969 0000001D 8B03                    mov eax, [ebx]
   970 0000001F 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   971 00000024 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   972 0000002A 09F8                    or eax, edi
   973 0000002C 8903                    mov [ebx], eax
   974 0000002E 5F                      pop edi
   975 0000002F 5B                      pop ebx
   976 00000030 C20400                  ret 4
   977                                 [global iemAImpl_add_u8_EndProc:function hidden]
   978                                 iemAImpl_add_u8_EndProc:
   979                                 [size iemAImpl_add_u8 iemAImpl_add_u8_EndProc - iemAImpl_add_u8]
   980                                 [size iemAImpl_add_u8_EndProc 0]
   981 00000033 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
   982                                 
   983                                 [global iemAImpl_add_u16]
   984                                 iemAImpl_add_u16:
   985 00000037 53                      push ebx
   986 00000038 8B5C2408                mov ebx, [esp + 4 + 4]
   987 0000003C 57                      push edi
   988                                 
   989 0000003D 9C                      pushf
   990 0000003E 8B03                    mov eax, [ebx]
   991 00000040 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   992 00000047 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   993 0000004C 090424                  or [esp], eax
   994 0000004F 9D                      popf
   995                                 
   996 00000050 660111                  add word [ecx], dx
   997 00000053 9C                      pushf
   998 00000054 5F                      pop edi
   999 00000055 8B03                    mov eax, [ebx]
  1000 00000057 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1001 0000005C 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1002 00000062 09F8                    or eax, edi
  1003 00000064 8903                    mov [ebx], eax
  1004 00000066 5F                      pop edi
  1005 00000067 5B                      pop ebx
  1006 00000068 C20400                  ret 4
  1007                                 [global iemAImpl_add_u16_EndProc:function hidden]
  1008                                 iemAImpl_add_u16_EndProc:
  1009                                 [size iemAImpl_add_u16 iemAImpl_add_u16_EndProc - iemAImpl_add_u16]
  1010                                 [size iemAImpl_add_u16_EndProc 0]
  1011 0000006B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1012                                 
  1013                                 [global iemAImpl_add_u32]
  1014                                 iemAImpl_add_u32:
  1015 0000006F 53                      push ebx
  1016 00000070 8B5C2408                mov ebx, [esp + 4 + 4]
  1017 00000074 57                      push edi
  1018                                 
  1019 00000075 9C                      pushf
  1020 00000076 8B03                    mov eax, [ebx]
  1021 00000078 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1022 0000007F 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1023 00000084 090424                  or [esp], eax
  1024 00000087 9D                      popf
  1025                                 
  1026 00000088 0111                    add dword [ecx], edx
  1027 0000008A 9C                      pushf
  1028 0000008B 5F                      pop edi
  1029 0000008C 8B03                    mov eax, [ebx]
  1030 0000008E 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1031 00000093 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1032 00000099 09F8                    or eax, edi
  1033 0000009B 8903                    mov [ebx], eax
  1034 0000009D 5F                      pop edi
  1035 0000009E 5B                      pop ebx
  1036 0000009F C20400                  ret 4
  1037                                 [global iemAImpl_add_u32_EndProc:function hidden]
  1038                                 iemAImpl_add_u32_EndProc:
  1039                                 [size iemAImpl_add_u32 iemAImpl_add_u32_EndProc - iemAImpl_add_u32]
  1040                                 [size iemAImpl_add_u32_EndProc 0]
  1041 000000A2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1042                                 
  1043                                 
  1044                                 
  1045                                 [global iemAImpl_add_u8_locked]
  1046                                 iemAImpl_add_u8_locked:
  1047 000000A6 53                      push ebx
  1048 000000A7 8B5C2408                mov ebx, [esp + 4 + 4]
  1049 000000AB 57                      push edi
  1050                                 
  1051 000000AC 9C                      pushf
  1052 000000AD 8B03                    mov eax, [ebx]
  1053 000000AF 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1054 000000B6 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1055 000000BB 090424                  or [esp], eax
  1056 000000BE 9D                      popf
  1057                                 
  1058 000000BF F00011                  lock add byte [ecx], dl
  1059 000000C2 9C                      pushf
  1060 000000C3 5F                      pop edi
  1061 000000C4 8B03                    mov eax, [ebx]
  1062 000000C6 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1063 000000CB 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1064 000000D1 09F8                    or eax, edi
  1065 000000D3 8903                    mov [ebx], eax
  1066 000000D5 5F                      pop edi
  1067 000000D6 5B                      pop ebx
  1068 000000D7 C20400                  ret 4
  1069                                 [global iemAImpl_add_u8_locked_EndProc:function hidden]
  1070                                 iemAImpl_add_u8_locked_EndProc:
  1071                                 [size iemAImpl_add_u8_locked iemAImpl_add_u8_locked_EndProc - iemAImpl_add_u8_locked]
  1072                                 [size iemAImpl_add_u8_locked_EndProc 0]
  1073 000000DA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1074                                 
  1075                                 [global iemAImpl_add_u16_locked]
  1076                                 iemAImpl_add_u16_locked:
  1077 000000DE 53                      push ebx
  1078 000000DF 8B5C2408                mov ebx, [esp + 4 + 4]
  1079 000000E3 57                      push edi
  1080                                 
  1081 000000E4 9C                      pushf
  1082 000000E5 8B03                    mov eax, [ebx]
  1083 000000E7 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1084 000000EE 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1085 000000F3 090424                  or [esp], eax
  1086 000000F6 9D                      popf
  1087                                 
  1088 000000F7 66F00111                lock add word [ecx], dx
  1089 000000FB 9C                      pushf
  1090 000000FC 5F                      pop edi
  1091 000000FD 8B03                    mov eax, [ebx]
  1092 000000FF 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1093 00000104 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1094 0000010A 09F8                    or eax, edi
  1095 0000010C 8903                    mov [ebx], eax
  1096 0000010E 5F                      pop edi
  1097 0000010F 5B                      pop ebx
  1098 00000110 C20400                  ret 4
  1099                                 [global iemAImpl_add_u16_locked_EndProc:function hidden]
  1100                                 iemAImpl_add_u16_locked_EndProc:
  1101                                 [size iemAImpl_add_u16_locked iemAImpl_add_u16_locked_EndProc - iemAImpl_add_u16_locked]
  1102                                 [size iemAImpl_add_u16_locked_EndProc 0]
  1103 00000113 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1104                                 
  1105                                 [global iemAImpl_add_u32_locked]
  1106                                 iemAImpl_add_u32_locked:
  1107 00000117 53                      push ebx
  1108 00000118 8B5C2408                mov ebx, [esp + 4 + 4]
  1109 0000011C 57                      push edi
  1110                                 
  1111 0000011D 9C                      pushf
  1112 0000011E 8B03                    mov eax, [ebx]
  1113 00000120 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1114 00000127 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1115 0000012C 090424                  or [esp], eax
  1116 0000012F 9D                      popf
  1117                                 
  1118 00000130 F00111                  lock add dword [ecx], edx
  1119 00000133 9C                      pushf
  1120 00000134 5F                      pop edi
  1121 00000135 8B03                    mov eax, [ebx]
  1122 00000137 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1123 0000013C 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1124 00000142 09F8                    or eax, edi
  1125 00000144 8903                    mov [ebx], eax
  1126 00000146 5F                      pop edi
  1127 00000147 5B                      pop ebx
  1128 00000148 C20400                  ret 4
  1129                                 [global iemAImpl_add_u32_locked_EndProc:function hidden]
  1130                                 iemAImpl_add_u32_locked_EndProc:
  1131                                 [size iemAImpl_add_u32_locked iemAImpl_add_u32_locked_EndProc - iemAImpl_add_u32_locked]
  1132                                 [size iemAImpl_add_u32_locked_EndProc 0]
  1133 0000014B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1134                                 
  1135                                 %line 399+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1136                                 [section .text]
  1137                                 %line 399+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1138                                 [global iemAImpl_adc_u8]
  1139                                 iemAImpl_adc_u8:
  1140 0000014F 53                      push ebx
  1141 00000150 8B5C2408                mov ebx, [esp + 4 + 4]
  1142 00000154 57                      push edi
  1143                                 
  1144 00000155 9C                      pushf
  1145 00000156 8B03                    mov eax, [ebx]
  1146 00000158 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1147 0000015F 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1148 00000164 090424                  or [esp], eax
  1149 00000167 9D                      popf
  1150                                 
  1151 00000168 1011                    adc byte [ecx], dl
  1152 0000016A 9C                      pushf
  1153 0000016B 5F                      pop edi
  1154 0000016C 8B03                    mov eax, [ebx]
  1155 0000016E 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1156 00000173 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1157 00000179 09F8                    or eax, edi
  1158 0000017B 8903                    mov [ebx], eax
  1159 0000017D 5F                      pop edi
  1160 0000017E 5B                      pop ebx
  1161 0000017F C20400                  ret 4
  1162                                 [global iemAImpl_adc_u8_EndProc:function hidden]
  1163                                 iemAImpl_adc_u8_EndProc:
  1164                                 [size iemAImpl_adc_u8 iemAImpl_adc_u8_EndProc - iemAImpl_adc_u8]
  1165                                 [size iemAImpl_adc_u8_EndProc 0]
  1166 00000182 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1167                                 
  1168                                 [global iemAImpl_adc_u16]
  1169                                 iemAImpl_adc_u16:
  1170 00000186 53                      push ebx
  1171 00000187 8B5C2408                mov ebx, [esp + 4 + 4]
  1172 0000018B 57                      push edi
  1173                                 
  1174 0000018C 9C                      pushf
  1175 0000018D 8B03                    mov eax, [ebx]
  1176 0000018F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1177 00000196 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1178 0000019B 090424                  or [esp], eax
  1179 0000019E 9D                      popf
  1180                                 
  1181 0000019F 661111                  adc word [ecx], dx
  1182 000001A2 9C                      pushf
  1183 000001A3 5F                      pop edi
  1184 000001A4 8B03                    mov eax, [ebx]
  1185 000001A6 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1186 000001AB 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1187 000001B1 09F8                    or eax, edi
  1188 000001B3 8903                    mov [ebx], eax
  1189 000001B5 5F                      pop edi
  1190 000001B6 5B                      pop ebx
  1191 000001B7 C20400                  ret 4
  1192                                 [global iemAImpl_adc_u16_EndProc:function hidden]
  1193                                 iemAImpl_adc_u16_EndProc:
  1194                                 [size iemAImpl_adc_u16 iemAImpl_adc_u16_EndProc - iemAImpl_adc_u16]
  1195                                 [size iemAImpl_adc_u16_EndProc 0]
  1196 000001BA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1197                                 
  1198                                 [global iemAImpl_adc_u32]
  1199                                 iemAImpl_adc_u32:
  1200 000001BE 53                      push ebx
  1201 000001BF 8B5C2408                mov ebx, [esp + 4 + 4]
  1202 000001C3 57                      push edi
  1203                                 
  1204 000001C4 9C                      pushf
  1205 000001C5 8B03                    mov eax, [ebx]
  1206 000001C7 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1207 000001CE 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1208 000001D3 090424                  or [esp], eax
  1209 000001D6 9D                      popf
  1210                                 
  1211 000001D7 1111                    adc dword [ecx], edx
  1212 000001D9 9C                      pushf
  1213 000001DA 5F                      pop edi
  1214 000001DB 8B03                    mov eax, [ebx]
  1215 000001DD 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1216 000001E2 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1217 000001E8 09F8                    or eax, edi
  1218 000001EA 8903                    mov [ebx], eax
  1219 000001EC 5F                      pop edi
  1220 000001ED 5B                      pop ebx
  1221 000001EE C20400                  ret 4
  1222                                 [global iemAImpl_adc_u32_EndProc:function hidden]
  1223                                 iemAImpl_adc_u32_EndProc:
  1224                                 [size iemAImpl_adc_u32 iemAImpl_adc_u32_EndProc - iemAImpl_adc_u32]
  1225                                 [size iemAImpl_adc_u32_EndProc 0]
  1226 000001F1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1227                                 
  1228                                 
  1229                                 
  1230                                 [global iemAImpl_adc_u8_locked]
  1231                                 iemAImpl_adc_u8_locked:
  1232 000001F5 53                      push ebx
  1233 000001F6 8B5C2408                mov ebx, [esp + 4 + 4]
  1234 000001FA 57                      push edi
  1235                                 
  1236 000001FB 9C                      pushf
  1237 000001FC 8B03                    mov eax, [ebx]
  1238 000001FE 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1239 00000205 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1240 0000020A 090424                  or [esp], eax
  1241 0000020D 9D                      popf
  1242                                 
  1243 0000020E F01011                  lock adc byte [ecx], dl
  1244 00000211 9C                      pushf
  1245 00000212 5F                      pop edi
  1246 00000213 8B03                    mov eax, [ebx]
  1247 00000215 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1248 0000021A 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1249 00000220 09F8                    or eax, edi
  1250 00000222 8903                    mov [ebx], eax
  1251 00000224 5F                      pop edi
  1252 00000225 5B                      pop ebx
  1253 00000226 C20400                  ret 4
  1254                                 [global iemAImpl_adc_u8_locked_EndProc:function hidden]
  1255                                 iemAImpl_adc_u8_locked_EndProc:
  1256                                 [size iemAImpl_adc_u8_locked iemAImpl_adc_u8_locked_EndProc - iemAImpl_adc_u8_locked]
  1257                                 [size iemAImpl_adc_u8_locked_EndProc 0]
  1258 00000229 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1259                                 
  1260                                 [global iemAImpl_adc_u16_locked]
  1261                                 iemAImpl_adc_u16_locked:
  1262 0000022D 53                      push ebx
  1263 0000022E 8B5C2408                mov ebx, [esp + 4 + 4]
  1264 00000232 57                      push edi
  1265                                 
  1266 00000233 9C                      pushf
  1267 00000234 8B03                    mov eax, [ebx]
  1268 00000236 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1269 0000023D 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1270 00000242 090424                  or [esp], eax
  1271 00000245 9D                      popf
  1272                                 
  1273 00000246 66F01111                lock adc word [ecx], dx
  1274 0000024A 9C                      pushf
  1275 0000024B 5F                      pop edi
  1276 0000024C 8B03                    mov eax, [ebx]
  1277 0000024E 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1278 00000253 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1279 00000259 09F8                    or eax, edi
  1280 0000025B 8903                    mov [ebx], eax
  1281 0000025D 5F                      pop edi
  1282 0000025E 5B                      pop ebx
  1283 0000025F C20400                  ret 4
  1284                                 [global iemAImpl_adc_u16_locked_EndProc:function hidden]
  1285                                 iemAImpl_adc_u16_locked_EndProc:
  1286                                 [size iemAImpl_adc_u16_locked iemAImpl_adc_u16_locked_EndProc - iemAImpl_adc_u16_locked]
  1287                                 [size iemAImpl_adc_u16_locked_EndProc 0]
  1288 00000262 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1289                                 
  1290                                 [global iemAImpl_adc_u32_locked]
  1291                                 iemAImpl_adc_u32_locked:
  1292 00000266 53                      push ebx
  1293 00000267 8B5C2408                mov ebx, [esp + 4 + 4]
  1294 0000026B 57                      push edi
  1295                                 
  1296 0000026C 9C                      pushf
  1297 0000026D 8B03                    mov eax, [ebx]
  1298 0000026F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1299 00000276 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1300 0000027B 090424                  or [esp], eax
  1301 0000027E 9D                      popf
  1302                                 
  1303 0000027F F01111                  lock adc dword [ecx], edx
  1304 00000282 9C                      pushf
  1305 00000283 5F                      pop edi
  1306 00000284 8B03                    mov eax, [ebx]
  1307 00000286 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1308 0000028B 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1309 00000291 09F8                    or eax, edi
  1310 00000293 8903                    mov [ebx], eax
  1311 00000295 5F                      pop edi
  1312 00000296 5B                      pop ebx
  1313 00000297 C20400                  ret 4
  1314                                 [global iemAImpl_adc_u32_locked_EndProc:function hidden]
  1315                                 iemAImpl_adc_u32_locked_EndProc:
  1316                                 [size iemAImpl_adc_u32_locked iemAImpl_adc_u32_locked_EndProc - iemAImpl_adc_u32_locked]
  1317                                 [size iemAImpl_adc_u32_locked_EndProc 0]
  1318 0000029A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1319                                 
  1320                                 %line 400+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1321                                 [section .text]
  1322                                 %line 400+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1323                                 [global iemAImpl_sub_u8]
  1324                                 iemAImpl_sub_u8:
  1325 0000029E 53                      push ebx
  1326 0000029F 8B5C2408                mov ebx, [esp + 4 + 4]
  1327 000002A3 57                      push edi
  1328                                 
  1329 000002A4 9C                      pushf
  1330 000002A5 8B03                    mov eax, [ebx]
  1331 000002A7 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1332 000002AE 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1333 000002B3 090424                  or [esp], eax
  1334 000002B6 9D                      popf
  1335                                 
  1336 000002B7 2811                    sub byte [ecx], dl
  1337 000002B9 9C                      pushf
  1338 000002BA 5F                      pop edi
  1339 000002BB 8B03                    mov eax, [ebx]
  1340 000002BD 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1341 000002C2 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1342 000002C8 09F8                    or eax, edi
  1343 000002CA 8903                    mov [ebx], eax
  1344 000002CC 5F                      pop edi
  1345 000002CD 5B                      pop ebx
  1346 000002CE C20400                  ret 4
  1347                                 [global iemAImpl_sub_u8_EndProc:function hidden]
  1348                                 iemAImpl_sub_u8_EndProc:
  1349                                 [size iemAImpl_sub_u8 iemAImpl_sub_u8_EndProc - iemAImpl_sub_u8]
  1350                                 [size iemAImpl_sub_u8_EndProc 0]
  1351 000002D1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1352                                 
  1353                                 [global iemAImpl_sub_u16]
  1354                                 iemAImpl_sub_u16:
  1355 000002D5 53                      push ebx
  1356 000002D6 8B5C2408                mov ebx, [esp + 4 + 4]
  1357 000002DA 57                      push edi
  1358                                 
  1359 000002DB 9C                      pushf
  1360 000002DC 8B03                    mov eax, [ebx]
  1361 000002DE 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1362 000002E5 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1363 000002EA 090424                  or [esp], eax
  1364 000002ED 9D                      popf
  1365                                 
  1366 000002EE 662911                  sub word [ecx], dx
  1367 000002F1 9C                      pushf
  1368 000002F2 5F                      pop edi
  1369 000002F3 8B03                    mov eax, [ebx]
  1370 000002F5 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1371 000002FA 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1372 00000300 09F8                    or eax, edi
  1373 00000302 8903                    mov [ebx], eax
  1374 00000304 5F                      pop edi
  1375 00000305 5B                      pop ebx
  1376 00000306 C20400                  ret 4
  1377                                 [global iemAImpl_sub_u16_EndProc:function hidden]
  1378                                 iemAImpl_sub_u16_EndProc:
  1379                                 [size iemAImpl_sub_u16 iemAImpl_sub_u16_EndProc - iemAImpl_sub_u16]
  1380                                 [size iemAImpl_sub_u16_EndProc 0]
  1381 00000309 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1382                                 
  1383                                 [global iemAImpl_sub_u32]
  1384                                 iemAImpl_sub_u32:
  1385 0000030D 53                      push ebx
  1386 0000030E 8B5C2408                mov ebx, [esp + 4 + 4]
  1387 00000312 57                      push edi
  1388                                 
  1389 00000313 9C                      pushf
  1390 00000314 8B03                    mov eax, [ebx]
  1391 00000316 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1392 0000031D 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1393 00000322 090424                  or [esp], eax
  1394 00000325 9D                      popf
  1395                                 
  1396 00000326 2911                    sub dword [ecx], edx
  1397 00000328 9C                      pushf
  1398 00000329 5F                      pop edi
  1399 0000032A 8B03                    mov eax, [ebx]
  1400 0000032C 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1401 00000331 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1402 00000337 09F8                    or eax, edi
  1403 00000339 8903                    mov [ebx], eax
  1404 0000033B 5F                      pop edi
  1405 0000033C 5B                      pop ebx
  1406 0000033D C20400                  ret 4
  1407                                 [global iemAImpl_sub_u32_EndProc:function hidden]
  1408                                 iemAImpl_sub_u32_EndProc:
  1409                                 [size iemAImpl_sub_u32 iemAImpl_sub_u32_EndProc - iemAImpl_sub_u32]
  1410                                 [size iemAImpl_sub_u32_EndProc 0]
  1411 00000340 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1412                                 
  1413                                 
  1414                                 
  1415                                 [global iemAImpl_sub_u8_locked]
  1416                                 iemAImpl_sub_u8_locked:
  1417 00000344 53                      push ebx
  1418 00000345 8B5C2408                mov ebx, [esp + 4 + 4]
  1419 00000349 57                      push edi
  1420                                 
  1421 0000034A 9C                      pushf
  1422 0000034B 8B03                    mov eax, [ebx]
  1423 0000034D 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1424 00000354 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1425 00000359 090424                  or [esp], eax
  1426 0000035C 9D                      popf
  1427                                 
  1428 0000035D F02811                  lock sub byte [ecx], dl
  1429 00000360 9C                      pushf
  1430 00000361 5F                      pop edi
  1431 00000362 8B03                    mov eax, [ebx]
  1432 00000364 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1433 00000369 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1434 0000036F 09F8                    or eax, edi
  1435 00000371 8903                    mov [ebx], eax
  1436 00000373 5F                      pop edi
  1437 00000374 5B                      pop ebx
  1438 00000375 C20400                  ret 4
  1439                                 [global iemAImpl_sub_u8_locked_EndProc:function hidden]
  1440                                 iemAImpl_sub_u8_locked_EndProc:
  1441                                 [size iemAImpl_sub_u8_locked iemAImpl_sub_u8_locked_EndProc - iemAImpl_sub_u8_locked]
  1442                                 [size iemAImpl_sub_u8_locked_EndProc 0]
  1443 00000378 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1444                                 
  1445                                 [global iemAImpl_sub_u16_locked]
  1446                                 iemAImpl_sub_u16_locked:
  1447 0000037C 53                      push ebx
  1448 0000037D 8B5C2408                mov ebx, [esp + 4 + 4]
  1449 00000381 57                      push edi
  1450                                 
  1451 00000382 9C                      pushf
  1452 00000383 8B03                    mov eax, [ebx]
  1453 00000385 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1454 0000038C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1455 00000391 090424                  or [esp], eax
  1456 00000394 9D                      popf
  1457                                 
  1458 00000395 66F02911                lock sub word [ecx], dx
  1459 00000399 9C                      pushf
  1460 0000039A 5F                      pop edi
  1461 0000039B 8B03                    mov eax, [ebx]
  1462 0000039D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1463 000003A2 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1464 000003A8 09F8                    or eax, edi
  1465 000003AA 8903                    mov [ebx], eax
  1466 000003AC 5F                      pop edi
  1467 000003AD 5B                      pop ebx
  1468 000003AE C20400                  ret 4
  1469                                 [global iemAImpl_sub_u16_locked_EndProc:function hidden]
  1470                                 iemAImpl_sub_u16_locked_EndProc:
  1471                                 [size iemAImpl_sub_u16_locked iemAImpl_sub_u16_locked_EndProc - iemAImpl_sub_u16_locked]
  1472                                 [size iemAImpl_sub_u16_locked_EndProc 0]
  1473 000003B1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1474                                 
  1475                                 [global iemAImpl_sub_u32_locked]
  1476                                 iemAImpl_sub_u32_locked:
  1477 000003B5 53                      push ebx
  1478 000003B6 8B5C2408                mov ebx, [esp + 4 + 4]
  1479 000003BA 57                      push edi
  1480                                 
  1481 000003BB 9C                      pushf
  1482 000003BC 8B03                    mov eax, [ebx]
  1483 000003BE 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1484 000003C5 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1485 000003CA 090424                  or [esp], eax
  1486 000003CD 9D                      popf
  1487                                 
  1488 000003CE F02911                  lock sub dword [ecx], edx
  1489 000003D1 9C                      pushf
  1490 000003D2 5F                      pop edi
  1491 000003D3 8B03                    mov eax, [ebx]
  1492 000003D5 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1493 000003DA 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1494 000003E0 09F8                    or eax, edi
  1495 000003E2 8903                    mov [ebx], eax
  1496 000003E4 5F                      pop edi
  1497 000003E5 5B                      pop ebx
  1498 000003E6 C20400                  ret 4
  1499                                 [global iemAImpl_sub_u32_locked_EndProc:function hidden]
  1500                                 iemAImpl_sub_u32_locked_EndProc:
  1501                                 [size iemAImpl_sub_u32_locked iemAImpl_sub_u32_locked_EndProc - iemAImpl_sub_u32_locked]
  1502                                 [size iemAImpl_sub_u32_locked_EndProc 0]
  1503 000003E9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1504                                 
  1505                                 %line 401+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1506                                 [section .text]
  1507                                 %line 401+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1508                                 [global iemAImpl_sbb_u8]
  1509                                 iemAImpl_sbb_u8:
  1510 000003ED 53                      push ebx
  1511 000003EE 8B5C2408                mov ebx, [esp + 4 + 4]
  1512 000003F2 57                      push edi
  1513                                 
  1514 000003F3 9C                      pushf
  1515 000003F4 8B03                    mov eax, [ebx]
  1516 000003F6 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1517 000003FD 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1518 00000402 090424                  or [esp], eax
  1519 00000405 9D                      popf
  1520                                 
  1521 00000406 1811                    sbb byte [ecx], dl
  1522 00000408 9C                      pushf
  1523 00000409 5F                      pop edi
  1524 0000040A 8B03                    mov eax, [ebx]
  1525 0000040C 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1526 00000411 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1527 00000417 09F8                    or eax, edi
  1528 00000419 8903                    mov [ebx], eax
  1529 0000041B 5F                      pop edi
  1530 0000041C 5B                      pop ebx
  1531 0000041D C20400                  ret 4
  1532                                 [global iemAImpl_sbb_u8_EndProc:function hidden]
  1533                                 iemAImpl_sbb_u8_EndProc:
  1534                                 [size iemAImpl_sbb_u8 iemAImpl_sbb_u8_EndProc - iemAImpl_sbb_u8]
  1535                                 [size iemAImpl_sbb_u8_EndProc 0]
  1536 00000420 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1537                                 
  1538                                 [global iemAImpl_sbb_u16]
  1539                                 iemAImpl_sbb_u16:
  1540 00000424 53                      push ebx
  1541 00000425 8B5C2408                mov ebx, [esp + 4 + 4]
  1542 00000429 57                      push edi
  1543                                 
  1544 0000042A 9C                      pushf
  1545 0000042B 8B03                    mov eax, [ebx]
  1546 0000042D 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1547 00000434 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1548 00000439 090424                  or [esp], eax
  1549 0000043C 9D                      popf
  1550                                 
  1551 0000043D 661911                  sbb word [ecx], dx
  1552 00000440 9C                      pushf
  1553 00000441 5F                      pop edi
  1554 00000442 8B03                    mov eax, [ebx]
  1555 00000444 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1556 00000449 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1557 0000044F 09F8                    or eax, edi
  1558 00000451 8903                    mov [ebx], eax
  1559 00000453 5F                      pop edi
  1560 00000454 5B                      pop ebx
  1561 00000455 C20400                  ret 4
  1562                                 [global iemAImpl_sbb_u16_EndProc:function hidden]
  1563                                 iemAImpl_sbb_u16_EndProc:
  1564                                 [size iemAImpl_sbb_u16 iemAImpl_sbb_u16_EndProc - iemAImpl_sbb_u16]
  1565                                 [size iemAImpl_sbb_u16_EndProc 0]
  1566 00000458 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1567                                 
  1568                                 [global iemAImpl_sbb_u32]
  1569                                 iemAImpl_sbb_u32:
  1570 0000045C 53                      push ebx
  1571 0000045D 8B5C2408                mov ebx, [esp + 4 + 4]
  1572 00000461 57                      push edi
  1573                                 
  1574 00000462 9C                      pushf
  1575 00000463 8B03                    mov eax, [ebx]
  1576 00000465 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1577 0000046C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1578 00000471 090424                  or [esp], eax
  1579 00000474 9D                      popf
  1580                                 
  1581 00000475 1911                    sbb dword [ecx], edx
  1582 00000477 9C                      pushf
  1583 00000478 5F                      pop edi
  1584 00000479 8B03                    mov eax, [ebx]
  1585 0000047B 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1586 00000480 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1587 00000486 09F8                    or eax, edi
  1588 00000488 8903                    mov [ebx], eax
  1589 0000048A 5F                      pop edi
  1590 0000048B 5B                      pop ebx
  1591 0000048C C20400                  ret 4
  1592                                 [global iemAImpl_sbb_u32_EndProc:function hidden]
  1593                                 iemAImpl_sbb_u32_EndProc:
  1594                                 [size iemAImpl_sbb_u32 iemAImpl_sbb_u32_EndProc - iemAImpl_sbb_u32]
  1595                                 [size iemAImpl_sbb_u32_EndProc 0]
  1596 0000048F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1597                                 
  1598                                 
  1599                                 
  1600                                 [global iemAImpl_sbb_u8_locked]
  1601                                 iemAImpl_sbb_u8_locked:
  1602 00000493 53                      push ebx
  1603 00000494 8B5C2408                mov ebx, [esp + 4 + 4]
  1604 00000498 57                      push edi
  1605                                 
  1606 00000499 9C                      pushf
  1607 0000049A 8B03                    mov eax, [ebx]
  1608 0000049C 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1609 000004A3 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1610 000004A8 090424                  or [esp], eax
  1611 000004AB 9D                      popf
  1612                                 
  1613 000004AC F01811                  lock sbb byte [ecx], dl
  1614 000004AF 9C                      pushf
  1615 000004B0 5F                      pop edi
  1616 000004B1 8B03                    mov eax, [ebx]
  1617 000004B3 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1618 000004B8 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1619 000004BE 09F8                    or eax, edi
  1620 000004C0 8903                    mov [ebx], eax
  1621 000004C2 5F                      pop edi
  1622 000004C3 5B                      pop ebx
  1623 000004C4 C20400                  ret 4
  1624                                 [global iemAImpl_sbb_u8_locked_EndProc:function hidden]
  1625                                 iemAImpl_sbb_u8_locked_EndProc:
  1626                                 [size iemAImpl_sbb_u8_locked iemAImpl_sbb_u8_locked_EndProc - iemAImpl_sbb_u8_locked]
  1627                                 [size iemAImpl_sbb_u8_locked_EndProc 0]
  1628 000004C7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1629                                 
  1630                                 [global iemAImpl_sbb_u16_locked]
  1631                                 iemAImpl_sbb_u16_locked:
  1632 000004CB 53                      push ebx
  1633 000004CC 8B5C2408                mov ebx, [esp + 4 + 4]
  1634 000004D0 57                      push edi
  1635                                 
  1636 000004D1 9C                      pushf
  1637 000004D2 8B03                    mov eax, [ebx]
  1638 000004D4 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1639 000004DB 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1640 000004E0 090424                  or [esp], eax
  1641 000004E3 9D                      popf
  1642                                 
  1643 000004E4 66F01911                lock sbb word [ecx], dx
  1644 000004E8 9C                      pushf
  1645 000004E9 5F                      pop edi
  1646 000004EA 8B03                    mov eax, [ebx]
  1647 000004EC 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1648 000004F1 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1649 000004F7 09F8                    or eax, edi
  1650 000004F9 8903                    mov [ebx], eax
  1651 000004FB 5F                      pop edi
  1652 000004FC 5B                      pop ebx
  1653 000004FD C20400                  ret 4
  1654                                 [global iemAImpl_sbb_u16_locked_EndProc:function hidden]
  1655                                 iemAImpl_sbb_u16_locked_EndProc:
  1656                                 [size iemAImpl_sbb_u16_locked iemAImpl_sbb_u16_locked_EndProc - iemAImpl_sbb_u16_locked]
  1657                                 [size iemAImpl_sbb_u16_locked_EndProc 0]
  1658 00000500 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1659                                 
  1660                                 [global iemAImpl_sbb_u32_locked]
  1661                                 iemAImpl_sbb_u32_locked:
  1662 00000504 53                      push ebx
  1663 00000505 8B5C2408                mov ebx, [esp + 4 + 4]
  1664 00000509 57                      push edi
  1665                                 
  1666 0000050A 9C                      pushf
  1667 0000050B 8B03                    mov eax, [ebx]
  1668 0000050D 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1669 00000514 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1670 00000519 090424                  or [esp], eax
  1671 0000051C 9D                      popf
  1672                                 
  1673 0000051D F01911                  lock sbb dword [ecx], edx
  1674 00000520 9C                      pushf
  1675 00000521 5F                      pop edi
  1676 00000522 8B03                    mov eax, [ebx]
  1677 00000524 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1678 00000529 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1679 0000052F 09F8                    or eax, edi
  1680 00000531 8903                    mov [ebx], eax
  1681 00000533 5F                      pop edi
  1682 00000534 5B                      pop ebx
  1683 00000535 C20400                  ret 4
  1684                                 [global iemAImpl_sbb_u32_locked_EndProc:function hidden]
  1685                                 iemAImpl_sbb_u32_locked_EndProc:
  1686                                 [size iemAImpl_sbb_u32_locked iemAImpl_sbb_u32_locked_EndProc - iemAImpl_sbb_u32_locked]
  1687                                 [size iemAImpl_sbb_u32_locked_EndProc 0]
  1688 00000538 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1689                                 
  1690                                 %line 402+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1691                                 [section .text]
  1692                                 %line 402+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1693                                 [global iemAImpl_or_u8]
  1694                                 iemAImpl_or_u8:
  1695 0000053C 53                      push ebx
  1696 0000053D 8B5C2408                mov ebx, [esp + 4 + 4]
  1697 00000541 57                      push edi
  1698                                 
  1699 00000542 9C                      pushf
  1700 00000543 8B03                    mov eax, [ebx]
  1701 00000545 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1702 0000054C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1703 00000551 090424                  or [esp], eax
  1704 00000554 9D                      popf
  1705                                 
  1706 00000555 0811                    or byte [ecx], dl
  1707 00000557 9C                      pushf
  1708 00000558 5F                      pop edi
  1709 00000559 8B03                    mov eax, [ebx]
  1710 0000055B 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1711 00000560 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1712 00000566 09F8                    or eax, edi
  1713 00000568 8903                    mov [ebx], eax
  1714 0000056A 5F                      pop edi
  1715 0000056B 5B                      pop ebx
  1716 0000056C C20400                  ret 4
  1717                                 [global iemAImpl_or_u8_EndProc:function hidden]
  1718                                 iemAImpl_or_u8_EndProc:
  1719                                 [size iemAImpl_or_u8 iemAImpl_or_u8_EndProc - iemAImpl_or_u8]
  1720                                 [size iemAImpl_or_u8_EndProc 0]
  1721 0000056F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1722                                 
  1723                                 [global iemAImpl_or_u16]
  1724                                 iemAImpl_or_u16:
  1725 00000573 53                      push ebx
  1726 00000574 8B5C2408                mov ebx, [esp + 4 + 4]
  1727 00000578 57                      push edi
  1728                                 
  1729 00000579 9C                      pushf
  1730 0000057A 8B03                    mov eax, [ebx]
  1731 0000057C 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1732 00000583 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1733 00000588 090424                  or [esp], eax
  1734 0000058B 9D                      popf
  1735                                 
  1736 0000058C 660911                  or word [ecx], dx
  1737 0000058F 9C                      pushf
  1738 00000590 5F                      pop edi
  1739 00000591 8B03                    mov eax, [ebx]
  1740 00000593 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1741 00000598 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1742 0000059E 09F8                    or eax, edi
  1743 000005A0 8903                    mov [ebx], eax
  1744 000005A2 5F                      pop edi
  1745 000005A3 5B                      pop ebx
  1746 000005A4 C20400                  ret 4
  1747                                 [global iemAImpl_or_u16_EndProc:function hidden]
  1748                                 iemAImpl_or_u16_EndProc:
  1749                                 [size iemAImpl_or_u16 iemAImpl_or_u16_EndProc - iemAImpl_or_u16]
  1750                                 [size iemAImpl_or_u16_EndProc 0]
  1751 000005A7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1752                                 
  1753                                 [global iemAImpl_or_u32]
  1754                                 iemAImpl_or_u32:
  1755 000005AB 53                      push ebx
  1756 000005AC 8B5C2408                mov ebx, [esp + 4 + 4]
  1757 000005B0 57                      push edi
  1758                                 
  1759 000005B1 9C                      pushf
  1760 000005B2 8B03                    mov eax, [ebx]
  1761 000005B4 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1762 000005BB 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1763 000005C0 090424                  or [esp], eax
  1764 000005C3 9D                      popf
  1765                                 
  1766 000005C4 0911                    or dword [ecx], edx
  1767 000005C6 9C                      pushf
  1768 000005C7 5F                      pop edi
  1769 000005C8 8B03                    mov eax, [ebx]
  1770 000005CA 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1771 000005CF 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1772 000005D5 09F8                    or eax, edi
  1773 000005D7 8903                    mov [ebx], eax
  1774 000005D9 5F                      pop edi
  1775 000005DA 5B                      pop ebx
  1776 000005DB C20400                  ret 4
  1777                                 [global iemAImpl_or_u32_EndProc:function hidden]
  1778                                 iemAImpl_or_u32_EndProc:
  1779                                 [size iemAImpl_or_u32 iemAImpl_or_u32_EndProc - iemAImpl_or_u32]
  1780                                 [size iemAImpl_or_u32_EndProc 0]
  1781 000005DE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1782                                 
  1783                                 
  1784                                 
  1785                                 [global iemAImpl_or_u8_locked]
  1786                                 iemAImpl_or_u8_locked:
  1787 000005E2 53                      push ebx
  1788 000005E3 8B5C2408                mov ebx, [esp + 4 + 4]
  1789 000005E7 57                      push edi
  1790                                 
  1791 000005E8 9C                      pushf
  1792 000005E9 8B03                    mov eax, [ebx]
  1793 000005EB 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1794 000005F2 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1795 000005F7 090424                  or [esp], eax
  1796 000005FA 9D                      popf
  1797                                 
  1798 000005FB F00811                  lock or byte [ecx], dl
  1799 000005FE 9C                      pushf
  1800 000005FF 5F                      pop edi
  1801 00000600 8B03                    mov eax, [ebx]
  1802 00000602 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1803 00000607 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1804 0000060D 09F8                    or eax, edi
  1805 0000060F 8903                    mov [ebx], eax
  1806 00000611 5F                      pop edi
  1807 00000612 5B                      pop ebx
  1808 00000613 C20400                  ret 4
  1809                                 [global iemAImpl_or_u8_locked_EndProc:function hidden]
  1810                                 iemAImpl_or_u8_locked_EndProc:
  1811                                 [size iemAImpl_or_u8_locked iemAImpl_or_u8_locked_EndProc - iemAImpl_or_u8_locked]
  1812                                 [size iemAImpl_or_u8_locked_EndProc 0]
  1813 00000616 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1814                                 
  1815                                 [global iemAImpl_or_u16_locked]
  1816                                 iemAImpl_or_u16_locked:
  1817 0000061A 53                      push ebx
  1818 0000061B 8B5C2408                mov ebx, [esp + 4 + 4]
  1819 0000061F 57                      push edi
  1820                                 
  1821 00000620 9C                      pushf
  1822 00000621 8B03                    mov eax, [ebx]
  1823 00000623 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1824 0000062A 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1825 0000062F 090424                  or [esp], eax
  1826 00000632 9D                      popf
  1827                                 
  1828 00000633 66F00911                lock or word [ecx], dx
  1829 00000637 9C                      pushf
  1830 00000638 5F                      pop edi
  1831 00000639 8B03                    mov eax, [ebx]
  1832 0000063B 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1833 00000640 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1834 00000646 09F8                    or eax, edi
  1835 00000648 8903                    mov [ebx], eax
  1836 0000064A 5F                      pop edi
  1837 0000064B 5B                      pop ebx
  1838 0000064C C20400                  ret 4
  1839                                 [global iemAImpl_or_u16_locked_EndProc:function hidden]
  1840                                 iemAImpl_or_u16_locked_EndProc:
  1841                                 [size iemAImpl_or_u16_locked iemAImpl_or_u16_locked_EndProc - iemAImpl_or_u16_locked]
  1842                                 [size iemAImpl_or_u16_locked_EndProc 0]
  1843 0000064F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1844                                 
  1845                                 [global iemAImpl_or_u32_locked]
  1846                                 iemAImpl_or_u32_locked:
  1847 00000653 53                      push ebx
  1848 00000654 8B5C2408                mov ebx, [esp + 4 + 4]
  1849 00000658 57                      push edi
  1850                                 
  1851 00000659 9C                      pushf
  1852 0000065A 8B03                    mov eax, [ebx]
  1853 0000065C 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1854 00000663 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1855 00000668 090424                  or [esp], eax
  1856 0000066B 9D                      popf
  1857                                 
  1858 0000066C F00911                  lock or dword [ecx], edx
  1859 0000066F 9C                      pushf
  1860 00000670 5F                      pop edi
  1861 00000671 8B03                    mov eax, [ebx]
  1862 00000673 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1863 00000678 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1864 0000067E 09F8                    or eax, edi
  1865 00000680 8903                    mov [ebx], eax
  1866 00000682 5F                      pop edi
  1867 00000683 5B                      pop ebx
  1868 00000684 C20400                  ret 4
  1869                                 [global iemAImpl_or_u32_locked_EndProc:function hidden]
  1870                                 iemAImpl_or_u32_locked_EndProc:
  1871                                 [size iemAImpl_or_u32_locked iemAImpl_or_u32_locked_EndProc - iemAImpl_or_u32_locked]
  1872                                 [size iemAImpl_or_u32_locked_EndProc 0]
  1873 00000687 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1874                                 
  1875                                 %line 403+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1876                                 [section .text]
  1877                                 %line 403+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1878                                 [global iemAImpl_xor_u8]
  1879                                 iemAImpl_xor_u8:
  1880 0000068B 53                      push ebx
  1881 0000068C 8B5C2408                mov ebx, [esp + 4 + 4]
  1882 00000690 57                      push edi
  1883                                 
  1884 00000691 9C                      pushf
  1885 00000692 8B03                    mov eax, [ebx]
  1886 00000694 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1887 0000069B 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1888 000006A0 090424                  or [esp], eax
  1889 000006A3 9D                      popf
  1890                                 
  1891 000006A4 3011                    xor byte [ecx], dl
  1892 000006A6 9C                      pushf
  1893 000006A7 5F                      pop edi
  1894 000006A8 8B03                    mov eax, [ebx]
  1895 000006AA 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1896 000006AF 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1897 000006B5 09F8                    or eax, edi
  1898 000006B7 8903                    mov [ebx], eax
  1899 000006B9 5F                      pop edi
  1900 000006BA 5B                      pop ebx
  1901 000006BB C20400                  ret 4
  1902                                 [global iemAImpl_xor_u8_EndProc:function hidden]
  1903                                 iemAImpl_xor_u8_EndProc:
  1904                                 [size iemAImpl_xor_u8 iemAImpl_xor_u8_EndProc - iemAImpl_xor_u8]
  1905                                 [size iemAImpl_xor_u8_EndProc 0]
  1906 000006BE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1907                                 
  1908                                 [global iemAImpl_xor_u16]
  1909                                 iemAImpl_xor_u16:
  1910 000006C2 53                      push ebx
  1911 000006C3 8B5C2408                mov ebx, [esp + 4 + 4]
  1912 000006C7 57                      push edi
  1913                                 
  1914 000006C8 9C                      pushf
  1915 000006C9 8B03                    mov eax, [ebx]
  1916 000006CB 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1917 000006D2 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1918 000006D7 090424                  or [esp], eax
  1919 000006DA 9D                      popf
  1920                                 
  1921 000006DB 663111                  xor word [ecx], dx
  1922 000006DE 9C                      pushf
  1923 000006DF 5F                      pop edi
  1924 000006E0 8B03                    mov eax, [ebx]
  1925 000006E2 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1926 000006E7 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1927 000006ED 09F8                    or eax, edi
  1928 000006EF 8903                    mov [ebx], eax
  1929 000006F1 5F                      pop edi
  1930 000006F2 5B                      pop ebx
  1931 000006F3 C20400                  ret 4
  1932                                 [global iemAImpl_xor_u16_EndProc:function hidden]
  1933                                 iemAImpl_xor_u16_EndProc:
  1934                                 [size iemAImpl_xor_u16 iemAImpl_xor_u16_EndProc - iemAImpl_xor_u16]
  1935                                 [size iemAImpl_xor_u16_EndProc 0]
  1936 000006F6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1937                                 
  1938                                 [global iemAImpl_xor_u32]
  1939                                 iemAImpl_xor_u32:
  1940 000006FA 53                      push ebx
  1941 000006FB 8B5C2408                mov ebx, [esp + 4 + 4]
  1942 000006FF 57                      push edi
  1943                                 
  1944 00000700 9C                      pushf
  1945 00000701 8B03                    mov eax, [ebx]
  1946 00000703 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1947 0000070A 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1948 0000070F 090424                  or [esp], eax
  1949 00000712 9D                      popf
  1950                                 
  1951 00000713 3111                    xor dword [ecx], edx
  1952 00000715 9C                      pushf
  1953 00000716 5F                      pop edi
  1954 00000717 8B03                    mov eax, [ebx]
  1955 00000719 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1956 0000071E 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1957 00000724 09F8                    or eax, edi
  1958 00000726 8903                    mov [ebx], eax
  1959 00000728 5F                      pop edi
  1960 00000729 5B                      pop ebx
  1961 0000072A C20400                  ret 4
  1962                                 [global iemAImpl_xor_u32_EndProc:function hidden]
  1963                                 iemAImpl_xor_u32_EndProc:
  1964                                 [size iemAImpl_xor_u32 iemAImpl_xor_u32_EndProc - iemAImpl_xor_u32]
  1965                                 [size iemAImpl_xor_u32_EndProc 0]
  1966 0000072D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1967                                 
  1968                                 
  1969                                 
  1970                                 [global iemAImpl_xor_u8_locked]
  1971                                 iemAImpl_xor_u8_locked:
  1972 00000731 53                      push ebx
  1973 00000732 8B5C2408                mov ebx, [esp + 4 + 4]
  1974 00000736 57                      push edi
  1975                                 
  1976 00000737 9C                      pushf
  1977 00000738 8B03                    mov eax, [ebx]
  1978 0000073A 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1979 00000741 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1980 00000746 090424                  or [esp], eax
  1981 00000749 9D                      popf
  1982                                 
  1983 0000074A F03011                  lock xor byte [ecx], dl
  1984 0000074D 9C                      pushf
  1985 0000074E 5F                      pop edi
  1986 0000074F 8B03                    mov eax, [ebx]
  1987 00000751 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1988 00000756 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1989 0000075C 09F8                    or eax, edi
  1990 0000075E 8903                    mov [ebx], eax
  1991 00000760 5F                      pop edi
  1992 00000761 5B                      pop ebx
  1993 00000762 C20400                  ret 4
  1994                                 [global iemAImpl_xor_u8_locked_EndProc:function hidden]
  1995                                 iemAImpl_xor_u8_locked_EndProc:
  1996                                 [size iemAImpl_xor_u8_locked iemAImpl_xor_u8_locked_EndProc - iemAImpl_xor_u8_locked]
  1997                                 [size iemAImpl_xor_u8_locked_EndProc 0]
  1998 00000765 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1999                                 
  2000                                 [global iemAImpl_xor_u16_locked]
  2001                                 iemAImpl_xor_u16_locked:
  2002 00000769 53                      push ebx
  2003 0000076A 8B5C2408                mov ebx, [esp + 4 + 4]
  2004 0000076E 57                      push edi
  2005                                 
  2006 0000076F 9C                      pushf
  2007 00000770 8B03                    mov eax, [ebx]
  2008 00000772 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2009 00000779 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2010 0000077E 090424                  or [esp], eax
  2011 00000781 9D                      popf
  2012                                 
  2013 00000782 66F03111                lock xor word [ecx], dx
  2014 00000786 9C                      pushf
  2015 00000787 5F                      pop edi
  2016 00000788 8B03                    mov eax, [ebx]
  2017 0000078A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2018 0000078F 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2019 00000795 09F8                    or eax, edi
  2020 00000797 8903                    mov [ebx], eax
  2021 00000799 5F                      pop edi
  2022 0000079A 5B                      pop ebx
  2023 0000079B C20400                  ret 4
  2024                                 [global iemAImpl_xor_u16_locked_EndProc:function hidden]
  2025                                 iemAImpl_xor_u16_locked_EndProc:
  2026                                 [size iemAImpl_xor_u16_locked iemAImpl_xor_u16_locked_EndProc - iemAImpl_xor_u16_locked]
  2027                                 [size iemAImpl_xor_u16_locked_EndProc 0]
  2028 0000079E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2029                                 
  2030                                 [global iemAImpl_xor_u32_locked]
  2031                                 iemAImpl_xor_u32_locked:
  2032 000007A2 53                      push ebx
  2033 000007A3 8B5C2408                mov ebx, [esp + 4 + 4]
  2034 000007A7 57                      push edi
  2035                                 
  2036 000007A8 9C                      pushf
  2037 000007A9 8B03                    mov eax, [ebx]
  2038 000007AB 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2039 000007B2 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2040 000007B7 090424                  or [esp], eax
  2041 000007BA 9D                      popf
  2042                                 
  2043 000007BB F03111                  lock xor dword [ecx], edx
  2044 000007BE 9C                      pushf
  2045 000007BF 5F                      pop edi
  2046 000007C0 8B03                    mov eax, [ebx]
  2047 000007C2 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2048 000007C7 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2049 000007CD 09F8                    or eax, edi
  2050 000007CF 8903                    mov [ebx], eax
  2051 000007D1 5F                      pop edi
  2052 000007D2 5B                      pop ebx
  2053 000007D3 C20400                  ret 4
  2054                                 [global iemAImpl_xor_u32_locked_EndProc:function hidden]
  2055                                 iemAImpl_xor_u32_locked_EndProc:
  2056                                 [size iemAImpl_xor_u32_locked iemAImpl_xor_u32_locked_EndProc - iemAImpl_xor_u32_locked]
  2057                                 [size iemAImpl_xor_u32_locked_EndProc 0]
  2058 000007D6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2059                                 
  2060                                 %line 404+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2061                                 [section .text]
  2062                                 %line 404+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2063                                 [global iemAImpl_and_u8]
  2064                                 iemAImpl_and_u8:
  2065 000007DA 53                      push ebx
  2066 000007DB 8B5C2408                mov ebx, [esp + 4 + 4]
  2067 000007DF 57                      push edi
  2068                                 
  2069 000007E0 9C                      pushf
  2070 000007E1 8B03                    mov eax, [ebx]
  2071 000007E3 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2072 000007EA 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2073 000007EF 090424                  or [esp], eax
  2074 000007F2 9D                      popf
  2075                                 
  2076 000007F3 2011                    and byte [ecx], dl
  2077 000007F5 9C                      pushf
  2078 000007F6 5F                      pop edi
  2079 000007F7 8B03                    mov eax, [ebx]
  2080 000007F9 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2081 000007FE 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2082 00000804 09F8                    or eax, edi
  2083 00000806 8903                    mov [ebx], eax
  2084 00000808 5F                      pop edi
  2085 00000809 5B                      pop ebx
  2086 0000080A C20400                  ret 4
  2087                                 [global iemAImpl_and_u8_EndProc:function hidden]
  2088                                 iemAImpl_and_u8_EndProc:
  2089                                 [size iemAImpl_and_u8 iemAImpl_and_u8_EndProc - iemAImpl_and_u8]
  2090                                 [size iemAImpl_and_u8_EndProc 0]
  2091 0000080D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2092                                 
  2093                                 [global iemAImpl_and_u16]
  2094                                 iemAImpl_and_u16:
  2095 00000811 53                      push ebx
  2096 00000812 8B5C2408                mov ebx, [esp + 4 + 4]
  2097 00000816 57                      push edi
  2098                                 
  2099 00000817 9C                      pushf
  2100 00000818 8B03                    mov eax, [ebx]
  2101 0000081A 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2102 00000821 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2103 00000826 090424                  or [esp], eax
  2104 00000829 9D                      popf
  2105                                 
  2106 0000082A 662111                  and word [ecx], dx
  2107 0000082D 9C                      pushf
  2108 0000082E 5F                      pop edi
  2109 0000082F 8B03                    mov eax, [ebx]
  2110 00000831 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2111 00000836 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2112 0000083C 09F8                    or eax, edi
  2113 0000083E 8903                    mov [ebx], eax
  2114 00000840 5F                      pop edi
  2115 00000841 5B                      pop ebx
  2116 00000842 C20400                  ret 4
  2117                                 [global iemAImpl_and_u16_EndProc:function hidden]
  2118                                 iemAImpl_and_u16_EndProc:
  2119                                 [size iemAImpl_and_u16 iemAImpl_and_u16_EndProc - iemAImpl_and_u16]
  2120                                 [size iemAImpl_and_u16_EndProc 0]
  2121 00000845 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2122                                 
  2123                                 [global iemAImpl_and_u32]
  2124                                 iemAImpl_and_u32:
  2125 00000849 53                      push ebx
  2126 0000084A 8B5C2408                mov ebx, [esp + 4 + 4]
  2127 0000084E 57                      push edi
  2128                                 
  2129 0000084F 9C                      pushf
  2130 00000850 8B03                    mov eax, [ebx]
  2131 00000852 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2132 00000859 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2133 0000085E 090424                  or [esp], eax
  2134 00000861 9D                      popf
  2135                                 
  2136 00000862 2111                    and dword [ecx], edx
  2137 00000864 9C                      pushf
  2138 00000865 5F                      pop edi
  2139 00000866 8B03                    mov eax, [ebx]
  2140 00000868 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2141 0000086D 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2142 00000873 09F8                    or eax, edi
  2143 00000875 8903                    mov [ebx], eax
  2144 00000877 5F                      pop edi
  2145 00000878 5B                      pop ebx
  2146 00000879 C20400                  ret 4
  2147                                 [global iemAImpl_and_u32_EndProc:function hidden]
  2148                                 iemAImpl_and_u32_EndProc:
  2149                                 [size iemAImpl_and_u32 iemAImpl_and_u32_EndProc - iemAImpl_and_u32]
  2150                                 [size iemAImpl_and_u32_EndProc 0]
  2151 0000087C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2152                                 
  2153                                 
  2154                                 
  2155                                 [global iemAImpl_and_u8_locked]
  2156                                 iemAImpl_and_u8_locked:
  2157 00000880 53                      push ebx
  2158 00000881 8B5C2408                mov ebx, [esp + 4 + 4]
  2159 00000885 57                      push edi
  2160                                 
  2161 00000886 9C                      pushf
  2162 00000887 8B03                    mov eax, [ebx]
  2163 00000889 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2164 00000890 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2165 00000895 090424                  or [esp], eax
  2166 00000898 9D                      popf
  2167                                 
  2168 00000899 F02011                  lock and byte [ecx], dl
  2169 0000089C 9C                      pushf
  2170 0000089D 5F                      pop edi
  2171 0000089E 8B03                    mov eax, [ebx]
  2172 000008A0 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2173 000008A5 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2174 000008AB 09F8                    or eax, edi
  2175 000008AD 8903                    mov [ebx], eax
  2176 000008AF 5F                      pop edi
  2177 000008B0 5B                      pop ebx
  2178 000008B1 C20400                  ret 4
  2179                                 [global iemAImpl_and_u8_locked_EndProc:function hidden]
  2180                                 iemAImpl_and_u8_locked_EndProc:
  2181                                 [size iemAImpl_and_u8_locked iemAImpl_and_u8_locked_EndProc - iemAImpl_and_u8_locked]
  2182                                 [size iemAImpl_and_u8_locked_EndProc 0]
  2183 000008B4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2184                                 
  2185                                 [global iemAImpl_and_u16_locked]
  2186                                 iemAImpl_and_u16_locked:
  2187 000008B8 53                      push ebx
  2188 000008B9 8B5C2408                mov ebx, [esp + 4 + 4]
  2189 000008BD 57                      push edi
  2190                                 
  2191 000008BE 9C                      pushf
  2192 000008BF 8B03                    mov eax, [ebx]
  2193 000008C1 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2194 000008C8 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2195 000008CD 090424                  or [esp], eax
  2196 000008D0 9D                      popf
  2197                                 
  2198 000008D1 66F02111                lock and word [ecx], dx
  2199 000008D5 9C                      pushf
  2200 000008D6 5F                      pop edi
  2201 000008D7 8B03                    mov eax, [ebx]
  2202 000008D9 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2203 000008DE 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2204 000008E4 09F8                    or eax, edi
  2205 000008E6 8903                    mov [ebx], eax
  2206 000008E8 5F                      pop edi
  2207 000008E9 5B                      pop ebx
  2208 000008EA C20400                  ret 4
  2209                                 [global iemAImpl_and_u16_locked_EndProc:function hidden]
  2210                                 iemAImpl_and_u16_locked_EndProc:
  2211                                 [size iemAImpl_and_u16_locked iemAImpl_and_u16_locked_EndProc - iemAImpl_and_u16_locked]
  2212                                 [size iemAImpl_and_u16_locked_EndProc 0]
  2213 000008ED CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2214                                 
  2215                                 [global iemAImpl_and_u32_locked]
  2216                                 iemAImpl_and_u32_locked:
  2217 000008F1 53                      push ebx
  2218 000008F2 8B5C2408                mov ebx, [esp + 4 + 4]
  2219 000008F6 57                      push edi
  2220                                 
  2221 000008F7 9C                      pushf
  2222 000008F8 8B03                    mov eax, [ebx]
  2223 000008FA 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2224 00000901 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2225 00000906 090424                  or [esp], eax
  2226 00000909 9D                      popf
  2227                                 
  2228 0000090A F02111                  lock and dword [ecx], edx
  2229 0000090D 9C                      pushf
  2230 0000090E 5F                      pop edi
  2231 0000090F 8B03                    mov eax, [ebx]
  2232 00000911 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2233 00000916 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2234 0000091C 09F8                    or eax, edi
  2235 0000091E 8903                    mov [ebx], eax
  2236 00000920 5F                      pop edi
  2237 00000921 5B                      pop ebx
  2238 00000922 C20400                  ret 4
  2239                                 [global iemAImpl_and_u32_locked_EndProc:function hidden]
  2240                                 iemAImpl_and_u32_locked_EndProc:
  2241                                 [size iemAImpl_and_u32_locked iemAImpl_and_u32_locked_EndProc - iemAImpl_and_u32_locked]
  2242                                 [size iemAImpl_and_u32_locked_EndProc 0]
  2243 00000925 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2244                                 
  2245                                 %line 405+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2246                                 [section .text]
  2247                                 %line 405+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2248                                 [global iemAImpl_cmp_u8]
  2249                                 iemAImpl_cmp_u8:
  2250 00000929 53                      push ebx
  2251 0000092A 8B5C2408                mov ebx, [esp + 4 + 4]
  2252 0000092E 57                      push edi
  2253                                 
  2254 0000092F 9C                      pushf
  2255 00000930 8B03                    mov eax, [ebx]
  2256 00000932 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2257 00000939 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2258 0000093E 090424                  or [esp], eax
  2259 00000941 9D                      popf
  2260                                 
  2261 00000942 3811                    cmp byte [ecx], dl
  2262 00000944 9C                      pushf
  2263 00000945 5F                      pop edi
  2264 00000946 8B03                    mov eax, [ebx]
  2265 00000948 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2266 0000094D 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2267 00000953 09F8                    or eax, edi
  2268 00000955 8903                    mov [ebx], eax
  2269 00000957 5F                      pop edi
  2270 00000958 5B                      pop ebx
  2271 00000959 C20400                  ret 4
  2272                                 [global iemAImpl_cmp_u8_EndProc:function hidden]
  2273                                 iemAImpl_cmp_u8_EndProc:
  2274                                 [size iemAImpl_cmp_u8 iemAImpl_cmp_u8_EndProc - iemAImpl_cmp_u8]
  2275                                 [size iemAImpl_cmp_u8_EndProc 0]
  2276 0000095C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2277                                 
  2278                                 [global iemAImpl_cmp_u16]
  2279                                 iemAImpl_cmp_u16:
  2280 00000960 53                      push ebx
  2281 00000961 8B5C2408                mov ebx, [esp + 4 + 4]
  2282 00000965 57                      push edi
  2283                                 
  2284 00000966 9C                      pushf
  2285 00000967 8B03                    mov eax, [ebx]
  2286 00000969 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2287 00000970 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2288 00000975 090424                  or [esp], eax
  2289 00000978 9D                      popf
  2290                                 
  2291 00000979 663911                  cmp word [ecx], dx
  2292 0000097C 9C                      pushf
  2293 0000097D 5F                      pop edi
  2294 0000097E 8B03                    mov eax, [ebx]
  2295 00000980 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2296 00000985 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2297 0000098B 09F8                    or eax, edi
  2298 0000098D 8903                    mov [ebx], eax
  2299 0000098F 5F                      pop edi
  2300 00000990 5B                      pop ebx
  2301 00000991 C20400                  ret 4
  2302                                 [global iemAImpl_cmp_u16_EndProc:function hidden]
  2303                                 iemAImpl_cmp_u16_EndProc:
  2304                                 [size iemAImpl_cmp_u16 iemAImpl_cmp_u16_EndProc - iemAImpl_cmp_u16]
  2305                                 [size iemAImpl_cmp_u16_EndProc 0]
  2306 00000994 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2307                                 
  2308                                 [global iemAImpl_cmp_u32]
  2309                                 iemAImpl_cmp_u32:
  2310 00000998 53                      push ebx
  2311 00000999 8B5C2408                mov ebx, [esp + 4 + 4]
  2312 0000099D 57                      push edi
  2313                                 
  2314 0000099E 9C                      pushf
  2315 0000099F 8B03                    mov eax, [ebx]
  2316 000009A1 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2317 000009A8 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2318 000009AD 090424                  or [esp], eax
  2319 000009B0 9D                      popf
  2320                                 
  2321 000009B1 3911                    cmp dword [ecx], edx
  2322 000009B3 9C                      pushf
  2323 000009B4 5F                      pop edi
  2324 000009B5 8B03                    mov eax, [ebx]
  2325 000009B7 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2326 000009BC 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2327 000009C2 09F8                    or eax, edi
  2328 000009C4 8903                    mov [ebx], eax
  2329 000009C6 5F                      pop edi
  2330 000009C7 5B                      pop ebx
  2331 000009C8 C20400                  ret 4
  2332                                 [global iemAImpl_cmp_u32_EndProc:function hidden]
  2333                                 iemAImpl_cmp_u32_EndProc:
  2334                                 [size iemAImpl_cmp_u32 iemAImpl_cmp_u32_EndProc - iemAImpl_cmp_u32]
  2335                                 [size iemAImpl_cmp_u32_EndProc 0]
  2336 000009CB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2337                                 
  2338                                 
  2339                                 %line 406+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2340                                 [section .text]
  2341                                 %line 406+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2342                                 [global iemAImpl_test_u8]
  2343                                 iemAImpl_test_u8:
  2344 000009CF 53                      push ebx
  2345 000009D0 8B5C2408                mov ebx, [esp + 4 + 4]
  2346 000009D4 57                      push edi
  2347                                 
  2348 000009D5 9C                      pushf
  2349 000009D6 8B03                    mov eax, [ebx]
  2350 000009D8 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2351 000009DF 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2352 000009E4 090424                  or [esp], eax
  2353 000009E7 9D                      popf
  2354                                 
  2355 000009E8 8411                    test byte [ecx], dl
  2356 000009EA 9C                      pushf
  2357 000009EB 5F                      pop edi
  2358 000009EC 8B03                    mov eax, [ebx]
  2359 000009EE 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2360 000009F3 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2361 000009F9 09F8                    or eax, edi
  2362 000009FB 8903                    mov [ebx], eax
  2363 000009FD 5F                      pop edi
  2364 000009FE 5B                      pop ebx
  2365 000009FF C20400                  ret 4
  2366                                 [global iemAImpl_test_u8_EndProc:function hidden]
  2367                                 iemAImpl_test_u8_EndProc:
  2368                                 [size iemAImpl_test_u8 iemAImpl_test_u8_EndProc - iemAImpl_test_u8]
  2369                                 [size iemAImpl_test_u8_EndProc 0]
  2370 00000A02 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2371                                 
  2372                                 [global iemAImpl_test_u16]
  2373                                 iemAImpl_test_u16:
  2374 00000A06 53                      push ebx
  2375 00000A07 8B5C2408                mov ebx, [esp + 4 + 4]
  2376 00000A0B 57                      push edi
  2377                                 
  2378 00000A0C 9C                      pushf
  2379 00000A0D 8B03                    mov eax, [ebx]
  2380 00000A0F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2381 00000A16 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2382 00000A1B 090424                  or [esp], eax
  2383 00000A1E 9D                      popf
  2384                                 
  2385 00000A1F 668511                  test word [ecx], dx
  2386 00000A22 9C                      pushf
  2387 00000A23 5F                      pop edi
  2388 00000A24 8B03                    mov eax, [ebx]
  2389 00000A26 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2390 00000A2B 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2391 00000A31 09F8                    or eax, edi
  2392 00000A33 8903                    mov [ebx], eax
  2393 00000A35 5F                      pop edi
  2394 00000A36 5B                      pop ebx
  2395 00000A37 C20400                  ret 4
  2396                                 [global iemAImpl_test_u16_EndProc:function hidden]
  2397                                 iemAImpl_test_u16_EndProc:
  2398                                 [size iemAImpl_test_u16 iemAImpl_test_u16_EndProc - iemAImpl_test_u16]
  2399                                 [size iemAImpl_test_u16_EndProc 0]
  2400 00000A3A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2401                                 
  2402                                 [global iemAImpl_test_u32]
  2403                                 iemAImpl_test_u32:
  2404 00000A3E 53                      push ebx
  2405 00000A3F 8B5C2408                mov ebx, [esp + 4 + 4]
  2406 00000A43 57                      push edi
  2407                                 
  2408 00000A44 9C                      pushf
  2409 00000A45 8B03                    mov eax, [ebx]
  2410 00000A47 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2411 00000A4E 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2412 00000A53 090424                  or [esp], eax
  2413 00000A56 9D                      popf
  2414                                 
  2415 00000A57 8511                    test dword [ecx], edx
  2416 00000A59 9C                      pushf
  2417 00000A5A 5F                      pop edi
  2418 00000A5B 8B03                    mov eax, [ebx]
  2419 00000A5D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2420 00000A62 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2421 00000A68 09F8                    or eax, edi
  2422 00000A6A 8903                    mov [ebx], eax
  2423 00000A6C 5F                      pop edi
  2424 00000A6D 5B                      pop ebx
  2425 00000A6E C20400                  ret 4
  2426                                 [global iemAImpl_test_u32_EndProc:function hidden]
  2427                                 iemAImpl_test_u32_EndProc:
  2428                                 [size iemAImpl_test_u32 iemAImpl_test_u32_EndProc - iemAImpl_test_u32]
  2429                                 [size iemAImpl_test_u32_EndProc 0]
  2430 00000A71 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2431                                 
  2432                                 
  2433                                 %line 407+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2434                                 
  2435                                 
  2436                                 
  2437                                 
  2438                                 
  2439                                 
  2440                                 
  2441                                 
  2442                                 
  2443                                 
  2444                                 
  2445                                 
  2446                                 
  2447                                 
  2448                                 
  2449                                 
  2450                                 
  2451                                 %line 481+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2452                                 [section .text]
  2453                                 %line 481+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2454                                 [global iemAImpl_bt_u16]
  2455                                 iemAImpl_bt_u16:
  2456 00000A75 53                      push ebx
  2457 00000A76 8B5C2408                mov ebx, [esp + 4 + 4]
  2458 00000A7A 57                      push edi
  2459                                 
  2460 00000A7B 9C                      pushf
  2461 00000A7C 8B03                    mov eax, [ebx]
  2462 00000A7E 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2463 00000A85 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2464 00000A8A 090424                  or [esp], eax
  2465 00000A8D 9D                      popf
  2466                                 
  2467 00000A8E 660FA311                bt word [ecx], dx
  2468 00000A92 9C                      pushf
  2469 00000A93 5F                      pop edi
  2470 00000A94 8B03                    mov eax, [ebx]
  2471 00000A96 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2472 00000A9B 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2473 00000AA1 09F8                    or eax, edi
  2474 00000AA3 8903                    mov [ebx], eax
  2475 00000AA5 5F                      pop edi
  2476 00000AA6 5B                      pop ebx
  2477 00000AA7 C20400                  ret 4
  2478                                 [global iemAImpl_bt_u16_EndProc:function hidden]
  2479                                 iemAImpl_bt_u16_EndProc:
  2480                                 [size iemAImpl_bt_u16 iemAImpl_bt_u16_EndProc - iemAImpl_bt_u16]
  2481                                 [size iemAImpl_bt_u16_EndProc 0]
  2482 00000AAA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2483                                 
  2484                                 [global iemAImpl_bt_u32]
  2485                                 iemAImpl_bt_u32:
  2486 00000AAE 53                      push ebx
  2487 00000AAF 8B5C2408                mov ebx, [esp + 4 + 4]
  2488 00000AB3 57                      push edi
  2489                                 
  2490 00000AB4 9C                      pushf
  2491 00000AB5 8B03                    mov eax, [ebx]
  2492 00000AB7 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2493 00000ABE 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2494 00000AC3 090424                  or [esp], eax
  2495 00000AC6 9D                      popf
  2496                                 
  2497 00000AC7 0FA311                  bt dword [ecx], edx
  2498 00000ACA 9C                      pushf
  2499 00000ACB 5F                      pop edi
  2500 00000ACC 8B03                    mov eax, [ebx]
  2501 00000ACE 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2502 00000AD3 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2503 00000AD9 09F8                    or eax, edi
  2504 00000ADB 8903                    mov [ebx], eax
  2505 00000ADD 5F                      pop edi
  2506 00000ADE 5B                      pop ebx
  2507 00000ADF C20400                  ret 4
  2508                                 [global iemAImpl_bt_u32_EndProc:function hidden]
  2509                                 iemAImpl_bt_u32_EndProc:
  2510                                 [size iemAImpl_bt_u32 iemAImpl_bt_u32_EndProc - iemAImpl_bt_u32]
  2511                                 [size iemAImpl_bt_u32_EndProc 0]
  2512 00000AE2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2513                                 
  2514                                 
  2515                                 %line 482+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2516                                 [section .text]
  2517                                 %line 482+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2518                                 [global iemAImpl_btc_u16]
  2519                                 iemAImpl_btc_u16:
  2520 00000AE6 53                      push ebx
  2521 00000AE7 8B5C2408                mov ebx, [esp + 4 + 4]
  2522 00000AEB 57                      push edi
  2523                                 
  2524 00000AEC 9C                      pushf
  2525 00000AED 8B03                    mov eax, [ebx]
  2526 00000AEF 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2527 00000AF6 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2528 00000AFB 090424                  or [esp], eax
  2529 00000AFE 9D                      popf
  2530                                 
  2531 00000AFF 660FBB11                btc word [ecx], dx
  2532 00000B03 9C                      pushf
  2533 00000B04 5F                      pop edi
  2534 00000B05 8B03                    mov eax, [ebx]
  2535 00000B07 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2536 00000B0C 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2537 00000B12 09F8                    or eax, edi
  2538 00000B14 8903                    mov [ebx], eax
  2539 00000B16 5F                      pop edi
  2540 00000B17 5B                      pop ebx
  2541 00000B18 C20400                  ret 4
  2542                                 [global iemAImpl_btc_u16_EndProc:function hidden]
  2543                                 iemAImpl_btc_u16_EndProc:
  2544                                 [size iemAImpl_btc_u16 iemAImpl_btc_u16_EndProc - iemAImpl_btc_u16]
  2545                                 [size iemAImpl_btc_u16_EndProc 0]
  2546 00000B1B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2547                                 
  2548                                 [global iemAImpl_btc_u32]
  2549                                 iemAImpl_btc_u32:
  2550 00000B1F 53                      push ebx
  2551 00000B20 8B5C2408                mov ebx, [esp + 4 + 4]
  2552 00000B24 57                      push edi
  2553                                 
  2554 00000B25 9C                      pushf
  2555 00000B26 8B03                    mov eax, [ebx]
  2556 00000B28 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2557 00000B2F 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2558 00000B34 090424                  or [esp], eax
  2559 00000B37 9D                      popf
  2560                                 
  2561 00000B38 0FBB11                  btc dword [ecx], edx
  2562 00000B3B 9C                      pushf
  2563 00000B3C 5F                      pop edi
  2564 00000B3D 8B03                    mov eax, [ebx]
  2565 00000B3F 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2566 00000B44 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2567 00000B4A 09F8                    or eax, edi
  2568 00000B4C 8903                    mov [ebx], eax
  2569 00000B4E 5F                      pop edi
  2570 00000B4F 5B                      pop ebx
  2571 00000B50 C20400                  ret 4
  2572                                 [global iemAImpl_btc_u32_EndProc:function hidden]
  2573                                 iemAImpl_btc_u32_EndProc:
  2574                                 [size iemAImpl_btc_u32 iemAImpl_btc_u32_EndProc - iemAImpl_btc_u32]
  2575                                 [size iemAImpl_btc_u32_EndProc 0]
  2576 00000B53 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2577                                 
  2578                                 
  2579                                 
  2580                                 [global iemAImpl_btc_u16_locked]
  2581                                 iemAImpl_btc_u16_locked:
  2582 00000B57 53                      push ebx
  2583 00000B58 8B5C2408                mov ebx, [esp + 4 + 4]
  2584 00000B5C 57                      push edi
  2585                                 
  2586 00000B5D 9C                      pushf
  2587 00000B5E 8B03                    mov eax, [ebx]
  2588 00000B60 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2589 00000B67 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2590 00000B6C 090424                  or [esp], eax
  2591 00000B6F 9D                      popf
  2592                                 
  2593 00000B70 66F00FBB11              lock btc word [ecx], dx
  2594 00000B75 9C                      pushf
  2595 00000B76 5F                      pop edi
  2596 00000B77 8B03                    mov eax, [ebx]
  2597 00000B79 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2598 00000B7E 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2599 00000B84 09F8                    or eax, edi
  2600 00000B86 8903                    mov [ebx], eax
  2601 00000B88 5F                      pop edi
  2602 00000B89 5B                      pop ebx
  2603 00000B8A C20400                  ret 4
  2604                                 [global iemAImpl_btc_u16_locked_EndProc:function hidden]
  2605                                 iemAImpl_btc_u16_locked_EndProc:
  2606                                 [size iemAImpl_btc_u16_locked iemAImpl_btc_u16_locked_EndProc - iemAImpl_btc_u16_locked]
  2607                                 [size iemAImpl_btc_u16_locked_EndProc 0]
  2608 00000B8D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2609                                 
  2610                                 [global iemAImpl_btc_u32_locked]
  2611                                 iemAImpl_btc_u32_locked:
  2612 00000B91 53                      push ebx
  2613 00000B92 8B5C2408                mov ebx, [esp + 4 + 4]
  2614 00000B96 57                      push edi
  2615                                 
  2616 00000B97 9C                      pushf
  2617 00000B98 8B03                    mov eax, [ebx]
  2618 00000B9A 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2619 00000BA1 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2620 00000BA6 090424                  or [esp], eax
  2621 00000BA9 9D                      popf
  2622                                 
  2623 00000BAA F00FBB11                lock btc dword [ecx], edx
  2624 00000BAE 9C                      pushf
  2625 00000BAF 5F                      pop edi
  2626 00000BB0 8B03                    mov eax, [ebx]
  2627 00000BB2 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2628 00000BB7 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2629 00000BBD 09F8                    or eax, edi
  2630 00000BBF 8903                    mov [ebx], eax
  2631 00000BC1 5F                      pop edi
  2632 00000BC2 5B                      pop ebx
  2633 00000BC3 C20400                  ret 4
  2634                                 [global iemAImpl_btc_u32_locked_EndProc:function hidden]
  2635                                 iemAImpl_btc_u32_locked_EndProc:
  2636                                 [size iemAImpl_btc_u32_locked iemAImpl_btc_u32_locked_EndProc - iemAImpl_btc_u32_locked]
  2637                                 [size iemAImpl_btc_u32_locked_EndProc 0]
  2638 00000BC6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2639                                 
  2640                                 %line 483+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2641                                 [section .text]
  2642                                 %line 483+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2643                                 [global iemAImpl_bts_u16]
  2644                                 iemAImpl_bts_u16:
  2645 00000BCA 53                      push ebx
  2646 00000BCB 8B5C2408                mov ebx, [esp + 4 + 4]
  2647 00000BCF 57                      push edi
  2648                                 
  2649 00000BD0 9C                      pushf
  2650 00000BD1 8B03                    mov eax, [ebx]
  2651 00000BD3 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2652 00000BDA 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2653 00000BDF 090424                  or [esp], eax
  2654 00000BE2 9D                      popf
  2655                                 
  2656 00000BE3 660FAB11                bts word [ecx], dx
  2657 00000BE7 9C                      pushf
  2658 00000BE8 5F                      pop edi
  2659 00000BE9 8B03                    mov eax, [ebx]
  2660 00000BEB 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2661 00000BF0 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2662 00000BF6 09F8                    or eax, edi
  2663 00000BF8 8903                    mov [ebx], eax
  2664 00000BFA 5F                      pop edi
  2665 00000BFB 5B                      pop ebx
  2666 00000BFC C20400                  ret 4
  2667                                 [global iemAImpl_bts_u16_EndProc:function hidden]
  2668                                 iemAImpl_bts_u16_EndProc:
  2669                                 [size iemAImpl_bts_u16 iemAImpl_bts_u16_EndProc - iemAImpl_bts_u16]
  2670                                 [size iemAImpl_bts_u16_EndProc 0]
  2671 00000BFF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2672                                 
  2673                                 [global iemAImpl_bts_u32]
  2674                                 iemAImpl_bts_u32:
  2675 00000C03 53                      push ebx
  2676 00000C04 8B5C2408                mov ebx, [esp + 4 + 4]
  2677 00000C08 57                      push edi
  2678                                 
  2679 00000C09 9C                      pushf
  2680 00000C0A 8B03                    mov eax, [ebx]
  2681 00000C0C 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2682 00000C13 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2683 00000C18 090424                  or [esp], eax
  2684 00000C1B 9D                      popf
  2685                                 
  2686 00000C1C 0FAB11                  bts dword [ecx], edx
  2687 00000C1F 9C                      pushf
  2688 00000C20 5F                      pop edi
  2689 00000C21 8B03                    mov eax, [ebx]
  2690 00000C23 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2691 00000C28 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2692 00000C2E 09F8                    or eax, edi
  2693 00000C30 8903                    mov [ebx], eax
  2694 00000C32 5F                      pop edi
  2695 00000C33 5B                      pop ebx
  2696 00000C34 C20400                  ret 4
  2697                                 [global iemAImpl_bts_u32_EndProc:function hidden]
  2698                                 iemAImpl_bts_u32_EndProc:
  2699                                 [size iemAImpl_bts_u32 iemAImpl_bts_u32_EndProc - iemAImpl_bts_u32]
  2700                                 [size iemAImpl_bts_u32_EndProc 0]
  2701 00000C37 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2702                                 
  2703                                 
  2704                                 
  2705                                 [global iemAImpl_bts_u16_locked]
  2706                                 iemAImpl_bts_u16_locked:
  2707 00000C3B 53                      push ebx
  2708 00000C3C 8B5C2408                mov ebx, [esp + 4 + 4]
  2709 00000C40 57                      push edi
  2710                                 
  2711 00000C41 9C                      pushf
  2712 00000C42 8B03                    mov eax, [ebx]
  2713 00000C44 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2714 00000C4B 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2715 00000C50 090424                  or [esp], eax
  2716 00000C53 9D                      popf
  2717                                 
  2718 00000C54 66F00FAB11              lock bts word [ecx], dx
  2719 00000C59 9C                      pushf
  2720 00000C5A 5F                      pop edi
  2721 00000C5B 8B03                    mov eax, [ebx]
  2722 00000C5D 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2723 00000C62 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2724 00000C68 09F8                    or eax, edi
  2725 00000C6A 8903                    mov [ebx], eax
  2726 00000C6C 5F                      pop edi
  2727 00000C6D 5B                      pop ebx
  2728 00000C6E C20400                  ret 4
  2729                                 [global iemAImpl_bts_u16_locked_EndProc:function hidden]
  2730                                 iemAImpl_bts_u16_locked_EndProc:
  2731                                 [size iemAImpl_bts_u16_locked iemAImpl_bts_u16_locked_EndProc - iemAImpl_bts_u16_locked]
  2732                                 [size iemAImpl_bts_u16_locked_EndProc 0]
  2733 00000C71 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2734                                 
  2735                                 [global iemAImpl_bts_u32_locked]
  2736                                 iemAImpl_bts_u32_locked:
  2737 00000C75 53                      push ebx
  2738 00000C76 8B5C2408                mov ebx, [esp + 4 + 4]
  2739 00000C7A 57                      push edi
  2740                                 
  2741 00000C7B 9C                      pushf
  2742 00000C7C 8B03                    mov eax, [ebx]
  2743 00000C7E 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2744 00000C85 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2745 00000C8A 090424                  or [esp], eax
  2746 00000C8D 9D                      popf
  2747                                 
  2748 00000C8E F00FAB11                lock bts dword [ecx], edx
  2749 00000C92 9C                      pushf
  2750 00000C93 5F                      pop edi
  2751 00000C94 8B03                    mov eax, [ebx]
  2752 00000C96 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2753 00000C9B 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2754 00000CA1 09F8                    or eax, edi
  2755 00000CA3 8903                    mov [ebx], eax
  2756 00000CA5 5F                      pop edi
  2757 00000CA6 5B                      pop ebx
  2758 00000CA7 C20400                  ret 4
  2759                                 [global iemAImpl_bts_u32_locked_EndProc:function hidden]
  2760                                 iemAImpl_bts_u32_locked_EndProc:
  2761                                 [size iemAImpl_bts_u32_locked iemAImpl_bts_u32_locked_EndProc - iemAImpl_bts_u32_locked]
  2762                                 [size iemAImpl_bts_u32_locked_EndProc 0]
  2763 00000CAA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2764                                 
  2765                                 %line 484+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2766                                 [section .text]
  2767                                 %line 484+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2768                                 [global iemAImpl_btr_u16]
  2769                                 iemAImpl_btr_u16:
  2770 00000CAE 53                      push ebx
  2771 00000CAF 8B5C2408                mov ebx, [esp + 4 + 4]
  2772 00000CB3 57                      push edi
  2773                                 
  2774 00000CB4 9C                      pushf
  2775 00000CB5 8B03                    mov eax, [ebx]
  2776 00000CB7 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2777 00000CBE 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2778 00000CC3 090424                  or [esp], eax
  2779 00000CC6 9D                      popf
  2780                                 
  2781 00000CC7 660FB311                btr word [ecx], dx
  2782 00000CCB 9C                      pushf
  2783 00000CCC 5F                      pop edi
  2784 00000CCD 8B03                    mov eax, [ebx]
  2785 00000CCF 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2786 00000CD4 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2787 00000CDA 09F8                    or eax, edi
  2788 00000CDC 8903                    mov [ebx], eax
  2789 00000CDE 5F                      pop edi
  2790 00000CDF 5B                      pop ebx
  2791 00000CE0 C20400                  ret 4
  2792                                 [global iemAImpl_btr_u16_EndProc:function hidden]
  2793                                 iemAImpl_btr_u16_EndProc:
  2794                                 [size iemAImpl_btr_u16 iemAImpl_btr_u16_EndProc - iemAImpl_btr_u16]
  2795                                 [size iemAImpl_btr_u16_EndProc 0]
  2796 00000CE3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2797                                 
  2798                                 [global iemAImpl_btr_u32]
  2799                                 iemAImpl_btr_u32:
  2800 00000CE7 53                      push ebx
  2801 00000CE8 8B5C2408                mov ebx, [esp + 4 + 4]
  2802 00000CEC 57                      push edi
  2803                                 
  2804 00000CED 9C                      pushf
  2805 00000CEE 8B03                    mov eax, [ebx]
  2806 00000CF0 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2807 00000CF7 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2808 00000CFC 090424                  or [esp], eax
  2809 00000CFF 9D                      popf
  2810                                 
  2811 00000D00 0FB311                  btr dword [ecx], edx
  2812 00000D03 9C                      pushf
  2813 00000D04 5F                      pop edi
  2814 00000D05 8B03                    mov eax, [ebx]
  2815 00000D07 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2816 00000D0C 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2817 00000D12 09F8                    or eax, edi
  2818 00000D14 8903                    mov [ebx], eax
  2819 00000D16 5F                      pop edi
  2820 00000D17 5B                      pop ebx
  2821 00000D18 C20400                  ret 4
  2822                                 [global iemAImpl_btr_u32_EndProc:function hidden]
  2823                                 iemAImpl_btr_u32_EndProc:
  2824                                 [size iemAImpl_btr_u32 iemAImpl_btr_u32_EndProc - iemAImpl_btr_u32]
  2825                                 [size iemAImpl_btr_u32_EndProc 0]
  2826 00000D1B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2827                                 
  2828                                 
  2829                                 
  2830                                 [global iemAImpl_btr_u16_locked]
  2831                                 iemAImpl_btr_u16_locked:
  2832 00000D1F 53                      push ebx
  2833 00000D20 8B5C2408                mov ebx, [esp + 4 + 4]
  2834 00000D24 57                      push edi
  2835                                 
  2836 00000D25 9C                      pushf
  2837 00000D26 8B03                    mov eax, [ebx]
  2838 00000D28 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2839 00000D2F 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2840 00000D34 090424                  or [esp], eax
  2841 00000D37 9D                      popf
  2842                                 
  2843 00000D38 66F00FB311              lock btr word [ecx], dx
  2844 00000D3D 9C                      pushf
  2845 00000D3E 5F                      pop edi
  2846 00000D3F 8B03                    mov eax, [ebx]
  2847 00000D41 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2848 00000D46 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2849 00000D4C 09F8                    or eax, edi
  2850 00000D4E 8903                    mov [ebx], eax
  2851 00000D50 5F                      pop edi
  2852 00000D51 5B                      pop ebx
  2853 00000D52 C20400                  ret 4
  2854                                 [global iemAImpl_btr_u16_locked_EndProc:function hidden]
  2855                                 iemAImpl_btr_u16_locked_EndProc:
  2856                                 [size iemAImpl_btr_u16_locked iemAImpl_btr_u16_locked_EndProc - iemAImpl_btr_u16_locked]
  2857                                 [size iemAImpl_btr_u16_locked_EndProc 0]
  2858 00000D55 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2859                                 
  2860                                 [global iemAImpl_btr_u32_locked]
  2861                                 iemAImpl_btr_u32_locked:
  2862 00000D59 53                      push ebx
  2863 00000D5A 8B5C2408                mov ebx, [esp + 4 + 4]
  2864 00000D5E 57                      push edi
  2865                                 
  2866 00000D5F 9C                      pushf
  2867 00000D60 8B03                    mov eax, [ebx]
  2868 00000D62 8124242AF7FFFF          and dword [esp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2869 00000D69 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2870 00000D6E 090424                  or [esp], eax
  2871 00000D71 9D                      popf
  2872                                 
  2873 00000D72 F00FB311                lock btr dword [ecx], edx
  2874 00000D76 9C                      pushf
  2875 00000D77 5F                      pop edi
  2876 00000D78 8B03                    mov eax, [ebx]
  2877 00000D7A 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2878 00000D7F 81E7D5080000            and edi, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2879 00000D85 09F8                    or eax, edi
  2880 00000D87 8903                    mov [ebx], eax
  2881 00000D89 5F                      pop edi
  2882 00000D8A 5B                      pop ebx
  2883 00000D8B C20400                  ret 4
  2884                                 [global iemAImpl_btr_u32_locked_EndProc:function hidden]
  2885                                 iemAImpl_btr_u32_locked_EndProc:
  2886                                 [size iemAImpl_btr_u32_locked iemAImpl_btr_u32_locked_EndProc - iemAImpl_btr_u32_locked]
  2887                                 [size iemAImpl_btr_u32_locked_EndProc 0]
  2888 00000D8E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2889                                 
  2890                                 %line 485+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2891                                 
  2892                                 
  2893                                 
  2894                                 
  2895                                 
  2896                                 
  2897                                 
  2898                                 
  2899                                 
  2900                                 
  2901                                 
  2902                                 
  2903                                 
  2904                                 
  2905                                 %line 536+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2906                                 [section .text]
  2907                                 %line 536+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2908                                 [global iemAImpl_bsf_u16]
  2909                                 iemAImpl_bsf_u16:
  2910 00000D92 53                      push ebx
  2911 00000D93 8B5C2408                mov ebx, [esp + 4 + 4]
  2912 00000D97 57                      push edi
  2913                                 
  2914 00000D98 9C                      pushf
  2915 00000D99 8B03                    mov eax, [ebx]
  2916 00000D9B 8124242AF7FFFF          and dword [esp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2917 00000DA2 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2918 00000DA7 090424                  or [esp], eax
  2919 00000DAA 9D                      popf
  2920                                 
  2921 00000DAB 660FBCC2                bsf ax, dx
  2922 00000DAF 7401                    jz .unchanged_dst
  2923 00000DB1 668901                  mov [ecx], ax
  2924                                 .unchanged_dst:
  2925 00000DB4 9C                      pushf
  2926 00000DB5 5F                      pop edi
  2927 00000DB6 8B03                    mov eax, [ebx]
  2928 00000DB8 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2929 00000DBD 81E7D5080000            and edi, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2930 00000DC3 09F8                    or eax, edi
  2931 00000DC5 8903                    mov [ebx], eax
  2932 00000DC7 5F                      pop edi
  2933 00000DC8 5B                      pop ebx
  2934 00000DC9 C20400                  ret 4
  2935                                 [global iemAImpl_bsf_u16_EndProc:function hidden]
  2936                                 iemAImpl_bsf_u16_EndProc:
  2937                                 [size iemAImpl_bsf_u16 iemAImpl_bsf_u16_EndProc - iemAImpl_bsf_u16]
  2938                                 [size iemAImpl_bsf_u16_EndProc 0]
  2939 00000DCC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2940                                 
  2941                                 [global iemAImpl_bsf_u32]
  2942                                 iemAImpl_bsf_u32:
  2943 00000DD0 53                      push ebx
  2944 00000DD1 8B5C2408                mov ebx, [esp + 4 + 4]
  2945 00000DD5 57                      push edi
  2946                                 
  2947 00000DD6 9C                      pushf
  2948 00000DD7 8B03                    mov eax, [ebx]
  2949 00000DD9 8124242AF7FFFF          and dword [esp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2950 00000DE0 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2951 00000DE5 090424                  or [esp], eax
  2952 00000DE8 9D                      popf
  2953                                 
  2954 00000DE9 0FBCC2                  bsf eax, edx
  2955 00000DEC 7400                    jz .unchanged_dst
  2956 00000DEE 8901                    mov [ecx], eax
  2957                                 .unchanged_dst:
  2958 00000DF0 9C                      pushf
  2959 00000DF1 5F                      pop edi
  2960 00000DF2 8B03                    mov eax, [ebx]
  2961 00000DF4 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2962 00000DF9 81E7D5080000            and edi, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2963 00000DFF 09F8                    or eax, edi
  2964 00000E01 8903                    mov [ebx], eax
  2965 00000E03 5F                      pop edi
  2966 00000E04 5B                      pop ebx
  2967 00000E05 C20400                  ret 4
  2968                                 [global iemAImpl_bsf_u32_EndProc:function hidden]
  2969                                 iemAImpl_bsf_u32_EndProc:
  2970                                 [size iemAImpl_bsf_u32 iemAImpl_bsf_u32_EndProc - iemAImpl_bsf_u32]
  2971                                 [size iemAImpl_bsf_u32_EndProc 0]
  2972 00000E08 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2973                                 
  2974                                 %line 537+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2975                                 [section .text]
  2976                                 %line 537+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2977                                 [global iemAImpl_bsr_u16]
  2978                                 iemAImpl_bsr_u16:
  2979 00000E0C 53                      push ebx
  2980 00000E0D 8B5C2408                mov ebx, [esp + 4 + 4]
  2981 00000E11 57                      push edi
  2982                                 
  2983 00000E12 9C                      pushf
  2984 00000E13 8B03                    mov eax, [ebx]
  2985 00000E15 8124242AF7FFFF          and dword [esp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2986 00000E1C 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2987 00000E21 090424                  or [esp], eax
  2988 00000E24 9D                      popf
  2989                                 
  2990 00000E25 660FBDC2                bsr ax, dx
  2991 00000E29 7401                    jz .unchanged_dst
  2992 00000E2B 668901                  mov [ecx], ax
  2993                                 .unchanged_dst:
  2994 00000E2E 9C                      pushf
  2995 00000E2F 5F                      pop edi
  2996 00000E30 8B03                    mov eax, [ebx]
  2997 00000E32 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2998 00000E37 81E7D5080000            and edi, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  2999 00000E3D 09F8                    or eax, edi
  3000 00000E3F 8903                    mov [ebx], eax
  3001 00000E41 5F                      pop edi
  3002 00000E42 5B                      pop ebx
  3003 00000E43 C20400                  ret 4
  3004                                 [global iemAImpl_bsr_u16_EndProc:function hidden]
  3005                                 iemAImpl_bsr_u16_EndProc:
  3006                                 [size iemAImpl_bsr_u16 iemAImpl_bsr_u16_EndProc - iemAImpl_bsr_u16]
  3007                                 [size iemAImpl_bsr_u16_EndProc 0]
  3008 00000E46 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3009                                 
  3010                                 [global iemAImpl_bsr_u32]
  3011                                 iemAImpl_bsr_u32:
  3012 00000E4A 53                      push ebx
  3013 00000E4B 8B5C2408                mov ebx, [esp + 4 + 4]
  3014 00000E4F 57                      push edi
  3015                                 
  3016 00000E50 9C                      pushf
  3017 00000E51 8B03                    mov eax, [ebx]
  3018 00000E53 8124242AF7FFFF          and dword [esp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3019 00000E5A 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3020 00000E5F 090424                  or [esp], eax
  3021 00000E62 9D                      popf
  3022                                 
  3023 00000E63 0FBDC2                  bsr eax, edx
  3024 00000E66 7400                    jz .unchanged_dst
  3025 00000E68 8901                    mov [ecx], eax
  3026                                 .unchanged_dst:
  3027 00000E6A 9C                      pushf
  3028 00000E6B 5F                      pop edi
  3029 00000E6C 8B03                    mov eax, [ebx]
  3030 00000E6E 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3031 00000E73 81E7D5080000            and edi, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3032 00000E79 09F8                    or eax, edi
  3033 00000E7B 8903                    mov [ebx], eax
  3034 00000E7D 5F                      pop edi
  3035 00000E7E 5B                      pop ebx
  3036 00000E7F C20400                  ret 4
  3037                                 [global iemAImpl_bsr_u32_EndProc:function hidden]
  3038                                 iemAImpl_bsr_u32_EndProc:
  3039                                 [size iemAImpl_bsr_u32 iemAImpl_bsr_u32_EndProc - iemAImpl_bsr_u32]
  3040                                 [size iemAImpl_bsr_u32_EndProc 0]
  3041 00000E82 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3042                                 
  3043                                 %line 538+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3044                                 
  3045                                 
  3046                                 
  3047                                 
  3048                                 
  3049                                 
  3050                                 [section .text]
  3051                                 [global iemAImpl_imul_two_u16]
  3052                                 %line 545+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3053                                 iemAImpl_imul_two_u16:
  3054                                 %line 546+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3055 00000E86 53                      push ebx
  3056                                 %line 546+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3057 00000E87 8B5C2408                mov ebx, [esp + 4 + 4]
  3058 00000E8B 57                      push edi
  3059                                 %line 547+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3060                                 
  3061                                 %line 547+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3062 00000E8C 9C                      pushf
  3063 00000E8D 8B03                    mov eax, [ebx]
  3064 00000E8F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3065 00000E96 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3066 00000E9B 090424                  or [esp], eax
  3067 00000E9E 9D                      popf
  3068                                 
  3069                                 %line 548+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3070 00000E9F 660FAF11                imul dx, word [ecx]
  3071 00000EA3 668911                  mov [ecx], dx
  3072 00000EA6 9C                      pushf
  3073                                 %line 550+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3074 00000EA7 5F                      pop edi
  3075 00000EA8 8B03                    mov eax, [ebx]
  3076 00000EAA 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3077 00000EAF 81E7D5080000            and edi, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3078 00000EB5 09F8                    or eax, edi
  3079 00000EB7 8903                    mov [ebx], eax
  3080                                 %line 551+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3081 00000EB9 5F                      pop edi
  3082                                 %line 551+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3083 00000EBA 5B                      pop ebx
  3084 00000EBB C20400                  ret 4
  3085                                 %line 552+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3086                                 [global iemAImpl_imul_two_u16_EndProc:function hidden]
  3087                                 %line 552+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3088                                 iemAImpl_imul_two_u16_EndProc:
  3089                                 [size iemAImpl_imul_two_u16 iemAImpl_imul_two_u16_EndProc - iemAImpl_imul_two_u16]
  3090                                 [size iemAImpl_imul_two_u16_EndProc 0]
  3091 00000EBE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3092                                 %line 553+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3093                                 
  3094                                 [global iemAImpl_imul_two_u32]
  3095                                 %line 554+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3096                                 iemAImpl_imul_two_u32:
  3097                                 %line 555+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3098 00000EC2 53                      push ebx
  3099                                 %line 555+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3100 00000EC3 8B5C2408                mov ebx, [esp + 4 + 4]
  3101 00000EC7 57                      push edi
  3102                                 %line 556+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3103                                 
  3104                                 %line 556+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3105 00000EC8 9C                      pushf
  3106 00000EC9 8B03                    mov eax, [ebx]
  3107 00000ECB 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3108 00000ED2 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3109 00000ED7 090424                  or [esp], eax
  3110 00000EDA 9D                      popf
  3111                                 
  3112                                 %line 557+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3113 00000EDB 0FAF11                  imul edx, dword [ecx]
  3114 00000EDE 8911                    mov [ecx], edx
  3115 00000EE0 9C                      pushf
  3116                                 %line 559+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3117 00000EE1 5F                      pop edi
  3118 00000EE2 8B03                    mov eax, [ebx]
  3119 00000EE4 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3120 00000EE9 81E7D5080000            and edi, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3121 00000EEF 09F8                    or eax, edi
  3122 00000EF1 8903                    mov [ebx], eax
  3123                                 %line 560+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3124 00000EF3 5F                      pop edi
  3125                                 %line 560+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3126 00000EF4 5B                      pop ebx
  3127 00000EF5 C20400                  ret 4
  3128                                 %line 561+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3129                                 [global iemAImpl_imul_two_u32_EndProc:function hidden]
  3130                                 %line 561+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3131                                 iemAImpl_imul_two_u32_EndProc:
  3132                                 [size iemAImpl_imul_two_u32 iemAImpl_imul_two_u32_EndProc - iemAImpl_imul_two_u32]
  3133                                 [size iemAImpl_imul_two_u32_EndProc 0]
  3134 00000EF8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3135                                 %line 562+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3136                                 
  3137                                 %line 573+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3138                                 
  3139                                 
  3140                                 
  3141                                 
  3142                                 
  3143                                 
  3144                                 
  3145                                 
  3146                                 [section .text]
  3147                                 [global iemAImpl_xchg_u8]
  3148                                 %line 582+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3149                                 iemAImpl_xchg_u8:
  3150                                 %line 583+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3151 00000EFC 57                      push edi
  3152 00000EFD 8A02                    mov al, [edx]
  3153 00000EFF 8601                    xchg [ecx], al
  3154 00000F01 8802                    mov [edx], al
  3155 00000F03 5F                      pop edi
  3156                                 %line 587+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3157 00000F04 C20000                  ret 0
  3158                                 %line 588+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3159                                 [global iemAImpl_xchg_u8_EndProc:function hidden]
  3160                                 %line 588+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3161                                 iemAImpl_xchg_u8_EndProc:
  3162                                 [size iemAImpl_xchg_u8 iemAImpl_xchg_u8_EndProc - iemAImpl_xchg_u8]
  3163                                 [size iemAImpl_xchg_u8_EndProc 0]
  3164 00000F07 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3165                                 %line 589+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3166                                 
  3167                                 [global iemAImpl_xchg_u16]
  3168                                 %line 590+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3169                                 iemAImpl_xchg_u16:
  3170                                 %line 591+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3171 00000F0B 57                      push edi
  3172 00000F0C 668B02                  mov ax, [edx]
  3173 00000F0F 668701                  xchg [ecx], ax
  3174 00000F12 668902                  mov [edx], ax
  3175 00000F15 5F                      pop edi
  3176                                 %line 595+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3177 00000F16 C20000                  ret 0
  3178                                 %line 596+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3179                                 [global iemAImpl_xchg_u16_EndProc:function hidden]
  3180                                 %line 596+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3181                                 iemAImpl_xchg_u16_EndProc:
  3182                                 [size iemAImpl_xchg_u16 iemAImpl_xchg_u16_EndProc - iemAImpl_xchg_u16]
  3183                                 [size iemAImpl_xchg_u16_EndProc 0]
  3184 00000F19 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3185                                 %line 597+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3186                                 
  3187                                 [global iemAImpl_xchg_u32]
  3188                                 %line 598+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3189                                 iemAImpl_xchg_u32:
  3190                                 %line 599+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3191 00000F1D 57                      push edi
  3192 00000F1E 8B02                    mov eax, [edx]
  3193 00000F20 8701                    xchg [ecx], eax
  3194 00000F22 8902                    mov [edx], eax
  3195 00000F24 5F                      pop edi
  3196                                 %line 603+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3197 00000F25 C20000                  ret 0
  3198                                 %line 604+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3199                                 [global iemAImpl_xchg_u32_EndProc:function hidden]
  3200                                 %line 604+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3201                                 iemAImpl_xchg_u32_EndProc:
  3202                                 [size iemAImpl_xchg_u32 iemAImpl_xchg_u32_EndProc - iemAImpl_xchg_u32]
  3203                                 [size iemAImpl_xchg_u32_EndProc 0]
  3204 00000F28 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3205                                 %line 605+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3206                                 
  3207                                 %line 615+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3208                                 
  3209                                 
  3210                                 
  3211                                 
  3212                                 
  3213                                 
  3214                                 
  3215                                 
  3216                                 
  3217                                 [section .text]
  3218                                 [global iemAImpl_xadd_u8]
  3219                                 %line 625+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3220                                 iemAImpl_xadd_u8:
  3221                                 %line 626+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3222 00000F2C 53                      push ebx
  3223                                 %line 626+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3224 00000F2D 8B5C2408                mov ebx, [esp + 4 + 4]
  3225 00000F31 57                      push edi
  3226                                 %line 627+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3227                                 
  3228                                 %line 627+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3229 00000F32 9C                      pushf
  3230 00000F33 8B03                    mov eax, [ebx]
  3231 00000F35 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3232 00000F3C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3233 00000F41 090424                  or [esp], eax
  3234 00000F44 9D                      popf
  3235                                 
  3236                                 %line 628+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3237 00000F45 8A02                    mov al, [edx]
  3238 00000F47 0FC001                  xadd [ecx], al
  3239 00000F4A 8802                    mov [edx], al
  3240 00000F4C 9C                      pushf
  3241                                 %line 631+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3242 00000F4D 5F                      pop edi
  3243 00000F4E 8B03                    mov eax, [ebx]
  3244 00000F50 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3245 00000F55 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3246 00000F5B 09F8                    or eax, edi
  3247 00000F5D 8903                    mov [ebx], eax
  3248                                 %line 632+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3249 00000F5F 5F                      pop edi
  3250                                 %line 632+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3251 00000F60 5B                      pop ebx
  3252 00000F61 C20400                  ret 4
  3253                                 %line 633+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3254                                 [global iemAImpl_xadd_u8_EndProc:function hidden]
  3255                                 %line 633+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3256                                 iemAImpl_xadd_u8_EndProc:
  3257                                 [size iemAImpl_xadd_u8 iemAImpl_xadd_u8_EndProc - iemAImpl_xadd_u8]
  3258                                 [size iemAImpl_xadd_u8_EndProc 0]
  3259 00000F64 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3260                                 %line 634+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3261                                 
  3262                                 [global iemAImpl_xadd_u16]
  3263                                 %line 635+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3264                                 iemAImpl_xadd_u16:
  3265                                 %line 636+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3266 00000F68 53                      push ebx
  3267                                 %line 636+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3268 00000F69 8B5C2408                mov ebx, [esp + 4 + 4]
  3269 00000F6D 57                      push edi
  3270                                 %line 637+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3271                                 
  3272                                 %line 637+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3273 00000F6E 9C                      pushf
  3274 00000F6F 8B03                    mov eax, [ebx]
  3275 00000F71 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3276 00000F78 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3277 00000F7D 090424                  or [esp], eax
  3278 00000F80 9D                      popf
  3279                                 
  3280                                 %line 638+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3281 00000F81 668B02                  mov ax, [edx]
  3282 00000F84 660FC101                xadd [ecx], ax
  3283 00000F88 668902                  mov [edx], ax
  3284 00000F8B 9C                      pushf
  3285                                 %line 641+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3286 00000F8C 5F                      pop edi
  3287 00000F8D 8B03                    mov eax, [ebx]
  3288 00000F8F 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3289 00000F94 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3290 00000F9A 09F8                    or eax, edi
  3291 00000F9C 8903                    mov [ebx], eax
  3292                                 %line 642+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3293 00000F9E 5F                      pop edi
  3294                                 %line 642+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3295 00000F9F 5B                      pop ebx
  3296 00000FA0 C20400                  ret 4
  3297                                 %line 643+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3298                                 [global iemAImpl_xadd_u16_EndProc:function hidden]
  3299                                 %line 643+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3300                                 iemAImpl_xadd_u16_EndProc:
  3301                                 [size iemAImpl_xadd_u16 iemAImpl_xadd_u16_EndProc - iemAImpl_xadd_u16]
  3302                                 [size iemAImpl_xadd_u16_EndProc 0]
  3303 00000FA3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3304                                 %line 644+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3305                                 
  3306                                 [global iemAImpl_xadd_u32]
  3307                                 %line 645+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3308                                 iemAImpl_xadd_u32:
  3309                                 %line 646+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3310 00000FA7 53                      push ebx
  3311                                 %line 646+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3312 00000FA8 8B5C2408                mov ebx, [esp + 4 + 4]
  3313 00000FAC 57                      push edi
  3314                                 %line 647+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3315                                 
  3316                                 %line 647+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3317 00000FAD 9C                      pushf
  3318 00000FAE 8B03                    mov eax, [ebx]
  3319 00000FB0 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3320 00000FB7 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3321 00000FBC 090424                  or [esp], eax
  3322 00000FBF 9D                      popf
  3323                                 
  3324                                 %line 648+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3325 00000FC0 8B02                    mov eax, [edx]
  3326 00000FC2 0FC101                  xadd [ecx], eax
  3327 00000FC5 8902                    mov [edx], eax
  3328 00000FC7 9C                      pushf
  3329                                 %line 651+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3330 00000FC8 5F                      pop edi
  3331 00000FC9 8B03                    mov eax, [ebx]
  3332 00000FCB 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3333 00000FD0 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3334 00000FD6 09F8                    or eax, edi
  3335 00000FD8 8903                    mov [ebx], eax
  3336                                 %line 652+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3337 00000FDA 5F                      pop edi
  3338                                 %line 652+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3339 00000FDB 5B                      pop ebx
  3340 00000FDC C20400                  ret 4
  3341                                 %line 653+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3342                                 [global iemAImpl_xadd_u32_EndProc:function hidden]
  3343                                 %line 653+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3344                                 iemAImpl_xadd_u32_EndProc:
  3345                                 [size iemAImpl_xadd_u32 iemAImpl_xadd_u32_EndProc - iemAImpl_xadd_u32]
  3346                                 [size iemAImpl_xadd_u32_EndProc 0]
  3347 00000FDF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3348                                 %line 654+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3349                                 
  3350                                 %line 666+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3351                                 
  3352                                 [global iemAImpl_xadd_u8_locked]
  3353                                 %line 667+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3354                                 iemAImpl_xadd_u8_locked:
  3355                                 %line 668+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3356 00000FE3 53                      push ebx
  3357                                 %line 668+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3358 00000FE4 8B5C2408                mov ebx, [esp + 4 + 4]
  3359 00000FE8 57                      push edi
  3360                                 %line 669+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3361                                 
  3362                                 %line 669+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3363 00000FE9 9C                      pushf
  3364 00000FEA 8B03                    mov eax, [ebx]
  3365 00000FEC 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3366 00000FF3 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3367 00000FF8 090424                  or [esp], eax
  3368 00000FFB 9D                      popf
  3369                                 
  3370                                 %line 670+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3371 00000FFC 8A02                    mov al, [edx]
  3372 00000FFE F00FC001                lock xadd [ecx], al
  3373 00001002 8802                    mov [edx], al
  3374 00001004 9C                      pushf
  3375                                 %line 673+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3376 00001005 5F                      pop edi
  3377 00001006 8B03                    mov eax, [ebx]
  3378 00001008 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3379 0000100D 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3380 00001013 09F8                    or eax, edi
  3381 00001015 8903                    mov [ebx], eax
  3382                                 %line 674+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3383 00001017 5F                      pop edi
  3384                                 %line 674+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3385 00001018 5B                      pop ebx
  3386 00001019 C20400                  ret 4
  3387                                 %line 675+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3388                                 [global iemAImpl_xadd_u8_locked_EndProc:function hidden]
  3389                                 %line 675+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3390                                 iemAImpl_xadd_u8_locked_EndProc:
  3391                                 [size iemAImpl_xadd_u8_locked iemAImpl_xadd_u8_locked_EndProc - iemAImpl_xadd_u8_locked]
  3392                                 [size iemAImpl_xadd_u8_locked_EndProc 0]
  3393 0000101C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3394                                 %line 676+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3395                                 
  3396                                 [global iemAImpl_xadd_u16_locked]
  3397                                 %line 677+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3398                                 iemAImpl_xadd_u16_locked:
  3399                                 %line 678+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3400 00001020 53                      push ebx
  3401                                 %line 678+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3402 00001021 8B5C2408                mov ebx, [esp + 4 + 4]
  3403 00001025 57                      push edi
  3404                                 %line 679+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3405                                 
  3406                                 %line 679+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3407 00001026 9C                      pushf
  3408 00001027 8B03                    mov eax, [ebx]
  3409 00001029 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3410 00001030 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3411 00001035 090424                  or [esp], eax
  3412 00001038 9D                      popf
  3413                                 
  3414                                 %line 680+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3415 00001039 668B02                  mov ax, [edx]
  3416 0000103C 66F00FC101              lock xadd [ecx], ax
  3417 00001041 668902                  mov [edx], ax
  3418 00001044 9C                      pushf
  3419                                 %line 683+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3420 00001045 5F                      pop edi
  3421 00001046 8B03                    mov eax, [ebx]
  3422 00001048 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3423 0000104D 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3424 00001053 09F8                    or eax, edi
  3425 00001055 8903                    mov [ebx], eax
  3426                                 %line 684+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3427 00001057 5F                      pop edi
  3428                                 %line 684+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3429 00001058 5B                      pop ebx
  3430 00001059 C20400                  ret 4
  3431                                 %line 685+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3432                                 [global iemAImpl_xadd_u16_locked_EndProc:function hidden]
  3433                                 %line 685+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3434                                 iemAImpl_xadd_u16_locked_EndProc:
  3435                                 [size iemAImpl_xadd_u16_locked iemAImpl_xadd_u16_locked_EndProc - iemAImpl_xadd_u16_locked]
  3436                                 [size iemAImpl_xadd_u16_locked_EndProc 0]
  3437 0000105C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3438                                 %line 686+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3439                                 
  3440                                 [global iemAImpl_xadd_u32_locked]
  3441                                 %line 687+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3442                                 iemAImpl_xadd_u32_locked:
  3443                                 %line 688+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3444 00001060 53                      push ebx
  3445                                 %line 688+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3446 00001061 8B5C2408                mov ebx, [esp + 4 + 4]
  3447 00001065 57                      push edi
  3448                                 %line 689+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3449                                 
  3450                                 %line 689+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3451 00001066 9C                      pushf
  3452 00001067 8B03                    mov eax, [ebx]
  3453 00001069 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3454 00001070 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3455 00001075 090424                  or [esp], eax
  3456 00001078 9D                      popf
  3457                                 
  3458                                 %line 690+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3459 00001079 8B02                    mov eax, [edx]
  3460 0000107B F00FC101                lock xadd [ecx], eax
  3461 0000107F 8902                    mov [edx], eax
  3462 00001081 9C                      pushf
  3463                                 %line 693+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3464 00001082 5F                      pop edi
  3465 00001083 8B03                    mov eax, [ebx]
  3466 00001085 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3467 0000108A 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3468 00001090 09F8                    or eax, edi
  3469 00001092 8903                    mov [ebx], eax
  3470                                 %line 694+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3471 00001094 5F                      pop edi
  3472                                 %line 694+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3473 00001095 5B                      pop ebx
  3474 00001096 C20400                  ret 4
  3475                                 %line 695+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3476                                 [global iemAImpl_xadd_u32_locked_EndProc:function hidden]
  3477                                 %line 695+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3478                                 iemAImpl_xadd_u32_locked_EndProc:
  3479                                 [size iemAImpl_xadd_u32_locked iemAImpl_xadd_u32_locked_EndProc - iemAImpl_xadd_u32_locked]
  3480                                 [size iemAImpl_xadd_u32_locked_EndProc 0]
  3481 00001099 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3482                                 %line 696+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3483                                 
  3484                                 %line 708+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3485                                 
  3486                                 
  3487                                 
  3488                                 
  3489                                 
  3490                                 
  3491                                 
  3492                                 
  3493                                 
  3494                                 
  3495                                 
  3496                                 
  3497                                 
  3498                                 
  3499                                 [section .text]
  3500                                 [global iemAImpl_cmpxchg8b]
  3501                                 %line 723+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3502                                 iemAImpl_cmpxchg8b:
  3503                                 %line 768+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3504 0000109D 56                      push esi
  3505 0000109E 57                      push edi
  3506 0000109F 53                      push ebx
  3507 000010A0 55                      push ebp
  3508                                 
  3509 000010A1 89CF                    mov edi, ecx
  3510 000010A3 89D6                    mov esi, edx
  3511 000010A5 8B4C2414                mov ecx, [esp + 16 + 4 + 0]
  3512 000010A9 8B6C2418                mov ebp, [esp + 16 + 4 + 4]
  3513                                 
  3514 000010AD 8B19                    mov ebx, [ecx]
  3515 000010AF 8B4904                  mov ecx, [ecx + 4]
  3516                                 
  3517                                 %line 780+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3518 000010B2 9C                      pushf
  3519 000010B3 8B4500                  mov eax, [ebp]
  3520 000010B6 832424BF                and dword [esp], ~(((1 << 6)) | 0)
  3521 000010BA 83E040                  and eax, (((1 << 6)) | 0)
  3522 000010BD 090424                  or [esp], eax
  3523 000010C0 9D                      popf
  3524                                 
  3525                                 %line 781+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3526 000010C1 8B06                    mov eax, [esi]
  3527 000010C3 8B5604                  mov edx, [esi + 4]
  3528                                 
  3529 000010C6 F00FC70F                lock cmpxchg8b [edi]
  3530                                 
  3531 000010CA 8906                    mov [esi], eax
  3532 000010CC 895604                  mov [esi + 4], edx
  3533 000010CF 9C                      pushf
  3534                                 %line 788+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3535 000010D0 5F                      pop edi
  3536 000010D1 8B4500                  mov eax, [ebp]
  3537 000010D4 83E0BF                  and eax, ~(((1 << 6)) | 0)
  3538 000010D7 83E740                  and edi, (((1 << 6)) | 0)
  3539 000010DA 09F8                    or eax, edi
  3540 000010DC 894500                  mov [ebp], eax
  3541                                 %line 789+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3542                                 
  3543 000010DF 5D                      pop ebp
  3544 000010E0 5B                      pop ebx
  3545 000010E1 5F                      pop edi
  3546 000010E2 5E                      pop esi
  3547 000010E3 C20800                  ret 8
  3548                                 %line 796+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3549                                 [global iemAImpl_cmpxchg8b_EndProc:function hidden]
  3550                                 %line 796+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3551                                 iemAImpl_cmpxchg8b_EndProc:
  3552                                 [size iemAImpl_cmpxchg8b iemAImpl_cmpxchg8b_EndProc - iemAImpl_cmpxchg8b]
  3553                                 [size iemAImpl_cmpxchg8b_EndProc 0]
  3554 000010E6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3555                                 %line 797+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3556                                 
  3557                                 [global iemAImpl_cmpxchg8b_locked]
  3558                                 %line 798+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3559                                 iemAImpl_cmpxchg8b_locked:
  3560                                 %line 799+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3561                                 
  3562 000010EA EBAF                    jmp iemAImpl_cmpxchg8b
  3563                                 [global iemAImpl_cmpxchg8b_locked_EndProc:function hidden]
  3564                                 %line 801+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3565                                 iemAImpl_cmpxchg8b_locked_EndProc:
  3566                                 [size iemAImpl_cmpxchg8b_locked iemAImpl_cmpxchg8b_locked_EndProc - iemAImpl_cmpxchg8b_locked]
  3567                                 [size iemAImpl_cmpxchg8b_locked_EndProc 0]
  3568 000010EC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3569                                 %line 802+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3570                                 
  3571                                 
  3572                                 
  3573                                 
  3574                                 
  3575                                 
  3576                                 
  3577                                 
  3578                                 
  3579                                 
  3580                                 
  3581                                 [section .text]
  3582                                 %line 899+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3583                                 
  3584                                 [global iemAImpl_cmpxchg_u8]
  3585                                 %line 900+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3586                                 iemAImpl_cmpxchg_u8:
  3587 000010F0 53                      push ebx
  3588 000010F1 57                      push edi
  3589 000010F2 56                      push esi
  3590 000010F3 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  3591 000010F7 8B742414                mov esi, [esp + 12 + 4 + 4]
  3592                                 
  3593 000010FB 9C                      pushf
  3594 000010FC 8B06                    mov eax, [esi]
  3595 000010FE 8124242AF7FFFF          and dword [esp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3596 00001105 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3597 0000110A 090424                  or [esp], eax
  3598 0000110D 9D                      popf
  3599                                 
  3600 0000110E 8A02                    mov al, [edx]
  3601 00001110 0FB019                  cmpxchg [ecx], bl
  3602 00001113 8802                    mov [edx], al
  3603 00001115 9C                      pushf
  3604 00001116 5F                      pop edi
  3605 00001117 8B06                    mov eax, [esi]
  3606 00001119 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3607 0000111E 81E7D5080000            and edi, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3608 00001124 09F8                    or eax, edi
  3609 00001126 8906                    mov [esi], eax
  3610 00001128 5E                      pop esi
  3611 00001129 5F                      pop edi
  3612 0000112A 5B                      pop ebx
  3613 0000112B C20800                  ret 8
  3614                                 [global iemAImpl_cmpxchg_u8_EndProc:function hidden]
  3615                                 iemAImpl_cmpxchg_u8_EndProc:
  3616                                 [size iemAImpl_cmpxchg_u8 iemAImpl_cmpxchg_u8_EndProc - iemAImpl_cmpxchg_u8]
  3617                                 [size iemAImpl_cmpxchg_u8_EndProc 0]
  3618 0000112E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3619                                 
  3620                                 [global iemAImpl_cmpxchg_u16]
  3621                                 iemAImpl_cmpxchg_u16:
  3622 00001132 53                      push ebx
  3623 00001133 57                      push edi
  3624 00001134 56                      push esi
  3625 00001135 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  3626 00001139 8B742414                mov esi, [esp + 12 + 4 + 4]
  3627                                 
  3628 0000113D 9C                      pushf
  3629 0000113E 8B06                    mov eax, [esi]
  3630 00001140 8124242AF7FFFF          and dword [esp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3631 00001147 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3632 0000114C 090424                  or [esp], eax
  3633 0000114F 9D                      popf
  3634                                 
  3635 00001150 668B02                  mov ax, [edx]
  3636 00001153 660FB119                cmpxchg [ecx], bx
  3637 00001157 668902                  mov [edx], ax
  3638 0000115A 9C                      pushf
  3639 0000115B 5F                      pop edi
  3640 0000115C 8B06                    mov eax, [esi]
  3641 0000115E 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3642 00001163 81E7D5080000            and edi, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3643 00001169 09F8                    or eax, edi
  3644 0000116B 8906                    mov [esi], eax
  3645 0000116D 5E                      pop esi
  3646 0000116E 5F                      pop edi
  3647 0000116F 5B                      pop ebx
  3648 00001170 C20800                  ret 8
  3649                                 [global iemAImpl_cmpxchg_u16_EndProc:function hidden]
  3650                                 iemAImpl_cmpxchg_u16_EndProc:
  3651                                 [size iemAImpl_cmpxchg_u16 iemAImpl_cmpxchg_u16_EndProc - iemAImpl_cmpxchg_u16]
  3652                                 [size iemAImpl_cmpxchg_u16_EndProc 0]
  3653 00001173 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3654                                 
  3655                                 [global iemAImpl_cmpxchg_u32]
  3656                                 iemAImpl_cmpxchg_u32:
  3657 00001177 53                      push ebx
  3658 00001178 57                      push edi
  3659 00001179 56                      push esi
  3660 0000117A 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  3661 0000117E 8B742414                mov esi, [esp + 12 + 4 + 4]
  3662                                 
  3663 00001182 9C                      pushf
  3664 00001183 8B06                    mov eax, [esi]
  3665 00001185 8124242AF7FFFF          and dword [esp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3666 0000118C 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3667 00001191 090424                  or [esp], eax
  3668 00001194 9D                      popf
  3669                                 
  3670 00001195 8B02                    mov eax, [edx]
  3671 00001197 0FB119                  cmpxchg [ecx], ebx
  3672 0000119A 8902                    mov [edx], eax
  3673 0000119C 9C                      pushf
  3674 0000119D 5F                      pop edi
  3675 0000119E 8B06                    mov eax, [esi]
  3676 000011A0 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3677 000011A5 81E7D5080000            and edi, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3678 000011AB 09F8                    or eax, edi
  3679 000011AD 8906                    mov [esi], eax
  3680 000011AF 5E                      pop esi
  3681 000011B0 5F                      pop edi
  3682 000011B1 5B                      pop ebx
  3683 000011B2 C20800                  ret 8
  3684                                 [global iemAImpl_cmpxchg_u32_EndProc:function hidden]
  3685                                 iemAImpl_cmpxchg_u32_EndProc:
  3686                                 [size iemAImpl_cmpxchg_u32 iemAImpl_cmpxchg_u32_EndProc - iemAImpl_cmpxchg_u32]
  3687                                 [size iemAImpl_cmpxchg_u32_EndProc 0]
  3688 000011B5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3689                                 
  3690                                 [global iemAImpl_cmpxchg_u64]
  3691                                 iemAImpl_cmpxchg_u64:
  3692                                 
  3693                                 
  3694                                 
  3695 000011B9 56                      push esi
  3696 000011BA 57                      push edi
  3697 000011BB 53                      push ebx
  3698 000011BC 55                      push ebp
  3699                                 
  3700 000011BD 89CF                    mov edi, ecx
  3701 000011BF 89D6                    mov esi, edx
  3702 000011C1 8B4C2414                mov ecx, [esp + 16 + 4 + 0]
  3703 000011C5 8B6C2418                mov ebp, [esp + 16 + 4 + 4]
  3704                                 
  3705 000011C9 8B19                    mov ebx, [ecx]
  3706 000011CB 8B4904                  mov ecx, [ecx + 4]
  3707                                 
  3708 000011CE 9C                      pushf
  3709 000011CF 8B4500                  mov eax, [ebp]
  3710 000011D2 8124242AF7FFFF          and dword [esp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3711 000011D9 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3712 000011DE 090424                  or [esp], eax
  3713 000011E1 9D                      popf
  3714                                 
  3715 000011E2 8B06                    mov eax, [esi]
  3716 000011E4 8B5604                  mov edx, [esi + 4]
  3717                                 
  3718 000011E7 F00FC70F                lock cmpxchg8b [edi]
  3719                                 
  3720                                 
  3721 000011EB 7421                    jz .cmpxchg8b_not_equal
  3722 000011ED 39C0                    cmp eax, eax
  3723                                 .store:
  3724 000011EF 8906                    mov [esi], eax
  3725 000011F1 895604                  mov [esi + 4], edx
  3726 000011F4 9C                      pushf
  3727 000011F5 5F                      pop edi
  3728 000011F6 8B4500                  mov eax, [ebp]
  3729 000011F9 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3730 000011FE 81E7D5080000            and edi, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3731 00001204 09F8                    or eax, edi
  3732 00001206 894500                  mov [ebp], eax
  3733                                 
  3734 00001209 5D                      pop ebp
  3735 0000120A 5B                      pop ebx
  3736 0000120B 5F                      pop edi
  3737 0000120C 5E                      pop esi
  3738 0000120D C20800                  ret 8
  3739                                 
  3740                                 .cmpxchg8b_not_equal:
  3741 00001210 395604                  cmp [esi + 4], edx
  3742 00001213 75D8                    jne .store
  3743 00001215 3906                    cmp [esi], eax
  3744 00001217 EBD4                    jmp .store
  3745                                 
  3746                                 [global iemAImpl_cmpxchg_u64_EndProc:function hidden]
  3747                                 iemAImpl_cmpxchg_u64_EndProc:
  3748                                 [size iemAImpl_cmpxchg_u64 iemAImpl_cmpxchg_u64_EndProc - iemAImpl_cmpxchg_u64]
  3749                                 [size iemAImpl_cmpxchg_u64_EndProc 0]
  3750 00001219 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3751                                 %line 901+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3752                                 [global iemAImpl_cmpxchg_u8_locked]
  3753                                 %line 901+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3754                                 iemAImpl_cmpxchg_u8_locked:
  3755 0000121D 53                      push ebx
  3756 0000121E 57                      push edi
  3757 0000121F 56                      push esi
  3758 00001220 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  3759 00001224 8B742414                mov esi, [esp + 12 + 4 + 4]
  3760                                 
  3761 00001228 9C                      pushf
  3762 00001229 8B06                    mov eax, [esi]
  3763 0000122B 8124242AF7FFFF          and dword [esp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3764 00001232 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3765 00001237 090424                  or [esp], eax
  3766 0000123A 9D                      popf
  3767                                 
  3768 0000123B 8A02                    mov al, [edx]
  3769 0000123D F00FB019                lock cmpxchg [ecx], bl
  3770 00001241 8802                    mov [edx], al
  3771 00001243 9C                      pushf
  3772 00001244 5F                      pop edi
  3773 00001245 8B06                    mov eax, [esi]
  3774 00001247 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3775 0000124C 81E7D5080000            and edi, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3776 00001252 09F8                    or eax, edi
  3777 00001254 8906                    mov [esi], eax
  3778 00001256 5E                      pop esi
  3779 00001257 5F                      pop edi
  3780 00001258 5B                      pop ebx
  3781 00001259 C20800                  ret 8
  3782                                 [global iemAImpl_cmpxchg_u8_locked_EndProc:function hidden]
  3783                                 iemAImpl_cmpxchg_u8_locked_EndProc:
  3784                                 [size iemAImpl_cmpxchg_u8_locked iemAImpl_cmpxchg_u8_locked_EndProc - iemAImpl_cmpxchg_u8_locked]
  3785                                 [size iemAImpl_cmpxchg_u8_locked_EndProc 0]
  3786 0000125C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3787                                 
  3788                                 [global iemAImpl_cmpxchg_u16_locked]
  3789                                 iemAImpl_cmpxchg_u16_locked:
  3790 00001260 53                      push ebx
  3791 00001261 57                      push edi
  3792 00001262 56                      push esi
  3793 00001263 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  3794 00001267 8B742414                mov esi, [esp + 12 + 4 + 4]
  3795                                 
  3796 0000126B 9C                      pushf
  3797 0000126C 8B06                    mov eax, [esi]
  3798 0000126E 8124242AF7FFFF          and dword [esp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3799 00001275 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3800 0000127A 090424                  or [esp], eax
  3801 0000127D 9D                      popf
  3802                                 
  3803 0000127E 668B02                  mov ax, [edx]
  3804 00001281 66F00FB119              lock cmpxchg [ecx], bx
  3805 00001286 668902                  mov [edx], ax
  3806 00001289 9C                      pushf
  3807 0000128A 5F                      pop edi
  3808 0000128B 8B06                    mov eax, [esi]
  3809 0000128D 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3810 00001292 81E7D5080000            and edi, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3811 00001298 09F8                    or eax, edi
  3812 0000129A 8906                    mov [esi], eax
  3813 0000129C 5E                      pop esi
  3814 0000129D 5F                      pop edi
  3815 0000129E 5B                      pop ebx
  3816 0000129F C20800                  ret 8
  3817                                 [global iemAImpl_cmpxchg_u16_locked_EndProc:function hidden]
  3818                                 iemAImpl_cmpxchg_u16_locked_EndProc:
  3819                                 [size iemAImpl_cmpxchg_u16_locked iemAImpl_cmpxchg_u16_locked_EndProc - iemAImpl_cmpxchg_u16_locked]
  3820                                 [size iemAImpl_cmpxchg_u16_locked_EndProc 0]
  3821 000012A2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3822                                 
  3823                                 [global iemAImpl_cmpxchg_u32_locked]
  3824                                 iemAImpl_cmpxchg_u32_locked:
  3825 000012A6 53                      push ebx
  3826 000012A7 57                      push edi
  3827 000012A8 56                      push esi
  3828 000012A9 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  3829 000012AD 8B742414                mov esi, [esp + 12 + 4 + 4]
  3830                                 
  3831 000012B1 9C                      pushf
  3832 000012B2 8B06                    mov eax, [esi]
  3833 000012B4 8124242AF7FFFF          and dword [esp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3834 000012BB 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3835 000012C0 090424                  or [esp], eax
  3836 000012C3 9D                      popf
  3837                                 
  3838 000012C4 8B02                    mov eax, [edx]
  3839 000012C6 F00FB119                lock cmpxchg [ecx], ebx
  3840 000012CA 8902                    mov [edx], eax
  3841 000012CC 9C                      pushf
  3842 000012CD 5F                      pop edi
  3843 000012CE 8B06                    mov eax, [esi]
  3844 000012D0 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3845 000012D5 81E7D5080000            and edi, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3846 000012DB 09F8                    or eax, edi
  3847 000012DD 8906                    mov [esi], eax
  3848 000012DF 5E                      pop esi
  3849 000012E0 5F                      pop edi
  3850 000012E1 5B                      pop ebx
  3851 000012E2 C20800                  ret 8
  3852                                 [global iemAImpl_cmpxchg_u32_locked_EndProc:function hidden]
  3853                                 iemAImpl_cmpxchg_u32_locked_EndProc:
  3854                                 [size iemAImpl_cmpxchg_u32_locked iemAImpl_cmpxchg_u32_locked_EndProc - iemAImpl_cmpxchg_u32_locked]
  3855                                 [size iemAImpl_cmpxchg_u32_locked_EndProc 0]
  3856 000012E5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3857                                 
  3858                                 [global iemAImpl_cmpxchg_u64_locked]
  3859                                 iemAImpl_cmpxchg_u64_locked:
  3860                                 
  3861                                 
  3862                                 
  3863 000012E9 56                      push esi
  3864 000012EA 57                      push edi
  3865 000012EB 53                      push ebx
  3866 000012EC 55                      push ebp
  3867                                 
  3868 000012ED 89CF                    mov edi, ecx
  3869 000012EF 89D6                    mov esi, edx
  3870 000012F1 8B4C2414                mov ecx, [esp + 16 + 4 + 0]
  3871 000012F5 8B6C2418                mov ebp, [esp + 16 + 4 + 4]
  3872                                 
  3873 000012F9 8B19                    mov ebx, [ecx]
  3874 000012FB 8B4904                  mov ecx, [ecx + 4]
  3875                                 
  3876 000012FE 9C                      pushf
  3877 000012FF 8B4500                  mov eax, [ebp]
  3878 00001302 8124242AF7FFFF          and dword [esp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3879 00001309 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3880 0000130E 090424                  or [esp], eax
  3881 00001311 9D                      popf
  3882                                 
  3883 00001312 8B06                    mov eax, [esi]
  3884 00001314 8B5604                  mov edx, [esi + 4]
  3885                                 
  3886 00001317 F00FC70F                lock cmpxchg8b [edi]
  3887                                 
  3888                                 
  3889 0000131B 7421                    jz .cmpxchg8b_not_equal
  3890 0000131D 39C0                    cmp eax, eax
  3891                                 .store:
  3892 0000131F 8906                    mov [esi], eax
  3893 00001321 895604                  mov [esi + 4], edx
  3894 00001324 9C                      pushf
  3895 00001325 5F                      pop edi
  3896 00001326 8B4500                  mov eax, [ebp]
  3897 00001329 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3898 0000132E 81E7D5080000            and edi, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3899 00001334 09F8                    or eax, edi
  3900 00001336 894500                  mov [ebp], eax
  3901                                 
  3902 00001339 5D                      pop ebp
  3903 0000133A 5B                      pop ebx
  3904 0000133B 5F                      pop edi
  3905 0000133C 5E                      pop esi
  3906 0000133D C20800                  ret 8
  3907                                 
  3908                                 .cmpxchg8b_not_equal:
  3909 00001340 395604                  cmp [esi + 4], edx
  3910 00001343 75D8                    jne .store
  3911 00001345 3906                    cmp [esi], eax
  3912 00001347 EBD4                    jmp .store
  3913                                 
  3914                                 [global iemAImpl_cmpxchg_u64_locked_EndProc:function hidden]
  3915                                 iemAImpl_cmpxchg_u64_locked_EndProc:
  3916                                 [size iemAImpl_cmpxchg_u64_locked iemAImpl_cmpxchg_u64_locked_EndProc - iemAImpl_cmpxchg_u64_locked]
  3917                                 [size iemAImpl_cmpxchg_u64_locked_EndProc 0]
  3918 00001349 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3919                                 %line 902+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3920                                 
  3921                                 
  3922                                 
  3923                                 
  3924                                 
  3925                                 
  3926                                 
  3927                                 
  3928                                 
  3929                                 
  3930                                 
  3931                                 
  3932                                 
  3933                                 
  3934                                 
  3935                                 %line 986+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3936                                 
  3937                                 [section .text]
  3938                                 %line 987+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3939                                 [global iemAImpl_inc_u8]
  3940                                 iemAImpl_inc_u8:
  3941 0000134D 57                      push edi
  3942                                 
  3943 0000134E 9C                      pushf
  3944 0000134F 8B02                    mov eax, [edx]
  3945 00001351 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  3946 00001358 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  3947 0000135D 090424                  or [esp], eax
  3948 00001360 9D                      popf
  3949                                 
  3950 00001361 FE01                    inc byte [ecx]
  3951 00001363 9C                      pushf
  3952 00001364 5F                      pop edi
  3953 00001365 8B02                    mov eax, [edx]
  3954 00001367 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  3955 0000136C 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  3956 00001372 09F8                    or eax, edi
  3957 00001374 8902                    mov [edx], eax
  3958 00001376 5F                      pop edi
  3959 00001377 C20000                  ret 0
  3960                                 [global iemAImpl_inc_u8_EndProc:function hidden]
  3961                                 iemAImpl_inc_u8_EndProc:
  3962                                 [size iemAImpl_inc_u8 iemAImpl_inc_u8_EndProc - iemAImpl_inc_u8]
  3963                                 [size iemAImpl_inc_u8_EndProc 0]
  3964 0000137A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3965                                 
  3966                                 [global iemAImpl_inc_u8_locked]
  3967                                 iemAImpl_inc_u8_locked:
  3968 0000137E 57                      push edi
  3969                                 
  3970 0000137F 9C                      pushf
  3971 00001380 8B02                    mov eax, [edx]
  3972 00001382 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  3973 00001389 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  3974 0000138E 090424                  or [esp], eax
  3975 00001391 9D                      popf
  3976                                 
  3977 00001392 F0FE01                  lock inc byte [ecx]
  3978 00001395 9C                      pushf
  3979 00001396 5F                      pop edi
  3980 00001397 8B02                    mov eax, [edx]
  3981 00001399 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  3982 0000139E 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  3983 000013A4 09F8                    or eax, edi
  3984 000013A6 8902                    mov [edx], eax
  3985 000013A8 5F                      pop edi
  3986 000013A9 C20000                  ret 0
  3987                                 [global iemAImpl_inc_u8_locked_EndProc:function hidden]
  3988                                 iemAImpl_inc_u8_locked_EndProc:
  3989                                 [size iemAImpl_inc_u8_locked iemAImpl_inc_u8_locked_EndProc - iemAImpl_inc_u8_locked]
  3990                                 [size iemAImpl_inc_u8_locked_EndProc 0]
  3991 000013AC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3992                                 
  3993                                 [global iemAImpl_inc_u16]
  3994                                 iemAImpl_inc_u16:
  3995 000013B0 57                      push edi
  3996                                 
  3997 000013B1 9C                      pushf
  3998 000013B2 8B02                    mov eax, [edx]
  3999 000013B4 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4000 000013BB 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4001 000013C0 090424                  or [esp], eax
  4002 000013C3 9D                      popf
  4003                                 
  4004 000013C4 66FF01                  inc word [ecx]
  4005 000013C7 9C                      pushf
  4006 000013C8 5F                      pop edi
  4007 000013C9 8B02                    mov eax, [edx]
  4008 000013CB 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4009 000013D0 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4010 000013D6 09F8                    or eax, edi
  4011 000013D8 8902                    mov [edx], eax
  4012 000013DA 5F                      pop edi
  4013 000013DB C20000                  ret 0
  4014                                 [global iemAImpl_inc_u16_EndProc:function hidden]
  4015                                 iemAImpl_inc_u16_EndProc:
  4016                                 [size iemAImpl_inc_u16 iemAImpl_inc_u16_EndProc - iemAImpl_inc_u16]
  4017                                 [size iemAImpl_inc_u16_EndProc 0]
  4018 000013DE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4019                                 
  4020                                 [global iemAImpl_inc_u16_locked]
  4021                                 iemAImpl_inc_u16_locked:
  4022 000013E2 57                      push edi
  4023                                 
  4024 000013E3 9C                      pushf
  4025 000013E4 8B02                    mov eax, [edx]
  4026 000013E6 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4027 000013ED 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4028 000013F2 090424                  or [esp], eax
  4029 000013F5 9D                      popf
  4030                                 
  4031 000013F6 66F0FF01                lock inc word [ecx]
  4032 000013FA 9C                      pushf
  4033 000013FB 5F                      pop edi
  4034 000013FC 8B02                    mov eax, [edx]
  4035 000013FE 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4036 00001403 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4037 00001409 09F8                    or eax, edi
  4038 0000140B 8902                    mov [edx], eax
  4039 0000140D 5F                      pop edi
  4040 0000140E C20000                  ret 0
  4041                                 [global iemAImpl_inc_u16_locked_EndProc:function hidden]
  4042                                 iemAImpl_inc_u16_locked_EndProc:
  4043                                 [size iemAImpl_inc_u16_locked iemAImpl_inc_u16_locked_EndProc - iemAImpl_inc_u16_locked]
  4044                                 [size iemAImpl_inc_u16_locked_EndProc 0]
  4045 00001411 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4046                                 
  4047                                 [global iemAImpl_inc_u32]
  4048                                 iemAImpl_inc_u32:
  4049 00001415 57                      push edi
  4050                                 
  4051 00001416 9C                      pushf
  4052 00001417 8B02                    mov eax, [edx]
  4053 00001419 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4054 00001420 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4055 00001425 090424                  or [esp], eax
  4056 00001428 9D                      popf
  4057                                 
  4058 00001429 FF01                    inc dword [ecx]
  4059 0000142B 9C                      pushf
  4060 0000142C 5F                      pop edi
  4061 0000142D 8B02                    mov eax, [edx]
  4062 0000142F 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4063 00001434 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4064 0000143A 09F8                    or eax, edi
  4065 0000143C 8902                    mov [edx], eax
  4066 0000143E 5F                      pop edi
  4067 0000143F C20000                  ret 0
  4068                                 [global iemAImpl_inc_u32_EndProc:function hidden]
  4069                                 iemAImpl_inc_u32_EndProc:
  4070                                 [size iemAImpl_inc_u32 iemAImpl_inc_u32_EndProc - iemAImpl_inc_u32]
  4071                                 [size iemAImpl_inc_u32_EndProc 0]
  4072 00001442 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4073                                 
  4074                                 [global iemAImpl_inc_u32_locked]
  4075                                 iemAImpl_inc_u32_locked:
  4076 00001446 57                      push edi
  4077                                 
  4078 00001447 9C                      pushf
  4079 00001448 8B02                    mov eax, [edx]
  4080 0000144A 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4081 00001451 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4082 00001456 090424                  or [esp], eax
  4083 00001459 9D                      popf
  4084                                 
  4085 0000145A F0FF01                  lock inc dword [ecx]
  4086 0000145D 9C                      pushf
  4087 0000145E 5F                      pop edi
  4088 0000145F 8B02                    mov eax, [edx]
  4089 00001461 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4090 00001466 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4091 0000146C 09F8                    or eax, edi
  4092 0000146E 8902                    mov [edx], eax
  4093 00001470 5F                      pop edi
  4094 00001471 C20000                  ret 0
  4095                                 [global iemAImpl_inc_u32_locked_EndProc:function hidden]
  4096                                 iemAImpl_inc_u32_locked_EndProc:
  4097                                 [size iemAImpl_inc_u32_locked iemAImpl_inc_u32_locked_EndProc - iemAImpl_inc_u32_locked]
  4098                                 [size iemAImpl_inc_u32_locked_EndProc 0]
  4099 00001474 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4100                                 
  4101                                 
  4102                                 %line 988+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4103                                 [section .text]
  4104                                 %line 988+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4105                                 [global iemAImpl_dec_u8]
  4106                                 iemAImpl_dec_u8:
  4107 00001478 57                      push edi
  4108                                 
  4109 00001479 9C                      pushf
  4110 0000147A 8B02                    mov eax, [edx]
  4111 0000147C 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4112 00001483 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4113 00001488 090424                  or [esp], eax
  4114 0000148B 9D                      popf
  4115                                 
  4116 0000148C FE09                    dec byte [ecx]
  4117 0000148E 9C                      pushf
  4118 0000148F 5F                      pop edi
  4119 00001490 8B02                    mov eax, [edx]
  4120 00001492 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4121 00001497 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4122 0000149D 09F8                    or eax, edi
  4123 0000149F 8902                    mov [edx], eax
  4124 000014A1 5F                      pop edi
  4125 000014A2 C20000                  ret 0
  4126                                 [global iemAImpl_dec_u8_EndProc:function hidden]
  4127                                 iemAImpl_dec_u8_EndProc:
  4128                                 [size iemAImpl_dec_u8 iemAImpl_dec_u8_EndProc - iemAImpl_dec_u8]
  4129                                 [size iemAImpl_dec_u8_EndProc 0]
  4130 000014A5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4131                                 
  4132                                 [global iemAImpl_dec_u8_locked]
  4133                                 iemAImpl_dec_u8_locked:
  4134 000014A9 57                      push edi
  4135                                 
  4136 000014AA 9C                      pushf
  4137 000014AB 8B02                    mov eax, [edx]
  4138 000014AD 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4139 000014B4 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4140 000014B9 090424                  or [esp], eax
  4141 000014BC 9D                      popf
  4142                                 
  4143 000014BD F0FE09                  lock dec byte [ecx]
  4144 000014C0 9C                      pushf
  4145 000014C1 5F                      pop edi
  4146 000014C2 8B02                    mov eax, [edx]
  4147 000014C4 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4148 000014C9 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4149 000014CF 09F8                    or eax, edi
  4150 000014D1 8902                    mov [edx], eax
  4151 000014D3 5F                      pop edi
  4152 000014D4 C20000                  ret 0
  4153                                 [global iemAImpl_dec_u8_locked_EndProc:function hidden]
  4154                                 iemAImpl_dec_u8_locked_EndProc:
  4155                                 [size iemAImpl_dec_u8_locked iemAImpl_dec_u8_locked_EndProc - iemAImpl_dec_u8_locked]
  4156                                 [size iemAImpl_dec_u8_locked_EndProc 0]
  4157 000014D7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4158                                 
  4159                                 [global iemAImpl_dec_u16]
  4160                                 iemAImpl_dec_u16:
  4161 000014DB 57                      push edi
  4162                                 
  4163 000014DC 9C                      pushf
  4164 000014DD 8B02                    mov eax, [edx]
  4165 000014DF 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4166 000014E6 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4167 000014EB 090424                  or [esp], eax
  4168 000014EE 9D                      popf
  4169                                 
  4170 000014EF 66FF09                  dec word [ecx]
  4171 000014F2 9C                      pushf
  4172 000014F3 5F                      pop edi
  4173 000014F4 8B02                    mov eax, [edx]
  4174 000014F6 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4175 000014FB 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4176 00001501 09F8                    or eax, edi
  4177 00001503 8902                    mov [edx], eax
  4178 00001505 5F                      pop edi
  4179 00001506 C20000                  ret 0
  4180                                 [global iemAImpl_dec_u16_EndProc:function hidden]
  4181                                 iemAImpl_dec_u16_EndProc:
  4182                                 [size iemAImpl_dec_u16 iemAImpl_dec_u16_EndProc - iemAImpl_dec_u16]
  4183                                 [size iemAImpl_dec_u16_EndProc 0]
  4184 00001509 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4185                                 
  4186                                 [global iemAImpl_dec_u16_locked]
  4187                                 iemAImpl_dec_u16_locked:
  4188 0000150D 57                      push edi
  4189                                 
  4190 0000150E 9C                      pushf
  4191 0000150F 8B02                    mov eax, [edx]
  4192 00001511 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4193 00001518 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4194 0000151D 090424                  or [esp], eax
  4195 00001520 9D                      popf
  4196                                 
  4197 00001521 66F0FF09                lock dec word [ecx]
  4198 00001525 9C                      pushf
  4199 00001526 5F                      pop edi
  4200 00001527 8B02                    mov eax, [edx]
  4201 00001529 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4202 0000152E 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4203 00001534 09F8                    or eax, edi
  4204 00001536 8902                    mov [edx], eax
  4205 00001538 5F                      pop edi
  4206 00001539 C20000                  ret 0
  4207                                 [global iemAImpl_dec_u16_locked_EndProc:function hidden]
  4208                                 iemAImpl_dec_u16_locked_EndProc:
  4209                                 [size iemAImpl_dec_u16_locked iemAImpl_dec_u16_locked_EndProc - iemAImpl_dec_u16_locked]
  4210                                 [size iemAImpl_dec_u16_locked_EndProc 0]
  4211 0000153C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4212                                 
  4213                                 [global iemAImpl_dec_u32]
  4214                                 iemAImpl_dec_u32:
  4215 00001540 57                      push edi
  4216                                 
  4217 00001541 9C                      pushf
  4218 00001542 8B02                    mov eax, [edx]
  4219 00001544 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4220 0000154B 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4221 00001550 090424                  or [esp], eax
  4222 00001553 9D                      popf
  4223                                 
  4224 00001554 FF09                    dec dword [ecx]
  4225 00001556 9C                      pushf
  4226 00001557 5F                      pop edi
  4227 00001558 8B02                    mov eax, [edx]
  4228 0000155A 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4229 0000155F 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4230 00001565 09F8                    or eax, edi
  4231 00001567 8902                    mov [edx], eax
  4232 00001569 5F                      pop edi
  4233 0000156A C20000                  ret 0
  4234                                 [global iemAImpl_dec_u32_EndProc:function hidden]
  4235                                 iemAImpl_dec_u32_EndProc:
  4236                                 [size iemAImpl_dec_u32 iemAImpl_dec_u32_EndProc - iemAImpl_dec_u32]
  4237                                 [size iemAImpl_dec_u32_EndProc 0]
  4238 0000156D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4239                                 
  4240                                 [global iemAImpl_dec_u32_locked]
  4241                                 iemAImpl_dec_u32_locked:
  4242 00001571 57                      push edi
  4243                                 
  4244 00001572 9C                      pushf
  4245 00001573 8B02                    mov eax, [edx]
  4246 00001575 8124242BF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4247 0000157C 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4248 00001581 090424                  or [esp], eax
  4249 00001584 9D                      popf
  4250                                 
  4251 00001585 F0FF09                  lock dec dword [ecx]
  4252 00001588 9C                      pushf
  4253 00001589 5F                      pop edi
  4254 0000158A 8B02                    mov eax, [edx]
  4255 0000158C 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4256 00001591 81E7D4080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4257 00001597 09F8                    or eax, edi
  4258 00001599 8902                    mov [edx], eax
  4259 0000159B 5F                      pop edi
  4260 0000159C C20000                  ret 0
  4261                                 [global iemAImpl_dec_u32_locked_EndProc:function hidden]
  4262                                 iemAImpl_dec_u32_locked_EndProc:
  4263                                 [size iemAImpl_dec_u32_locked iemAImpl_dec_u32_locked_EndProc - iemAImpl_dec_u32_locked]
  4264                                 [size iemAImpl_dec_u32_locked_EndProc 0]
  4265 0000159F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4266                                 
  4267                                 
  4268                                 %line 989+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4269                                 [section .text]
  4270                                 %line 989+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4271                                 [global iemAImpl_neg_u8]
  4272                                 iemAImpl_neg_u8:
  4273 000015A3 57                      push edi
  4274                                 
  4275 000015A4 9C                      pushf
  4276 000015A5 8B02                    mov eax, [edx]
  4277 000015A7 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4278 000015AE 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4279 000015B3 090424                  or [esp], eax
  4280 000015B6 9D                      popf
  4281                                 
  4282 000015B7 F619                    neg byte [ecx]
  4283 000015B9 9C                      pushf
  4284 000015BA 5F                      pop edi
  4285 000015BB 8B02                    mov eax, [edx]
  4286 000015BD 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4287 000015C2 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4288 000015C8 09F8                    or eax, edi
  4289 000015CA 8902                    mov [edx], eax
  4290 000015CC 5F                      pop edi
  4291 000015CD C20000                  ret 0
  4292                                 [global iemAImpl_neg_u8_EndProc:function hidden]
  4293                                 iemAImpl_neg_u8_EndProc:
  4294                                 [size iemAImpl_neg_u8 iemAImpl_neg_u8_EndProc - iemAImpl_neg_u8]
  4295                                 [size iemAImpl_neg_u8_EndProc 0]
  4296 000015D0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4297                                 
  4298                                 [global iemAImpl_neg_u8_locked]
  4299                                 iemAImpl_neg_u8_locked:
  4300 000015D4 57                      push edi
  4301                                 
  4302 000015D5 9C                      pushf
  4303 000015D6 8B02                    mov eax, [edx]
  4304 000015D8 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4305 000015DF 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4306 000015E4 090424                  or [esp], eax
  4307 000015E7 9D                      popf
  4308                                 
  4309 000015E8 F0F619                  lock neg byte [ecx]
  4310 000015EB 9C                      pushf
  4311 000015EC 5F                      pop edi
  4312 000015ED 8B02                    mov eax, [edx]
  4313 000015EF 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4314 000015F4 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4315 000015FA 09F8                    or eax, edi
  4316 000015FC 8902                    mov [edx], eax
  4317 000015FE 5F                      pop edi
  4318 000015FF C20000                  ret 0
  4319                                 [global iemAImpl_neg_u8_locked_EndProc:function hidden]
  4320                                 iemAImpl_neg_u8_locked_EndProc:
  4321                                 [size iemAImpl_neg_u8_locked iemAImpl_neg_u8_locked_EndProc - iemAImpl_neg_u8_locked]
  4322                                 [size iemAImpl_neg_u8_locked_EndProc 0]
  4323 00001602 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4324                                 
  4325                                 [global iemAImpl_neg_u16]
  4326                                 iemAImpl_neg_u16:
  4327 00001606 57                      push edi
  4328                                 
  4329 00001607 9C                      pushf
  4330 00001608 8B02                    mov eax, [edx]
  4331 0000160A 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4332 00001611 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4333 00001616 090424                  or [esp], eax
  4334 00001619 9D                      popf
  4335                                 
  4336 0000161A 66F719                  neg word [ecx]
  4337 0000161D 9C                      pushf
  4338 0000161E 5F                      pop edi
  4339 0000161F 8B02                    mov eax, [edx]
  4340 00001621 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4341 00001626 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4342 0000162C 09F8                    or eax, edi
  4343 0000162E 8902                    mov [edx], eax
  4344 00001630 5F                      pop edi
  4345 00001631 C20000                  ret 0
  4346                                 [global iemAImpl_neg_u16_EndProc:function hidden]
  4347                                 iemAImpl_neg_u16_EndProc:
  4348                                 [size iemAImpl_neg_u16 iemAImpl_neg_u16_EndProc - iemAImpl_neg_u16]
  4349                                 [size iemAImpl_neg_u16_EndProc 0]
  4350 00001634 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4351                                 
  4352                                 [global iemAImpl_neg_u16_locked]
  4353                                 iemAImpl_neg_u16_locked:
  4354 00001638 57                      push edi
  4355                                 
  4356 00001639 9C                      pushf
  4357 0000163A 8B02                    mov eax, [edx]
  4358 0000163C 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4359 00001643 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4360 00001648 090424                  or [esp], eax
  4361 0000164B 9D                      popf
  4362                                 
  4363 0000164C 66F0F719                lock neg word [ecx]
  4364 00001650 9C                      pushf
  4365 00001651 5F                      pop edi
  4366 00001652 8B02                    mov eax, [edx]
  4367 00001654 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4368 00001659 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4369 0000165F 09F8                    or eax, edi
  4370 00001661 8902                    mov [edx], eax
  4371 00001663 5F                      pop edi
  4372 00001664 C20000                  ret 0
  4373                                 [global iemAImpl_neg_u16_locked_EndProc:function hidden]
  4374                                 iemAImpl_neg_u16_locked_EndProc:
  4375                                 [size iemAImpl_neg_u16_locked iemAImpl_neg_u16_locked_EndProc - iemAImpl_neg_u16_locked]
  4376                                 [size iemAImpl_neg_u16_locked_EndProc 0]
  4377 00001667 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4378                                 
  4379                                 [global iemAImpl_neg_u32]
  4380                                 iemAImpl_neg_u32:
  4381 0000166B 57                      push edi
  4382                                 
  4383 0000166C 9C                      pushf
  4384 0000166D 8B02                    mov eax, [edx]
  4385 0000166F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4386 00001676 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4387 0000167B 090424                  or [esp], eax
  4388 0000167E 9D                      popf
  4389                                 
  4390 0000167F F719                    neg dword [ecx]
  4391 00001681 9C                      pushf
  4392 00001682 5F                      pop edi
  4393 00001683 8B02                    mov eax, [edx]
  4394 00001685 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4395 0000168A 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4396 00001690 09F8                    or eax, edi
  4397 00001692 8902                    mov [edx], eax
  4398 00001694 5F                      pop edi
  4399 00001695 C20000                  ret 0
  4400                                 [global iemAImpl_neg_u32_EndProc:function hidden]
  4401                                 iemAImpl_neg_u32_EndProc:
  4402                                 [size iemAImpl_neg_u32 iemAImpl_neg_u32_EndProc - iemAImpl_neg_u32]
  4403                                 [size iemAImpl_neg_u32_EndProc 0]
  4404 00001698 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4405                                 
  4406                                 [global iemAImpl_neg_u32_locked]
  4407                                 iemAImpl_neg_u32_locked:
  4408 0000169C 57                      push edi
  4409                                 
  4410 0000169D 9C                      pushf
  4411 0000169E 8B02                    mov eax, [edx]
  4412 000016A0 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4413 000016A7 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4414 000016AC 090424                  or [esp], eax
  4415 000016AF 9D                      popf
  4416                                 
  4417 000016B0 F0F719                  lock neg dword [ecx]
  4418 000016B3 9C                      pushf
  4419 000016B4 5F                      pop edi
  4420 000016B5 8B02                    mov eax, [edx]
  4421 000016B7 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4422 000016BC 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4423 000016C2 09F8                    or eax, edi
  4424 000016C4 8902                    mov [edx], eax
  4425 000016C6 5F                      pop edi
  4426 000016C7 C20000                  ret 0
  4427                                 [global iemAImpl_neg_u32_locked_EndProc:function hidden]
  4428                                 iemAImpl_neg_u32_locked_EndProc:
  4429                                 [size iemAImpl_neg_u32_locked iemAImpl_neg_u32_locked_EndProc - iemAImpl_neg_u32_locked]
  4430                                 [size iemAImpl_neg_u32_locked_EndProc 0]
  4431 000016CA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4432                                 
  4433                                 
  4434                                 %line 990+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4435                                 [section .text]
  4436                                 %line 990+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4437                                 [global iemAImpl_not_u8]
  4438                                 iemAImpl_not_u8:
  4439 000016CE 57                      push edi
  4440                                 
  4441 000016CF 9C                      pushf
  4442 000016D0 8B02                    mov eax, [edx]
  4443 000016D2 832424FF                and dword [esp], ~(0 | 0)
  4444 000016D6 83E000                  and eax, (0 | 0)
  4445 000016D9 090424                  or [esp], eax
  4446 000016DC 9D                      popf
  4447                                 
  4448 000016DD F611                    not byte [ecx]
  4449 000016DF 5F                      pop edi
  4450 000016E0 C20000                  ret 0
  4451                                 [global iemAImpl_not_u8_EndProc:function hidden]
  4452                                 iemAImpl_not_u8_EndProc:
  4453                                 [size iemAImpl_not_u8 iemAImpl_not_u8_EndProc - iemAImpl_not_u8]
  4454                                 [size iemAImpl_not_u8_EndProc 0]
  4455 000016E3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4456                                 
  4457                                 [global iemAImpl_not_u8_locked]
  4458                                 iemAImpl_not_u8_locked:
  4459 000016E7 57                      push edi
  4460                                 
  4461 000016E8 9C                      pushf
  4462 000016E9 8B02                    mov eax, [edx]
  4463 000016EB 832424FF                and dword [esp], ~(0 | 0)
  4464 000016EF 83E000                  and eax, (0 | 0)
  4465 000016F2 090424                  or [esp], eax
  4466 000016F5 9D                      popf
  4467                                 
  4468 000016F6 F0F611                  lock not byte [ecx]
  4469 000016F9 5F                      pop edi
  4470 000016FA C20000                  ret 0
  4471                                 [global iemAImpl_not_u8_locked_EndProc:function hidden]
  4472                                 iemAImpl_not_u8_locked_EndProc:
  4473                                 [size iemAImpl_not_u8_locked iemAImpl_not_u8_locked_EndProc - iemAImpl_not_u8_locked]
  4474                                 [size iemAImpl_not_u8_locked_EndProc 0]
  4475 000016FD CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4476                                 
  4477                                 [global iemAImpl_not_u16]
  4478                                 iemAImpl_not_u16:
  4479 00001701 57                      push edi
  4480                                 
  4481 00001702 9C                      pushf
  4482 00001703 8B02                    mov eax, [edx]
  4483 00001705 832424FF                and dword [esp], ~(0 | 0)
  4484 00001709 83E000                  and eax, (0 | 0)
  4485 0000170C 090424                  or [esp], eax
  4486 0000170F 9D                      popf
  4487                                 
  4488 00001710 66F711                  not word [ecx]
  4489 00001713 5F                      pop edi
  4490 00001714 C20000                  ret 0
  4491                                 [global iemAImpl_not_u16_EndProc:function hidden]
  4492                                 iemAImpl_not_u16_EndProc:
  4493                                 [size iemAImpl_not_u16 iemAImpl_not_u16_EndProc - iemAImpl_not_u16]
  4494                                 [size iemAImpl_not_u16_EndProc 0]
  4495 00001717 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4496                                 
  4497                                 [global iemAImpl_not_u16_locked]
  4498                                 iemAImpl_not_u16_locked:
  4499 0000171B 57                      push edi
  4500                                 
  4501 0000171C 9C                      pushf
  4502 0000171D 8B02                    mov eax, [edx]
  4503 0000171F 832424FF                and dword [esp], ~(0 | 0)
  4504 00001723 83E000                  and eax, (0 | 0)
  4505 00001726 090424                  or [esp], eax
  4506 00001729 9D                      popf
  4507                                 
  4508 0000172A 66F0F711                lock not word [ecx]
  4509 0000172E 5F                      pop edi
  4510 0000172F C20000                  ret 0
  4511                                 [global iemAImpl_not_u16_locked_EndProc:function hidden]
  4512                                 iemAImpl_not_u16_locked_EndProc:
  4513                                 [size iemAImpl_not_u16_locked iemAImpl_not_u16_locked_EndProc - iemAImpl_not_u16_locked]
  4514                                 [size iemAImpl_not_u16_locked_EndProc 0]
  4515 00001732 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4516                                 
  4517                                 [global iemAImpl_not_u32]
  4518                                 iemAImpl_not_u32:
  4519 00001736 57                      push edi
  4520                                 
  4521 00001737 9C                      pushf
  4522 00001738 8B02                    mov eax, [edx]
  4523 0000173A 832424FF                and dword [esp], ~(0 | 0)
  4524 0000173E 83E000                  and eax, (0 | 0)
  4525 00001741 090424                  or [esp], eax
  4526 00001744 9D                      popf
  4527                                 
  4528 00001745 F711                    not dword [ecx]
  4529 00001747 5F                      pop edi
  4530 00001748 C20000                  ret 0
  4531                                 [global iemAImpl_not_u32_EndProc:function hidden]
  4532                                 iemAImpl_not_u32_EndProc:
  4533                                 [size iemAImpl_not_u32 iemAImpl_not_u32_EndProc - iemAImpl_not_u32]
  4534                                 [size iemAImpl_not_u32_EndProc 0]
  4535 0000174B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4536                                 
  4537                                 [global iemAImpl_not_u32_locked]
  4538                                 iemAImpl_not_u32_locked:
  4539 0000174F 57                      push edi
  4540                                 
  4541 00001750 9C                      pushf
  4542 00001751 8B02                    mov eax, [edx]
  4543 00001753 832424FF                and dword [esp], ~(0 | 0)
  4544 00001757 83E000                  and eax, (0 | 0)
  4545 0000175A 090424                  or [esp], eax
  4546 0000175D 9D                      popf
  4547                                 
  4548 0000175E F0F711                  lock not dword [ecx]
  4549 00001761 5F                      pop edi
  4550 00001762 C20000                  ret 0
  4551                                 [global iemAImpl_not_u32_locked_EndProc:function hidden]
  4552                                 iemAImpl_not_u32_locked_EndProc:
  4553                                 [size iemAImpl_not_u32_locked iemAImpl_not_u32_locked_EndProc - iemAImpl_not_u32_locked]
  4554                                 [size iemAImpl_not_u32_locked_EndProc 0]
  4555 00001765 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4556                                 
  4557                                 
  4558                                 %line 991+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4559                                 
  4560                                 
  4561                                 
  4562                                 
  4563                                 
  4564                                 
  4565                                 
  4566                                 
  4567                                 
  4568                                 %line 1007+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4569                                 
  4570                                 [section .text]
  4571                                 %line 1008+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4572                                 [global iemAImpl_lfence]
  4573                                 iemAImpl_lfence:
  4574 00001769 0FAEE8                  lfence
  4575 0000176C C3                      ret
  4576                                 [global iemAImpl_lfence_EndProc:function hidden]
  4577                                 iemAImpl_lfence_EndProc:
  4578                                 [size iemAImpl_lfence iemAImpl_lfence_EndProc - iemAImpl_lfence]
  4579                                 [size iemAImpl_lfence_EndProc 0]
  4580 0000176D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4581                                 %line 1009+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4582                                 [section .text]
  4583                                 %line 1009+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4584                                 [global iemAImpl_sfence]
  4585                                 iemAImpl_sfence:
  4586 00001771 0FAEF8                  sfence
  4587 00001774 C3                      ret
  4588                                 [global iemAImpl_sfence_EndProc:function hidden]
  4589                                 iemAImpl_sfence_EndProc:
  4590                                 [size iemAImpl_sfence iemAImpl_sfence_EndProc - iemAImpl_sfence]
  4591                                 [size iemAImpl_sfence_EndProc 0]
  4592 00001775 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4593                                 %line 1010+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4594                                 [section .text]
  4595                                 %line 1010+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4596                                 [global iemAImpl_mfence]
  4597                                 iemAImpl_mfence:
  4598 00001779 0FAEF0                  mfence
  4599 0000177C C3                      ret
  4600                                 [global iemAImpl_mfence_EndProc:function hidden]
  4601                                 iemAImpl_mfence_EndProc:
  4602                                 [size iemAImpl_mfence iemAImpl_mfence_EndProc - iemAImpl_mfence]
  4603                                 [size iemAImpl_mfence_EndProc 0]
  4604 0000177D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4605                                 %line 1011+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4606                                 
  4607                                 
  4608                                 
  4609                                 
  4610                                 [global iemAImpl_alt_mem_fence]
  4611                                 %line 1015+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4612                                 iemAImpl_alt_mem_fence:
  4613                                 %line 1016+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4614 00001781 50                      push eax
  4615 00001782 870424                  xchg eax, [esp]
  4616 00001785 83C404                  add esp, 4
  4617 00001788 C3                      ret
  4618                                 [global iemAImpl_alt_mem_fence_EndProc:function hidden]
  4619                                 %line 1020+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4620                                 iemAImpl_alt_mem_fence_EndProc:
  4621                                 [size iemAImpl_alt_mem_fence iemAImpl_alt_mem_fence_EndProc - iemAImpl_alt_mem_fence]
  4622                                 [size iemAImpl_alt_mem_fence_EndProc 0]
  4623 00001789 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4624                                 %line 1021+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4625                                 
  4626                                 
  4627                                 
  4628                                 
  4629                                 
  4630                                 
  4631                                 
  4632                                 
  4633                                 
  4634                                 
  4635                                 
  4636                                 
  4637                                 
  4638                                 
  4639                                 
  4640                                 
  4641                                 
  4642                                 
  4643                                 %line 1100+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4644                                 
  4645                                 [section .text]
  4646                                 %line 1101+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4647                                 [global iemAImpl_rol_u8]
  4648                                 iemAImpl_rol_u8:
  4649 0000178D 53                      push ebx
  4650 0000178E 8B5C2408                mov ebx, [esp + 4 + 4]
  4651 00001792 57                      push edi
  4652                                 
  4653 00001793 9C                      pushf
  4654 00001794 8B03                    mov eax, [ebx]
  4655 00001796 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4656 0000179D 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4657 000017A2 090424                  or [esp], eax
  4658 000017A5 9D                      popf
  4659                                 
  4660 000017A6 87CA                    xchg edx, ecx
  4661 000017A8 D202                    rol byte [edx], cl
  4662 000017AA 9C                      pushf
  4663 000017AB 5F                      pop edi
  4664 000017AC 8B03                    mov eax, [ebx]
  4665 000017AE 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4666 000017B3 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4667 000017B9 09F8                    or eax, edi
  4668 000017BB 8903                    mov [ebx], eax
  4669 000017BD 5F                      pop edi
  4670 000017BE 5B                      pop ebx
  4671 000017BF C20400                  ret 4
  4672                                 [global iemAImpl_rol_u8_EndProc:function hidden]
  4673                                 iemAImpl_rol_u8_EndProc:
  4674                                 [size iemAImpl_rol_u8 iemAImpl_rol_u8_EndProc - iemAImpl_rol_u8]
  4675                                 [size iemAImpl_rol_u8_EndProc 0]
  4676 000017C2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4677                                 
  4678                                 [global iemAImpl_rol_u16]
  4679                                 iemAImpl_rol_u16:
  4680 000017C6 53                      push ebx
  4681 000017C7 8B5C2408                mov ebx, [esp + 4 + 4]
  4682 000017CB 57                      push edi
  4683                                 
  4684 000017CC 9C                      pushf
  4685 000017CD 8B03                    mov eax, [ebx]
  4686 000017CF 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4687 000017D6 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4688 000017DB 090424                  or [esp], eax
  4689 000017DE 9D                      popf
  4690                                 
  4691 000017DF 87CA                    xchg edx, ecx
  4692 000017E1 66D302                  rol word [edx], cl
  4693 000017E4 9C                      pushf
  4694 000017E5 5F                      pop edi
  4695 000017E6 8B03                    mov eax, [ebx]
  4696 000017E8 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4697 000017ED 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4698 000017F3 09F8                    or eax, edi
  4699 000017F5 8903                    mov [ebx], eax
  4700 000017F7 5F                      pop edi
  4701 000017F8 5B                      pop ebx
  4702 000017F9 C20400                  ret 4
  4703                                 [global iemAImpl_rol_u16_EndProc:function hidden]
  4704                                 iemAImpl_rol_u16_EndProc:
  4705                                 [size iemAImpl_rol_u16 iemAImpl_rol_u16_EndProc - iemAImpl_rol_u16]
  4706                                 [size iemAImpl_rol_u16_EndProc 0]
  4707 000017FC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4708                                 
  4709                                 [global iemAImpl_rol_u32]
  4710                                 iemAImpl_rol_u32:
  4711 00001800 53                      push ebx
  4712 00001801 8B5C2408                mov ebx, [esp + 4 + 4]
  4713 00001805 57                      push edi
  4714                                 
  4715 00001806 9C                      pushf
  4716 00001807 8B03                    mov eax, [ebx]
  4717 00001809 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4718 00001810 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4719 00001815 090424                  or [esp], eax
  4720 00001818 9D                      popf
  4721                                 
  4722 00001819 87CA                    xchg edx, ecx
  4723 0000181B D302                    rol dword [edx], cl
  4724 0000181D 9C                      pushf
  4725 0000181E 5F                      pop edi
  4726 0000181F 8B03                    mov eax, [ebx]
  4727 00001821 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4728 00001826 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4729 0000182C 09F8                    or eax, edi
  4730 0000182E 8903                    mov [ebx], eax
  4731 00001830 5F                      pop edi
  4732 00001831 5B                      pop ebx
  4733 00001832 C20400                  ret 4
  4734                                 [global iemAImpl_rol_u32_EndProc:function hidden]
  4735                                 iemAImpl_rol_u32_EndProc:
  4736                                 [size iemAImpl_rol_u32 iemAImpl_rol_u32_EndProc - iemAImpl_rol_u32]
  4737                                 [size iemAImpl_rol_u32_EndProc 0]
  4738 00001835 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4739                                 
  4740                                 
  4741                                 %line 1102+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4742                                 [section .text]
  4743                                 %line 1102+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4744                                 [global iemAImpl_ror_u8]
  4745                                 iemAImpl_ror_u8:
  4746 00001839 53                      push ebx
  4747 0000183A 8B5C2408                mov ebx, [esp + 4 + 4]
  4748 0000183E 57                      push edi
  4749                                 
  4750 0000183F 9C                      pushf
  4751 00001840 8B03                    mov eax, [ebx]
  4752 00001842 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4753 00001849 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4754 0000184E 090424                  or [esp], eax
  4755 00001851 9D                      popf
  4756                                 
  4757 00001852 87CA                    xchg edx, ecx
  4758 00001854 D20A                    ror byte [edx], cl
  4759 00001856 9C                      pushf
  4760 00001857 5F                      pop edi
  4761 00001858 8B03                    mov eax, [ebx]
  4762 0000185A 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4763 0000185F 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4764 00001865 09F8                    or eax, edi
  4765 00001867 8903                    mov [ebx], eax
  4766 00001869 5F                      pop edi
  4767 0000186A 5B                      pop ebx
  4768 0000186B C20400                  ret 4
  4769                                 [global iemAImpl_ror_u8_EndProc:function hidden]
  4770                                 iemAImpl_ror_u8_EndProc:
  4771                                 [size iemAImpl_ror_u8 iemAImpl_ror_u8_EndProc - iemAImpl_ror_u8]
  4772                                 [size iemAImpl_ror_u8_EndProc 0]
  4773 0000186E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4774                                 
  4775                                 [global iemAImpl_ror_u16]
  4776                                 iemAImpl_ror_u16:
  4777 00001872 53                      push ebx
  4778 00001873 8B5C2408                mov ebx, [esp + 4 + 4]
  4779 00001877 57                      push edi
  4780                                 
  4781 00001878 9C                      pushf
  4782 00001879 8B03                    mov eax, [ebx]
  4783 0000187B 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4784 00001882 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4785 00001887 090424                  or [esp], eax
  4786 0000188A 9D                      popf
  4787                                 
  4788 0000188B 87CA                    xchg edx, ecx
  4789 0000188D 66D30A                  ror word [edx], cl
  4790 00001890 9C                      pushf
  4791 00001891 5F                      pop edi
  4792 00001892 8B03                    mov eax, [ebx]
  4793 00001894 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4794 00001899 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4795 0000189F 09F8                    or eax, edi
  4796 000018A1 8903                    mov [ebx], eax
  4797 000018A3 5F                      pop edi
  4798 000018A4 5B                      pop ebx
  4799 000018A5 C20400                  ret 4
  4800                                 [global iemAImpl_ror_u16_EndProc:function hidden]
  4801                                 iemAImpl_ror_u16_EndProc:
  4802                                 [size iemAImpl_ror_u16 iemAImpl_ror_u16_EndProc - iemAImpl_ror_u16]
  4803                                 [size iemAImpl_ror_u16_EndProc 0]
  4804 000018A8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4805                                 
  4806                                 [global iemAImpl_ror_u32]
  4807                                 iemAImpl_ror_u32:
  4808 000018AC 53                      push ebx
  4809 000018AD 8B5C2408                mov ebx, [esp + 4 + 4]
  4810 000018B1 57                      push edi
  4811                                 
  4812 000018B2 9C                      pushf
  4813 000018B3 8B03                    mov eax, [ebx]
  4814 000018B5 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4815 000018BC 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4816 000018C1 090424                  or [esp], eax
  4817 000018C4 9D                      popf
  4818                                 
  4819 000018C5 87CA                    xchg edx, ecx
  4820 000018C7 D30A                    ror dword [edx], cl
  4821 000018C9 9C                      pushf
  4822 000018CA 5F                      pop edi
  4823 000018CB 8B03                    mov eax, [ebx]
  4824 000018CD 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4825 000018D2 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4826 000018D8 09F8                    or eax, edi
  4827 000018DA 8903                    mov [ebx], eax
  4828 000018DC 5F                      pop edi
  4829 000018DD 5B                      pop ebx
  4830 000018DE C20400                  ret 4
  4831                                 [global iemAImpl_ror_u32_EndProc:function hidden]
  4832                                 iemAImpl_ror_u32_EndProc:
  4833                                 [size iemAImpl_ror_u32 iemAImpl_ror_u32_EndProc - iemAImpl_ror_u32]
  4834                                 [size iemAImpl_ror_u32_EndProc 0]
  4835 000018E1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4836                                 
  4837                                 
  4838                                 %line 1103+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4839                                 [section .text]
  4840                                 %line 1103+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4841                                 [global iemAImpl_rcl_u8]
  4842                                 iemAImpl_rcl_u8:
  4843 000018E5 53                      push ebx
  4844 000018E6 8B5C2408                mov ebx, [esp + 4 + 4]
  4845 000018EA 57                      push edi
  4846                                 
  4847 000018EB 9C                      pushf
  4848 000018EC 8B03                    mov eax, [ebx]
  4849 000018EE 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4850 000018F5 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4851 000018FA 090424                  or [esp], eax
  4852 000018FD 9D                      popf
  4853                                 
  4854 000018FE 87CA                    xchg edx, ecx
  4855 00001900 D212                    rcl byte [edx], cl
  4856 00001902 9C                      pushf
  4857 00001903 5F                      pop edi
  4858 00001904 8B03                    mov eax, [ebx]
  4859 00001906 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4860 0000190B 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4861 00001911 09F8                    or eax, edi
  4862 00001913 8903                    mov [ebx], eax
  4863 00001915 5F                      pop edi
  4864 00001916 5B                      pop ebx
  4865 00001917 C20400                  ret 4
  4866                                 [global iemAImpl_rcl_u8_EndProc:function hidden]
  4867                                 iemAImpl_rcl_u8_EndProc:
  4868                                 [size iemAImpl_rcl_u8 iemAImpl_rcl_u8_EndProc - iemAImpl_rcl_u8]
  4869                                 [size iemAImpl_rcl_u8_EndProc 0]
  4870 0000191A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4871                                 
  4872                                 [global iemAImpl_rcl_u16]
  4873                                 iemAImpl_rcl_u16:
  4874 0000191E 53                      push ebx
  4875 0000191F 8B5C2408                mov ebx, [esp + 4 + 4]
  4876 00001923 57                      push edi
  4877                                 
  4878 00001924 9C                      pushf
  4879 00001925 8B03                    mov eax, [ebx]
  4880 00001927 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4881 0000192E 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4882 00001933 090424                  or [esp], eax
  4883 00001936 9D                      popf
  4884                                 
  4885 00001937 87CA                    xchg edx, ecx
  4886 00001939 66D312                  rcl word [edx], cl
  4887 0000193C 9C                      pushf
  4888 0000193D 5F                      pop edi
  4889 0000193E 8B03                    mov eax, [ebx]
  4890 00001940 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4891 00001945 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4892 0000194B 09F8                    or eax, edi
  4893 0000194D 8903                    mov [ebx], eax
  4894 0000194F 5F                      pop edi
  4895 00001950 5B                      pop ebx
  4896 00001951 C20400                  ret 4
  4897                                 [global iemAImpl_rcl_u16_EndProc:function hidden]
  4898                                 iemAImpl_rcl_u16_EndProc:
  4899                                 [size iemAImpl_rcl_u16 iemAImpl_rcl_u16_EndProc - iemAImpl_rcl_u16]
  4900                                 [size iemAImpl_rcl_u16_EndProc 0]
  4901 00001954 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4902                                 
  4903                                 [global iemAImpl_rcl_u32]
  4904                                 iemAImpl_rcl_u32:
  4905 00001958 53                      push ebx
  4906 00001959 8B5C2408                mov ebx, [esp + 4 + 4]
  4907 0000195D 57                      push edi
  4908                                 
  4909 0000195E 9C                      pushf
  4910 0000195F 8B03                    mov eax, [ebx]
  4911 00001961 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4912 00001968 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4913 0000196D 090424                  or [esp], eax
  4914 00001970 9D                      popf
  4915                                 
  4916 00001971 87CA                    xchg edx, ecx
  4917 00001973 D312                    rcl dword [edx], cl
  4918 00001975 9C                      pushf
  4919 00001976 5F                      pop edi
  4920 00001977 8B03                    mov eax, [ebx]
  4921 00001979 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4922 0000197E 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4923 00001984 09F8                    or eax, edi
  4924 00001986 8903                    mov [ebx], eax
  4925 00001988 5F                      pop edi
  4926 00001989 5B                      pop ebx
  4927 0000198A C20400                  ret 4
  4928                                 [global iemAImpl_rcl_u32_EndProc:function hidden]
  4929                                 iemAImpl_rcl_u32_EndProc:
  4930                                 [size iemAImpl_rcl_u32 iemAImpl_rcl_u32_EndProc - iemAImpl_rcl_u32]
  4931                                 [size iemAImpl_rcl_u32_EndProc 0]
  4932 0000198D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4933                                 
  4934                                 
  4935                                 %line 1104+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4936                                 [section .text]
  4937                                 %line 1104+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4938                                 [global iemAImpl_rcr_u8]
  4939                                 iemAImpl_rcr_u8:
  4940 00001991 53                      push ebx
  4941 00001992 8B5C2408                mov ebx, [esp + 4 + 4]
  4942 00001996 57                      push edi
  4943                                 
  4944 00001997 9C                      pushf
  4945 00001998 8B03                    mov eax, [ebx]
  4946 0000199A 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4947 000019A1 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4948 000019A6 090424                  or [esp], eax
  4949 000019A9 9D                      popf
  4950                                 
  4951 000019AA 87CA                    xchg edx, ecx
  4952 000019AC D21A                    rcr byte [edx], cl
  4953 000019AE 9C                      pushf
  4954 000019AF 5F                      pop edi
  4955 000019B0 8B03                    mov eax, [ebx]
  4956 000019B2 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4957 000019B7 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4958 000019BD 09F8                    or eax, edi
  4959 000019BF 8903                    mov [ebx], eax
  4960 000019C1 5F                      pop edi
  4961 000019C2 5B                      pop ebx
  4962 000019C3 C20400                  ret 4
  4963                                 [global iemAImpl_rcr_u8_EndProc:function hidden]
  4964                                 iemAImpl_rcr_u8_EndProc:
  4965                                 [size iemAImpl_rcr_u8 iemAImpl_rcr_u8_EndProc - iemAImpl_rcr_u8]
  4966                                 [size iemAImpl_rcr_u8_EndProc 0]
  4967 000019C6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4968                                 
  4969                                 [global iemAImpl_rcr_u16]
  4970                                 iemAImpl_rcr_u16:
  4971 000019CA 53                      push ebx
  4972 000019CB 8B5C2408                mov ebx, [esp + 4 + 4]
  4973 000019CF 57                      push edi
  4974                                 
  4975 000019D0 9C                      pushf
  4976 000019D1 8B03                    mov eax, [ebx]
  4977 000019D3 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  4978 000019DA 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4979 000019DF 090424                  or [esp], eax
  4980 000019E2 9D                      popf
  4981                                 
  4982 000019E3 87CA                    xchg edx, ecx
  4983 000019E5 66D31A                  rcr word [edx], cl
  4984 000019E8 9C                      pushf
  4985 000019E9 5F                      pop edi
  4986 000019EA 8B03                    mov eax, [ebx]
  4987 000019EC 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4988 000019F1 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  4989 000019F7 09F8                    or eax, edi
  4990 000019F9 8903                    mov [ebx], eax
  4991 000019FB 5F                      pop edi
  4992 000019FC 5B                      pop ebx
  4993 000019FD C20400                  ret 4
  4994                                 [global iemAImpl_rcr_u16_EndProc:function hidden]
  4995                                 iemAImpl_rcr_u16_EndProc:
  4996                                 [size iemAImpl_rcr_u16 iemAImpl_rcr_u16_EndProc - iemAImpl_rcr_u16]
  4997                                 [size iemAImpl_rcr_u16_EndProc 0]
  4998 00001A00 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4999                                 
  5000                                 [global iemAImpl_rcr_u32]
  5001                                 iemAImpl_rcr_u32:
  5002 00001A04 53                      push ebx
  5003 00001A05 8B5C2408                mov ebx, [esp + 4 + 4]
  5004 00001A09 57                      push edi
  5005                                 
  5006 00001A0A 9C                      pushf
  5007 00001A0B 8B03                    mov eax, [ebx]
  5008 00001A0D 812424FEF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | 0)
  5009 00001A14 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5010 00001A19 090424                  or [esp], eax
  5011 00001A1C 9D                      popf
  5012                                 
  5013 00001A1D 87CA                    xchg edx, ecx
  5014 00001A1F D31A                    rcr dword [edx], cl
  5015 00001A21 9C                      pushf
  5016 00001A22 5F                      pop edi
  5017 00001A23 8B03                    mov eax, [ebx]
  5018 00001A25 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5019 00001A2A 81E701080000            and edi, (((1 << 11) | (1 << 0)) | 0)
  5020 00001A30 09F8                    or eax, edi
  5021 00001A32 8903                    mov [ebx], eax
  5022 00001A34 5F                      pop edi
  5023 00001A35 5B                      pop ebx
  5024 00001A36 C20400                  ret 4
  5025                                 [global iemAImpl_rcr_u32_EndProc:function hidden]
  5026                                 iemAImpl_rcr_u32_EndProc:
  5027                                 [size iemAImpl_rcr_u32 iemAImpl_rcr_u32_EndProc - iemAImpl_rcr_u32]
  5028                                 [size iemAImpl_rcr_u32_EndProc 0]
  5029 00001A39 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5030                                 
  5031                                 
  5032                                 %line 1105+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5033                                 [section .text]
  5034                                 %line 1105+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5035                                 [global iemAImpl_shl_u8]
  5036                                 iemAImpl_shl_u8:
  5037 00001A3D 53                      push ebx
  5038 00001A3E 8B5C2408                mov ebx, [esp + 4 + 4]
  5039 00001A42 57                      push edi
  5040                                 
  5041 00001A43 9C                      pushf
  5042 00001A44 8B03                    mov eax, [ebx]
  5043 00001A46 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5044 00001A4D 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5045 00001A52 090424                  or [esp], eax
  5046 00001A55 9D                      popf
  5047                                 
  5048 00001A56 87CA                    xchg edx, ecx
  5049 00001A58 D222                    shl byte [edx], cl
  5050 00001A5A 9C                      pushf
  5051 00001A5B 5F                      pop edi
  5052 00001A5C 8B03                    mov eax, [ebx]
  5053 00001A5E 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5054 00001A63 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5055 00001A69 09F8                    or eax, edi
  5056 00001A6B 8903                    mov [ebx], eax
  5057 00001A6D 5F                      pop edi
  5058 00001A6E 5B                      pop ebx
  5059 00001A6F C20400                  ret 4
  5060                                 [global iemAImpl_shl_u8_EndProc:function hidden]
  5061                                 iemAImpl_shl_u8_EndProc:
  5062                                 [size iemAImpl_shl_u8 iemAImpl_shl_u8_EndProc - iemAImpl_shl_u8]
  5063                                 [size iemAImpl_shl_u8_EndProc 0]
  5064 00001A72 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5065                                 
  5066                                 [global iemAImpl_shl_u16]
  5067                                 iemAImpl_shl_u16:
  5068 00001A76 53                      push ebx
  5069 00001A77 8B5C2408                mov ebx, [esp + 4 + 4]
  5070 00001A7B 57                      push edi
  5071                                 
  5072 00001A7C 9C                      pushf
  5073 00001A7D 8B03                    mov eax, [ebx]
  5074 00001A7F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5075 00001A86 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5076 00001A8B 090424                  or [esp], eax
  5077 00001A8E 9D                      popf
  5078                                 
  5079 00001A8F 87CA                    xchg edx, ecx
  5080 00001A91 66D322                  shl word [edx], cl
  5081 00001A94 9C                      pushf
  5082 00001A95 5F                      pop edi
  5083 00001A96 8B03                    mov eax, [ebx]
  5084 00001A98 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5085 00001A9D 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5086 00001AA3 09F8                    or eax, edi
  5087 00001AA5 8903                    mov [ebx], eax
  5088 00001AA7 5F                      pop edi
  5089 00001AA8 5B                      pop ebx
  5090 00001AA9 C20400                  ret 4
  5091                                 [global iemAImpl_shl_u16_EndProc:function hidden]
  5092                                 iemAImpl_shl_u16_EndProc:
  5093                                 [size iemAImpl_shl_u16 iemAImpl_shl_u16_EndProc - iemAImpl_shl_u16]
  5094                                 [size iemAImpl_shl_u16_EndProc 0]
  5095 00001AAC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5096                                 
  5097                                 [global iemAImpl_shl_u32]
  5098                                 iemAImpl_shl_u32:
  5099 00001AB0 53                      push ebx
  5100 00001AB1 8B5C2408                mov ebx, [esp + 4 + 4]
  5101 00001AB5 57                      push edi
  5102                                 
  5103 00001AB6 9C                      pushf
  5104 00001AB7 8B03                    mov eax, [ebx]
  5105 00001AB9 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5106 00001AC0 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5107 00001AC5 090424                  or [esp], eax
  5108 00001AC8 9D                      popf
  5109                                 
  5110 00001AC9 87CA                    xchg edx, ecx
  5111 00001ACB D322                    shl dword [edx], cl
  5112 00001ACD 9C                      pushf
  5113 00001ACE 5F                      pop edi
  5114 00001ACF 8B03                    mov eax, [ebx]
  5115 00001AD1 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5116 00001AD6 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5117 00001ADC 09F8                    or eax, edi
  5118 00001ADE 8903                    mov [ebx], eax
  5119 00001AE0 5F                      pop edi
  5120 00001AE1 5B                      pop ebx
  5121 00001AE2 C20400                  ret 4
  5122                                 [global iemAImpl_shl_u32_EndProc:function hidden]
  5123                                 iemAImpl_shl_u32_EndProc:
  5124                                 [size iemAImpl_shl_u32 iemAImpl_shl_u32_EndProc - iemAImpl_shl_u32]
  5125                                 [size iemAImpl_shl_u32_EndProc 0]
  5126 00001AE5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5127                                 
  5128                                 
  5129                                 %line 1106+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5130                                 [section .text]
  5131                                 %line 1106+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5132                                 [global iemAImpl_shr_u8]
  5133                                 iemAImpl_shr_u8:
  5134 00001AE9 53                      push ebx
  5135 00001AEA 8B5C2408                mov ebx, [esp + 4 + 4]
  5136 00001AEE 57                      push edi
  5137                                 
  5138 00001AEF 9C                      pushf
  5139 00001AF0 8B03                    mov eax, [ebx]
  5140 00001AF2 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5141 00001AF9 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5142 00001AFE 090424                  or [esp], eax
  5143 00001B01 9D                      popf
  5144                                 
  5145 00001B02 87CA                    xchg edx, ecx
  5146 00001B04 D22A                    shr byte [edx], cl
  5147 00001B06 9C                      pushf
  5148 00001B07 5F                      pop edi
  5149 00001B08 8B03                    mov eax, [ebx]
  5150 00001B0A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5151 00001B0F 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5152 00001B15 09F8                    or eax, edi
  5153 00001B17 8903                    mov [ebx], eax
  5154 00001B19 5F                      pop edi
  5155 00001B1A 5B                      pop ebx
  5156 00001B1B C20400                  ret 4
  5157                                 [global iemAImpl_shr_u8_EndProc:function hidden]
  5158                                 iemAImpl_shr_u8_EndProc:
  5159                                 [size iemAImpl_shr_u8 iemAImpl_shr_u8_EndProc - iemAImpl_shr_u8]
  5160                                 [size iemAImpl_shr_u8_EndProc 0]
  5161 00001B1E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5162                                 
  5163                                 [global iemAImpl_shr_u16]
  5164                                 iemAImpl_shr_u16:
  5165 00001B22 53                      push ebx
  5166 00001B23 8B5C2408                mov ebx, [esp + 4 + 4]
  5167 00001B27 57                      push edi
  5168                                 
  5169 00001B28 9C                      pushf
  5170 00001B29 8B03                    mov eax, [ebx]
  5171 00001B2B 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5172 00001B32 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5173 00001B37 090424                  or [esp], eax
  5174 00001B3A 9D                      popf
  5175                                 
  5176 00001B3B 87CA                    xchg edx, ecx
  5177 00001B3D 66D32A                  shr word [edx], cl
  5178 00001B40 9C                      pushf
  5179 00001B41 5F                      pop edi
  5180 00001B42 8B03                    mov eax, [ebx]
  5181 00001B44 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5182 00001B49 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5183 00001B4F 09F8                    or eax, edi
  5184 00001B51 8903                    mov [ebx], eax
  5185 00001B53 5F                      pop edi
  5186 00001B54 5B                      pop ebx
  5187 00001B55 C20400                  ret 4
  5188                                 [global iemAImpl_shr_u16_EndProc:function hidden]
  5189                                 iemAImpl_shr_u16_EndProc:
  5190                                 [size iemAImpl_shr_u16 iemAImpl_shr_u16_EndProc - iemAImpl_shr_u16]
  5191                                 [size iemAImpl_shr_u16_EndProc 0]
  5192 00001B58 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5193                                 
  5194                                 [global iemAImpl_shr_u32]
  5195                                 iemAImpl_shr_u32:
  5196 00001B5C 53                      push ebx
  5197 00001B5D 8B5C2408                mov ebx, [esp + 4 + 4]
  5198 00001B61 57                      push edi
  5199                                 
  5200 00001B62 9C                      pushf
  5201 00001B63 8B03                    mov eax, [ebx]
  5202 00001B65 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5203 00001B6C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5204 00001B71 090424                  or [esp], eax
  5205 00001B74 9D                      popf
  5206                                 
  5207 00001B75 87CA                    xchg edx, ecx
  5208 00001B77 D32A                    shr dword [edx], cl
  5209 00001B79 9C                      pushf
  5210 00001B7A 5F                      pop edi
  5211 00001B7B 8B03                    mov eax, [ebx]
  5212 00001B7D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5213 00001B82 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5214 00001B88 09F8                    or eax, edi
  5215 00001B8A 8903                    mov [ebx], eax
  5216 00001B8C 5F                      pop edi
  5217 00001B8D 5B                      pop ebx
  5218 00001B8E C20400                  ret 4
  5219                                 [global iemAImpl_shr_u32_EndProc:function hidden]
  5220                                 iemAImpl_shr_u32_EndProc:
  5221                                 [size iemAImpl_shr_u32 iemAImpl_shr_u32_EndProc - iemAImpl_shr_u32]
  5222                                 [size iemAImpl_shr_u32_EndProc 0]
  5223 00001B91 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5224                                 
  5225                                 
  5226                                 %line 1107+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5227                                 [section .text]
  5228                                 %line 1107+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5229                                 [global iemAImpl_sar_u8]
  5230                                 iemAImpl_sar_u8:
  5231 00001B95 53                      push ebx
  5232 00001B96 8B5C2408                mov ebx, [esp + 4 + 4]
  5233 00001B9A 57                      push edi
  5234                                 
  5235 00001B9B 9C                      pushf
  5236 00001B9C 8B03                    mov eax, [ebx]
  5237 00001B9E 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5238 00001BA5 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5239 00001BAA 090424                  or [esp], eax
  5240 00001BAD 9D                      popf
  5241                                 
  5242 00001BAE 87CA                    xchg edx, ecx
  5243 00001BB0 D23A                    sar byte [edx], cl
  5244 00001BB2 9C                      pushf
  5245 00001BB3 5F                      pop edi
  5246 00001BB4 8B03                    mov eax, [ebx]
  5247 00001BB6 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5248 00001BBB 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5249 00001BC1 09F8                    or eax, edi
  5250 00001BC3 8903                    mov [ebx], eax
  5251 00001BC5 5F                      pop edi
  5252 00001BC6 5B                      pop ebx
  5253 00001BC7 C20400                  ret 4
  5254                                 [global iemAImpl_sar_u8_EndProc:function hidden]
  5255                                 iemAImpl_sar_u8_EndProc:
  5256                                 [size iemAImpl_sar_u8 iemAImpl_sar_u8_EndProc - iemAImpl_sar_u8]
  5257                                 [size iemAImpl_sar_u8_EndProc 0]
  5258 00001BCA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5259                                 
  5260                                 [global iemAImpl_sar_u16]
  5261                                 iemAImpl_sar_u16:
  5262 00001BCE 53                      push ebx
  5263 00001BCF 8B5C2408                mov ebx, [esp + 4 + 4]
  5264 00001BD3 57                      push edi
  5265                                 
  5266 00001BD4 9C                      pushf
  5267 00001BD5 8B03                    mov eax, [ebx]
  5268 00001BD7 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5269 00001BDE 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5270 00001BE3 090424                  or [esp], eax
  5271 00001BE6 9D                      popf
  5272                                 
  5273 00001BE7 87CA                    xchg edx, ecx
  5274 00001BE9 66D33A                  sar word [edx], cl
  5275 00001BEC 9C                      pushf
  5276 00001BED 5F                      pop edi
  5277 00001BEE 8B03                    mov eax, [ebx]
  5278 00001BF0 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5279 00001BF5 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5280 00001BFB 09F8                    or eax, edi
  5281 00001BFD 8903                    mov [ebx], eax
  5282 00001BFF 5F                      pop edi
  5283 00001C00 5B                      pop ebx
  5284 00001C01 C20400                  ret 4
  5285                                 [global iemAImpl_sar_u16_EndProc:function hidden]
  5286                                 iemAImpl_sar_u16_EndProc:
  5287                                 [size iemAImpl_sar_u16 iemAImpl_sar_u16_EndProc - iemAImpl_sar_u16]
  5288                                 [size iemAImpl_sar_u16_EndProc 0]
  5289 00001C04 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5290                                 
  5291                                 [global iemAImpl_sar_u32]
  5292                                 iemAImpl_sar_u32:
  5293 00001C08 53                      push ebx
  5294 00001C09 8B5C2408                mov ebx, [esp + 4 + 4]
  5295 00001C0D 57                      push edi
  5296                                 
  5297 00001C0E 9C                      pushf
  5298 00001C0F 8B03                    mov eax, [ebx]
  5299 00001C11 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5300 00001C18 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5301 00001C1D 090424                  or [esp], eax
  5302 00001C20 9D                      popf
  5303                                 
  5304 00001C21 87CA                    xchg edx, ecx
  5305 00001C23 D33A                    sar dword [edx], cl
  5306 00001C25 9C                      pushf
  5307 00001C26 5F                      pop edi
  5308 00001C27 8B03                    mov eax, [ebx]
  5309 00001C29 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5310 00001C2E 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5311 00001C34 09F8                    or eax, edi
  5312 00001C36 8903                    mov [ebx], eax
  5313 00001C38 5F                      pop edi
  5314 00001C39 5B                      pop ebx
  5315 00001C3A C20400                  ret 4
  5316                                 [global iemAImpl_sar_u32_EndProc:function hidden]
  5317                                 iemAImpl_sar_u32_EndProc:
  5318                                 [size iemAImpl_sar_u32 iemAImpl_sar_u32_EndProc - iemAImpl_sar_u32]
  5319                                 [size iemAImpl_sar_u32_EndProc 0]
  5320 00001C3D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5321                                 
  5322                                 
  5323                                 %line 1108+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5324                                 
  5325                                 
  5326                                 
  5327                                 
  5328                                 
  5329                                 
  5330                                 
  5331                                 
  5332                                 
  5333                                 
  5334                                 
  5335                                 
  5336                                 
  5337                                 
  5338                                 
  5339                                 
  5340                                 
  5341                                 %line 1175+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5342                                 
  5343                                 [section .text]
  5344                                 %line 1176+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5345                                 [global iemAImpl_shld_u16]
  5346                                 iemAImpl_shld_u16:
  5347 00001C41 53                      push ebx
  5348 00001C42 57                      push edi
  5349 00001C43 56                      push esi
  5350 00001C44 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5351 00001C48 8B742414                mov esi, [esp + 12 + 4 + 4]
  5352                                 
  5353 00001C4C 9C                      pushf
  5354 00001C4D 8B06                    mov eax, [esi]
  5355 00001C4F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5356 00001C56 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5357 00001C5B 090424                  or [esp], eax
  5358 00001C5E 9D                      popf
  5359                                 
  5360 00001C5F 87D9                    xchg ecx, ebx
  5361 00001C61 660FA513                shld [ebx], dx, cl
  5362 00001C65 9C                      pushf
  5363 00001C66 5F                      pop edi
  5364 00001C67 8B06                    mov eax, [esi]
  5365 00001C69 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5366 00001C6E 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5367 00001C74 09F8                    or eax, edi
  5368 00001C76 8906                    mov [esi], eax
  5369 00001C78 5E                      pop esi
  5370 00001C79 5F                      pop edi
  5371 00001C7A 5B                      pop ebx
  5372 00001C7B C20800                  ret 8
  5373                                 [global iemAImpl_shld_u16_EndProc:function hidden]
  5374                                 iemAImpl_shld_u16_EndProc:
  5375                                 [size iemAImpl_shld_u16 iemAImpl_shld_u16_EndProc - iemAImpl_shld_u16]
  5376                                 [size iemAImpl_shld_u16_EndProc 0]
  5377 00001C7E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5378                                 
  5379                                 [global iemAImpl_shld_u32]
  5380                                 iemAImpl_shld_u32:
  5381 00001C82 53                      push ebx
  5382 00001C83 57                      push edi
  5383 00001C84 56                      push esi
  5384 00001C85 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5385 00001C89 8B742414                mov esi, [esp + 12 + 4 + 4]
  5386                                 
  5387 00001C8D 9C                      pushf
  5388 00001C8E 8B06                    mov eax, [esi]
  5389 00001C90 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5390 00001C97 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5391 00001C9C 090424                  or [esp], eax
  5392 00001C9F 9D                      popf
  5393                                 
  5394 00001CA0 87D9                    xchg ecx, ebx
  5395 00001CA2 0FA513                  shld [ebx], edx, cl
  5396 00001CA5 9C                      pushf
  5397 00001CA6 5F                      pop edi
  5398 00001CA7 8B06                    mov eax, [esi]
  5399 00001CA9 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5400 00001CAE 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5401 00001CB4 09F8                    or eax, edi
  5402 00001CB6 8906                    mov [esi], eax
  5403 00001CB8 5E                      pop esi
  5404 00001CB9 5F                      pop edi
  5405 00001CBA 5B                      pop ebx
  5406 00001CBB C20800                  ret 8
  5407                                 [global iemAImpl_shld_u32_EndProc:function hidden]
  5408                                 iemAImpl_shld_u32_EndProc:
  5409                                 [size iemAImpl_shld_u32 iemAImpl_shld_u32_EndProc - iemAImpl_shld_u32]
  5410                                 [size iemAImpl_shld_u32_EndProc 0]
  5411 00001CBE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5412                                 
  5413                                 
  5414                                 %line 1177+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5415                                 [section .text]
  5416                                 %line 1177+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5417                                 [global iemAImpl_shrd_u16]
  5418                                 iemAImpl_shrd_u16:
  5419 00001CC2 53                      push ebx
  5420 00001CC3 57                      push edi
  5421 00001CC4 56                      push esi
  5422 00001CC5 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5423 00001CC9 8B742414                mov esi, [esp + 12 + 4 + 4]
  5424                                 
  5425 00001CCD 9C                      pushf
  5426 00001CCE 8B06                    mov eax, [esi]
  5427 00001CD0 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5428 00001CD7 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5429 00001CDC 090424                  or [esp], eax
  5430 00001CDF 9D                      popf
  5431                                 
  5432 00001CE0 87D9                    xchg ecx, ebx
  5433 00001CE2 660FAD13                shrd [ebx], dx, cl
  5434 00001CE6 9C                      pushf
  5435 00001CE7 5F                      pop edi
  5436 00001CE8 8B06                    mov eax, [esi]
  5437 00001CEA 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5438 00001CEF 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5439 00001CF5 09F8                    or eax, edi
  5440 00001CF7 8906                    mov [esi], eax
  5441 00001CF9 5E                      pop esi
  5442 00001CFA 5F                      pop edi
  5443 00001CFB 5B                      pop ebx
  5444 00001CFC C20800                  ret 8
  5445                                 [global iemAImpl_shrd_u16_EndProc:function hidden]
  5446                                 iemAImpl_shrd_u16_EndProc:
  5447                                 [size iemAImpl_shrd_u16 iemAImpl_shrd_u16_EndProc - iemAImpl_shrd_u16]
  5448                                 [size iemAImpl_shrd_u16_EndProc 0]
  5449 00001CFF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5450                                 
  5451                                 [global iemAImpl_shrd_u32]
  5452                                 iemAImpl_shrd_u32:
  5453 00001D03 53                      push ebx
  5454 00001D04 57                      push edi
  5455 00001D05 56                      push esi
  5456 00001D06 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5457 00001D0A 8B742414                mov esi, [esp + 12 + 4 + 4]
  5458                                 
  5459 00001D0E 9C                      pushf
  5460 00001D0F 8B06                    mov eax, [esi]
  5461 00001D11 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5462 00001D18 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5463 00001D1D 090424                  or [esp], eax
  5464 00001D20 9D                      popf
  5465                                 
  5466 00001D21 87D9                    xchg ecx, ebx
  5467 00001D23 0FAD13                  shrd [ebx], edx, cl
  5468 00001D26 9C                      pushf
  5469 00001D27 5F                      pop edi
  5470 00001D28 8B06                    mov eax, [esi]
  5471 00001D2A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5472 00001D2F 81E7D5080000            and edi, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5473 00001D35 09F8                    or eax, edi
  5474 00001D37 8906                    mov [esi], eax
  5475 00001D39 5E                      pop esi
  5476 00001D3A 5F                      pop edi
  5477 00001D3B 5B                      pop ebx
  5478 00001D3C C20800                  ret 8
  5479                                 [global iemAImpl_shrd_u32_EndProc:function hidden]
  5480                                 iemAImpl_shrd_u32_EndProc:
  5481                                 [size iemAImpl_shrd_u32 iemAImpl_shrd_u32_EndProc - iemAImpl_shrd_u32]
  5482                                 [size iemAImpl_shrd_u32_EndProc 0]
  5483 00001D3F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5484                                 
  5485                                 
  5486                                 %line 1178+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5487                                 
  5488                                 
  5489                                 
  5490                                 
  5491                                 
  5492                                 
  5493                                 
  5494                                 
  5495                                 
  5496                                 
  5497                                 
  5498                                 
  5499                                 
  5500                                 
  5501                                 
  5502                                 
  5503                                 
  5504                                 
  5505                                 
  5506                                 
  5507                                 
  5508                                 %line 1272+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5509                                 
  5510                                 [section .text]
  5511                                 %line 1273+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5512                                 [global iemAImpl_mul_u8]
  5513                                 iemAImpl_mul_u8:
  5514 00001D43 53                      push ebx
  5515 00001D44 8B5C2408                mov ebx, [esp + 4 + 4]
  5516 00001D48 57                      push edi
  5517                                 
  5518 00001D49 9C                      pushf
  5519 00001D4A 8B03                    mov eax, [ebx]
  5520 00001D4C 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5521 00001D53 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5522 00001D58 090424                  or [esp], eax
  5523 00001D5B 9D                      popf
  5524                                 
  5525 00001D5C 8A01                    mov al, [ecx]
  5526 00001D5E F6E2                    mul dl
  5527 00001D60 668901                  mov [ecx], ax
  5528 00001D63 9C                      pushf
  5529 00001D64 5F                      pop edi
  5530 00001D65 8B03                    mov eax, [ebx]
  5531 00001D67 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5532 00001D6C 81E7D5080000            and edi, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5533 00001D72 09F8                    or eax, edi
  5534 00001D74 8903                    mov [ebx], eax
  5535 00001D76 31C0                    xor eax, eax
  5536 00001D78 5F                      pop edi
  5537 00001D79 5B                      pop ebx
  5538 00001D7A C20400                  ret 4
  5539                                 [global iemAImpl_mul_u8_EndProc:function hidden]
  5540                                 iemAImpl_mul_u8_EndProc:
  5541                                 [size iemAImpl_mul_u8 iemAImpl_mul_u8_EndProc - iemAImpl_mul_u8]
  5542                                 [size iemAImpl_mul_u8_EndProc 0]
  5543 00001D7D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5544                                 
  5545                                 [global iemAImpl_mul_u16]
  5546                                 iemAImpl_mul_u16:
  5547 00001D81 53                      push ebx
  5548 00001D82 57                      push edi
  5549 00001D83 56                      push esi
  5550 00001D84 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5551 00001D88 8B742414                mov esi, [esp + 12 + 4 + 4]
  5552                                 
  5553 00001D8C 9C                      pushf
  5554 00001D8D 8B06                    mov eax, [esi]
  5555 00001D8F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5556 00001D96 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5557 00001D9B 090424                  or [esp], eax
  5558 00001D9E 9D                      popf
  5559                                 
  5560 00001D9F 668B01                  mov ax, [ecx]
  5561 00001DA2 89D7                    mov edi, edx
  5562 00001DA4 66F7E3                  mul bx
  5563 00001DA7 668901                  mov [ecx], ax
  5564 00001DAA 668917                  mov [edi], dx
  5565 00001DAD 9C                      pushf
  5566 00001DAE 5F                      pop edi
  5567 00001DAF 8B06                    mov eax, [esi]
  5568 00001DB1 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5569 00001DB6 81E7D5080000            and edi, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5570 00001DBC 09F8                    or eax, edi
  5571 00001DBE 8906                    mov [esi], eax
  5572 00001DC0 31C0                    xor eax, eax
  5573 00001DC2 5E                      pop esi
  5574 00001DC3 5F                      pop edi
  5575 00001DC4 5B                      pop ebx
  5576 00001DC5 C20800                  ret 8
  5577                                 [global iemAImpl_mul_u16_EndProc:function hidden]
  5578                                 iemAImpl_mul_u16_EndProc:
  5579                                 [size iemAImpl_mul_u16 iemAImpl_mul_u16_EndProc - iemAImpl_mul_u16]
  5580                                 [size iemAImpl_mul_u16_EndProc 0]
  5581 00001DC8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5582                                 
  5583                                 [global iemAImpl_mul_u32]
  5584                                 iemAImpl_mul_u32:
  5585 00001DCC 53                      push ebx
  5586 00001DCD 57                      push edi
  5587 00001DCE 56                      push esi
  5588 00001DCF 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5589 00001DD3 8B742414                mov esi, [esp + 12 + 4 + 4]
  5590                                 
  5591 00001DD7 9C                      pushf
  5592 00001DD8 8B06                    mov eax, [esi]
  5593 00001DDA 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5594 00001DE1 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5595 00001DE6 090424                  or [esp], eax
  5596 00001DE9 9D                      popf
  5597                                 
  5598 00001DEA 8B01                    mov eax, [ecx]
  5599 00001DEC 89D7                    mov edi, edx
  5600 00001DEE F7E3                    mul ebx
  5601 00001DF0 8901                    mov [ecx], eax
  5602 00001DF2 8917                    mov [edi], edx
  5603 00001DF4 9C                      pushf
  5604 00001DF5 5F                      pop edi
  5605 00001DF6 8B06                    mov eax, [esi]
  5606 00001DF8 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5607 00001DFD 81E7D5080000            and edi, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5608 00001E03 09F8                    or eax, edi
  5609 00001E05 8906                    mov [esi], eax
  5610 00001E07 31C0                    xor eax, eax
  5611 00001E09 5E                      pop esi
  5612 00001E0A 5F                      pop edi
  5613 00001E0B 5B                      pop ebx
  5614 00001E0C C20800                  ret 8
  5615                                 [global iemAImpl_mul_u32_EndProc:function hidden]
  5616                                 iemAImpl_mul_u32_EndProc:
  5617                                 [size iemAImpl_mul_u32 iemAImpl_mul_u32_EndProc - iemAImpl_mul_u32]
  5618                                 [size iemAImpl_mul_u32_EndProc 0]
  5619 00001E0F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5620                                 
  5621                                 
  5622                                 %line 1274+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5623                                 [section .text]
  5624                                 %line 1274+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5625                                 [global iemAImpl_imul_u8]
  5626                                 iemAImpl_imul_u8:
  5627 00001E13 53                      push ebx
  5628 00001E14 8B5C2408                mov ebx, [esp + 4 + 4]
  5629 00001E18 57                      push edi
  5630                                 
  5631 00001E19 9C                      pushf
  5632 00001E1A 8B03                    mov eax, [ebx]
  5633 00001E1C 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5634 00001E23 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5635 00001E28 090424                  or [esp], eax
  5636 00001E2B 9D                      popf
  5637                                 
  5638 00001E2C 8A01                    mov al, [ecx]
  5639 00001E2E F6EA                    imul dl
  5640 00001E30 668901                  mov [ecx], ax
  5641 00001E33 9C                      pushf
  5642 00001E34 5F                      pop edi
  5643 00001E35 8B03                    mov eax, [ebx]
  5644 00001E37 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5645 00001E3C 81E7D5080000            and edi, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5646 00001E42 09F8                    or eax, edi
  5647 00001E44 8903                    mov [ebx], eax
  5648 00001E46 31C0                    xor eax, eax
  5649 00001E48 5F                      pop edi
  5650 00001E49 5B                      pop ebx
  5651 00001E4A C20400                  ret 4
  5652                                 [global iemAImpl_imul_u8_EndProc:function hidden]
  5653                                 iemAImpl_imul_u8_EndProc:
  5654                                 [size iemAImpl_imul_u8 iemAImpl_imul_u8_EndProc - iemAImpl_imul_u8]
  5655                                 [size iemAImpl_imul_u8_EndProc 0]
  5656 00001E4D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5657                                 
  5658                                 [global iemAImpl_imul_u16]
  5659                                 iemAImpl_imul_u16:
  5660 00001E51 53                      push ebx
  5661 00001E52 57                      push edi
  5662 00001E53 56                      push esi
  5663 00001E54 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5664 00001E58 8B742414                mov esi, [esp + 12 + 4 + 4]
  5665                                 
  5666 00001E5C 9C                      pushf
  5667 00001E5D 8B06                    mov eax, [esi]
  5668 00001E5F 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5669 00001E66 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5670 00001E6B 090424                  or [esp], eax
  5671 00001E6E 9D                      popf
  5672                                 
  5673 00001E6F 668B01                  mov ax, [ecx]
  5674 00001E72 89D7                    mov edi, edx
  5675 00001E74 66F7EB                  imul bx
  5676 00001E77 668901                  mov [ecx], ax
  5677 00001E7A 668917                  mov [edi], dx
  5678 00001E7D 9C                      pushf
  5679 00001E7E 5F                      pop edi
  5680 00001E7F 8B06                    mov eax, [esi]
  5681 00001E81 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5682 00001E86 81E7D5080000            and edi, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5683 00001E8C 09F8                    or eax, edi
  5684 00001E8E 8906                    mov [esi], eax
  5685 00001E90 31C0                    xor eax, eax
  5686 00001E92 5E                      pop esi
  5687 00001E93 5F                      pop edi
  5688 00001E94 5B                      pop ebx
  5689 00001E95 C20800                  ret 8
  5690                                 [global iemAImpl_imul_u16_EndProc:function hidden]
  5691                                 iemAImpl_imul_u16_EndProc:
  5692                                 [size iemAImpl_imul_u16 iemAImpl_imul_u16_EndProc - iemAImpl_imul_u16]
  5693                                 [size iemAImpl_imul_u16_EndProc 0]
  5694 00001E98 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5695                                 
  5696                                 [global iemAImpl_imul_u32]
  5697                                 iemAImpl_imul_u32:
  5698 00001E9C 53                      push ebx
  5699 00001E9D 57                      push edi
  5700 00001E9E 56                      push esi
  5701 00001E9F 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5702 00001EA3 8B742414                mov esi, [esp + 12 + 4 + 4]
  5703                                 
  5704 00001EA7 9C                      pushf
  5705 00001EA8 8B06                    mov eax, [esi]
  5706 00001EAA 8124242AF7FFFF          and dword [esp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5707 00001EB1 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5708 00001EB6 090424                  or [esp], eax
  5709 00001EB9 9D                      popf
  5710                                 
  5711 00001EBA 8B01                    mov eax, [ecx]
  5712 00001EBC 89D7                    mov edi, edx
  5713 00001EBE F7EB                    imul ebx
  5714 00001EC0 8901                    mov [ecx], eax
  5715 00001EC2 8917                    mov [edi], edx
  5716 00001EC4 9C                      pushf
  5717 00001EC5 5F                      pop edi
  5718 00001EC6 8B06                    mov eax, [esi]
  5719 00001EC8 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5720 00001ECD 81E7D5080000            and edi, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5721 00001ED3 09F8                    or eax, edi
  5722 00001ED5 8906                    mov [esi], eax
  5723 00001ED7 31C0                    xor eax, eax
  5724 00001ED9 5E                      pop esi
  5725 00001EDA 5F                      pop edi
  5726 00001EDB 5B                      pop ebx
  5727 00001EDC C20800                  ret 8
  5728                                 [global iemAImpl_imul_u32_EndProc:function hidden]
  5729                                 iemAImpl_imul_u32_EndProc:
  5730                                 [size iemAImpl_imul_u32 iemAImpl_imul_u32_EndProc - iemAImpl_imul_u32]
  5731                                 [size iemAImpl_imul_u32_EndProc 0]
  5732 00001EDF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5733                                 
  5734                                 
  5735                                 %line 1275+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5736                                 
  5737                                 
  5738                                 [section .text]
  5739                                 
  5740                                 
  5741                                 
  5742                                 iemAImpl_negate_T0_T1_u32:
  5743 00001EE3 6A00                    push 0
  5744 00001EE5 6A00                    push 0
  5745 00001EE7 870424                  xchg eax, [esp]
  5746 00001EEA 877C2404                xchg edi, [esp + 4]
  5747 00001EEE 2B0424                  sub eax, [esp]
  5748 00001EF1 1B7C2404                sbb edi, [esp + 4]
  5749 00001EF5 83C408                  add esp, 4*2
  5750 00001EF8 C3                      ret
  5751                                 
  5752                                 %line 1305+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5753                                 
  5754                                 
  5755                                 
  5756                                 
  5757                                 
  5758                                 
  5759                                 
  5760                                 
  5761                                 
  5762                                 
  5763                                 
  5764                                 
  5765                                 
  5766                                 
  5767                                 
  5768                                 
  5769                                 
  5770                                 
  5771                                 
  5772                                 
  5773                                 
  5774                                 
  5775                                 %line 1628+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5776                                 
  5777                                 [section .text]
  5778                                 %line 1629+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5779                                 [global iemAImpl_div_u8]
  5780                                 iemAImpl_div_u8:
  5781 00001EF9 53                      push ebx
  5782 00001EFA 8B5C2408                mov ebx, [esp + 4 + 4]
  5783 00001EFE 57                      push edi
  5784                                 
  5785                                 
  5786 00001EFF 84D2                    test dl, dl
  5787 00001F01 7438                    jz .div_zero
  5788                                 
  5789                                 
  5790                                 
  5791 00001F03 385101                  cmp [ecx + 1], dl
  5792 00001F06 7333                    jae .div_overflow
  5793                                 
  5794                                 
  5795 00001F08 9C                      pushf
  5796 00001F09 8B03                    mov eax, [ebx]
  5797 00001F0B 8124242AF7FFFF          and dword [esp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5798 00001F12 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5799 00001F17 090424                  or [esp], eax
  5800 00001F1A 9D                      popf
  5801                                 
  5802 00001F1B 668B01                  mov ax, [ecx]
  5803 00001F1E F6F2                    div dl
  5804 00001F20 668901                  mov [ecx], ax
  5805 00001F23 9C                      pushf
  5806 00001F24 5F                      pop edi
  5807 00001F25 8B03                    mov eax, [ebx]
  5808 00001F27 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5809 00001F2C 81E7D5080000            and edi, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5810 00001F32 09F8                    or eax, edi
  5811 00001F34 8903                    mov [ebx], eax
  5812 00001F36 31C0                    xor eax, eax
  5813                                 
  5814                                 .return:
  5815 00001F38 5F                      pop edi
  5816 00001F39 5B                      pop ebx
  5817 00001F3A C20400                  ret 4
  5818                                 
  5819                                 .div_zero:
  5820                                 .div_overflow:
  5821 00001F3D B8FFFFFFFF              mov eax, -1
  5822 00001F42 EBF2                    jmp .return
  5823                                 [global iemAImpl_div_u8_EndProc:function hidden]
  5824                                 iemAImpl_div_u8_EndProc:
  5825                                 [size iemAImpl_div_u8 iemAImpl_div_u8_EndProc - iemAImpl_div_u8]
  5826                                 [size iemAImpl_div_u8_EndProc 0]
  5827 00001F44 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5828                                 
  5829                                 [global iemAImpl_div_u16]
  5830                                 iemAImpl_div_u16:
  5831 00001F48 53                      push ebx
  5832 00001F49 57                      push edi
  5833 00001F4A 56                      push esi
  5834 00001F4B 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5835 00001F4F 8B742414                mov esi, [esp + 12 + 4 + 4]
  5836                                 
  5837                                 
  5838 00001F53 6685DB                  test bx, bx
  5839 00001F56 7442                    jz .div_zero
  5840                                 
  5841                                 
  5842                                 
  5843 00001F58 66391A                  cmp [edx], bx
  5844 00001F5B 733D                    jae .div_overflow
  5845                                 
  5846                                 
  5847 00001F5D 9C                      pushf
  5848 00001F5E 8B06                    mov eax, [esi]
  5849 00001F60 8124242AF7FFFF          and dword [esp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5850 00001F67 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5851 00001F6C 090424                  or [esp], eax
  5852 00001F6F 9D                      popf
  5853                                 
  5854 00001F70 89D7                    mov edi, edx
  5855 00001F72 668B01                  mov ax, [ecx]
  5856 00001F75 668B17                  mov dx, [edi]
  5857 00001F78 66F7F3                  div bx
  5858 00001F7B 668901                  mov [ecx], ax
  5859 00001F7E 668917                  mov [edi], dx
  5860 00001F81 9C                      pushf
  5861 00001F82 5F                      pop edi
  5862 00001F83 8B06                    mov eax, [esi]
  5863 00001F85 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5864 00001F8A 81E7D5080000            and edi, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5865 00001F90 09F8                    or eax, edi
  5866 00001F92 8906                    mov [esi], eax
  5867 00001F94 31C0                    xor eax, eax
  5868                                 
  5869                                 .return:
  5870 00001F96 5E                      pop esi
  5871 00001F97 5F                      pop edi
  5872 00001F98 5B                      pop ebx
  5873 00001F99 C20800                  ret 8
  5874                                 
  5875                                 .div_zero:
  5876                                 .div_overflow:
  5877 00001F9C B8FFFFFFFF              mov eax, -1
  5878 00001FA1 EBF1                    jmp .return
  5879                                 [global iemAImpl_div_u16_EndProc:function hidden]
  5880                                 iemAImpl_div_u16_EndProc:
  5881                                 [size iemAImpl_div_u16 iemAImpl_div_u16_EndProc - iemAImpl_div_u16]
  5882                                 [size iemAImpl_div_u16_EndProc 0]
  5883 00001FA3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5884                                 
  5885                                 [global iemAImpl_div_u32]
  5886                                 iemAImpl_div_u32:
  5887 00001FA7 53                      push ebx
  5888 00001FA8 57                      push edi
  5889 00001FA9 56                      push esi
  5890 00001FAA 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  5891 00001FAE 8B742414                mov esi, [esp + 12 + 4 + 4]
  5892                                 
  5893                                 
  5894 00001FB2 85DB                    test ebx, ebx
  5895 00001FB4 743E                    jz .div_zero
  5896                                 
  5897                                 
  5898                                 
  5899 00001FB6 391A                    cmp [edx], ebx
  5900 00001FB8 733A                    jae .div_overflow
  5901                                 
  5902                                 
  5903 00001FBA 9C                      pushf
  5904 00001FBB 8B06                    mov eax, [esi]
  5905 00001FBD 8124242AF7FFFF          and dword [esp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5906 00001FC4 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5907 00001FC9 090424                  or [esp], eax
  5908 00001FCC 9D                      popf
  5909                                 
  5910 00001FCD 8B01                    mov eax, [ecx]
  5911 00001FCF 89D7                    mov edi, edx
  5912 00001FD1 8B01                    mov eax, [ecx]
  5913 00001FD3 8B17                    mov edx, [edi]
  5914 00001FD5 F7F3                    div ebx
  5915 00001FD7 8901                    mov [ecx], eax
  5916 00001FD9 8917                    mov [edi], edx
  5917 00001FDB 9C                      pushf
  5918 00001FDC 5F                      pop edi
  5919 00001FDD 8B06                    mov eax, [esi]
  5920 00001FDF 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5921 00001FE4 81E7D5080000            and edi, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5922 00001FEA 09F8                    or eax, edi
  5923 00001FEC 8906                    mov [esi], eax
  5924 00001FEE 31C0                    xor eax, eax
  5925                                 
  5926                                 .return:
  5927 00001FF0 5E                      pop esi
  5928 00001FF1 5F                      pop edi
  5929 00001FF2 5B                      pop ebx
  5930 00001FF3 C20800                  ret 8
  5931                                 
  5932                                 .div_overflow:
  5933                                 .div_zero:
  5934 00001FF6 B8FFFFFFFF              mov eax, -1
  5935 00001FFB EBF1                    jmp .return
  5936                                 [global iemAImpl_div_u32_EndProc:function hidden]
  5937                                 iemAImpl_div_u32_EndProc:
  5938                                 [size iemAImpl_div_u32 iemAImpl_div_u32_EndProc - iemAImpl_div_u32]
  5939                                 [size iemAImpl_div_u32_EndProc 0]
  5940 00001FFD CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5941                                 
  5942                                 
  5943                                 %line 1630+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5944                                 [section .text]
  5945                                 %line 1630+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5946                                 [global iemAImpl_idiv_u8]
  5947                                 iemAImpl_idiv_u8:
  5948 00002001 53                      push ebx
  5949 00002002 8B5C2408                mov ebx, [esp + 4 + 4]
  5950 00002006 57                      push edi
  5951                                 
  5952                                 
  5953 00002007 84D2                    test dl, dl
  5954 00002009 746C                    jz .div_zero
  5955                                 
  5956                                 
  5957                                 
  5958 0000200B 668B01                  mov ax, [ecx]
  5959 0000200E 89D7                    mov edi, edx
  5960 00002010 84D2                    test dl, dl
  5961 00002012 781A                    js .divisor_negative
  5962 00002014 6685C0                  test ax, ax
  5963 00002017 791F                    jns .both_positive
  5964 00002019 66F7D8                  neg ax
  5965                                 .one_of_each:
  5966 0000201C 50                      push eax
  5967 0000201D 66C1E807                shr ax, 7
  5968 00002021 38D0                    cmp al, dl
  5969 00002023 58                      pop eax
  5970 00002024 721A                    jb .div_no_overflow
  5971 00002026 774F                    ja .div_overflow
  5972 00002028 247F                    and al, 0x7f
  5973 0000202A 38D0                    cmp al, dl
  5974 0000202C 7349                    jae .div_overflow
  5975 0000202E EB10                    jmp .div_no_overflow
  5976                                 
  5977                                 .divisor_negative:
  5978 00002030 F6DA                    neg dl
  5979 00002032 6685C0                  test ax, ax
  5980 00002035 79E3                    jns .one_of_each
  5981 00002037 66F7D8                  neg ax
  5982                                 .both_positive:
  5983 0000203A 66C1E807                shr ax, 7
  5984 0000203E 38D0                    cmp al, dl
  5985 00002040 7335                    jae .div_overflow
  5986                                 .div_no_overflow:
  5987 00002042 89FA                    mov edx, edi
  5988                                 
  5989                                 
  5990 00002044 9C                      pushf
  5991 00002045 8B03                    mov eax, [ebx]
  5992 00002047 8124242AF7FFFF          and dword [esp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5993 0000204E 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  5994 00002053 090424                  or [esp], eax
  5995 00002056 9D                      popf
  5996                                 
  5997 00002057 668B01                  mov ax, [ecx]
  5998 0000205A F6FA                    idiv dl
  5999 0000205C 668901                  mov [ecx], ax
  6000 0000205F 9C                      pushf
  6001 00002060 5F                      pop edi
  6002 00002061 8B03                    mov eax, [ebx]
  6003 00002063 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6004 00002068 81E7D5080000            and edi, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6005 0000206E 09F8                    or eax, edi
  6006 00002070 8903                    mov [ebx], eax
  6007 00002072 31C0                    xor eax, eax
  6008                                 
  6009                                 .return:
  6010 00002074 5F                      pop edi
  6011 00002075 5B                      pop ebx
  6012 00002076 C20400                  ret 4
  6013                                 
  6014                                 .div_zero:
  6015                                 .div_overflow:
  6016 00002079 B8FFFFFFFF              mov eax, -1
  6017 0000207E EBF2                    jmp .return
  6018                                 [global iemAImpl_idiv_u8_EndProc:function hidden]
  6019                                 iemAImpl_idiv_u8_EndProc:
  6020                                 [size iemAImpl_idiv_u8 iemAImpl_idiv_u8_EndProc - iemAImpl_idiv_u8]
  6021                                 [size iemAImpl_idiv_u8_EndProc 0]
  6022 00002080 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6023                                 
  6024                                 [global iemAImpl_idiv_u16]
  6025                                 iemAImpl_idiv_u16:
  6026 00002084 53                      push ebx
  6027 00002085 57                      push edi
  6028 00002086 56                      push esi
  6029 00002087 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6030 0000208B 8B742414                mov esi, [esp + 12 + 4 + 4]
  6031                                 
  6032                                 
  6033 0000208F 6685DB                  test bx, bx
  6034 00002092 747B                    jz .div_zero
  6035                                 
  6036                                 
  6037                                 
  6038 00002094 668B02                  mov ax, [edx]
  6039 00002097 C1E010                  shl eax, 16
  6040 0000209A 668B01                  mov ax, [ecx]
  6041 0000209D 89DF                    mov edi, ebx
  6042 0000209F 6685FF                  test di, di
  6043 000020A2 781B                    js .divisor_negative
  6044 000020A4 85C0                    test eax, eax
  6045 000020A6 7920                    jns .both_positive
  6046 000020A8 F7D8                    neg eax
  6047                                 .one_of_each:
  6048 000020AA 50                      push eax
  6049 000020AB C1E80F                  shr eax, 15
  6050 000020AE 6639F8                  cmp ax, di
  6051 000020B1 58                      pop eax
  6052 000020B2 721C                    jb .div_no_overflow
  6053 000020B4 7759                    ja .div_overflow
  6054 000020B6 6625FF7F                and ax, 0x7fff
  6055 000020BA 6639F8                  cmp ax, di
  6056 000020BD 7350                    jae .div_overflow
  6057 000020BF EB0F                    jmp .div_no_overflow
  6058                                 
  6059                                 .divisor_negative:
  6060 000020C1 66F7DF                  neg di
  6061 000020C4 85C0                    test eax, eax
  6062 000020C6 79E0                    jns .one_of_each
  6063 000020C8 F7D8                    neg eax
  6064                                 .both_positive:
  6065 000020CA C1E80F                  shr eax, 15
  6066 000020CD 6639F8                  cmp ax, di
  6067 000020D0 733D                    jae .div_overflow
  6068                                 .div_no_overflow:
  6069                                 
  6070                                 
  6071 000020D2 9C                      pushf
  6072 000020D3 8B06                    mov eax, [esi]
  6073 000020D5 8124242AF7FFFF          and dword [esp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6074 000020DC 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6075 000020E1 090424                  or [esp], eax
  6076 000020E4 9D                      popf
  6077                                 
  6078 000020E5 89D7                    mov edi, edx
  6079 000020E7 668B01                  mov ax, [ecx]
  6080 000020EA 668B17                  mov dx, [edi]
  6081 000020ED 66F7FB                  idiv bx
  6082 000020F0 668901                  mov [ecx], ax
  6083 000020F3 668917                  mov [edi], dx
  6084 000020F6 9C                      pushf
  6085 000020F7 5F                      pop edi
  6086 000020F8 8B06                    mov eax, [esi]
  6087 000020FA 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6088 000020FF 81E7D5080000            and edi, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6089 00002105 09F8                    or eax, edi
  6090 00002107 8906                    mov [esi], eax
  6091 00002109 31C0                    xor eax, eax
  6092                                 
  6093                                 .return:
  6094 0000210B 5E                      pop esi
  6095 0000210C 5F                      pop edi
  6096 0000210D 5B                      pop ebx
  6097 0000210E C20800                  ret 8
  6098                                 
  6099                                 .div_zero:
  6100                                 .div_overflow:
  6101 00002111 B8FFFFFFFF              mov eax, -1
  6102 00002116 EBF1                    jmp .return
  6103                                 [global iemAImpl_idiv_u16_EndProc:function hidden]
  6104                                 iemAImpl_idiv_u16_EndProc:
  6105                                 [size iemAImpl_idiv_u16 iemAImpl_idiv_u16_EndProc - iemAImpl_idiv_u16]
  6106                                 [size iemAImpl_idiv_u16_EndProc 0]
  6107 00002118 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6108                                 
  6109                                 [global iemAImpl_idiv_u32]
  6110                                 iemAImpl_idiv_u32:
  6111 0000211C 53                      push ebx
  6112 0000211D 57                      push edi
  6113 0000211E 56                      push esi
  6114 0000211F 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6115 00002123 8B742414                mov esi, [esp + 12 + 4 + 4]
  6116                                 
  6117                                 
  6118 00002127 85DB                    test ebx, ebx
  6119 00002129 0F847A000000            jz .div_zero
  6120                                 
  6121                                 
  6122                                 
  6123 0000212F 53                      push ebx
  6124 00002130 8B01                    mov eax, [ecx]
  6125 00002132 8B3A                    mov edi, [edx]
  6126 00002134 85DB                    test ebx, ebx
  6127 00002136 7821                    js .divisor_negative
  6128 00002138 85FF                    test edi, edi
  6129 0000213A 7928                    jns .both_positive
  6130 0000213C E89DFDFFFF              call iemAImpl_negate_T0_T1_u32
  6131                                 .one_of_each:
  6132 00002141 50                      push eax
  6133 00002142 D1E7                    shl edi, 1
  6134 00002144 C1E81F                  shr eax, 31
  6135 00002147 09C7                    or edi, eax
  6136 00002149 39DF                    cmp edi, ebx
  6137 0000214B 58                      pop eax
  6138 0000214C 7221                    jb .div_no_overflow
  6139 0000214E 775C                    ja .div_overflow
  6140 00002150 25FFFFFF7F              and eax, 0x7fffffff
  6141 00002155 39D8                    cmp eax, ebx
  6142 00002157 7353                    jae .div_overflow
  6143 00002159 EB14                    jmp .div_no_overflow
  6144                                 
  6145                                 .divisor_negative:
  6146 0000215B F7DB                    neg ebx
  6147 0000215D 85FF                    test edi, edi
  6148 0000215F 79DE                    jns .one_of_each
  6149 00002161 E878FDFFFF              call iemAImpl_negate_T0_T1_u32
  6150                                 .both_positive:
  6151 00002166 D1E7                    shl edi, 1
  6152 00002168 C1E81F                  shr eax, 31
  6153 0000216B 09C7                    or edi, eax
  6154 0000216D 39DF                    cmp edi, ebx
  6155 0000216F 733B                    jae .div_overflow
  6156                                 .div_no_overflow:
  6157 00002171 5B                      pop ebx
  6158                                 
  6159                                 
  6160 00002172 9C                      pushf
  6161 00002173 8B06                    mov eax, [esi]
  6162 00002175 8124242AF7FFFF          and dword [esp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6163 0000217C 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6164 00002181 090424                  or [esp], eax
  6165 00002184 9D                      popf
  6166                                 
  6167 00002185 8B01                    mov eax, [ecx]
  6168 00002187 89D7                    mov edi, edx
  6169 00002189 8B01                    mov eax, [ecx]
  6170 0000218B 8B17                    mov edx, [edi]
  6171 0000218D F7FB                    idiv ebx
  6172 0000218F 8901                    mov [ecx], eax
  6173 00002191 8917                    mov [edi], edx
  6174 00002193 9C                      pushf
  6175 00002194 5F                      pop edi
  6176 00002195 8B06                    mov eax, [esi]
  6177 00002197 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6178 0000219C 81E7D5080000            and edi, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6179 000021A2 09F8                    or eax, edi
  6180 000021A4 8906                    mov [esi], eax
  6181 000021A6 31C0                    xor eax, eax
  6182                                 
  6183                                 .return:
  6184 000021A8 5E                      pop esi
  6185 000021A9 5F                      pop edi
  6186 000021AA 5B                      pop ebx
  6187 000021AB C20800                  ret 8
  6188                                 
  6189                                 .div_overflow:
  6190 000021AE 5B                      pop ebx
  6191                                 .div_zero:
  6192 000021AF B8FFFFFFFF              mov eax, -1
  6193 000021B4 EBF0                    jmp .return
  6194                                 [global iemAImpl_idiv_u32_EndProc:function hidden]
  6195                                 iemAImpl_idiv_u32_EndProc:
  6196                                 [size iemAImpl_idiv_u32 iemAImpl_idiv_u32_EndProc - iemAImpl_idiv_u32]
  6197                                 [size iemAImpl_idiv_u32_EndProc 0]
  6198 000021B6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6199                                 
  6200                                 
  6201                                 %line 1631+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6202                                 
  6203                                 
  6204                                 
  6205                                 
  6206                                 
  6207                                 
  6208                                 
  6209                                 
  6210                                 [global iemAImpl_bswap_u16]
  6211                                 %line 1639+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6212                                 iemAImpl_bswap_u16:
  6213                                 %line 1640+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6214 000021BA 57                      push edi
  6215 000021BB 8B01                    mov eax, [ecx]
  6216 000021BD 66                      db 66
  6217 000021BE 0FC8                    bswap eax
  6218 000021C0 8901                    mov [ecx], eax
  6219 000021C2 5F                      pop edi
  6220                                 %line 1645+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6221 000021C3 C20000                  ret 0
  6222                                 %line 1646+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6223                                 [global iemAImpl_bswap_u16_EndProc:function hidden]
  6224                                 %line 1646+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6225                                 iemAImpl_bswap_u16_EndProc:
  6226                                 [size iemAImpl_bswap_u16 iemAImpl_bswap_u16_EndProc - iemAImpl_bswap_u16]
  6227                                 [size iemAImpl_bswap_u16_EndProc 0]
  6228 000021C6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6229                                 %line 1647+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6230                                 
  6231                                 [global iemAImpl_bswap_u32]
  6232                                 %line 1648+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6233                                 iemAImpl_bswap_u32:
  6234                                 %line 1649+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6235 000021CA 57                      push edi
  6236 000021CB 8B01                    mov eax, [ecx]
  6237 000021CD 0FC8                    bswap eax
  6238 000021CF 8901                    mov [ecx], eax
  6239 000021D1 5F                      pop edi
  6240                                 %line 1653+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6241 000021D2 C20000                  ret 0
  6242                                 %line 1654+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6243                                 [global iemAImpl_bswap_u32_EndProc:function hidden]
  6244                                 %line 1654+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6245                                 iemAImpl_bswap_u32_EndProc:
  6246                                 [size iemAImpl_bswap_u32 iemAImpl_bswap_u32_EndProc - iemAImpl_bswap_u32]
  6247                                 [size iemAImpl_bswap_u32_EndProc 0]
  6248 000021D5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6249                                 %line 1655+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6250                                 
  6251                                 [global iemAImpl_bswap_u64]
  6252                                 %line 1656+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6253                                 iemAImpl_bswap_u64:
  6254                                 %line 1664+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6255 000021D9 57                      push edi
  6256 000021DA 8B01                    mov eax, [ecx]
  6257 000021DC 8B7904                  mov edi, [ecx + 4]
  6258 000021DF 0FC8                    bswap eax
  6259 000021E1 0FCF                    bswap edi
  6260 000021E3 894104                  mov [ecx + 4], eax
  6261 000021E6 8939                    mov [ecx], edi
  6262 000021E8 5F                      pop edi
  6263                                 %line 1671+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6264 000021E9 C20000                  ret 0
  6265                                 %line 1673+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6266                                 [global iemAImpl_bswap_u64_EndProc:function hidden]
  6267                                 %line 1673+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6268                                 iemAImpl_bswap_u64_EndProc:
  6269                                 [size iemAImpl_bswap_u64 iemAImpl_bswap_u64_EndProc - iemAImpl_bswap_u64]
  6270                                 [size iemAImpl_bswap_u64_EndProc 0]
  6271 000021EC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6272                                 %line 1674+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6273                                 
  6274                                 
  6275                                 
  6276                                 
  6277                                 
  6278                                 
  6279                                 
  6280                                 
  6281                                 
  6282                                 %line 1701+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6283                                 
  6284                                 
  6285                                 
  6286                                 
  6287                                 
  6288                                 [absolute 0]
  6289                                 %line 1706+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6290                                 IEMFPURESULT:
  6291                                 %line 1707+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6292                                  .r80Result resw 5
  6293                                  .FSW resw 1
  6294                                 IEMFPURESULT_size:
  6295                                 %line 1709+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6296                                 [section .text]
  6297                                 %line 1710+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6298                                 
  6299                                 
  6300                                 
  6301                                 
  6302                                 
  6303                                 [absolute 0]
  6304                                 %line 1715+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6305                                 IEMFPURESULTTWO:
  6306                                 %line 1716+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6307                                  .r80Result1 resw 5
  6308                                  .FSW resw 1
  6309                                  .r80Result2 resw 5
  6310                                 IEMFPURESULTTWO_size:
  6311                                 %line 1719+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6312                                 [section .text]
  6313                                 %line 1720+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6314                                 
  6315                                 
  6316                                 
  6317                                 
  6318                                 
  6319                                 
  6320                                 
  6321                                 
  6322                                 
  6323                                 
  6324                                 
  6325                                 
  6326                                 
  6327                                 
  6328                                 [global iemAImpl_fild_i16_to_r80]
  6329                                 %line 1734+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6330                                 iemAImpl_fild_i16_to_r80:
  6331                                 %line 1735+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6332 000021F0 53                      push ebx
  6333                                 %line 1735+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6334 000021F1 8B5C2408                mov ebx, [esp + 4 + 4]
  6335 000021F5 57                      push edi
  6336                                 %line 1736+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6337 000021F6 83EC20                  sub esp, 20
  6338                                 
  6339 000021F9 DBE3                    fninit
  6340 000021FB D93424                  fnstenv [esp]
  6341                                 %line 1739+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6342                                 
  6343                                 
  6344 000021FE 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6345 00002201 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6346 00002206 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6347                                 
  6348                                 
  6349 0000220A 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6350 0000220E 81E700470000            and edi, 0x4700
  6351 00002214 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6352 00002219 2500380000              and eax, 0x3800
  6353 0000221E 09F8                    or eax, edi
  6354 00002220 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6355                                 
  6356 00002225 D92424                  fldenv [esp]
  6357                                 %line 1740+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6358 00002228 DF03                    fild word [ebx]
  6359                                 
  6360 0000222A DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  6361 0000222D DBE2                    fnclex
  6362 0000222F DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  6363                                 
  6364 00002231 DBE3                    fninit
  6365 00002233 83C420                  add esp, 20
  6366 00002236 5F                      pop edi
  6367                                 %line 1748+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6368 00002237 5B                      pop ebx
  6369 00002238 C20400                  ret 4
  6370                                 %line 1749+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6371                                 [global iemAImpl_fild_i16_to_r80_EndProc:function hidden]
  6372                                 %line 1749+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6373                                 iemAImpl_fild_i16_to_r80_EndProc:
  6374                                 [size iemAImpl_fild_i16_to_r80 iemAImpl_fild_i16_to_r80_EndProc - iemAImpl_fild_i16_to_r80]
  6375                                 [size iemAImpl_fild_i16_to_r80_EndProc 0]
  6376 0000223B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6377                                 %line 1750+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6378                                 
  6379                                 
  6380                                 
  6381                                 
  6382                                 
  6383                                 
  6384                                 
  6385                                 
  6386                                 
  6387                                 
  6388                                 [global iemAImpl_fist_r80_to_i16]
  6389                                 %line 1760+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6390                                 iemAImpl_fist_r80_to_i16:
  6391                                 %line 1761+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6392 0000223F 53                      push ebx
  6393                                 %line 1761+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6394 00002240 57                      push edi
  6395 00002241 56                      push esi
  6396 00002242 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6397 00002246 8B742414                mov esi, [esp + 12 + 4 + 4]
  6398                                 %line 1762+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6399 0000224A 83EC20                  sub esp, 20
  6400                                 
  6401 0000224D DBE3                    fninit
  6402 0000224F DB2E                    fld tword [esi]
  6403 00002251 D93424                  fnstenv [esp]
  6404                                 %line 1766+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6405                                 
  6406                                 
  6407 00002254 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6408 00002257 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6409 0000225C 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6410                                 
  6411                                 
  6412 00002260 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6413 00002264 81E700470000            and edi, 0x4700
  6414 0000226A 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6415 0000226F 2500380000              and eax, 0x3800
  6416 00002274 09F8                    or eax, edi
  6417 00002276 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6418                                 
  6419 0000227B D92424                  fldenv [esp]
  6420                                 %line 1767+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6421 0000227E DF1B                    fistp word [ebx]
  6422                                 
  6423 00002280 DD3A                    fnstsw word [edx]
  6424                                 
  6425 00002282 DBE3                    fninit
  6426 00002284 83C420                  add esp, 20
  6427 00002287 5E                      pop esi
  6428                                 %line 1773+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6429 00002288 5F                      pop edi
  6430 00002289 5B                      pop ebx
  6431 0000228A C20800                  ret 8
  6432                                 %line 1774+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6433                                 [global iemAImpl_fist_r80_to_i16_EndProc:function hidden]
  6434                                 %line 1774+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6435                                 iemAImpl_fist_r80_to_i16_EndProc:
  6436                                 [size iemAImpl_fist_r80_to_i16 iemAImpl_fist_r80_to_i16_EndProc - iemAImpl_fist_r80_to_i16]
  6437                                 [size iemAImpl_fist_r80_to_i16_EndProc 0]
  6438 0000228D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6439                                 %line 1775+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6440                                 
  6441                                 
  6442                                 
  6443                                 
  6444                                 
  6445                                 
  6446                                 
  6447                                 
  6448                                 
  6449                                 
  6450                                 
  6451                                 [global iemAImpl_fistt_r80_to_i16]
  6452                                 %line 1786+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6453                                 iemAImpl_fistt_r80_to_i16:
  6454                                 %line 1787+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6455 00002291 53                      push ebx
  6456                                 %line 1787+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6457 00002292 57                      push edi
  6458 00002293 56                      push esi
  6459 00002294 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6460 00002298 8B742414                mov esi, [esp + 12 + 4 + 4]
  6461                                 %line 1788+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6462 0000229C 83EC20                  sub esp, 20
  6463                                 
  6464 0000229F DBE3                    fninit
  6465 000022A1 DB2E                    fld tword [esi]
  6466 000022A3 D93424                  fnstenv [esp]
  6467                                 %line 1792+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6468                                 
  6469                                 
  6470 000022A6 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6471 000022A9 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6472 000022AE 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6473                                 
  6474                                 
  6475 000022B2 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6476 000022B6 81E700470000            and edi, 0x4700
  6477 000022BC 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6478 000022C1 2500380000              and eax, 0x3800
  6479 000022C6 09F8                    or eax, edi
  6480 000022C8 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6481                                 
  6482 000022CD D92424                  fldenv [esp]
  6483                                 %line 1793+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6484 000022D0 DB0B                    fisttp dword [ebx]
  6485                                 
  6486 000022D2 DD3A                    fnstsw word [edx]
  6487                                 
  6488 000022D4 DBE3                    fninit
  6489 000022D6 83C420                  add esp, 20
  6490 000022D9 5E                      pop esi
  6491                                 %line 1799+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6492 000022DA 5F                      pop edi
  6493 000022DB 5B                      pop ebx
  6494 000022DC C20800                  ret 8
  6495                                 %line 1800+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6496                                 [global iemAImpl_fistt_r80_to_i16_EndProc:function hidden]
  6497                                 %line 1800+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6498                                 iemAImpl_fistt_r80_to_i16_EndProc:
  6499                                 [size iemAImpl_fistt_r80_to_i16 iemAImpl_fistt_r80_to_i16_EndProc - iemAImpl_fistt_r80_to_i16]
  6500                                 [size iemAImpl_fistt_r80_to_i16_EndProc 0]
  6501 000022DF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6502                                 %line 1801+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6503                                 
  6504                                 
  6505                                 
  6506                                 
  6507                                 
  6508                                 
  6509                                 
  6510                                 
  6511                                 
  6512                                 
  6513                                 
  6514                                 
  6515                                 %line 1832+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6516                                 
  6517                                 [global iemAImpl_fiadd_r80_by_i16]
  6518                                 %line 1833+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6519                                 iemAImpl_fiadd_r80_by_i16:
  6520 000022E3 53                      push ebx
  6521 000022E4 57                      push edi
  6522 000022E5 56                      push esi
  6523 000022E6 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6524 000022EA 8B742414                mov esi, [esp + 12 + 4 + 4]
  6525 000022EE 83EC20                  sub esp, 20
  6526                                 
  6527 000022F1 DBE3                    fninit
  6528 000022F3 DB2B                    fld tword [ebx]
  6529 000022F5 D93424                  fnstenv [esp]
  6530                                 
  6531                                 
  6532 000022F8 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6533 000022FB 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6534 00002300 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6535                                 
  6536                                 
  6537 00002304 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6538 00002308 81E700470000            and edi, 0x4700
  6539 0000230E 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6540 00002313 2500380000              and eax, 0x3800
  6541 00002318 09F8                    or eax, edi
  6542 0000231A 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6543                                 
  6544 0000231F D92424                  fldenv [esp]
  6545 00002322 DE06                    fiadd word [esi]
  6546                                 
  6547 00002324 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  6548 00002327 DBE2                    fnclex
  6549 00002329 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  6550                                 
  6551 0000232B DBE3                    fninit
  6552 0000232D 83C420                  add esp, 20
  6553 00002330 5E                      pop esi
  6554 00002331 5F                      pop edi
  6555 00002332 5B                      pop ebx
  6556 00002333 C20800                  ret 8
  6557                                 [global iemAImpl_fiadd_r80_by_i16_EndProc:function hidden]
  6558                                 iemAImpl_fiadd_r80_by_i16_EndProc:
  6559                                 [size iemAImpl_fiadd_r80_by_i16 iemAImpl_fiadd_r80_by_i16_EndProc - iemAImpl_fiadd_r80_by_i16]
  6560                                 [size iemAImpl_fiadd_r80_by_i16_EndProc 0]
  6561 00002336 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6562                                 %line 1834+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6563                                 [global iemAImpl_fimul_r80_by_i16]
  6564                                 %line 1834+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6565                                 iemAImpl_fimul_r80_by_i16:
  6566 0000233A 53                      push ebx
  6567 0000233B 57                      push edi
  6568 0000233C 56                      push esi
  6569 0000233D 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6570 00002341 8B742414                mov esi, [esp + 12 + 4 + 4]
  6571 00002345 83EC20                  sub esp, 20
  6572                                 
  6573 00002348 DBE3                    fninit
  6574 0000234A DB2B                    fld tword [ebx]
  6575 0000234C D93424                  fnstenv [esp]
  6576                                 
  6577                                 
  6578 0000234F 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6579 00002352 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6580 00002357 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6581                                 
  6582                                 
  6583 0000235B 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6584 0000235F 81E700470000            and edi, 0x4700
  6585 00002365 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6586 0000236A 2500380000              and eax, 0x3800
  6587 0000236F 09F8                    or eax, edi
  6588 00002371 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6589                                 
  6590 00002376 D92424                  fldenv [esp]
  6591 00002379 DE0E                    fimul word [esi]
  6592                                 
  6593 0000237B DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  6594 0000237E DBE2                    fnclex
  6595 00002380 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  6596                                 
  6597 00002382 DBE3                    fninit
  6598 00002384 83C420                  add esp, 20
  6599 00002387 5E                      pop esi
  6600 00002388 5F                      pop edi
  6601 00002389 5B                      pop ebx
  6602 0000238A C20800                  ret 8
  6603                                 [global iemAImpl_fimul_r80_by_i16_EndProc:function hidden]
  6604                                 iemAImpl_fimul_r80_by_i16_EndProc:
  6605                                 [size iemAImpl_fimul_r80_by_i16 iemAImpl_fimul_r80_by_i16_EndProc - iemAImpl_fimul_r80_by_i16]
  6606                                 [size iemAImpl_fimul_r80_by_i16_EndProc 0]
  6607 0000238D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6608                                 %line 1835+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6609                                 [global iemAImpl_fisub_r80_by_i16]
  6610                                 %line 1835+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6611                                 iemAImpl_fisub_r80_by_i16:
  6612 00002391 53                      push ebx
  6613 00002392 57                      push edi
  6614 00002393 56                      push esi
  6615 00002394 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6616 00002398 8B742414                mov esi, [esp + 12 + 4 + 4]
  6617 0000239C 83EC20                  sub esp, 20
  6618                                 
  6619 0000239F DBE3                    fninit
  6620 000023A1 DB2B                    fld tword [ebx]
  6621 000023A3 D93424                  fnstenv [esp]
  6622                                 
  6623                                 
  6624 000023A6 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6625 000023A9 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6626 000023AE 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6627                                 
  6628                                 
  6629 000023B2 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6630 000023B6 81E700470000            and edi, 0x4700
  6631 000023BC 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6632 000023C1 2500380000              and eax, 0x3800
  6633 000023C6 09F8                    or eax, edi
  6634 000023C8 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6635                                 
  6636 000023CD D92424                  fldenv [esp]
  6637 000023D0 DE26                    fisub word [esi]
  6638                                 
  6639 000023D2 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  6640 000023D5 DBE2                    fnclex
  6641 000023D7 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  6642                                 
  6643 000023D9 DBE3                    fninit
  6644 000023DB 83C420                  add esp, 20
  6645 000023DE 5E                      pop esi
  6646 000023DF 5F                      pop edi
  6647 000023E0 5B                      pop ebx
  6648 000023E1 C20800                  ret 8
  6649                                 [global iemAImpl_fisub_r80_by_i16_EndProc:function hidden]
  6650                                 iemAImpl_fisub_r80_by_i16_EndProc:
  6651                                 [size iemAImpl_fisub_r80_by_i16 iemAImpl_fisub_r80_by_i16_EndProc - iemAImpl_fisub_r80_by_i16]
  6652                                 [size iemAImpl_fisub_r80_by_i16_EndProc 0]
  6653 000023E4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6654                                 %line 1836+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6655                                 [global iemAImpl_fisubr_r80_by_i16]
  6656                                 %line 1836+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6657                                 iemAImpl_fisubr_r80_by_i16:
  6658 000023E8 53                      push ebx
  6659 000023E9 57                      push edi
  6660 000023EA 56                      push esi
  6661 000023EB 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6662 000023EF 8B742414                mov esi, [esp + 12 + 4 + 4]
  6663 000023F3 83EC20                  sub esp, 20
  6664                                 
  6665 000023F6 DBE3                    fninit
  6666 000023F8 DB2B                    fld tword [ebx]
  6667 000023FA D93424                  fnstenv [esp]
  6668                                 
  6669                                 
  6670 000023FD 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6671 00002400 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6672 00002405 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6673                                 
  6674                                 
  6675 00002409 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6676 0000240D 81E700470000            and edi, 0x4700
  6677 00002413 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6678 00002418 2500380000              and eax, 0x3800
  6679 0000241D 09F8                    or eax, edi
  6680 0000241F 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6681                                 
  6682 00002424 D92424                  fldenv [esp]
  6683 00002427 DE2E                    fisubr word [esi]
  6684                                 
  6685 00002429 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  6686 0000242C DBE2                    fnclex
  6687 0000242E DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  6688                                 
  6689 00002430 DBE3                    fninit
  6690 00002432 83C420                  add esp, 20
  6691 00002435 5E                      pop esi
  6692 00002436 5F                      pop edi
  6693 00002437 5B                      pop ebx
  6694 00002438 C20800                  ret 8
  6695                                 [global iemAImpl_fisubr_r80_by_i16_EndProc:function hidden]
  6696                                 iemAImpl_fisubr_r80_by_i16_EndProc:
  6697                                 [size iemAImpl_fisubr_r80_by_i16 iemAImpl_fisubr_r80_by_i16_EndProc - iemAImpl_fisubr_r80_by_i16]
  6698                                 [size iemAImpl_fisubr_r80_by_i16_EndProc 0]
  6699 0000243B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6700                                 %line 1837+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6701                                 [global iemAImpl_fidiv_r80_by_i16]
  6702                                 %line 1837+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6703                                 iemAImpl_fidiv_r80_by_i16:
  6704 0000243F 53                      push ebx
  6705 00002440 57                      push edi
  6706 00002441 56                      push esi
  6707 00002442 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6708 00002446 8B742414                mov esi, [esp + 12 + 4 + 4]
  6709 0000244A 83EC20                  sub esp, 20
  6710                                 
  6711 0000244D DBE3                    fninit
  6712 0000244F DB2B                    fld tword [ebx]
  6713 00002451 D93424                  fnstenv [esp]
  6714                                 
  6715                                 
  6716 00002454 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6717 00002457 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6718 0000245C 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6719                                 
  6720                                 
  6721 00002460 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6722 00002464 81E700470000            and edi, 0x4700
  6723 0000246A 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6724 0000246F 2500380000              and eax, 0x3800
  6725 00002474 09F8                    or eax, edi
  6726 00002476 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6727                                 
  6728 0000247B D92424                  fldenv [esp]
  6729 0000247E DE36                    fidiv word [esi]
  6730                                 
  6731 00002480 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  6732 00002483 DBE2                    fnclex
  6733 00002485 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  6734                                 
  6735 00002487 DBE3                    fninit
  6736 00002489 83C420                  add esp, 20
  6737 0000248C 5E                      pop esi
  6738 0000248D 5F                      pop edi
  6739 0000248E 5B                      pop ebx
  6740 0000248F C20800                  ret 8
  6741                                 [global iemAImpl_fidiv_r80_by_i16_EndProc:function hidden]
  6742                                 iemAImpl_fidiv_r80_by_i16_EndProc:
  6743                                 [size iemAImpl_fidiv_r80_by_i16 iemAImpl_fidiv_r80_by_i16_EndProc - iemAImpl_fidiv_r80_by_i16]
  6744                                 [size iemAImpl_fidiv_r80_by_i16_EndProc 0]
  6745 00002492 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6746                                 %line 1838+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6747                                 [global iemAImpl_fidivr_r80_by_i16]
  6748                                 %line 1838+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6749                                 iemAImpl_fidivr_r80_by_i16:
  6750 00002496 53                      push ebx
  6751 00002497 57                      push edi
  6752 00002498 56                      push esi
  6753 00002499 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6754 0000249D 8B742414                mov esi, [esp + 12 + 4 + 4]
  6755 000024A1 83EC20                  sub esp, 20
  6756                                 
  6757 000024A4 DBE3                    fninit
  6758 000024A6 DB2B                    fld tword [ebx]
  6759 000024A8 D93424                  fnstenv [esp]
  6760                                 
  6761                                 
  6762 000024AB 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6763 000024AE 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6764 000024B3 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6765                                 
  6766                                 
  6767 000024B7 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6768 000024BB 81E700470000            and edi, 0x4700
  6769 000024C1 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6770 000024C6 2500380000              and eax, 0x3800
  6771 000024CB 09F8                    or eax, edi
  6772 000024CD 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6773                                 
  6774 000024D2 D92424                  fldenv [esp]
  6775 000024D5 DE3E                    fidivr word [esi]
  6776                                 
  6777 000024D7 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  6778 000024DA DBE2                    fnclex
  6779 000024DC DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  6780                                 
  6781 000024DE DBE3                    fninit
  6782 000024E0 83C420                  add esp, 20
  6783 000024E3 5E                      pop esi
  6784 000024E4 5F                      pop edi
  6785 000024E5 5B                      pop ebx
  6786 000024E6 C20800                  ret 8
  6787                                 [global iemAImpl_fidivr_r80_by_i16_EndProc:function hidden]
  6788                                 iemAImpl_fidivr_r80_by_i16_EndProc:
  6789                                 [size iemAImpl_fidivr_r80_by_i16 iemAImpl_fidivr_r80_by_i16_EndProc - iemAImpl_fidivr_r80_by_i16]
  6790                                 [size iemAImpl_fidivr_r80_by_i16_EndProc 0]
  6791 000024E9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6792                                 %line 1839+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6793                                 
  6794                                 
  6795                                 
  6796                                 
  6797                                 
  6798                                 
  6799                                 
  6800                                 
  6801                                 
  6802                                 
  6803                                 
  6804                                 
  6805                                 
  6806                                 %line 1869+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6807                                 
  6808                                 [global iemAImpl_ficom_r80_by_i16]
  6809                                 %line 1870+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6810                                 iemAImpl_ficom_r80_by_i16:
  6811 000024ED 53                      push ebx
  6812 000024EE 57                      push edi
  6813 000024EF 56                      push esi
  6814 000024F0 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6815 000024F4 8B742414                mov esi, [esp + 12 + 4 + 4]
  6816 000024F8 83EC20                  sub esp, 20
  6817                                 
  6818 000024FB DBE3                    fninit
  6819 000024FD DB2B                    fld tword [ebx]
  6820 000024FF D93424                  fnstenv [esp]
  6821                                 
  6822                                 
  6823 00002502 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6824 00002505 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6825 0000250A 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6826                                 
  6827                                 
  6828 0000250E 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6829 00002512 81E700470000            and edi, 0x4700
  6830 00002518 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6831 0000251D 2500380000              and eax, 0x3800
  6832 00002522 09F8                    or eax, edi
  6833 00002524 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6834                                 
  6835 00002529 D92424                  fldenv [esp]
  6836 0000252C DE16                    ficom word [esi]
  6837                                 
  6838 0000252E DD3A                    fnstsw word [edx]
  6839                                 
  6840 00002530 DBE3                    fninit
  6841 00002532 83C420                  add esp, 20
  6842 00002535 5E                      pop esi
  6843 00002536 5F                      pop edi
  6844 00002537 5B                      pop ebx
  6845 00002538 C20800                  ret 8
  6846                                 [global iemAImpl_ficom_r80_by_i16_EndProc:function hidden]
  6847                                 iemAImpl_ficom_r80_by_i16_EndProc:
  6848                                 [size iemAImpl_ficom_r80_by_i16 iemAImpl_ficom_r80_by_i16_EndProc - iemAImpl_ficom_r80_by_i16]
  6849                                 [size iemAImpl_ficom_r80_by_i16_EndProc 0]
  6850 0000253B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6851                                 %line 1871+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6852                                 
  6853                                 
  6854                                 
  6855                                 
  6856                                 
  6857                                 
  6858                                 
  6859                                 
  6860                                 
  6861                                 
  6862                                 
  6863                                 
  6864                                 
  6865                                 
  6866                                 
  6867                                 [global iemAImpl_fild_i32_to_r80]
  6868                                 %line 1886+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6869                                 iemAImpl_fild_i32_to_r80:
  6870                                 %line 1887+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6871 0000253F 53                      push ebx
  6872                                 %line 1887+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6873 00002540 8B5C2408                mov ebx, [esp + 4 + 4]
  6874 00002544 57                      push edi
  6875                                 %line 1888+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6876 00002545 83EC20                  sub esp, 20
  6877                                 
  6878 00002548 DBE3                    fninit
  6879 0000254A D93424                  fnstenv [esp]
  6880                                 %line 1891+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6881                                 
  6882                                 
  6883 0000254D 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6884 00002550 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6885 00002555 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6886                                 
  6887                                 
  6888 00002559 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6889 0000255D 81E700470000            and edi, 0x4700
  6890 00002563 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6891 00002568 2500380000              and eax, 0x3800
  6892 0000256D 09F8                    or eax, edi
  6893 0000256F 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6894                                 
  6895 00002574 D92424                  fldenv [esp]
  6896                                 %line 1892+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6897 00002577 DB03                    fild dword [ebx]
  6898                                 
  6899 00002579 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  6900 0000257C DBE2                    fnclex
  6901 0000257E DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  6902                                 
  6903 00002580 DBE3                    fninit
  6904 00002582 83C420                  add esp, 20
  6905 00002585 5F                      pop edi
  6906                                 %line 1900+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6907 00002586 5B                      pop ebx
  6908 00002587 C20400                  ret 4
  6909                                 %line 1901+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6910                                 [global iemAImpl_fild_i32_to_r80_EndProc:function hidden]
  6911                                 %line 1901+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6912                                 iemAImpl_fild_i32_to_r80_EndProc:
  6913                                 [size iemAImpl_fild_i32_to_r80 iemAImpl_fild_i32_to_r80_EndProc - iemAImpl_fild_i32_to_r80]
  6914                                 [size iemAImpl_fild_i32_to_r80_EndProc 0]
  6915 0000258A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6916                                 %line 1902+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6917                                 
  6918                                 
  6919                                 
  6920                                 
  6921                                 
  6922                                 
  6923                                 
  6924                                 
  6925                                 
  6926                                 
  6927                                 [global iemAImpl_fist_r80_to_i32]
  6928                                 %line 1912+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6929                                 iemAImpl_fist_r80_to_i32:
  6930                                 %line 1913+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6931 0000258E 53                      push ebx
  6932                                 %line 1913+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6933 0000258F 57                      push edi
  6934 00002590 56                      push esi
  6935 00002591 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6936 00002595 8B742414                mov esi, [esp + 12 + 4 + 4]
  6937                                 %line 1914+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6938 00002599 83EC20                  sub esp, 20
  6939                                 
  6940 0000259C DBE3                    fninit
  6941 0000259E DB2E                    fld tword [esi]
  6942 000025A0 D93424                  fnstenv [esp]
  6943                                 %line 1918+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6944                                 
  6945                                 
  6946 000025A3 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  6947 000025A6 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  6948 000025AB 66890424                mov [esp + X86FSTENV32P.FCW], ax
  6949                                 
  6950                                 
  6951 000025AF 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  6952 000025B3 81E700470000            and edi, 0x4700
  6953 000025B9 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  6954 000025BE 2500380000              and eax, 0x3800
  6955 000025C3 09F8                    or eax, edi
  6956 000025C5 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  6957                                 
  6958 000025CA D92424                  fldenv [esp]
  6959                                 %line 1919+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6960 000025CD DB1B                    fistp dword [ebx]
  6961                                 
  6962 000025CF DD3A                    fnstsw word [edx]
  6963                                 
  6964 000025D1 DBE3                    fninit
  6965 000025D3 83C420                  add esp, 20
  6966 000025D6 5E                      pop esi
  6967                                 %line 1925+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6968 000025D7 5F                      pop edi
  6969 000025D8 5B                      pop ebx
  6970 000025D9 C20800                  ret 8
  6971                                 %line 1926+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6972                                 [global iemAImpl_fist_r80_to_i32_EndProc:function hidden]
  6973                                 %line 1926+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6974                                 iemAImpl_fist_r80_to_i32_EndProc:
  6975                                 [size iemAImpl_fist_r80_to_i32 iemAImpl_fist_r80_to_i32_EndProc - iemAImpl_fist_r80_to_i32]
  6976                                 [size iemAImpl_fist_r80_to_i32_EndProc 0]
  6977 000025DC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6978                                 %line 1927+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6979                                 
  6980                                 
  6981                                 
  6982                                 
  6983                                 
  6984                                 
  6985                                 
  6986                                 
  6987                                 
  6988                                 
  6989                                 
  6990                                 [global iemAImpl_fistt_r80_to_i32]
  6991                                 %line 1938+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6992                                 iemAImpl_fistt_r80_to_i32:
  6993                                 %line 1939+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6994 000025E0 53                      push ebx
  6995                                 %line 1939+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6996 000025E1 57                      push edi
  6997 000025E2 56                      push esi
  6998 000025E3 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  6999 000025E7 8B742414                mov esi, [esp + 12 + 4 + 4]
  7000                                 %line 1940+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7001 000025EB 83EC20                  sub esp, 20
  7002                                 
  7003 000025EE DBE3                    fninit
  7004 000025F0 DB2E                    fld tword [esi]
  7005 000025F2 D93424                  fnstenv [esp]
  7006                                 %line 1944+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7007                                 
  7008                                 
  7009 000025F5 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7010 000025F8 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7011 000025FD 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7012                                 
  7013                                 
  7014 00002601 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7015 00002605 81E700470000            and edi, 0x4700
  7016 0000260B 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7017 00002610 2500380000              and eax, 0x3800
  7018 00002615 09F8                    or eax, edi
  7019 00002617 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7020                                 
  7021 0000261C D92424                  fldenv [esp]
  7022                                 %line 1945+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7023 0000261F DB0B                    fisttp dword [ebx]
  7024                                 
  7025 00002621 DD3A                    fnstsw word [edx]
  7026                                 
  7027 00002623 DBE3                    fninit
  7028 00002625 83C420                  add esp, 20
  7029 00002628 5E                      pop esi
  7030                                 %line 1951+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7031 00002629 5F                      pop edi
  7032 0000262A 5B                      pop ebx
  7033 0000262B C20800                  ret 8
  7034                                 %line 1952+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7035                                 [global iemAImpl_fistt_r80_to_i32_EndProc:function hidden]
  7036                                 %line 1952+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7037                                 iemAImpl_fistt_r80_to_i32_EndProc:
  7038                                 [size iemAImpl_fistt_r80_to_i32 iemAImpl_fistt_r80_to_i32_EndProc - iemAImpl_fistt_r80_to_i32]
  7039                                 [size iemAImpl_fistt_r80_to_i32_EndProc 0]
  7040 0000262E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7041                                 %line 1953+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7042                                 
  7043                                 
  7044                                 
  7045                                 
  7046                                 
  7047                                 
  7048                                 
  7049                                 
  7050                                 
  7051                                 
  7052                                 
  7053                                 
  7054                                 %line 1984+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7055                                 
  7056                                 [global iemAImpl_fiadd_r80_by_i32]
  7057                                 %line 1985+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7058                                 iemAImpl_fiadd_r80_by_i32:
  7059 00002632 53                      push ebx
  7060 00002633 57                      push edi
  7061 00002634 56                      push esi
  7062 00002635 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7063 00002639 8B742414                mov esi, [esp + 12 + 4 + 4]
  7064 0000263D 83EC20                  sub esp, 20
  7065                                 
  7066 00002640 DBE3                    fninit
  7067 00002642 DB2B                    fld tword [ebx]
  7068 00002644 D93424                  fnstenv [esp]
  7069                                 
  7070                                 
  7071 00002647 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7072 0000264A 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7073 0000264F 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7074                                 
  7075                                 
  7076 00002653 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7077 00002657 81E700470000            and edi, 0x4700
  7078 0000265D 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7079 00002662 2500380000              and eax, 0x3800
  7080 00002667 09F8                    or eax, edi
  7081 00002669 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7082                                 
  7083 0000266E D92424                  fldenv [esp]
  7084 00002671 DA06                    fiadd dword [esi]
  7085                                 
  7086 00002673 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7087 00002676 DBE2                    fnclex
  7088 00002678 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7089                                 
  7090 0000267A DBE3                    fninit
  7091 0000267C 83C420                  add esp, 20
  7092 0000267F 5E                      pop esi
  7093 00002680 5F                      pop edi
  7094 00002681 5B                      pop ebx
  7095 00002682 C20800                  ret 8
  7096                                 [global iemAImpl_fiadd_r80_by_i32_EndProc:function hidden]
  7097                                 iemAImpl_fiadd_r80_by_i32_EndProc:
  7098                                 [size iemAImpl_fiadd_r80_by_i32 iemAImpl_fiadd_r80_by_i32_EndProc - iemAImpl_fiadd_r80_by_i32]
  7099                                 [size iemAImpl_fiadd_r80_by_i32_EndProc 0]
  7100 00002685 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7101                                 %line 1986+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7102                                 [global iemAImpl_fimul_r80_by_i32]
  7103                                 %line 1986+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7104                                 iemAImpl_fimul_r80_by_i32:
  7105 00002689 53                      push ebx
  7106 0000268A 57                      push edi
  7107 0000268B 56                      push esi
  7108 0000268C 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7109 00002690 8B742414                mov esi, [esp + 12 + 4 + 4]
  7110 00002694 83EC20                  sub esp, 20
  7111                                 
  7112 00002697 DBE3                    fninit
  7113 00002699 DB2B                    fld tword [ebx]
  7114 0000269B D93424                  fnstenv [esp]
  7115                                 
  7116                                 
  7117 0000269E 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7118 000026A1 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7119 000026A6 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7120                                 
  7121                                 
  7122 000026AA 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7123 000026AE 81E700470000            and edi, 0x4700
  7124 000026B4 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7125 000026B9 2500380000              and eax, 0x3800
  7126 000026BE 09F8                    or eax, edi
  7127 000026C0 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7128                                 
  7129 000026C5 D92424                  fldenv [esp]
  7130 000026C8 DA0E                    fimul dword [esi]
  7131                                 
  7132 000026CA DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7133 000026CD DBE2                    fnclex
  7134 000026CF DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7135                                 
  7136 000026D1 DBE3                    fninit
  7137 000026D3 83C420                  add esp, 20
  7138 000026D6 5E                      pop esi
  7139 000026D7 5F                      pop edi
  7140 000026D8 5B                      pop ebx
  7141 000026D9 C20800                  ret 8
  7142                                 [global iemAImpl_fimul_r80_by_i32_EndProc:function hidden]
  7143                                 iemAImpl_fimul_r80_by_i32_EndProc:
  7144                                 [size iemAImpl_fimul_r80_by_i32 iemAImpl_fimul_r80_by_i32_EndProc - iemAImpl_fimul_r80_by_i32]
  7145                                 [size iemAImpl_fimul_r80_by_i32_EndProc 0]
  7146 000026DC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7147                                 %line 1987+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7148                                 [global iemAImpl_fisub_r80_by_i32]
  7149                                 %line 1987+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7150                                 iemAImpl_fisub_r80_by_i32:
  7151 000026E0 53                      push ebx
  7152 000026E1 57                      push edi
  7153 000026E2 56                      push esi
  7154 000026E3 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7155 000026E7 8B742414                mov esi, [esp + 12 + 4 + 4]
  7156 000026EB 83EC20                  sub esp, 20
  7157                                 
  7158 000026EE DBE3                    fninit
  7159 000026F0 DB2B                    fld tword [ebx]
  7160 000026F2 D93424                  fnstenv [esp]
  7161                                 
  7162                                 
  7163 000026F5 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7164 000026F8 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7165 000026FD 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7166                                 
  7167                                 
  7168 00002701 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7169 00002705 81E700470000            and edi, 0x4700
  7170 0000270B 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7171 00002710 2500380000              and eax, 0x3800
  7172 00002715 09F8                    or eax, edi
  7173 00002717 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7174                                 
  7175 0000271C D92424                  fldenv [esp]
  7176 0000271F DA26                    fisub dword [esi]
  7177                                 
  7178 00002721 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7179 00002724 DBE2                    fnclex
  7180 00002726 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7181                                 
  7182 00002728 DBE3                    fninit
  7183 0000272A 83C420                  add esp, 20
  7184 0000272D 5E                      pop esi
  7185 0000272E 5F                      pop edi
  7186 0000272F 5B                      pop ebx
  7187 00002730 C20800                  ret 8
  7188                                 [global iemAImpl_fisub_r80_by_i32_EndProc:function hidden]
  7189                                 iemAImpl_fisub_r80_by_i32_EndProc:
  7190                                 [size iemAImpl_fisub_r80_by_i32 iemAImpl_fisub_r80_by_i32_EndProc - iemAImpl_fisub_r80_by_i32]
  7191                                 [size iemAImpl_fisub_r80_by_i32_EndProc 0]
  7192 00002733 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7193                                 %line 1988+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7194                                 [global iemAImpl_fisubr_r80_by_i32]
  7195                                 %line 1988+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7196                                 iemAImpl_fisubr_r80_by_i32:
  7197 00002737 53                      push ebx
  7198 00002738 57                      push edi
  7199 00002739 56                      push esi
  7200 0000273A 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7201 0000273E 8B742414                mov esi, [esp + 12 + 4 + 4]
  7202 00002742 83EC20                  sub esp, 20
  7203                                 
  7204 00002745 DBE3                    fninit
  7205 00002747 DB2B                    fld tword [ebx]
  7206 00002749 D93424                  fnstenv [esp]
  7207                                 
  7208                                 
  7209 0000274C 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7210 0000274F 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7211 00002754 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7212                                 
  7213                                 
  7214 00002758 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7215 0000275C 81E700470000            and edi, 0x4700
  7216 00002762 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7217 00002767 2500380000              and eax, 0x3800
  7218 0000276C 09F8                    or eax, edi
  7219 0000276E 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7220                                 
  7221 00002773 D92424                  fldenv [esp]
  7222 00002776 DA2E                    fisubr dword [esi]
  7223                                 
  7224 00002778 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7225 0000277B DBE2                    fnclex
  7226 0000277D DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7227                                 
  7228 0000277F DBE3                    fninit
  7229 00002781 83C420                  add esp, 20
  7230 00002784 5E                      pop esi
  7231 00002785 5F                      pop edi
  7232 00002786 5B                      pop ebx
  7233 00002787 C20800                  ret 8
  7234                                 [global iemAImpl_fisubr_r80_by_i32_EndProc:function hidden]
  7235                                 iemAImpl_fisubr_r80_by_i32_EndProc:
  7236                                 [size iemAImpl_fisubr_r80_by_i32 iemAImpl_fisubr_r80_by_i32_EndProc - iemAImpl_fisubr_r80_by_i32]
  7237                                 [size iemAImpl_fisubr_r80_by_i32_EndProc 0]
  7238 0000278A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7239                                 %line 1989+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7240                                 [global iemAImpl_fidiv_r80_by_i32]
  7241                                 %line 1989+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7242                                 iemAImpl_fidiv_r80_by_i32:
  7243 0000278E 53                      push ebx
  7244 0000278F 57                      push edi
  7245 00002790 56                      push esi
  7246 00002791 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7247 00002795 8B742414                mov esi, [esp + 12 + 4 + 4]
  7248 00002799 83EC20                  sub esp, 20
  7249                                 
  7250 0000279C DBE3                    fninit
  7251 0000279E DB2B                    fld tword [ebx]
  7252 000027A0 D93424                  fnstenv [esp]
  7253                                 
  7254                                 
  7255 000027A3 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7256 000027A6 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7257 000027AB 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7258                                 
  7259                                 
  7260 000027AF 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7261 000027B3 81E700470000            and edi, 0x4700
  7262 000027B9 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7263 000027BE 2500380000              and eax, 0x3800
  7264 000027C3 09F8                    or eax, edi
  7265 000027C5 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7266                                 
  7267 000027CA D92424                  fldenv [esp]
  7268 000027CD DA36                    fidiv dword [esi]
  7269                                 
  7270 000027CF DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7271 000027D2 DBE2                    fnclex
  7272 000027D4 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7273                                 
  7274 000027D6 DBE3                    fninit
  7275 000027D8 83C420                  add esp, 20
  7276 000027DB 5E                      pop esi
  7277 000027DC 5F                      pop edi
  7278 000027DD 5B                      pop ebx
  7279 000027DE C20800                  ret 8
  7280                                 [global iemAImpl_fidiv_r80_by_i32_EndProc:function hidden]
  7281                                 iemAImpl_fidiv_r80_by_i32_EndProc:
  7282                                 [size iemAImpl_fidiv_r80_by_i32 iemAImpl_fidiv_r80_by_i32_EndProc - iemAImpl_fidiv_r80_by_i32]
  7283                                 [size iemAImpl_fidiv_r80_by_i32_EndProc 0]
  7284 000027E1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7285                                 %line 1990+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7286                                 [global iemAImpl_fidivr_r80_by_i32]
  7287                                 %line 1990+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7288                                 iemAImpl_fidivr_r80_by_i32:
  7289 000027E5 53                      push ebx
  7290 000027E6 57                      push edi
  7291 000027E7 56                      push esi
  7292 000027E8 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7293 000027EC 8B742414                mov esi, [esp + 12 + 4 + 4]
  7294 000027F0 83EC20                  sub esp, 20
  7295                                 
  7296 000027F3 DBE3                    fninit
  7297 000027F5 DB2B                    fld tword [ebx]
  7298 000027F7 D93424                  fnstenv [esp]
  7299                                 
  7300                                 
  7301 000027FA 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7302 000027FD 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7303 00002802 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7304                                 
  7305                                 
  7306 00002806 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7307 0000280A 81E700470000            and edi, 0x4700
  7308 00002810 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7309 00002815 2500380000              and eax, 0x3800
  7310 0000281A 09F8                    or eax, edi
  7311 0000281C 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7312                                 
  7313 00002821 D92424                  fldenv [esp]
  7314 00002824 DA3E                    fidivr dword [esi]
  7315                                 
  7316 00002826 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7317 00002829 DBE2                    fnclex
  7318 0000282B DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7319                                 
  7320 0000282D DBE3                    fninit
  7321 0000282F 83C420                  add esp, 20
  7322 00002832 5E                      pop esi
  7323 00002833 5F                      pop edi
  7324 00002834 5B                      pop ebx
  7325 00002835 C20800                  ret 8
  7326                                 [global iemAImpl_fidivr_r80_by_i32_EndProc:function hidden]
  7327                                 iemAImpl_fidivr_r80_by_i32_EndProc:
  7328                                 [size iemAImpl_fidivr_r80_by_i32 iemAImpl_fidivr_r80_by_i32_EndProc - iemAImpl_fidivr_r80_by_i32]
  7329                                 [size iemAImpl_fidivr_r80_by_i32_EndProc 0]
  7330 00002838 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7331                                 %line 1991+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7332                                 
  7333                                 
  7334                                 
  7335                                 
  7336                                 
  7337                                 
  7338                                 
  7339                                 
  7340                                 
  7341                                 
  7342                                 
  7343                                 
  7344                                 
  7345                                 %line 2021+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7346                                 
  7347                                 [global iemAImpl_ficom_r80_by_i32]
  7348                                 %line 2022+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7349                                 iemAImpl_ficom_r80_by_i32:
  7350 0000283C 53                      push ebx
  7351 0000283D 57                      push edi
  7352 0000283E 56                      push esi
  7353 0000283F 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7354 00002843 8B742414                mov esi, [esp + 12 + 4 + 4]
  7355 00002847 83EC20                  sub esp, 20
  7356                                 
  7357 0000284A DBE3                    fninit
  7358 0000284C DB2B                    fld tword [ebx]
  7359 0000284E D93424                  fnstenv [esp]
  7360                                 
  7361                                 
  7362 00002851 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7363 00002854 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7364 00002859 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7365                                 
  7366                                 
  7367 0000285D 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7368 00002861 81E700470000            and edi, 0x4700
  7369 00002867 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7370 0000286C 2500380000              and eax, 0x3800
  7371 00002871 09F8                    or eax, edi
  7372 00002873 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7373                                 
  7374 00002878 D92424                  fldenv [esp]
  7375 0000287B DA16                    ficom dword [esi]
  7376                                 
  7377 0000287D DD3A                    fnstsw word [edx]
  7378                                 
  7379 0000287F DBE3                    fninit
  7380 00002881 83C420                  add esp, 20
  7381 00002884 5E                      pop esi
  7382 00002885 5F                      pop edi
  7383 00002886 5B                      pop ebx
  7384 00002887 C20800                  ret 8
  7385                                 [global iemAImpl_ficom_r80_by_i32_EndProc:function hidden]
  7386                                 iemAImpl_ficom_r80_by_i32_EndProc:
  7387                                 [size iemAImpl_ficom_r80_by_i32 iemAImpl_ficom_r80_by_i32_EndProc - iemAImpl_ficom_r80_by_i32]
  7388                                 [size iemAImpl_ficom_r80_by_i32_EndProc 0]
  7389 0000288A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7390                                 %line 2023+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7391                                 
  7392                                 
  7393                                 
  7394                                 
  7395                                 
  7396                                 
  7397                                 
  7398                                 
  7399                                 
  7400                                 
  7401                                 
  7402                                 
  7403                                 
  7404                                 
  7405                                 
  7406                                 [global iemAImpl_fild_i64_to_r80]
  7407                                 %line 2038+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7408                                 iemAImpl_fild_i64_to_r80:
  7409                                 %line 2039+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7410 0000288E 53                      push ebx
  7411                                 %line 2039+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7412 0000288F 8B5C2408                mov ebx, [esp + 4 + 4]
  7413 00002893 57                      push edi
  7414                                 %line 2040+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7415 00002894 83EC20                  sub esp, 20
  7416                                 
  7417 00002897 DBE3                    fninit
  7418 00002899 D93424                  fnstenv [esp]
  7419                                 %line 2043+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7420                                 
  7421                                 
  7422 0000289C 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7423 0000289F 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7424 000028A4 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7425                                 
  7426                                 
  7427 000028A8 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7428 000028AC 81E700470000            and edi, 0x4700
  7429 000028B2 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7430 000028B7 2500380000              and eax, 0x3800
  7431 000028BC 09F8                    or eax, edi
  7432 000028BE 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7433                                 
  7434 000028C3 D92424                  fldenv [esp]
  7435                                 %line 2044+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7436 000028C6 DF2B                    fild qword [ebx]
  7437                                 
  7438 000028C8 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7439 000028CB DBE2                    fnclex
  7440 000028CD DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7441                                 
  7442 000028CF DBE3                    fninit
  7443 000028D1 83C420                  add esp, 20
  7444 000028D4 5F                      pop edi
  7445                                 %line 2052+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7446 000028D5 5B                      pop ebx
  7447 000028D6 C20400                  ret 4
  7448                                 %line 2053+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7449                                 [global iemAImpl_fild_i64_to_r80_EndProc:function hidden]
  7450                                 %line 2053+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7451                                 iemAImpl_fild_i64_to_r80_EndProc:
  7452                                 [size iemAImpl_fild_i64_to_r80 iemAImpl_fild_i64_to_r80_EndProc - iemAImpl_fild_i64_to_r80]
  7453                                 [size iemAImpl_fild_i64_to_r80_EndProc 0]
  7454 000028D9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7455                                 %line 2054+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7456                                 
  7457                                 
  7458                                 
  7459                                 
  7460                                 
  7461                                 
  7462                                 
  7463                                 
  7464                                 
  7465                                 
  7466                                 [global iemAImpl_fist_r80_to_i64]
  7467                                 %line 2064+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7468                                 iemAImpl_fist_r80_to_i64:
  7469                                 %line 2065+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7470 000028DD 53                      push ebx
  7471                                 %line 2065+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7472 000028DE 57                      push edi
  7473 000028DF 56                      push esi
  7474 000028E0 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7475 000028E4 8B742414                mov esi, [esp + 12 + 4 + 4]
  7476                                 %line 2066+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7477 000028E8 83EC20                  sub esp, 20
  7478                                 
  7479 000028EB DBE3                    fninit
  7480 000028ED DB2E                    fld tword [esi]
  7481 000028EF D93424                  fnstenv [esp]
  7482                                 %line 2070+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7483                                 
  7484                                 
  7485 000028F2 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7486 000028F5 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7487 000028FA 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7488                                 
  7489                                 
  7490 000028FE 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7491 00002902 81E700470000            and edi, 0x4700
  7492 00002908 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7493 0000290D 2500380000              and eax, 0x3800
  7494 00002912 09F8                    or eax, edi
  7495 00002914 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7496                                 
  7497 00002919 D92424                  fldenv [esp]
  7498                                 %line 2071+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7499 0000291C DF3B                    fistp qword [ebx]
  7500                                 
  7501 0000291E DD3A                    fnstsw word [edx]
  7502                                 
  7503 00002920 DBE3                    fninit
  7504 00002922 83C420                  add esp, 20
  7505 00002925 5E                      pop esi
  7506                                 %line 2077+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7507 00002926 5F                      pop edi
  7508 00002927 5B                      pop ebx
  7509 00002928 C20800                  ret 8
  7510                                 %line 2078+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7511                                 [global iemAImpl_fist_r80_to_i64_EndProc:function hidden]
  7512                                 %line 2078+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7513                                 iemAImpl_fist_r80_to_i64_EndProc:
  7514                                 [size iemAImpl_fist_r80_to_i64 iemAImpl_fist_r80_to_i64_EndProc - iemAImpl_fist_r80_to_i64]
  7515                                 [size iemAImpl_fist_r80_to_i64_EndProc 0]
  7516 0000292B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7517                                 %line 2079+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7518                                 
  7519                                 
  7520                                 
  7521                                 
  7522                                 
  7523                                 
  7524                                 
  7525                                 
  7526                                 
  7527                                 
  7528                                 
  7529                                 [global iemAImpl_fistt_r80_to_i64]
  7530                                 %line 2090+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7531                                 iemAImpl_fistt_r80_to_i64:
  7532                                 %line 2091+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7533 0000292F 53                      push ebx
  7534                                 %line 2091+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7535 00002930 57                      push edi
  7536 00002931 56                      push esi
  7537 00002932 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7538 00002936 8B742414                mov esi, [esp + 12 + 4 + 4]
  7539                                 %line 2092+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7540 0000293A 83EC20                  sub esp, 20
  7541                                 
  7542 0000293D DBE3                    fninit
  7543 0000293F DB2E                    fld tword [esi]
  7544 00002941 D93424                  fnstenv [esp]
  7545                                 %line 2096+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7546                                 
  7547                                 
  7548 00002944 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7549 00002947 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7550 0000294C 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7551                                 
  7552                                 
  7553 00002950 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7554 00002954 81E700470000            and edi, 0x4700
  7555 0000295A 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7556 0000295F 2500380000              and eax, 0x3800
  7557 00002964 09F8                    or eax, edi
  7558 00002966 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7559                                 
  7560 0000296B D92424                  fldenv [esp]
  7561                                 %line 2097+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7562 0000296E DD0B                    fisttp qword [ebx]
  7563                                 
  7564 00002970 DD3A                    fnstsw word [edx]
  7565                                 
  7566 00002972 DBE3                    fninit
  7567 00002974 83C420                  add esp, 20
  7568 00002977 5E                      pop esi
  7569                                 %line 2103+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7570 00002978 5F                      pop edi
  7571 00002979 5B                      pop ebx
  7572 0000297A C20800                  ret 8
  7573                                 %line 2104+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7574                                 [global iemAImpl_fistt_r80_to_i64_EndProc:function hidden]
  7575                                 %line 2104+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7576                                 iemAImpl_fistt_r80_to_i64_EndProc:
  7577                                 [size iemAImpl_fistt_r80_to_i64 iemAImpl_fistt_r80_to_i64_EndProc - iemAImpl_fistt_r80_to_i64]
  7578                                 [size iemAImpl_fistt_r80_to_i64_EndProc 0]
  7579 0000297D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7580                                 %line 2105+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7581                                 
  7582                                 
  7583                                 
  7584                                 
  7585                                 
  7586                                 
  7587                                 
  7588                                 
  7589                                 
  7590                                 
  7591                                 
  7592                                 
  7593                                 
  7594                                 
  7595                                 [global iemAImpl_fld_r32_to_r80]
  7596                                 %line 2119+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7597                                 iemAImpl_fld_r32_to_r80:
  7598                                 %line 2120+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7599 00002981 53                      push ebx
  7600                                 %line 2120+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7601 00002982 8B5C2408                mov ebx, [esp + 4 + 4]
  7602 00002986 57                      push edi
  7603                                 %line 2121+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7604 00002987 83EC20                  sub esp, 20
  7605                                 
  7606 0000298A DBE3                    fninit
  7607 0000298C D93424                  fnstenv [esp]
  7608                                 %line 2124+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7609                                 
  7610                                 
  7611 0000298F 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7612 00002992 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7613 00002997 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7614                                 
  7615                                 
  7616 0000299B 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7617 0000299F 81E700470000            and edi, 0x4700
  7618 000029A5 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7619 000029AA 2500380000              and eax, 0x3800
  7620 000029AF 09F8                    or eax, edi
  7621 000029B1 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7622                                 
  7623 000029B6 D92424                  fldenv [esp]
  7624                                 %line 2125+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7625 000029B9 D903                    fld dword [ebx]
  7626                                 
  7627 000029BB DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7628 000029BE DBE2                    fnclex
  7629 000029C0 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7630                                 
  7631 000029C2 DBE3                    fninit
  7632 000029C4 83C420                  add esp, 20
  7633 000029C7 5F                      pop edi
  7634                                 %line 2133+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7635 000029C8 5B                      pop ebx
  7636 000029C9 C20400                  ret 4
  7637                                 %line 2134+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7638                                 [global iemAImpl_fld_r32_to_r80_EndProc:function hidden]
  7639                                 %line 2134+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7640                                 iemAImpl_fld_r32_to_r80_EndProc:
  7641                                 [size iemAImpl_fld_r32_to_r80 iemAImpl_fld_r32_to_r80_EndProc - iemAImpl_fld_r32_to_r80]
  7642                                 [size iemAImpl_fld_r32_to_r80_EndProc 0]
  7643 000029CC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7644                                 %line 2135+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7645                                 
  7646                                 
  7647                                 
  7648                                 
  7649                                 
  7650                                 
  7651                                 
  7652                                 
  7653                                 
  7654                                 
  7655                                 [global iemAImpl_fst_r80_to_r32]
  7656                                 %line 2145+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7657                                 iemAImpl_fst_r80_to_r32:
  7658                                 %line 2146+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7659 000029D0 53                      push ebx
  7660                                 %line 2146+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7661 000029D1 57                      push edi
  7662 000029D2 56                      push esi
  7663 000029D3 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7664 000029D7 8B742414                mov esi, [esp + 12 + 4 + 4]
  7665                                 %line 2147+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7666 000029DB 83EC20                  sub esp, 20
  7667                                 
  7668 000029DE DBE3                    fninit
  7669 000029E0 DB2E                    fld tword [esi]
  7670 000029E2 D93424                  fnstenv [esp]
  7671                                 %line 2151+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7672                                 
  7673                                 
  7674 000029E5 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7675 000029E8 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7676 000029ED 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7677                                 
  7678                                 
  7679 000029F1 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7680 000029F5 81E700470000            and edi, 0x4700
  7681 000029FB 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7682 00002A00 2500380000              and eax, 0x3800
  7683 00002A05 09F8                    or eax, edi
  7684 00002A07 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7685                                 
  7686 00002A0C D92424                  fldenv [esp]
  7687                                 %line 2152+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7688 00002A0F D913                    fst dword [ebx]
  7689                                 
  7690 00002A11 DD3A                    fnstsw word [edx]
  7691                                 
  7692 00002A13 DBE3                    fninit
  7693 00002A15 83C420                  add esp, 20
  7694 00002A18 5E                      pop esi
  7695                                 %line 2158+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7696 00002A19 5F                      pop edi
  7697 00002A1A 5B                      pop ebx
  7698 00002A1B C20800                  ret 8
  7699                                 %line 2159+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7700                                 [global iemAImpl_fst_r80_to_r32_EndProc:function hidden]
  7701                                 %line 2159+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7702                                 iemAImpl_fst_r80_to_r32_EndProc:
  7703                                 [size iemAImpl_fst_r80_to_r32 iemAImpl_fst_r80_to_r32_EndProc - iemAImpl_fst_r80_to_r32]
  7704                                 [size iemAImpl_fst_r80_to_r32_EndProc 0]
  7705 00002A1E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7706                                 %line 2160+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7707                                 
  7708                                 
  7709                                 
  7710                                 
  7711                                 
  7712                                 
  7713                                 
  7714                                 
  7715                                 
  7716                                 
  7717                                 
  7718                                 
  7719                                 %line 2191+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7720                                 
  7721                                 [global iemAImpl_fadd_r80_by_r32]
  7722                                 %line 2192+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7723                                 iemAImpl_fadd_r80_by_r32:
  7724 00002A22 53                      push ebx
  7725 00002A23 57                      push edi
  7726 00002A24 56                      push esi
  7727 00002A25 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7728 00002A29 8B742414                mov esi, [esp + 12 + 4 + 4]
  7729 00002A2D 83EC20                  sub esp, 20
  7730                                 
  7731 00002A30 DBE3                    fninit
  7732 00002A32 DB2B                    fld tword [ebx]
  7733 00002A34 D93424                  fnstenv [esp]
  7734                                 
  7735                                 
  7736 00002A37 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7737 00002A3A 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7738 00002A3F 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7739                                 
  7740                                 
  7741 00002A43 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7742 00002A47 81E700470000            and edi, 0x4700
  7743 00002A4D 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7744 00002A52 2500380000              and eax, 0x3800
  7745 00002A57 09F8                    or eax, edi
  7746 00002A59 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7747                                 
  7748 00002A5E D92424                  fldenv [esp]
  7749 00002A61 D806                    fadd dword [esi]
  7750                                 
  7751 00002A63 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7752 00002A66 DBE2                    fnclex
  7753 00002A68 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7754                                 
  7755 00002A6A DBE3                    fninit
  7756 00002A6C 83C420                  add esp, 20
  7757 00002A6F 5E                      pop esi
  7758 00002A70 5F                      pop edi
  7759 00002A71 5B                      pop ebx
  7760 00002A72 C20800                  ret 8
  7761                                 [global iemAImpl_fadd_r80_by_r32_EndProc:function hidden]
  7762                                 iemAImpl_fadd_r80_by_r32_EndProc:
  7763                                 [size iemAImpl_fadd_r80_by_r32 iemAImpl_fadd_r80_by_r32_EndProc - iemAImpl_fadd_r80_by_r32]
  7764                                 [size iemAImpl_fadd_r80_by_r32_EndProc 0]
  7765 00002A75 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7766                                 %line 2193+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7767                                 [global iemAImpl_fmul_r80_by_r32]
  7768                                 %line 2193+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7769                                 iemAImpl_fmul_r80_by_r32:
  7770 00002A79 53                      push ebx
  7771 00002A7A 57                      push edi
  7772 00002A7B 56                      push esi
  7773 00002A7C 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7774 00002A80 8B742414                mov esi, [esp + 12 + 4 + 4]
  7775 00002A84 83EC20                  sub esp, 20
  7776                                 
  7777 00002A87 DBE3                    fninit
  7778 00002A89 DB2B                    fld tword [ebx]
  7779 00002A8B D93424                  fnstenv [esp]
  7780                                 
  7781                                 
  7782 00002A8E 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7783 00002A91 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7784 00002A96 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7785                                 
  7786                                 
  7787 00002A9A 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7788 00002A9E 81E700470000            and edi, 0x4700
  7789 00002AA4 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7790 00002AA9 2500380000              and eax, 0x3800
  7791 00002AAE 09F8                    or eax, edi
  7792 00002AB0 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7793                                 
  7794 00002AB5 D92424                  fldenv [esp]
  7795 00002AB8 D80E                    fmul dword [esi]
  7796                                 
  7797 00002ABA DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7798 00002ABD DBE2                    fnclex
  7799 00002ABF DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7800                                 
  7801 00002AC1 DBE3                    fninit
  7802 00002AC3 83C420                  add esp, 20
  7803 00002AC6 5E                      pop esi
  7804 00002AC7 5F                      pop edi
  7805 00002AC8 5B                      pop ebx
  7806 00002AC9 C20800                  ret 8
  7807                                 [global iemAImpl_fmul_r80_by_r32_EndProc:function hidden]
  7808                                 iemAImpl_fmul_r80_by_r32_EndProc:
  7809                                 [size iemAImpl_fmul_r80_by_r32 iemAImpl_fmul_r80_by_r32_EndProc - iemAImpl_fmul_r80_by_r32]
  7810                                 [size iemAImpl_fmul_r80_by_r32_EndProc 0]
  7811 00002ACC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7812                                 %line 2194+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7813                                 [global iemAImpl_fsub_r80_by_r32]
  7814                                 %line 2194+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7815                                 iemAImpl_fsub_r80_by_r32:
  7816 00002AD0 53                      push ebx
  7817 00002AD1 57                      push edi
  7818 00002AD2 56                      push esi
  7819 00002AD3 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7820 00002AD7 8B742414                mov esi, [esp + 12 + 4 + 4]
  7821 00002ADB 83EC20                  sub esp, 20
  7822                                 
  7823 00002ADE DBE3                    fninit
  7824 00002AE0 DB2B                    fld tword [ebx]
  7825 00002AE2 D93424                  fnstenv [esp]
  7826                                 
  7827                                 
  7828 00002AE5 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7829 00002AE8 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7830 00002AED 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7831                                 
  7832                                 
  7833 00002AF1 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7834 00002AF5 81E700470000            and edi, 0x4700
  7835 00002AFB 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7836 00002B00 2500380000              and eax, 0x3800
  7837 00002B05 09F8                    or eax, edi
  7838 00002B07 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7839                                 
  7840 00002B0C D92424                  fldenv [esp]
  7841 00002B0F D826                    fsub dword [esi]
  7842                                 
  7843 00002B11 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7844 00002B14 DBE2                    fnclex
  7845 00002B16 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7846                                 
  7847 00002B18 DBE3                    fninit
  7848 00002B1A 83C420                  add esp, 20
  7849 00002B1D 5E                      pop esi
  7850 00002B1E 5F                      pop edi
  7851 00002B1F 5B                      pop ebx
  7852 00002B20 C20800                  ret 8
  7853                                 [global iemAImpl_fsub_r80_by_r32_EndProc:function hidden]
  7854                                 iemAImpl_fsub_r80_by_r32_EndProc:
  7855                                 [size iemAImpl_fsub_r80_by_r32 iemAImpl_fsub_r80_by_r32_EndProc - iemAImpl_fsub_r80_by_r32]
  7856                                 [size iemAImpl_fsub_r80_by_r32_EndProc 0]
  7857 00002B23 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7858                                 %line 2195+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7859                                 [global iemAImpl_fsubr_r80_by_r32]
  7860                                 %line 2195+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7861                                 iemAImpl_fsubr_r80_by_r32:
  7862 00002B27 53                      push ebx
  7863 00002B28 57                      push edi
  7864 00002B29 56                      push esi
  7865 00002B2A 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7866 00002B2E 8B742414                mov esi, [esp + 12 + 4 + 4]
  7867 00002B32 83EC20                  sub esp, 20
  7868                                 
  7869 00002B35 DBE3                    fninit
  7870 00002B37 DB2B                    fld tword [ebx]
  7871 00002B39 D93424                  fnstenv [esp]
  7872                                 
  7873                                 
  7874 00002B3C 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7875 00002B3F 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7876 00002B44 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7877                                 
  7878                                 
  7879 00002B48 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7880 00002B4C 81E700470000            and edi, 0x4700
  7881 00002B52 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7882 00002B57 2500380000              and eax, 0x3800
  7883 00002B5C 09F8                    or eax, edi
  7884 00002B5E 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7885                                 
  7886 00002B63 D92424                  fldenv [esp]
  7887 00002B66 D82E                    fsubr dword [esi]
  7888                                 
  7889 00002B68 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7890 00002B6B DBE2                    fnclex
  7891 00002B6D DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7892                                 
  7893 00002B6F DBE3                    fninit
  7894 00002B71 83C420                  add esp, 20
  7895 00002B74 5E                      pop esi
  7896 00002B75 5F                      pop edi
  7897 00002B76 5B                      pop ebx
  7898 00002B77 C20800                  ret 8
  7899                                 [global iemAImpl_fsubr_r80_by_r32_EndProc:function hidden]
  7900                                 iemAImpl_fsubr_r80_by_r32_EndProc:
  7901                                 [size iemAImpl_fsubr_r80_by_r32 iemAImpl_fsubr_r80_by_r32_EndProc - iemAImpl_fsubr_r80_by_r32]
  7902                                 [size iemAImpl_fsubr_r80_by_r32_EndProc 0]
  7903 00002B7A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7904                                 %line 2196+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7905                                 [global iemAImpl_fdiv_r80_by_r32]
  7906                                 %line 2196+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7907                                 iemAImpl_fdiv_r80_by_r32:
  7908 00002B7E 53                      push ebx
  7909 00002B7F 57                      push edi
  7910 00002B80 56                      push esi
  7911 00002B81 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7912 00002B85 8B742414                mov esi, [esp + 12 + 4 + 4]
  7913 00002B89 83EC20                  sub esp, 20
  7914                                 
  7915 00002B8C DBE3                    fninit
  7916 00002B8E DB2B                    fld tword [ebx]
  7917 00002B90 D93424                  fnstenv [esp]
  7918                                 
  7919                                 
  7920 00002B93 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7921 00002B96 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7922 00002B9B 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7923                                 
  7924                                 
  7925 00002B9F 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7926 00002BA3 81E700470000            and edi, 0x4700
  7927 00002BA9 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7928 00002BAE 2500380000              and eax, 0x3800
  7929 00002BB3 09F8                    or eax, edi
  7930 00002BB5 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7931                                 
  7932 00002BBA D92424                  fldenv [esp]
  7933 00002BBD D836                    fdiv dword [esi]
  7934                                 
  7935 00002BBF DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7936 00002BC2 DBE2                    fnclex
  7937 00002BC4 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7938                                 
  7939 00002BC6 DBE3                    fninit
  7940 00002BC8 83C420                  add esp, 20
  7941 00002BCB 5E                      pop esi
  7942 00002BCC 5F                      pop edi
  7943 00002BCD 5B                      pop ebx
  7944 00002BCE C20800                  ret 8
  7945                                 [global iemAImpl_fdiv_r80_by_r32_EndProc:function hidden]
  7946                                 iemAImpl_fdiv_r80_by_r32_EndProc:
  7947                                 [size iemAImpl_fdiv_r80_by_r32 iemAImpl_fdiv_r80_by_r32_EndProc - iemAImpl_fdiv_r80_by_r32]
  7948                                 [size iemAImpl_fdiv_r80_by_r32_EndProc 0]
  7949 00002BD1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7950                                 %line 2197+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7951                                 [global iemAImpl_fdivr_r80_by_r32]
  7952                                 %line 2197+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7953                                 iemAImpl_fdivr_r80_by_r32:
  7954 00002BD5 53                      push ebx
  7955 00002BD6 57                      push edi
  7956 00002BD7 56                      push esi
  7957 00002BD8 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  7958 00002BDC 8B742414                mov esi, [esp + 12 + 4 + 4]
  7959 00002BE0 83EC20                  sub esp, 20
  7960                                 
  7961 00002BE3 DBE3                    fninit
  7962 00002BE5 DB2B                    fld tword [ebx]
  7963 00002BE7 D93424                  fnstenv [esp]
  7964                                 
  7965                                 
  7966 00002BEA 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  7967 00002BED 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  7968 00002BF2 66890424                mov [esp + X86FSTENV32P.FCW], ax
  7969                                 
  7970                                 
  7971 00002BF6 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  7972 00002BFA 81E700470000            and edi, 0x4700
  7973 00002C00 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  7974 00002C05 2500380000              and eax, 0x3800
  7975 00002C0A 09F8                    or eax, edi
  7976 00002C0C 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  7977                                 
  7978 00002C11 D92424                  fldenv [esp]
  7979 00002C14 D83E                    fdivr dword [esi]
  7980                                 
  7981 00002C16 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  7982 00002C19 DBE2                    fnclex
  7983 00002C1B DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  7984                                 
  7985 00002C1D DBE3                    fninit
  7986 00002C1F 83C420                  add esp, 20
  7987 00002C22 5E                      pop esi
  7988 00002C23 5F                      pop edi
  7989 00002C24 5B                      pop ebx
  7990 00002C25 C20800                  ret 8
  7991                                 [global iemAImpl_fdivr_r80_by_r32_EndProc:function hidden]
  7992                                 iemAImpl_fdivr_r80_by_r32_EndProc:
  7993                                 [size iemAImpl_fdivr_r80_by_r32 iemAImpl_fdivr_r80_by_r32_EndProc - iemAImpl_fdivr_r80_by_r32]
  7994                                 [size iemAImpl_fdivr_r80_by_r32_EndProc 0]
  7995 00002C28 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7996                                 %line 2198+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7997                                 
  7998                                 
  7999                                 
  8000                                 
  8001                                 
  8002                                 
  8003                                 
  8004                                 
  8005                                 
  8006                                 
  8007                                 
  8008                                 
  8009                                 
  8010                                 %line 2228+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8011                                 
  8012                                 [global iemAImpl_fcom_r80_by_r32]
  8013                                 %line 2229+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8014                                 iemAImpl_fcom_r80_by_r32:
  8015 00002C2C 53                      push ebx
  8016 00002C2D 57                      push edi
  8017 00002C2E 56                      push esi
  8018 00002C2F 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8019 00002C33 8B742414                mov esi, [esp + 12 + 4 + 4]
  8020 00002C37 83EC20                  sub esp, 20
  8021                                 
  8022 00002C3A DBE3                    fninit
  8023 00002C3C DB2B                    fld tword [ebx]
  8024 00002C3E D93424                  fnstenv [esp]
  8025                                 
  8026                                 
  8027 00002C41 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8028 00002C44 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8029 00002C49 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8030                                 
  8031                                 
  8032 00002C4D 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8033 00002C51 81E700470000            and edi, 0x4700
  8034 00002C57 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8035 00002C5C 2500380000              and eax, 0x3800
  8036 00002C61 09F8                    or eax, edi
  8037 00002C63 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8038                                 
  8039 00002C68 D92424                  fldenv [esp]
  8040 00002C6B D816                    fcom dword [esi]
  8041                                 
  8042 00002C6D DD3A                    fnstsw word [edx]
  8043                                 
  8044 00002C6F DBE3                    fninit
  8045 00002C71 83C420                  add esp, 20
  8046 00002C74 5E                      pop esi
  8047 00002C75 5F                      pop edi
  8048 00002C76 5B                      pop ebx
  8049 00002C77 C20800                  ret 8
  8050                                 [global iemAImpl_fcom_r80_by_r32_EndProc:function hidden]
  8051                                 iemAImpl_fcom_r80_by_r32_EndProc:
  8052                                 [size iemAImpl_fcom_r80_by_r32 iemAImpl_fcom_r80_by_r32_EndProc - iemAImpl_fcom_r80_by_r32]
  8053                                 [size iemAImpl_fcom_r80_by_r32_EndProc 0]
  8054 00002C7A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8055                                 %line 2230+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8056                                 
  8057                                 
  8058                                 
  8059                                 
  8060                                 
  8061                                 
  8062                                 
  8063                                 
  8064                                 
  8065                                 
  8066                                 
  8067                                 
  8068                                 
  8069                                 
  8070                                 [global iemAImpl_fld_r64_to_r80]
  8071                                 %line 2244+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8072                                 iemAImpl_fld_r64_to_r80:
  8073                                 %line 2245+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8074 00002C7E 53                      push ebx
  8075                                 %line 2245+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8076 00002C7F 8B5C2408                mov ebx, [esp + 4 + 4]
  8077 00002C83 57                      push edi
  8078                                 %line 2246+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8079 00002C84 83EC20                  sub esp, 20
  8080                                 
  8081 00002C87 D93424                  fnstenv [esp]
  8082                                 %line 2248+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8083                                 
  8084                                 
  8085 00002C8A 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8086 00002C8D 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8087 00002C92 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8088                                 
  8089                                 
  8090 00002C96 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8091 00002C9A 81E700470000            and edi, 0x4700
  8092 00002CA0 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8093 00002CA5 2500380000              and eax, 0x3800
  8094 00002CAA 09F8                    or eax, edi
  8095 00002CAC 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8096                                 
  8097 00002CB1 D92424                  fldenv [esp]
  8098                                 %line 2249+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8099 00002CB4 DD03                    fld qword [ebx]
  8100                                 
  8101 00002CB6 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8102 00002CB9 DBE2                    fnclex
  8103 00002CBB DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8104                                 
  8105 00002CBD DBE3                    fninit
  8106 00002CBF 83C420                  add esp, 20
  8107 00002CC2 5F                      pop edi
  8108                                 %line 2257+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8109 00002CC3 5B                      pop ebx
  8110 00002CC4 C20400                  ret 4
  8111                                 %line 2258+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8112                                 [global iemAImpl_fld_r64_to_r80_EndProc:function hidden]
  8113                                 %line 2258+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8114                                 iemAImpl_fld_r64_to_r80_EndProc:
  8115                                 [size iemAImpl_fld_r64_to_r80 iemAImpl_fld_r64_to_r80_EndProc - iemAImpl_fld_r64_to_r80]
  8116                                 [size iemAImpl_fld_r64_to_r80_EndProc 0]
  8117 00002CC7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8118                                 %line 2259+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8119                                 
  8120                                 
  8121                                 
  8122                                 
  8123                                 
  8124                                 
  8125                                 
  8126                                 
  8127                                 
  8128                                 
  8129                                 [global iemAImpl_fst_r80_to_r64]
  8130                                 %line 2269+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8131                                 iemAImpl_fst_r80_to_r64:
  8132                                 %line 2270+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8133 00002CCB 53                      push ebx
  8134                                 %line 2270+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8135 00002CCC 57                      push edi
  8136 00002CCD 56                      push esi
  8137 00002CCE 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8138 00002CD2 8B742414                mov esi, [esp + 12 + 4 + 4]
  8139                                 %line 2271+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8140 00002CD6 83EC20                  sub esp, 20
  8141                                 
  8142 00002CD9 DBE3                    fninit
  8143 00002CDB DB2E                    fld tword [esi]
  8144 00002CDD D93424                  fnstenv [esp]
  8145                                 %line 2275+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8146                                 
  8147                                 
  8148 00002CE0 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8149 00002CE3 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8150 00002CE8 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8151                                 
  8152                                 
  8153 00002CEC 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8154 00002CF0 81E700470000            and edi, 0x4700
  8155 00002CF6 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8156 00002CFB 2500380000              and eax, 0x3800
  8157 00002D00 09F8                    or eax, edi
  8158 00002D02 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8159                                 
  8160 00002D07 D92424                  fldenv [esp]
  8161                                 %line 2276+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8162 00002D0A DD13                    fst qword [ebx]
  8163                                 
  8164 00002D0C DD3A                    fnstsw word [edx]
  8165                                 
  8166 00002D0E DBE3                    fninit
  8167 00002D10 83C420                  add esp, 20
  8168 00002D13 5E                      pop esi
  8169                                 %line 2282+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8170 00002D14 5F                      pop edi
  8171 00002D15 5B                      pop ebx
  8172 00002D16 C20800                  ret 8
  8173                                 %line 2283+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8174                                 [global iemAImpl_fst_r80_to_r64_EndProc:function hidden]
  8175                                 %line 2283+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8176                                 iemAImpl_fst_r80_to_r64_EndProc:
  8177                                 [size iemAImpl_fst_r80_to_r64 iemAImpl_fst_r80_to_r64_EndProc - iemAImpl_fst_r80_to_r64]
  8178                                 [size iemAImpl_fst_r80_to_r64_EndProc 0]
  8179 00002D19 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8180                                 %line 2284+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8181                                 
  8182                                 
  8183                                 
  8184                                 
  8185                                 
  8186                                 
  8187                                 
  8188                                 
  8189                                 
  8190                                 
  8191                                 
  8192                                 
  8193                                 %line 2315+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8194                                 
  8195                                 [global iemAImpl_fadd_r80_by_r64]
  8196                                 %line 2316+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8197                                 iemAImpl_fadd_r80_by_r64:
  8198 00002D1D 53                      push ebx
  8199 00002D1E 57                      push edi
  8200 00002D1F 56                      push esi
  8201 00002D20 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8202 00002D24 8B742414                mov esi, [esp + 12 + 4 + 4]
  8203 00002D28 83EC20                  sub esp, 20
  8204                                 
  8205 00002D2B DBE3                    fninit
  8206 00002D2D DB2B                    fld tword [ebx]
  8207 00002D2F D93424                  fnstenv [esp]
  8208                                 
  8209                                 
  8210 00002D32 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8211 00002D35 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8212 00002D3A 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8213                                 
  8214                                 
  8215 00002D3E 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8216 00002D42 81E700470000            and edi, 0x4700
  8217 00002D48 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8218 00002D4D 2500380000              and eax, 0x3800
  8219 00002D52 09F8                    or eax, edi
  8220 00002D54 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8221                                 
  8222 00002D59 D92424                  fldenv [esp]
  8223 00002D5C DC06                    fadd qword [esi]
  8224                                 
  8225 00002D5E DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8226 00002D61 DBE2                    fnclex
  8227 00002D63 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8228                                 
  8229 00002D65 DBE3                    fninit
  8230 00002D67 83C420                  add esp, 20
  8231 00002D6A 5E                      pop esi
  8232 00002D6B 5F                      pop edi
  8233 00002D6C 5B                      pop ebx
  8234 00002D6D C20800                  ret 8
  8235                                 [global iemAImpl_fadd_r80_by_r64_EndProc:function hidden]
  8236                                 iemAImpl_fadd_r80_by_r64_EndProc:
  8237                                 [size iemAImpl_fadd_r80_by_r64 iemAImpl_fadd_r80_by_r64_EndProc - iemAImpl_fadd_r80_by_r64]
  8238                                 [size iemAImpl_fadd_r80_by_r64_EndProc 0]
  8239 00002D70 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8240                                 %line 2317+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8241                                 [global iemAImpl_fmul_r80_by_r64]
  8242                                 %line 2317+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8243                                 iemAImpl_fmul_r80_by_r64:
  8244 00002D74 53                      push ebx
  8245 00002D75 57                      push edi
  8246 00002D76 56                      push esi
  8247 00002D77 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8248 00002D7B 8B742414                mov esi, [esp + 12 + 4 + 4]
  8249 00002D7F 83EC20                  sub esp, 20
  8250                                 
  8251 00002D82 DBE3                    fninit
  8252 00002D84 DB2B                    fld tword [ebx]
  8253 00002D86 D93424                  fnstenv [esp]
  8254                                 
  8255                                 
  8256 00002D89 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8257 00002D8C 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8258 00002D91 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8259                                 
  8260                                 
  8261 00002D95 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8262 00002D99 81E700470000            and edi, 0x4700
  8263 00002D9F 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8264 00002DA4 2500380000              and eax, 0x3800
  8265 00002DA9 09F8                    or eax, edi
  8266 00002DAB 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8267                                 
  8268 00002DB0 D92424                  fldenv [esp]
  8269 00002DB3 DC0E                    fmul qword [esi]
  8270                                 
  8271 00002DB5 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8272 00002DB8 DBE2                    fnclex
  8273 00002DBA DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8274                                 
  8275 00002DBC DBE3                    fninit
  8276 00002DBE 83C420                  add esp, 20
  8277 00002DC1 5E                      pop esi
  8278 00002DC2 5F                      pop edi
  8279 00002DC3 5B                      pop ebx
  8280 00002DC4 C20800                  ret 8
  8281                                 [global iemAImpl_fmul_r80_by_r64_EndProc:function hidden]
  8282                                 iemAImpl_fmul_r80_by_r64_EndProc:
  8283                                 [size iemAImpl_fmul_r80_by_r64 iemAImpl_fmul_r80_by_r64_EndProc - iemAImpl_fmul_r80_by_r64]
  8284                                 [size iemAImpl_fmul_r80_by_r64_EndProc 0]
  8285 00002DC7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8286                                 %line 2318+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8287                                 [global iemAImpl_fsub_r80_by_r64]
  8288                                 %line 2318+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8289                                 iemAImpl_fsub_r80_by_r64:
  8290 00002DCB 53                      push ebx
  8291 00002DCC 57                      push edi
  8292 00002DCD 56                      push esi
  8293 00002DCE 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8294 00002DD2 8B742414                mov esi, [esp + 12 + 4 + 4]
  8295 00002DD6 83EC20                  sub esp, 20
  8296                                 
  8297 00002DD9 DBE3                    fninit
  8298 00002DDB DB2B                    fld tword [ebx]
  8299 00002DDD D93424                  fnstenv [esp]
  8300                                 
  8301                                 
  8302 00002DE0 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8303 00002DE3 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8304 00002DE8 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8305                                 
  8306                                 
  8307 00002DEC 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8308 00002DF0 81E700470000            and edi, 0x4700
  8309 00002DF6 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8310 00002DFB 2500380000              and eax, 0x3800
  8311 00002E00 09F8                    or eax, edi
  8312 00002E02 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8313                                 
  8314 00002E07 D92424                  fldenv [esp]
  8315 00002E0A DC26                    fsub qword [esi]
  8316                                 
  8317 00002E0C DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8318 00002E0F DBE2                    fnclex
  8319 00002E11 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8320                                 
  8321 00002E13 DBE3                    fninit
  8322 00002E15 83C420                  add esp, 20
  8323 00002E18 5E                      pop esi
  8324 00002E19 5F                      pop edi
  8325 00002E1A 5B                      pop ebx
  8326 00002E1B C20800                  ret 8
  8327                                 [global iemAImpl_fsub_r80_by_r64_EndProc:function hidden]
  8328                                 iemAImpl_fsub_r80_by_r64_EndProc:
  8329                                 [size iemAImpl_fsub_r80_by_r64 iemAImpl_fsub_r80_by_r64_EndProc - iemAImpl_fsub_r80_by_r64]
  8330                                 [size iemAImpl_fsub_r80_by_r64_EndProc 0]
  8331 00002E1E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8332                                 %line 2319+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8333                                 [global iemAImpl_fsubr_r80_by_r64]
  8334                                 %line 2319+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8335                                 iemAImpl_fsubr_r80_by_r64:
  8336 00002E22 53                      push ebx
  8337 00002E23 57                      push edi
  8338 00002E24 56                      push esi
  8339 00002E25 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8340 00002E29 8B742414                mov esi, [esp + 12 + 4 + 4]
  8341 00002E2D 83EC20                  sub esp, 20
  8342                                 
  8343 00002E30 DBE3                    fninit
  8344 00002E32 DB2B                    fld tword [ebx]
  8345 00002E34 D93424                  fnstenv [esp]
  8346                                 
  8347                                 
  8348 00002E37 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8349 00002E3A 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8350 00002E3F 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8351                                 
  8352                                 
  8353 00002E43 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8354 00002E47 81E700470000            and edi, 0x4700
  8355 00002E4D 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8356 00002E52 2500380000              and eax, 0x3800
  8357 00002E57 09F8                    or eax, edi
  8358 00002E59 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8359                                 
  8360 00002E5E D92424                  fldenv [esp]
  8361 00002E61 DC2E                    fsubr qword [esi]
  8362                                 
  8363 00002E63 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8364 00002E66 DBE2                    fnclex
  8365 00002E68 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8366                                 
  8367 00002E6A DBE3                    fninit
  8368 00002E6C 83C420                  add esp, 20
  8369 00002E6F 5E                      pop esi
  8370 00002E70 5F                      pop edi
  8371 00002E71 5B                      pop ebx
  8372 00002E72 C20800                  ret 8
  8373                                 [global iemAImpl_fsubr_r80_by_r64_EndProc:function hidden]
  8374                                 iemAImpl_fsubr_r80_by_r64_EndProc:
  8375                                 [size iemAImpl_fsubr_r80_by_r64 iemAImpl_fsubr_r80_by_r64_EndProc - iemAImpl_fsubr_r80_by_r64]
  8376                                 [size iemAImpl_fsubr_r80_by_r64_EndProc 0]
  8377 00002E75 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8378                                 %line 2320+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8379                                 [global iemAImpl_fdiv_r80_by_r64]
  8380                                 %line 2320+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8381                                 iemAImpl_fdiv_r80_by_r64:
  8382 00002E79 53                      push ebx
  8383 00002E7A 57                      push edi
  8384 00002E7B 56                      push esi
  8385 00002E7C 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8386 00002E80 8B742414                mov esi, [esp + 12 + 4 + 4]
  8387 00002E84 83EC20                  sub esp, 20
  8388                                 
  8389 00002E87 DBE3                    fninit
  8390 00002E89 DB2B                    fld tword [ebx]
  8391 00002E8B D93424                  fnstenv [esp]
  8392                                 
  8393                                 
  8394 00002E8E 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8395 00002E91 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8396 00002E96 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8397                                 
  8398                                 
  8399 00002E9A 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8400 00002E9E 81E700470000            and edi, 0x4700
  8401 00002EA4 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8402 00002EA9 2500380000              and eax, 0x3800
  8403 00002EAE 09F8                    or eax, edi
  8404 00002EB0 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8405                                 
  8406 00002EB5 D92424                  fldenv [esp]
  8407 00002EB8 DC36                    fdiv qword [esi]
  8408                                 
  8409 00002EBA DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8410 00002EBD DBE2                    fnclex
  8411 00002EBF DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8412                                 
  8413 00002EC1 DBE3                    fninit
  8414 00002EC3 83C420                  add esp, 20
  8415 00002EC6 5E                      pop esi
  8416 00002EC7 5F                      pop edi
  8417 00002EC8 5B                      pop ebx
  8418 00002EC9 C20800                  ret 8
  8419                                 [global iemAImpl_fdiv_r80_by_r64_EndProc:function hidden]
  8420                                 iemAImpl_fdiv_r80_by_r64_EndProc:
  8421                                 [size iemAImpl_fdiv_r80_by_r64 iemAImpl_fdiv_r80_by_r64_EndProc - iemAImpl_fdiv_r80_by_r64]
  8422                                 [size iemAImpl_fdiv_r80_by_r64_EndProc 0]
  8423 00002ECC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8424                                 %line 2321+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8425                                 [global iemAImpl_fdivr_r80_by_r64]
  8426                                 %line 2321+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8427                                 iemAImpl_fdivr_r80_by_r64:
  8428 00002ED0 53                      push ebx
  8429 00002ED1 57                      push edi
  8430 00002ED2 56                      push esi
  8431 00002ED3 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8432 00002ED7 8B742414                mov esi, [esp + 12 + 4 + 4]
  8433 00002EDB 83EC20                  sub esp, 20
  8434                                 
  8435 00002EDE DBE3                    fninit
  8436 00002EE0 DB2B                    fld tword [ebx]
  8437 00002EE2 D93424                  fnstenv [esp]
  8438                                 
  8439                                 
  8440 00002EE5 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8441 00002EE8 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8442 00002EED 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8443                                 
  8444                                 
  8445 00002EF1 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8446 00002EF5 81E700470000            and edi, 0x4700
  8447 00002EFB 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8448 00002F00 2500380000              and eax, 0x3800
  8449 00002F05 09F8                    or eax, edi
  8450 00002F07 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8451                                 
  8452 00002F0C D92424                  fldenv [esp]
  8453 00002F0F DC3E                    fdivr qword [esi]
  8454                                 
  8455 00002F11 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8456 00002F14 DBE2                    fnclex
  8457 00002F16 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8458                                 
  8459 00002F18 DBE3                    fninit
  8460 00002F1A 83C420                  add esp, 20
  8461 00002F1D 5E                      pop esi
  8462 00002F1E 5F                      pop edi
  8463 00002F1F 5B                      pop ebx
  8464 00002F20 C20800                  ret 8
  8465                                 [global iemAImpl_fdivr_r80_by_r64_EndProc:function hidden]
  8466                                 iemAImpl_fdivr_r80_by_r64_EndProc:
  8467                                 [size iemAImpl_fdivr_r80_by_r64 iemAImpl_fdivr_r80_by_r64_EndProc - iemAImpl_fdivr_r80_by_r64]
  8468                                 [size iemAImpl_fdivr_r80_by_r64_EndProc 0]
  8469 00002F23 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8470                                 %line 2322+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8471                                 
  8472                                 
  8473                                 
  8474                                 
  8475                                 
  8476                                 
  8477                                 
  8478                                 
  8479                                 
  8480                                 
  8481                                 
  8482                                 
  8483                                 %line 2351+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8484                                 
  8485                                 [global iemAImpl_fcom_r80_by_r64]
  8486                                 %line 2352+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8487                                 iemAImpl_fcom_r80_by_r64:
  8488 00002F27 53                      push ebx
  8489 00002F28 57                      push edi
  8490 00002F29 56                      push esi
  8491 00002F2A 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8492 00002F2E 8B742414                mov esi, [esp + 12 + 4 + 4]
  8493 00002F32 83EC20                  sub esp, 20
  8494                                 
  8495 00002F35 DBE3                    fninit
  8496 00002F37 DB2B                    fld tword [ebx]
  8497 00002F39 D93424                  fnstenv [esp]
  8498                                 
  8499                                 
  8500 00002F3C 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8501 00002F3F 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8502 00002F44 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8503                                 
  8504                                 
  8505 00002F48 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8506 00002F4C 81E700470000            and edi, 0x4700
  8507 00002F52 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8508 00002F57 2500380000              and eax, 0x3800
  8509 00002F5C 09F8                    or eax, edi
  8510 00002F5E 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8511                                 
  8512 00002F63 D92424                  fldenv [esp]
  8513 00002F66 DC16                    fcom qword [esi]
  8514                                 
  8515 00002F68 DD3A                    fnstsw word [edx]
  8516                                 
  8517 00002F6A DBE3                    fninit
  8518 00002F6C 83C420                  add esp, 20
  8519 00002F6F 5E                      pop esi
  8520 00002F70 5F                      pop edi
  8521 00002F71 5B                      pop ebx
  8522 00002F72 C20800                  ret 8
  8523                                 [global iemAImpl_fcom_r80_by_r64_EndProc:function hidden]
  8524                                 iemAImpl_fcom_r80_by_r64_EndProc:
  8525                                 [size iemAImpl_fcom_r80_by_r64 iemAImpl_fcom_r80_by_r64_EndProc - iemAImpl_fcom_r80_by_r64]
  8526                                 [size iemAImpl_fcom_r80_by_r64_EndProc 0]
  8527 00002F75 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8528                                 %line 2353+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8529                                 
  8530                                 
  8531                                 
  8532                                 
  8533                                 
  8534                                 
  8535                                 
  8536                                 
  8537                                 
  8538                                 
  8539                                 
  8540                                 
  8541                                 
  8542                                 
  8543                                 [global iemAImpl_fld_r80_from_r80]
  8544                                 %line 2367+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8545                                 iemAImpl_fld_r80_from_r80:
  8546                                 %line 2368+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8547 00002F79 53                      push ebx
  8548                                 %line 2368+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8549 00002F7A 8B5C2408                mov ebx, [esp + 4 + 4]
  8550 00002F7E 57                      push edi
  8551                                 %line 2369+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8552 00002F7F 83EC20                  sub esp, 20
  8553                                 
  8554 00002F82 DBE3                    fninit
  8555 00002F84 D93424                  fnstenv [esp]
  8556                                 %line 2372+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8557                                 
  8558                                 
  8559 00002F87 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8560 00002F8A 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8561 00002F8F 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8562                                 
  8563                                 
  8564 00002F93 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8565 00002F97 81E700470000            and edi, 0x4700
  8566 00002F9D 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8567 00002FA2 2500380000              and eax, 0x3800
  8568 00002FA7 09F8                    or eax, edi
  8569 00002FA9 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8570                                 
  8571 00002FAE D92424                  fldenv [esp]
  8572                                 %line 2373+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8573 00002FB1 DB2B                    fld tword [ebx]
  8574                                 
  8575 00002FB3 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8576 00002FB6 DBE2                    fnclex
  8577 00002FB8 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8578                                 
  8579 00002FBA DBE3                    fninit
  8580 00002FBC 83C420                  add esp, 20
  8581 00002FBF 5F                      pop edi
  8582                                 %line 2381+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8583 00002FC0 5B                      pop ebx
  8584 00002FC1 C20400                  ret 4
  8585                                 %line 2382+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8586                                 [global iemAImpl_fld_r80_from_r80_EndProc:function hidden]
  8587                                 %line 2382+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8588                                 iemAImpl_fld_r80_from_r80_EndProc:
  8589                                 [size iemAImpl_fld_r80_from_r80 iemAImpl_fld_r80_from_r80_EndProc - iemAImpl_fld_r80_from_r80]
  8590                                 [size iemAImpl_fld_r80_from_r80_EndProc 0]
  8591 00002FC4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8592                                 %line 2383+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8593                                 
  8594                                 
  8595                                 
  8596                                 
  8597                                 
  8598                                 
  8599                                 
  8600                                 
  8601                                 
  8602                                 
  8603                                 [global iemAImpl_fst_r80_to_r80]
  8604                                 %line 2393+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8605                                 iemAImpl_fst_r80_to_r80:
  8606                                 %line 2394+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8607 00002FC8 53                      push ebx
  8608                                 %line 2394+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8609 00002FC9 57                      push edi
  8610 00002FCA 56                      push esi
  8611 00002FCB 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8612 00002FCF 8B742414                mov esi, [esp + 12 + 4 + 4]
  8613                                 %line 2395+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8614 00002FD3 83EC20                  sub esp, 20
  8615                                 
  8616 00002FD6 DBE3                    fninit
  8617 00002FD8 DB2E                    fld tword [esi]
  8618 00002FDA D93424                  fnstenv [esp]
  8619                                 %line 2399+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8620                                 
  8621                                 
  8622 00002FDD 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8623 00002FE0 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8624 00002FE5 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8625                                 
  8626                                 
  8627 00002FE9 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8628 00002FED 81E700470000            and edi, 0x4700
  8629 00002FF3 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8630 00002FF8 2500380000              and eax, 0x3800
  8631 00002FFD 09F8                    or eax, edi
  8632 00002FFF 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8633                                 
  8634 00003004 D92424                  fldenv [esp]
  8635                                 %line 2400+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8636 00003007 DB3B                    fstp tword [ebx]
  8637                                 
  8638 00003009 DD3A                    fnstsw word [edx]
  8639                                 
  8640 0000300B DBE3                    fninit
  8641 0000300D 83C420                  add esp, 20
  8642 00003010 5E                      pop esi
  8643                                 %line 2406+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8644 00003011 5F                      pop edi
  8645 00003012 5B                      pop ebx
  8646 00003013 C20800                  ret 8
  8647                                 %line 2407+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8648                                 [global iemAImpl_fst_r80_to_r80_EndProc:function hidden]
  8649                                 %line 2407+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8650                                 iemAImpl_fst_r80_to_r80_EndProc:
  8651                                 [size iemAImpl_fst_r80_to_r80 iemAImpl_fst_r80_to_r80_EndProc - iemAImpl_fst_r80_to_r80]
  8652                                 [size iemAImpl_fst_r80_to_r80_EndProc 0]
  8653 00003016 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8654                                 %line 2408+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8655                                 
  8656                                 
  8657                                 
  8658                                 
  8659                                 
  8660                                 
  8661                                 
  8662                                 
  8663                                 
  8664                                 
  8665                                 
  8666                                 
  8667                                 %line 2440+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8668                                 
  8669                                 [global iemAImpl_fadd_r80_by_r80]
  8670                                 %line 2441+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8671                                 iemAImpl_fadd_r80_by_r80:
  8672 0000301A 53                      push ebx
  8673 0000301B 57                      push edi
  8674 0000301C 56                      push esi
  8675 0000301D 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8676 00003021 8B742414                mov esi, [esp + 12 + 4 + 4]
  8677 00003025 83EC20                  sub esp, 20
  8678                                 
  8679 00003028 DBE3                    fninit
  8680 0000302A DB2E                    fld tword [esi]
  8681 0000302C DB2B                    fld tword [ebx]
  8682 0000302E D93424                  fnstenv [esp]
  8683                                 
  8684                                 
  8685 00003031 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8686 00003034 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8687 00003039 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8688                                 
  8689                                 
  8690 0000303D 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8691 00003041 81E700470000            and edi, 0x4700
  8692 00003047 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8693 0000304C 2500380000              and eax, 0x3800
  8694 00003051 09F8                    or eax, edi
  8695 00003053 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8696                                 
  8697 00003058 D92424                  fldenv [esp]
  8698 0000305B D8C1                    fadd st0, st1
  8699                                 
  8700 0000305D DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8701 00003060 DBE2                    fnclex
  8702 00003062 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8703                                 
  8704 00003064 DBE3                    fninit
  8705 00003066 83C420                  add esp, 20
  8706 00003069 5E                      pop esi
  8707 0000306A 5F                      pop edi
  8708 0000306B 5B                      pop ebx
  8709 0000306C C20800                  ret 8
  8710                                 [global iemAImpl_fadd_r80_by_r80_EndProc:function hidden]
  8711                                 iemAImpl_fadd_r80_by_r80_EndProc:
  8712                                 [size iemAImpl_fadd_r80_by_r80 iemAImpl_fadd_r80_by_r80_EndProc - iemAImpl_fadd_r80_by_r80]
  8713                                 [size iemAImpl_fadd_r80_by_r80_EndProc 0]
  8714 0000306F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8715                                 %line 2442+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8716                                 [global iemAImpl_fmul_r80_by_r80]
  8717                                 %line 2442+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8718                                 iemAImpl_fmul_r80_by_r80:
  8719 00003073 53                      push ebx
  8720 00003074 57                      push edi
  8721 00003075 56                      push esi
  8722 00003076 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8723 0000307A 8B742414                mov esi, [esp + 12 + 4 + 4]
  8724 0000307E 83EC20                  sub esp, 20
  8725                                 
  8726 00003081 DBE3                    fninit
  8727 00003083 DB2E                    fld tword [esi]
  8728 00003085 DB2B                    fld tword [ebx]
  8729 00003087 D93424                  fnstenv [esp]
  8730                                 
  8731                                 
  8732 0000308A 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8733 0000308D 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8734 00003092 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8735                                 
  8736                                 
  8737 00003096 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8738 0000309A 81E700470000            and edi, 0x4700
  8739 000030A0 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8740 000030A5 2500380000              and eax, 0x3800
  8741 000030AA 09F8                    or eax, edi
  8742 000030AC 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8743                                 
  8744 000030B1 D92424                  fldenv [esp]
  8745 000030B4 D8C9                    fmul st0, st1
  8746                                 
  8747 000030B6 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8748 000030B9 DBE2                    fnclex
  8749 000030BB DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8750                                 
  8751 000030BD DBE3                    fninit
  8752 000030BF 83C420                  add esp, 20
  8753 000030C2 5E                      pop esi
  8754 000030C3 5F                      pop edi
  8755 000030C4 5B                      pop ebx
  8756 000030C5 C20800                  ret 8
  8757                                 [global iemAImpl_fmul_r80_by_r80_EndProc:function hidden]
  8758                                 iemAImpl_fmul_r80_by_r80_EndProc:
  8759                                 [size iemAImpl_fmul_r80_by_r80 iemAImpl_fmul_r80_by_r80_EndProc - iemAImpl_fmul_r80_by_r80]
  8760                                 [size iemAImpl_fmul_r80_by_r80_EndProc 0]
  8761 000030C8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8762                                 %line 2443+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8763                                 [global iemAImpl_fsub_r80_by_r80]
  8764                                 %line 2443+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8765                                 iemAImpl_fsub_r80_by_r80:
  8766 000030CC 53                      push ebx
  8767 000030CD 57                      push edi
  8768 000030CE 56                      push esi
  8769 000030CF 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8770 000030D3 8B742414                mov esi, [esp + 12 + 4 + 4]
  8771 000030D7 83EC20                  sub esp, 20
  8772                                 
  8773 000030DA DBE3                    fninit
  8774 000030DC DB2E                    fld tword [esi]
  8775 000030DE DB2B                    fld tword [ebx]
  8776 000030E0 D93424                  fnstenv [esp]
  8777                                 
  8778                                 
  8779 000030E3 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8780 000030E6 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8781 000030EB 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8782                                 
  8783                                 
  8784 000030EF 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8785 000030F3 81E700470000            and edi, 0x4700
  8786 000030F9 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8787 000030FE 2500380000              and eax, 0x3800
  8788 00003103 09F8                    or eax, edi
  8789 00003105 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8790                                 
  8791 0000310A D92424                  fldenv [esp]
  8792 0000310D D8E1                    fsub st0, st1
  8793                                 
  8794 0000310F DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8795 00003112 DBE2                    fnclex
  8796 00003114 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8797                                 
  8798 00003116 DBE3                    fninit
  8799 00003118 83C420                  add esp, 20
  8800 0000311B 5E                      pop esi
  8801 0000311C 5F                      pop edi
  8802 0000311D 5B                      pop ebx
  8803 0000311E C20800                  ret 8
  8804                                 [global iemAImpl_fsub_r80_by_r80_EndProc:function hidden]
  8805                                 iemAImpl_fsub_r80_by_r80_EndProc:
  8806                                 [size iemAImpl_fsub_r80_by_r80 iemAImpl_fsub_r80_by_r80_EndProc - iemAImpl_fsub_r80_by_r80]
  8807                                 [size iemAImpl_fsub_r80_by_r80_EndProc 0]
  8808 00003121 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8809                                 %line 2444+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8810                                 [global iemAImpl_fsubr_r80_by_r80]
  8811                                 %line 2444+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8812                                 iemAImpl_fsubr_r80_by_r80:
  8813 00003125 53                      push ebx
  8814 00003126 57                      push edi
  8815 00003127 56                      push esi
  8816 00003128 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8817 0000312C 8B742414                mov esi, [esp + 12 + 4 + 4]
  8818 00003130 83EC20                  sub esp, 20
  8819                                 
  8820 00003133 DBE3                    fninit
  8821 00003135 DB2E                    fld tword [esi]
  8822 00003137 DB2B                    fld tword [ebx]
  8823 00003139 D93424                  fnstenv [esp]
  8824                                 
  8825                                 
  8826 0000313C 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8827 0000313F 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8828 00003144 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8829                                 
  8830                                 
  8831 00003148 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8832 0000314C 81E700470000            and edi, 0x4700
  8833 00003152 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8834 00003157 2500380000              and eax, 0x3800
  8835 0000315C 09F8                    or eax, edi
  8836 0000315E 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8837                                 
  8838 00003163 D92424                  fldenv [esp]
  8839 00003166 D8E9                    fsubr st0, st1
  8840                                 
  8841 00003168 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8842 0000316B DBE2                    fnclex
  8843 0000316D DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8844                                 
  8845 0000316F DBE3                    fninit
  8846 00003171 83C420                  add esp, 20
  8847 00003174 5E                      pop esi
  8848 00003175 5F                      pop edi
  8849 00003176 5B                      pop ebx
  8850 00003177 C20800                  ret 8
  8851                                 [global iemAImpl_fsubr_r80_by_r80_EndProc:function hidden]
  8852                                 iemAImpl_fsubr_r80_by_r80_EndProc:
  8853                                 [size iemAImpl_fsubr_r80_by_r80 iemAImpl_fsubr_r80_by_r80_EndProc - iemAImpl_fsubr_r80_by_r80]
  8854                                 [size iemAImpl_fsubr_r80_by_r80_EndProc 0]
  8855 0000317A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8856                                 %line 2445+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8857                                 [global iemAImpl_fdiv_r80_by_r80]
  8858                                 %line 2445+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8859                                 iemAImpl_fdiv_r80_by_r80:
  8860 0000317E 53                      push ebx
  8861 0000317F 57                      push edi
  8862 00003180 56                      push esi
  8863 00003181 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8864 00003185 8B742414                mov esi, [esp + 12 + 4 + 4]
  8865 00003189 83EC20                  sub esp, 20
  8866                                 
  8867 0000318C DBE3                    fninit
  8868 0000318E DB2E                    fld tword [esi]
  8869 00003190 DB2B                    fld tword [ebx]
  8870 00003192 D93424                  fnstenv [esp]
  8871                                 
  8872                                 
  8873 00003195 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8874 00003198 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8875 0000319D 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8876                                 
  8877                                 
  8878 000031A1 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8879 000031A5 81E700470000            and edi, 0x4700
  8880 000031AB 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8881 000031B0 2500380000              and eax, 0x3800
  8882 000031B5 09F8                    or eax, edi
  8883 000031B7 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8884                                 
  8885 000031BC D92424                  fldenv [esp]
  8886 000031BF D8F1                    fdiv st0, st1
  8887                                 
  8888 000031C1 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8889 000031C4 DBE2                    fnclex
  8890 000031C6 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8891                                 
  8892 000031C8 DBE3                    fninit
  8893 000031CA 83C420                  add esp, 20
  8894 000031CD 5E                      pop esi
  8895 000031CE 5F                      pop edi
  8896 000031CF 5B                      pop ebx
  8897 000031D0 C20800                  ret 8
  8898                                 [global iemAImpl_fdiv_r80_by_r80_EndProc:function hidden]
  8899                                 iemAImpl_fdiv_r80_by_r80_EndProc:
  8900                                 [size iemAImpl_fdiv_r80_by_r80 iemAImpl_fdiv_r80_by_r80_EndProc - iemAImpl_fdiv_r80_by_r80]
  8901                                 [size iemAImpl_fdiv_r80_by_r80_EndProc 0]
  8902 000031D3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8903                                 %line 2446+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8904                                 [global iemAImpl_fdivr_r80_by_r80]
  8905                                 %line 2446+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8906                                 iemAImpl_fdivr_r80_by_r80:
  8907 000031D7 53                      push ebx
  8908 000031D8 57                      push edi
  8909 000031D9 56                      push esi
  8910 000031DA 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8911 000031DE 8B742414                mov esi, [esp + 12 + 4 + 4]
  8912 000031E2 83EC20                  sub esp, 20
  8913                                 
  8914 000031E5 DBE3                    fninit
  8915 000031E7 DB2E                    fld tword [esi]
  8916 000031E9 DB2B                    fld tword [ebx]
  8917 000031EB D93424                  fnstenv [esp]
  8918                                 
  8919                                 
  8920 000031EE 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8921 000031F1 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8922 000031F6 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8923                                 
  8924                                 
  8925 000031FA 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8926 000031FE 81E700470000            and edi, 0x4700
  8927 00003204 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8928 00003209 2500380000              and eax, 0x3800
  8929 0000320E 09F8                    or eax, edi
  8930 00003210 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8931                                 
  8932 00003215 D92424                  fldenv [esp]
  8933 00003218 D8F9                    fdivr st0, st1
  8934                                 
  8935 0000321A DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8936 0000321D DBE2                    fnclex
  8937 0000321F DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8938                                 
  8939 00003221 DBE3                    fninit
  8940 00003223 83C420                  add esp, 20
  8941 00003226 5E                      pop esi
  8942 00003227 5F                      pop edi
  8943 00003228 5B                      pop ebx
  8944 00003229 C20800                  ret 8
  8945                                 [global iemAImpl_fdivr_r80_by_r80_EndProc:function hidden]
  8946                                 iemAImpl_fdivr_r80_by_r80_EndProc:
  8947                                 [size iemAImpl_fdivr_r80_by_r80 iemAImpl_fdivr_r80_by_r80_EndProc - iemAImpl_fdivr_r80_by_r80]
  8948                                 [size iemAImpl_fdivr_r80_by_r80_EndProc 0]
  8949 0000322C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8950                                 %line 2447+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8951                                 [global iemAImpl_fprem_r80_by_r80]
  8952                                 %line 2447+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8953                                 iemAImpl_fprem_r80_by_r80:
  8954 00003230 53                      push ebx
  8955 00003231 57                      push edi
  8956 00003232 56                      push esi
  8957 00003233 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  8958 00003237 8B742414                mov esi, [esp + 12 + 4 + 4]
  8959 0000323B 83EC20                  sub esp, 20
  8960                                 
  8961 0000323E DBE3                    fninit
  8962 00003240 DB2E                    fld tword [esi]
  8963 00003242 DB2B                    fld tword [ebx]
  8964 00003244 D93424                  fnstenv [esp]
  8965                                 
  8966                                 
  8967 00003247 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  8968 0000324A 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  8969 0000324F 66890424                mov [esp + X86FSTENV32P.FCW], ax
  8970                                 
  8971                                 
  8972 00003253 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  8973 00003257 81E700470000            and edi, 0x4700
  8974 0000325D 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  8975 00003262 2500380000              and eax, 0x3800
  8976 00003267 09F8                    or eax, edi
  8977 00003269 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  8978                                 
  8979 0000326E D92424                  fldenv [esp]
  8980 00003271 D9F8                    fprem 
  8981                                 
  8982 00003273 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  8983 00003276 DBE2                    fnclex
  8984 00003278 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  8985                                 
  8986 0000327A DBE3                    fninit
  8987 0000327C 83C420                  add esp, 20
  8988 0000327F 5E                      pop esi
  8989 00003280 5F                      pop edi
  8990 00003281 5B                      pop ebx
  8991 00003282 C20800                  ret 8
  8992                                 [global iemAImpl_fprem_r80_by_r80_EndProc:function hidden]
  8993                                 iemAImpl_fprem_r80_by_r80_EndProc:
  8994                                 [size iemAImpl_fprem_r80_by_r80 iemAImpl_fprem_r80_by_r80_EndProc - iemAImpl_fprem_r80_by_r80]
  8995                                 [size iemAImpl_fprem_r80_by_r80_EndProc 0]
  8996 00003285 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8997                                 %line 2448+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8998                                 [global iemAImpl_fprem1_r80_by_r80]
  8999                                 %line 2448+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9000                                 iemAImpl_fprem1_r80_by_r80:
  9001 00003289 53                      push ebx
  9002 0000328A 57                      push edi
  9003 0000328B 56                      push esi
  9004 0000328C 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  9005 00003290 8B742414                mov esi, [esp + 12 + 4 + 4]
  9006 00003294 83EC20                  sub esp, 20
  9007                                 
  9008 00003297 DBE3                    fninit
  9009 00003299 DB2E                    fld tword [esi]
  9010 0000329B DB2B                    fld tword [ebx]
  9011 0000329D D93424                  fnstenv [esp]
  9012                                 
  9013                                 
  9014 000032A0 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9015 000032A3 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9016 000032A8 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9017                                 
  9018                                 
  9019 000032AC 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9020 000032B0 81E700470000            and edi, 0x4700
  9021 000032B6 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9022 000032BB 2500380000              and eax, 0x3800
  9023 000032C0 09F8                    or eax, edi
  9024 000032C2 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9025                                 
  9026 000032C7 D92424                  fldenv [esp]
  9027 000032CA D9F5                    fprem1 
  9028                                 
  9029 000032CC DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9030 000032CF DBE2                    fnclex
  9031 000032D1 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9032                                 
  9033 000032D3 DBE3                    fninit
  9034 000032D5 83C420                  add esp, 20
  9035 000032D8 5E                      pop esi
  9036 000032D9 5F                      pop edi
  9037 000032DA 5B                      pop ebx
  9038 000032DB C20800                  ret 8
  9039                                 [global iemAImpl_fprem1_r80_by_r80_EndProc:function hidden]
  9040                                 iemAImpl_fprem1_r80_by_r80_EndProc:
  9041                                 [size iemAImpl_fprem1_r80_by_r80 iemAImpl_fprem1_r80_by_r80_EndProc - iemAImpl_fprem1_r80_by_r80]
  9042                                 [size iemAImpl_fprem1_r80_by_r80_EndProc 0]
  9043 000032DE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9044                                 %line 2449+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9045                                 [global iemAImpl_fscale_r80_by_r80]
  9046                                 %line 2449+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9047                                 iemAImpl_fscale_r80_by_r80:
  9048 000032E2 53                      push ebx
  9049 000032E3 57                      push edi
  9050 000032E4 56                      push esi
  9051 000032E5 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  9052 000032E9 8B742414                mov esi, [esp + 12 + 4 + 4]
  9053 000032ED 83EC20                  sub esp, 20
  9054                                 
  9055 000032F0 DBE3                    fninit
  9056 000032F2 DB2E                    fld tword [esi]
  9057 000032F4 DB2B                    fld tword [ebx]
  9058 000032F6 D93424                  fnstenv [esp]
  9059                                 
  9060                                 
  9061 000032F9 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9062 000032FC 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9063 00003301 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9064                                 
  9065                                 
  9066 00003305 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9067 00003309 81E700470000            and edi, 0x4700
  9068 0000330F 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9069 00003314 2500380000              and eax, 0x3800
  9070 00003319 09F8                    or eax, edi
  9071 0000331B 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9072                                 
  9073 00003320 D92424                  fldenv [esp]
  9074 00003323 D9FD                    fscale 
  9075                                 
  9076 00003325 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9077 00003328 DBE2                    fnclex
  9078 0000332A DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9079                                 
  9080 0000332C DBE3                    fninit
  9081 0000332E 83C420                  add esp, 20
  9082 00003331 5E                      pop esi
  9083 00003332 5F                      pop edi
  9084 00003333 5B                      pop ebx
  9085 00003334 C20800                  ret 8
  9086                                 [global iemAImpl_fscale_r80_by_r80_EndProc:function hidden]
  9087                                 iemAImpl_fscale_r80_by_r80_EndProc:
  9088                                 [size iemAImpl_fscale_r80_by_r80 iemAImpl_fscale_r80_by_r80_EndProc - iemAImpl_fscale_r80_by_r80]
  9089                                 [size iemAImpl_fscale_r80_by_r80_EndProc 0]
  9090 00003337 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9091                                 %line 2450+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9092                                 
  9093                                 
  9094                                 
  9095                                 
  9096                                 
  9097                                 
  9098                                 
  9099                                 
  9100                                 
  9101                                 
  9102                                 
  9103                                 
  9104                                 
  9105                                 %line 2483+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9106                                 
  9107                                 [global iemAImpl_fpatan_r80_by_r80]
  9108                                 %line 2484+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9109                                 iemAImpl_fpatan_r80_by_r80:
  9110 0000333B 53                      push ebx
  9111 0000333C 57                      push edi
  9112 0000333D 56                      push esi
  9113 0000333E 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  9114 00003342 8B742414                mov esi, [esp + 12 + 4 + 4]
  9115 00003346 83EC20                  sub esp, 20
  9116                                 
  9117 00003349 DBE3                    fninit
  9118 0000334B DB2B                    fld tword [ebx]
  9119 0000334D DB2E                    fld tword [esi]
  9120 0000334F D93424                  fnstenv [esp]
  9121                                 
  9122                                 
  9123 00003352 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9124 00003355 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9125 0000335A 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9126                                 
  9127                                 
  9128 0000335E 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9129 00003362 81E700470000            and edi, 0x4700
  9130 00003368 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9131 0000336D 2500380000              and eax, 0x3800
  9132 00003372 09F8                    or eax, edi
  9133 00003374 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9134                                 
  9135 00003379 D92424                  fldenv [esp]
  9136 0000337C D9F3                    fpatan
  9137                                 
  9138 0000337E DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9139 00003381 DBE2                    fnclex
  9140 00003383 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9141                                 
  9142 00003385 DBE3                    fninit
  9143 00003387 83C420                  add esp, 20
  9144 0000338A 5E                      pop esi
  9145 0000338B 5F                      pop edi
  9146 0000338C 5B                      pop ebx
  9147 0000338D C20800                  ret 8
  9148                                 [global iemAImpl_fpatan_r80_by_r80_EndProc:function hidden]
  9149                                 iemAImpl_fpatan_r80_by_r80_EndProc:
  9150                                 [size iemAImpl_fpatan_r80_by_r80 iemAImpl_fpatan_r80_by_r80_EndProc - iemAImpl_fpatan_r80_by_r80]
  9151                                 [size iemAImpl_fpatan_r80_by_r80_EndProc 0]
  9152 00003390 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9153                                 %line 2485+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9154                                 [global iemAImpl_fyl2xp1_r80_by_r80]
  9155                                 %line 2485+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9156                                 iemAImpl_fyl2xp1_r80_by_r80:
  9157 00003394 53                      push ebx
  9158 00003395 57                      push edi
  9159 00003396 56                      push esi
  9160 00003397 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  9161 0000339B 8B742414                mov esi, [esp + 12 + 4 + 4]
  9162 0000339F 83EC20                  sub esp, 20
  9163                                 
  9164 000033A2 DBE3                    fninit
  9165 000033A4 DB2B                    fld tword [ebx]
  9166 000033A6 DB2E                    fld tword [esi]
  9167 000033A8 D93424                  fnstenv [esp]
  9168                                 
  9169                                 
  9170 000033AB 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9171 000033AE 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9172 000033B3 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9173                                 
  9174                                 
  9175 000033B7 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9176 000033BB 81E700470000            and edi, 0x4700
  9177 000033C1 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9178 000033C6 2500380000              and eax, 0x3800
  9179 000033CB 09F8                    or eax, edi
  9180 000033CD 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9181                                 
  9182 000033D2 D92424                  fldenv [esp]
  9183 000033D5 D9F9                    fyl2xp1
  9184                                 
  9185 000033D7 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9186 000033DA DBE2                    fnclex
  9187 000033DC DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9188                                 
  9189 000033DE DBE3                    fninit
  9190 000033E0 83C420                  add esp, 20
  9191 000033E3 5E                      pop esi
  9192 000033E4 5F                      pop edi
  9193 000033E5 5B                      pop ebx
  9194 000033E6 C20800                  ret 8
  9195                                 [global iemAImpl_fyl2xp1_r80_by_r80_EndProc:function hidden]
  9196                                 iemAImpl_fyl2xp1_r80_by_r80_EndProc:
  9197                                 [size iemAImpl_fyl2xp1_r80_by_r80 iemAImpl_fyl2xp1_r80_by_r80_EndProc - iemAImpl_fyl2xp1_r80_by_r80]
  9198                                 [size iemAImpl_fyl2xp1_r80_by_r80_EndProc 0]
  9199 000033E9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9200                                 %line 2486+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9201                                 
  9202                                 
  9203                                 
  9204                                 
  9205                                 
  9206                                 
  9207                                 
  9208                                 
  9209                                 
  9210                                 
  9211                                 
  9212                                 
  9213                                 
  9214                                 %line 2517+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9215                                 
  9216                                 [global iemAImpl_fcom_r80_by_r80]
  9217                                 %line 2518+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9218                                 iemAImpl_fcom_r80_by_r80:
  9219 000033ED 53                      push ebx
  9220 000033EE 57                      push edi
  9221 000033EF 56                      push esi
  9222 000033F0 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  9223 000033F4 8B742414                mov esi, [esp + 12 + 4 + 4]
  9224 000033F8 83EC20                  sub esp, 20
  9225                                 
  9226 000033FB DBE3                    fninit
  9227 000033FD DB2E                    fld tword [esi]
  9228 000033FF DB2B                    fld tword [ebx]
  9229 00003401 D93424                  fnstenv [esp]
  9230                                 
  9231                                 
  9232 00003404 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9233 00003407 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9234 0000340C 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9235                                 
  9236                                 
  9237 00003410 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9238 00003414 81E700470000            and edi, 0x4700
  9239 0000341A 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9240 0000341F 2500380000              and eax, 0x3800
  9241 00003424 09F8                    or eax, edi
  9242 00003426 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9243                                 
  9244 0000342B D92424                  fldenv [esp]
  9245 0000342E D8D1                    fcom st0, st1
  9246                                 
  9247 00003430 DD3A                    fnstsw word [edx]
  9248                                 
  9249 00003432 DBE3                    fninit
  9250 00003434 83C420                  add esp, 20
  9251 00003437 5E                      pop esi
  9252 00003438 5F                      pop edi
  9253 00003439 5B                      pop ebx
  9254 0000343A C20800                  ret 8
  9255                                 [global iemAImpl_fcom_r80_by_r80_EndProc:function hidden]
  9256                                 iemAImpl_fcom_r80_by_r80_EndProc:
  9257                                 [size iemAImpl_fcom_r80_by_r80 iemAImpl_fcom_r80_by_r80_EndProc - iemAImpl_fcom_r80_by_r80]
  9258                                 [size iemAImpl_fcom_r80_by_r80_EndProc 0]
  9259 0000343D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9260                                 %line 2519+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9261                                 [global iemAImpl_fucom_r80_by_r80]
  9262                                 %line 2519+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9263                                 iemAImpl_fucom_r80_by_r80:
  9264 00003441 53                      push ebx
  9265 00003442 57                      push edi
  9266 00003443 56                      push esi
  9267 00003444 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  9268 00003448 8B742414                mov esi, [esp + 12 + 4 + 4]
  9269 0000344C 83EC20                  sub esp, 20
  9270                                 
  9271 0000344F DBE3                    fninit
  9272 00003451 DB2E                    fld tword [esi]
  9273 00003453 DB2B                    fld tword [ebx]
  9274 00003455 D93424                  fnstenv [esp]
  9275                                 
  9276                                 
  9277 00003458 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9278 0000345B 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9279 00003460 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9280                                 
  9281                                 
  9282 00003464 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9283 00003468 81E700470000            and edi, 0x4700
  9284 0000346E 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9285 00003473 2500380000              and eax, 0x3800
  9286 00003478 09F8                    or eax, edi
  9287 0000347A 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9288                                 
  9289 0000347F D92424                  fldenv [esp]
  9290 00003482 DDE1                    fucom st0, st1
  9291                                 
  9292 00003484 DD3A                    fnstsw word [edx]
  9293                                 
  9294 00003486 DBE3                    fninit
  9295 00003488 83C420                  add esp, 20
  9296 0000348B 5E                      pop esi
  9297 0000348C 5F                      pop edi
  9298 0000348D 5B                      pop ebx
  9299 0000348E C20800                  ret 8
  9300                                 [global iemAImpl_fucom_r80_by_r80_EndProc:function hidden]
  9301                                 iemAImpl_fucom_r80_by_r80_EndProc:
  9302                                 [size iemAImpl_fucom_r80_by_r80 iemAImpl_fucom_r80_by_r80_EndProc - iemAImpl_fucom_r80_by_r80]
  9303                                 [size iemAImpl_fucom_r80_by_r80_EndProc 0]
  9304 00003491 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9305                                 %line 2520+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9306                                 
  9307                                 
  9308                                 
  9309                                 
  9310                                 
  9311                                 
  9312                                 
  9313                                 
  9314                                 
  9315                                 
  9316                                 
  9317                                 
  9318                                 
  9319                                 
  9320                                 %line 2554+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9321                                 
  9322                                 [global iemAImpl_fcomi_r80_by_r80]
  9323                                 %line 2555+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9324                                 iemAImpl_fcomi_r80_by_r80:
  9325 00003495 53                      push ebx
  9326 00003496 57                      push edi
  9327 00003497 56                      push esi
  9328 00003498 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  9329 0000349C 8B742414                mov esi, [esp + 12 + 4 + 4]
  9330 000034A0 83EC20                  sub esp, 20
  9331                                 
  9332 000034A3 DBE3                    fninit
  9333 000034A5 DB2E                    fld tword [esi]
  9334 000034A7 DB2B                    fld tword [ebx]
  9335 000034A9 D93424                  fnstenv [esp]
  9336                                 
  9337                                 
  9338 000034AC 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9339 000034AF 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9340 000034B4 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9341                                 
  9342                                 
  9343 000034B8 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9344 000034BC 81E700470000            and edi, 0x4700
  9345 000034C2 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9346 000034C7 2500380000              and eax, 0x3800
  9347 000034CC 09F8                    or eax, edi
  9348 000034CE 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9349                                 
  9350 000034D3 D92424                  fldenv [esp]
  9351 000034D6 DBF1                    fcomi st1
  9352                                 
  9353 000034D8 DD3A                    fnstsw word [edx]
  9354 000034DA 9C                      pushf
  9355 000034DB 58                      pop eax
  9356                                 
  9357 000034DC DBE3                    fninit
  9358 000034DE 83C420                  add esp, 20
  9359 000034E1 5E                      pop esi
  9360 000034E2 5F                      pop edi
  9361 000034E3 5B                      pop ebx
  9362 000034E4 C20800                  ret 8
  9363                                 [global iemAImpl_fcomi_r80_by_r80_EndProc:function hidden]
  9364                                 iemAImpl_fcomi_r80_by_r80_EndProc:
  9365                                 [size iemAImpl_fcomi_r80_by_r80 iemAImpl_fcomi_r80_by_r80_EndProc - iemAImpl_fcomi_r80_by_r80]
  9366                                 [size iemAImpl_fcomi_r80_by_r80_EndProc 0]
  9367 000034E7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9368                                 %line 2556+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9369                                 [global iemAImpl_fucomi_r80_by_r80]
  9370                                 %line 2556+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9371                                 iemAImpl_fucomi_r80_by_r80:
  9372 000034EB 53                      push ebx
  9373 000034EC 57                      push edi
  9374 000034ED 56                      push esi
  9375 000034EE 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
  9376 000034F2 8B742414                mov esi, [esp + 12 + 4 + 4]
  9377 000034F6 83EC20                  sub esp, 20
  9378                                 
  9379 000034F9 DBE3                    fninit
  9380 000034FB DB2E                    fld tword [esi]
  9381 000034FD DB2B                    fld tword [ebx]
  9382 000034FF D93424                  fnstenv [esp]
  9383                                 
  9384                                 
  9385 00003502 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9386 00003505 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9387 0000350A 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9388                                 
  9389                                 
  9390 0000350E 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9391 00003512 81E700470000            and edi, 0x4700
  9392 00003518 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9393 0000351D 2500380000              and eax, 0x3800
  9394 00003522 09F8                    or eax, edi
  9395 00003524 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9396                                 
  9397 00003529 D92424                  fldenv [esp]
  9398 0000352C DBE9                    fucomi st1
  9399                                 
  9400 0000352E DD3A                    fnstsw word [edx]
  9401 00003530 9C                      pushf
  9402 00003531 58                      pop eax
  9403                                 
  9404 00003532 DBE3                    fninit
  9405 00003534 83C420                  add esp, 20
  9406 00003537 5E                      pop esi
  9407 00003538 5F                      pop edi
  9408 00003539 5B                      pop ebx
  9409 0000353A C20800                  ret 8
  9410                                 [global iemAImpl_fucomi_r80_by_r80_EndProc:function hidden]
  9411                                 iemAImpl_fucomi_r80_by_r80_EndProc:
  9412                                 [size iemAImpl_fucomi_r80_by_r80 iemAImpl_fucomi_r80_by_r80_EndProc - iemAImpl_fucomi_r80_by_r80]
  9413                                 [size iemAImpl_fucomi_r80_by_r80_EndProc 0]
  9414 0000353D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9415                                 %line 2557+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9416                                 
  9417                                 
  9418                                 
  9419                                 
  9420                                 
  9421                                 
  9422                                 
  9423                                 
  9424                                 
  9425                                 
  9426                                 
  9427                                 %line 2587+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9428                                 
  9429                                 [global iemAImpl_fchs_r80]
  9430                                 %line 2588+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9431                                 iemAImpl_fchs_r80:
  9432 00003541 53                      push ebx
  9433 00003542 8B5C2408                mov ebx, [esp + 4 + 4]
  9434 00003546 57                      push edi
  9435 00003547 83EC20                  sub esp, 20
  9436                                 
  9437 0000354A DBE3                    fninit
  9438 0000354C DB2B                    fld tword [ebx]
  9439 0000354E D93424                  fnstenv [esp]
  9440                                 
  9441                                 
  9442 00003551 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9443 00003554 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9444 00003559 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9445                                 
  9446                                 
  9447 0000355D 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9448 00003561 81E700470000            and edi, 0x4700
  9449 00003567 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9450 0000356C 2500380000              and eax, 0x3800
  9451 00003571 09F8                    or eax, edi
  9452 00003573 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9453                                 
  9454 00003578 D92424                  fldenv [esp]
  9455 0000357B D9E0                    fchs
  9456                                 
  9457 0000357D DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9458 00003580 DBE2                    fnclex
  9459 00003582 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9460                                 
  9461 00003584 DBE3                    fninit
  9462 00003586 83C420                  add esp, 20
  9463 00003589 5F                      pop edi
  9464 0000358A 5B                      pop ebx
  9465 0000358B C20400                  ret 4
  9466                                 [global iemAImpl_fchs_r80_EndProc:function hidden]
  9467                                 iemAImpl_fchs_r80_EndProc:
  9468                                 [size iemAImpl_fchs_r80 iemAImpl_fchs_r80_EndProc - iemAImpl_fchs_r80]
  9469                                 [size iemAImpl_fchs_r80_EndProc 0]
  9470 0000358E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9471                                 %line 2589+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9472                                 [global iemAImpl_fabs_r80]
  9473                                 %line 2589+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9474                                 iemAImpl_fabs_r80:
  9475 00003592 53                      push ebx
  9476 00003593 8B5C2408                mov ebx, [esp + 4 + 4]
  9477 00003597 57                      push edi
  9478 00003598 83EC20                  sub esp, 20
  9479                                 
  9480 0000359B DBE3                    fninit
  9481 0000359D DB2B                    fld tword [ebx]
  9482 0000359F D93424                  fnstenv [esp]
  9483                                 
  9484                                 
  9485 000035A2 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9486 000035A5 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9487 000035AA 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9488                                 
  9489                                 
  9490 000035AE 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9491 000035B2 81E700470000            and edi, 0x4700
  9492 000035B8 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9493 000035BD 2500380000              and eax, 0x3800
  9494 000035C2 09F8                    or eax, edi
  9495 000035C4 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9496                                 
  9497 000035C9 D92424                  fldenv [esp]
  9498 000035CC D9E1                    fabs
  9499                                 
  9500 000035CE DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9501 000035D1 DBE2                    fnclex
  9502 000035D3 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9503                                 
  9504 000035D5 DBE3                    fninit
  9505 000035D7 83C420                  add esp, 20
  9506 000035DA 5F                      pop edi
  9507 000035DB 5B                      pop ebx
  9508 000035DC C20400                  ret 4
  9509                                 [global iemAImpl_fabs_r80_EndProc:function hidden]
  9510                                 iemAImpl_fabs_r80_EndProc:
  9511                                 [size iemAImpl_fabs_r80 iemAImpl_fabs_r80_EndProc - iemAImpl_fabs_r80]
  9512                                 [size iemAImpl_fabs_r80_EndProc 0]
  9513 000035DF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9514                                 %line 2590+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9515                                 [global iemAImpl_f2xm1_r80]
  9516                                 %line 2590+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9517                                 iemAImpl_f2xm1_r80:
  9518 000035E3 53                      push ebx
  9519 000035E4 8B5C2408                mov ebx, [esp + 4 + 4]
  9520 000035E8 57                      push edi
  9521 000035E9 83EC20                  sub esp, 20
  9522                                 
  9523 000035EC DBE3                    fninit
  9524 000035EE DB2B                    fld tword [ebx]
  9525 000035F0 D93424                  fnstenv [esp]
  9526                                 
  9527                                 
  9528 000035F3 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9529 000035F6 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9530 000035FB 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9531                                 
  9532                                 
  9533 000035FF 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9534 00003603 81E700470000            and edi, 0x4700
  9535 00003609 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9536 0000360E 2500380000              and eax, 0x3800
  9537 00003613 09F8                    or eax, edi
  9538 00003615 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9539                                 
  9540 0000361A D92424                  fldenv [esp]
  9541 0000361D D9F0                    f2xm1
  9542                                 
  9543 0000361F DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9544 00003622 DBE2                    fnclex
  9545 00003624 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9546                                 
  9547 00003626 DBE3                    fninit
  9548 00003628 83C420                  add esp, 20
  9549 0000362B 5F                      pop edi
  9550 0000362C 5B                      pop ebx
  9551 0000362D C20400                  ret 4
  9552                                 [global iemAImpl_f2xm1_r80_EndProc:function hidden]
  9553                                 iemAImpl_f2xm1_r80_EndProc:
  9554                                 [size iemAImpl_f2xm1_r80 iemAImpl_f2xm1_r80_EndProc - iemAImpl_f2xm1_r80]
  9555                                 [size iemAImpl_f2xm1_r80_EndProc 0]
  9556 00003630 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9557                                 %line 2591+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9558                                 [global iemAImpl_fyl2x_r80]
  9559                                 %line 2591+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9560                                 iemAImpl_fyl2x_r80:
  9561 00003634 53                      push ebx
  9562 00003635 8B5C2408                mov ebx, [esp + 4 + 4]
  9563 00003639 57                      push edi
  9564 0000363A 83EC20                  sub esp, 20
  9565                                 
  9566 0000363D DBE3                    fninit
  9567 0000363F DB2B                    fld tword [ebx]
  9568 00003641 D93424                  fnstenv [esp]
  9569                                 
  9570                                 
  9571 00003644 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9572 00003647 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9573 0000364C 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9574                                 
  9575                                 
  9576 00003650 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9577 00003654 81E700470000            and edi, 0x4700
  9578 0000365A 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9579 0000365F 2500380000              and eax, 0x3800
  9580 00003664 09F8                    or eax, edi
  9581 00003666 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9582                                 
  9583 0000366B D92424                  fldenv [esp]
  9584 0000366E D9F1                    fyl2x
  9585                                 
  9586 00003670 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9587 00003673 DBE2                    fnclex
  9588 00003675 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9589                                 
  9590 00003677 DBE3                    fninit
  9591 00003679 83C420                  add esp, 20
  9592 0000367C 5F                      pop edi
  9593 0000367D 5B                      pop ebx
  9594 0000367E C20400                  ret 4
  9595                                 [global iemAImpl_fyl2x_r80_EndProc:function hidden]
  9596                                 iemAImpl_fyl2x_r80_EndProc:
  9597                                 [size iemAImpl_fyl2x_r80 iemAImpl_fyl2x_r80_EndProc - iemAImpl_fyl2x_r80]
  9598                                 [size iemAImpl_fyl2x_r80_EndProc 0]
  9599 00003681 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9600                                 %line 2592+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9601                                 [global iemAImpl_fsqrt_r80]
  9602                                 %line 2592+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9603                                 iemAImpl_fsqrt_r80:
  9604 00003685 53                      push ebx
  9605 00003686 8B5C2408                mov ebx, [esp + 4 + 4]
  9606 0000368A 57                      push edi
  9607 0000368B 83EC20                  sub esp, 20
  9608                                 
  9609 0000368E DBE3                    fninit
  9610 00003690 DB2B                    fld tword [ebx]
  9611 00003692 D93424                  fnstenv [esp]
  9612                                 
  9613                                 
  9614 00003695 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9615 00003698 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9616 0000369D 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9617                                 
  9618                                 
  9619 000036A1 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9620 000036A5 81E700470000            and edi, 0x4700
  9621 000036AB 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9622 000036B0 2500380000              and eax, 0x3800
  9623 000036B5 09F8                    or eax, edi
  9624 000036B7 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9625                                 
  9626 000036BC D92424                  fldenv [esp]
  9627 000036BF D9FA                    fsqrt
  9628                                 
  9629 000036C1 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9630 000036C4 DBE2                    fnclex
  9631 000036C6 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9632                                 
  9633 000036C8 DBE3                    fninit
  9634 000036CA 83C420                  add esp, 20
  9635 000036CD 5F                      pop edi
  9636 000036CE 5B                      pop ebx
  9637 000036CF C20400                  ret 4
  9638                                 [global iemAImpl_fsqrt_r80_EndProc:function hidden]
  9639                                 iemAImpl_fsqrt_r80_EndProc:
  9640                                 [size iemAImpl_fsqrt_r80 iemAImpl_fsqrt_r80_EndProc - iemAImpl_fsqrt_r80]
  9641                                 [size iemAImpl_fsqrt_r80_EndProc 0]
  9642 000036D2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9643                                 %line 2593+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9644                                 [global iemAImpl_frndint_r80]
  9645                                 %line 2593+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9646                                 iemAImpl_frndint_r80:
  9647 000036D6 53                      push ebx
  9648 000036D7 8B5C2408                mov ebx, [esp + 4 + 4]
  9649 000036DB 57                      push edi
  9650 000036DC 83EC20                  sub esp, 20
  9651                                 
  9652 000036DF DBE3                    fninit
  9653 000036E1 DB2B                    fld tword [ebx]
  9654 000036E3 D93424                  fnstenv [esp]
  9655                                 
  9656                                 
  9657 000036E6 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9658 000036E9 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9659 000036EE 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9660                                 
  9661                                 
  9662 000036F2 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9663 000036F6 81E700470000            and edi, 0x4700
  9664 000036FC 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9665 00003701 2500380000              and eax, 0x3800
  9666 00003706 09F8                    or eax, edi
  9667 00003708 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9668                                 
  9669 0000370D D92424                  fldenv [esp]
  9670 00003710 D9FC                    frndint
  9671                                 
  9672 00003712 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9673 00003715 DBE2                    fnclex
  9674 00003717 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9675                                 
  9676 00003719 DBE3                    fninit
  9677 0000371B 83C420                  add esp, 20
  9678 0000371E 5F                      pop edi
  9679 0000371F 5B                      pop ebx
  9680 00003720 C20400                  ret 4
  9681                                 [global iemAImpl_frndint_r80_EndProc:function hidden]
  9682                                 iemAImpl_frndint_r80_EndProc:
  9683                                 [size iemAImpl_frndint_r80 iemAImpl_frndint_r80_EndProc - iemAImpl_frndint_r80]
  9684                                 [size iemAImpl_frndint_r80_EndProc 0]
  9685 00003723 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9686                                 %line 2594+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9687                                 [global iemAImpl_fsin_r80]
  9688                                 %line 2594+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9689                                 iemAImpl_fsin_r80:
  9690 00003727 53                      push ebx
  9691 00003728 8B5C2408                mov ebx, [esp + 4 + 4]
  9692 0000372C 57                      push edi
  9693 0000372D 83EC20                  sub esp, 20
  9694                                 
  9695 00003730 DBE3                    fninit
  9696 00003732 DB2B                    fld tword [ebx]
  9697 00003734 D93424                  fnstenv [esp]
  9698                                 
  9699                                 
  9700 00003737 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9701 0000373A 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9702 0000373F 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9703                                 
  9704                                 
  9705 00003743 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9706 00003747 81E700470000            and edi, 0x4700
  9707 0000374D 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9708 00003752 2500380000              and eax, 0x3800
  9709 00003757 09F8                    or eax, edi
  9710 00003759 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9711                                 
  9712 0000375E D92424                  fldenv [esp]
  9713 00003761 D9FE                    fsin
  9714                                 
  9715 00003763 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9716 00003766 DBE2                    fnclex
  9717 00003768 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9718                                 
  9719 0000376A DBE3                    fninit
  9720 0000376C 83C420                  add esp, 20
  9721 0000376F 5F                      pop edi
  9722 00003770 5B                      pop ebx
  9723 00003771 C20400                  ret 4
  9724                                 [global iemAImpl_fsin_r80_EndProc:function hidden]
  9725                                 iemAImpl_fsin_r80_EndProc:
  9726                                 [size iemAImpl_fsin_r80 iemAImpl_fsin_r80_EndProc - iemAImpl_fsin_r80]
  9727                                 [size iemAImpl_fsin_r80_EndProc 0]
  9728 00003774 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9729                                 %line 2595+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9730                                 [global iemAImpl_fcos_r80]
  9731                                 %line 2595+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9732                                 iemAImpl_fcos_r80:
  9733 00003778 53                      push ebx
  9734 00003779 8B5C2408                mov ebx, [esp + 4 + 4]
  9735 0000377D 57                      push edi
  9736 0000377E 83EC20                  sub esp, 20
  9737                                 
  9738 00003781 DBE3                    fninit
  9739 00003783 DB2B                    fld tword [ebx]
  9740 00003785 D93424                  fnstenv [esp]
  9741                                 
  9742                                 
  9743 00003788 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9744 0000378B 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9745 00003790 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9746                                 
  9747                                 
  9748 00003794 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9749 00003798 81E700470000            and edi, 0x4700
  9750 0000379E 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9751 000037A3 2500380000              and eax, 0x3800
  9752 000037A8 09F8                    or eax, edi
  9753 000037AA 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9754                                 
  9755 000037AF D92424                  fldenv [esp]
  9756 000037B2 D9FF                    fcos
  9757                                 
  9758 000037B4 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9759 000037B7 DBE2                    fnclex
  9760 000037B9 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9761                                 
  9762 000037BB DBE3                    fninit
  9763 000037BD 83C420                  add esp, 20
  9764 000037C0 5F                      pop edi
  9765 000037C1 5B                      pop ebx
  9766 000037C2 C20400                  ret 4
  9767                                 [global iemAImpl_fcos_r80_EndProc:function hidden]
  9768                                 iemAImpl_fcos_r80_EndProc:
  9769                                 [size iemAImpl_fcos_r80 iemAImpl_fcos_r80_EndProc - iemAImpl_fcos_r80]
  9770                                 [size iemAImpl_fcos_r80_EndProc 0]
  9771 000037C5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9772                                 %line 2596+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9773                                 
  9774                                 
  9775                                 
  9776                                 
  9777                                 
  9778                                 
  9779                                 
  9780                                 
  9781                                 
  9782                                 
  9783                                 
  9784                                 
  9785                                 %line 2625+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9786                                 
  9787                                 [global iemAImpl_ftst_r80]
  9788                                 %line 2626+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9789                                 iemAImpl_ftst_r80:
  9790 000037C9 53                      push ebx
  9791 000037CA 8B5C2408                mov ebx, [esp + 4 + 4]
  9792 000037CE 57                      push edi
  9793 000037CF 83EC20                  sub esp, 20
  9794                                 
  9795 000037D2 DBE3                    fninit
  9796 000037D4 DB2B                    fld tword [ebx]
  9797 000037D6 D93424                  fnstenv [esp]
  9798                                 
  9799                                 
  9800 000037D9 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9801 000037DC 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9802 000037E1 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9803                                 
  9804                                 
  9805 000037E5 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9806 000037E9 81E700470000            and edi, 0x4700
  9807 000037EF 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9808 000037F4 2500380000              and eax, 0x3800
  9809 000037F9 09F8                    or eax, edi
  9810 000037FB 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9811                                 
  9812 00003800 D92424                  fldenv [esp]
  9813 00003803 D9E4                    ftst
  9814                                 
  9815 00003805 DD3A                    fnstsw word [edx]
  9816                                 
  9817 00003807 DBE3                    fninit
  9818 00003809 83C420                  add esp, 20
  9819 0000380C 5F                      pop edi
  9820 0000380D 5B                      pop ebx
  9821 0000380E C20400                  ret 4
  9822                                 [global iemAImpl_ftst_r80_EndProc:function hidden]
  9823                                 iemAImpl_ftst_r80_EndProc:
  9824                                 [size iemAImpl_ftst_r80 iemAImpl_ftst_r80_EndProc - iemAImpl_ftst_r80]
  9825                                 [size iemAImpl_ftst_r80_EndProc 0]
  9826 00003811 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9827                                 %line 2627+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9828                                 [global iemAImpl_fxam_r80]
  9829                                 %line 2627+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9830                                 iemAImpl_fxam_r80:
  9831 00003815 53                      push ebx
  9832 00003816 8B5C2408                mov ebx, [esp + 4 + 4]
  9833 0000381A 57                      push edi
  9834 0000381B 83EC20                  sub esp, 20
  9835                                 
  9836 0000381E DBE3                    fninit
  9837 00003820 DB2B                    fld tword [ebx]
  9838 00003822 D93424                  fnstenv [esp]
  9839                                 
  9840                                 
  9841 00003825 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9842 00003828 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9843 0000382D 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9844                                 
  9845                                 
  9846 00003831 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9847 00003835 81E700470000            and edi, 0x4700
  9848 0000383B 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9849 00003840 2500380000              and eax, 0x3800
  9850 00003845 09F8                    or eax, edi
  9851 00003847 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9852                                 
  9853 0000384C D92424                  fldenv [esp]
  9854 0000384F D9E5                    fxam
  9855                                 
  9856 00003851 DD3A                    fnstsw word [edx]
  9857                                 
  9858 00003853 DBE3                    fninit
  9859 00003855 83C420                  add esp, 20
  9860 00003858 5F                      pop edi
  9861 00003859 5B                      pop ebx
  9862 0000385A C20400                  ret 4
  9863                                 [global iemAImpl_fxam_r80_EndProc:function hidden]
  9864                                 iemAImpl_fxam_r80_EndProc:
  9865                                 [size iemAImpl_fxam_r80 iemAImpl_fxam_r80_EndProc - iemAImpl_fxam_r80]
  9866                                 [size iemAImpl_fxam_r80_EndProc 0]
  9867 0000385D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9868                                 %line 2628+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9869                                 
  9870                                 
  9871                                 
  9872                                 
  9873                                 
  9874                                 
  9875                                 
  9876                                 
  9877                                 
  9878                                 
  9879                                 
  9880                                 %line 2657+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9881                                 
  9882                                 [global iemAImpl_fld1]
  9883                                 %line 2658+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9884                                 iemAImpl_fld1:
  9885 00003861 57                      push edi
  9886 00003862 83EC20                  sub esp, 20
  9887                                 
  9888 00003865 DBE3                    fninit
  9889 00003867 D93424                  fnstenv [esp]
  9890                                 
  9891                                 
  9892 0000386A 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9893 0000386D 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9894 00003872 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9895                                 
  9896                                 
  9897 00003876 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9898 0000387A 81E700470000            and edi, 0x4700
  9899 00003880 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9900 00003885 2500380000              and eax, 0x3800
  9901 0000388A 09F8                    or eax, edi
  9902 0000388C 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9903                                 
  9904 00003891 D92424                  fldenv [esp]
  9905 00003894 D9E8                    fld1
  9906                                 
  9907 00003896 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9908 00003899 DBE2                    fnclex
  9909 0000389B DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9910                                 
  9911 0000389D DBE3                    fninit
  9912 0000389F 83C420                  add esp, 20
  9913 000038A2 5F                      pop edi
  9914 000038A3 C20000                  ret 0
  9915                                 [global iemAImpl_fld1_EndProc:function hidden]
  9916                                 iemAImpl_fld1_EndProc:
  9917                                 [size iemAImpl_fld1 iemAImpl_fld1_EndProc - iemAImpl_fld1]
  9918                                 [size iemAImpl_fld1_EndProc 0]
  9919 000038A6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9920                                 %line 2659+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9921                                 [global iemAImpl_fldl2t]
  9922                                 %line 2659+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9923                                 iemAImpl_fldl2t:
  9924 000038AA 57                      push edi
  9925 000038AB 83EC20                  sub esp, 20
  9926                                 
  9927 000038AE DBE3                    fninit
  9928 000038B0 D93424                  fnstenv [esp]
  9929                                 
  9930                                 
  9931 000038B3 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9932 000038B6 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9933 000038BB 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9934                                 
  9935                                 
  9936 000038BF 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9937 000038C3 81E700470000            and edi, 0x4700
  9938 000038C9 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9939 000038CE 2500380000              and eax, 0x3800
  9940 000038D3 09F8                    or eax, edi
  9941 000038D5 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9942                                 
  9943 000038DA D92424                  fldenv [esp]
  9944 000038DD D9E9                    fldl2t
  9945                                 
  9946 000038DF DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9947 000038E2 DBE2                    fnclex
  9948 000038E4 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9949                                 
  9950 000038E6 DBE3                    fninit
  9951 000038E8 83C420                  add esp, 20
  9952 000038EB 5F                      pop edi
  9953 000038EC C20000                  ret 0
  9954                                 [global iemAImpl_fldl2t_EndProc:function hidden]
  9955                                 iemAImpl_fldl2t_EndProc:
  9956                                 [size iemAImpl_fldl2t iemAImpl_fldl2t_EndProc - iemAImpl_fldl2t]
  9957                                 [size iemAImpl_fldl2t_EndProc 0]
  9958 000038EF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9959                                 %line 2660+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9960                                 [global iemAImpl_fldl2e]
  9961                                 %line 2660+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9962                                 iemAImpl_fldl2e:
  9963 000038F3 57                      push edi
  9964 000038F4 83EC20                  sub esp, 20
  9965                                 
  9966 000038F7 DBE3                    fninit
  9967 000038F9 D93424                  fnstenv [esp]
  9968                                 
  9969                                 
  9970 000038FC 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
  9971 000038FF 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
  9972 00003904 66890424                mov [esp + X86FSTENV32P.FCW], ax
  9973                                 
  9974                                 
  9975 00003908 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
  9976 0000390C 81E700470000            and edi, 0x4700
  9977 00003912 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
  9978 00003917 2500380000              and eax, 0x3800
  9979 0000391C 09F8                    or eax, edi
  9980 0000391E 6689442404              mov [esp + X86FSTENV32P.FSW], ax
  9981                                 
  9982 00003923 D92424                  fldenv [esp]
  9983 00003926 D9EA                    fldl2e
  9984                                 
  9985 00003928 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
  9986 0000392B DBE2                    fnclex
  9987 0000392D DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
  9988                                 
  9989 0000392F DBE3                    fninit
  9990 00003931 83C420                  add esp, 20
  9991 00003934 5F                      pop edi
  9992 00003935 C20000                  ret 0
  9993                                 [global iemAImpl_fldl2e_EndProc:function hidden]
  9994                                 iemAImpl_fldl2e_EndProc:
  9995                                 [size iemAImpl_fldl2e iemAImpl_fldl2e_EndProc - iemAImpl_fldl2e]
  9996                                 [size iemAImpl_fldl2e_EndProc 0]
  9997 00003938 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9998                                 %line 2661+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9999                                 [global iemAImpl_fldpi]
 10000                                 %line 2661+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10001                                 iemAImpl_fldpi:
 10002 0000393C 57                      push edi
 10003 0000393D 83EC20                  sub esp, 20
 10004                                 
 10005 00003940 DBE3                    fninit
 10006 00003942 D93424                  fnstenv [esp]
 10007                                 
 10008                                 
 10009 00003945 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
 10010 00003948 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
 10011 0000394D 66890424                mov [esp + X86FSTENV32P.FCW], ax
 10012                                 
 10013                                 
 10014 00003951 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
 10015 00003955 81E700470000            and edi, 0x4700
 10016 0000395B 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
 10017 00003960 2500380000              and eax, 0x3800
 10018 00003965 09F8                    or eax, edi
 10019 00003967 6689442404              mov [esp + X86FSTENV32P.FSW], ax
 10020                                 
 10021 0000396C D92424                  fldenv [esp]
 10022 0000396F D9EB                    fldpi
 10023                                 
 10024 00003971 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
 10025 00003974 DBE2                    fnclex
 10026 00003976 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
 10027                                 
 10028 00003978 DBE3                    fninit
 10029 0000397A 83C420                  add esp, 20
 10030 0000397D 5F                      pop edi
 10031 0000397E C20000                  ret 0
 10032                                 [global iemAImpl_fldpi_EndProc:function hidden]
 10033                                 iemAImpl_fldpi_EndProc:
 10034                                 [size iemAImpl_fldpi iemAImpl_fldpi_EndProc - iemAImpl_fldpi]
 10035                                 [size iemAImpl_fldpi_EndProc 0]
 10036 00003981 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10037                                 %line 2662+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10038                                 [global iemAImpl_fldlg2]
 10039                                 %line 2662+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10040                                 iemAImpl_fldlg2:
 10041 00003985 57                      push edi
 10042 00003986 83EC20                  sub esp, 20
 10043                                 
 10044 00003989 DBE3                    fninit
 10045 0000398B D93424                  fnstenv [esp]
 10046                                 
 10047                                 
 10048 0000398E 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
 10049 00003991 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
 10050 00003996 66890424                mov [esp + X86FSTENV32P.FCW], ax
 10051                                 
 10052                                 
 10053 0000399A 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
 10054 0000399E 81E700470000            and edi, 0x4700
 10055 000039A4 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
 10056 000039A9 2500380000              and eax, 0x3800
 10057 000039AE 09F8                    or eax, edi
 10058 000039B0 6689442404              mov [esp + X86FSTENV32P.FSW], ax
 10059                                 
 10060 000039B5 D92424                  fldenv [esp]
 10061 000039B8 D9EC                    fldlg2
 10062                                 
 10063 000039BA DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
 10064 000039BD DBE2                    fnclex
 10065 000039BF DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
 10066                                 
 10067 000039C1 DBE3                    fninit
 10068 000039C3 83C420                  add esp, 20
 10069 000039C6 5F                      pop edi
 10070 000039C7 C20000                  ret 0
 10071                                 [global iemAImpl_fldlg2_EndProc:function hidden]
 10072                                 iemAImpl_fldlg2_EndProc:
 10073                                 [size iemAImpl_fldlg2 iemAImpl_fldlg2_EndProc - iemAImpl_fldlg2]
 10074                                 [size iemAImpl_fldlg2_EndProc 0]
 10075 000039CA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10076                                 %line 2663+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10077                                 [global iemAImpl_fldln2]
 10078                                 %line 2663+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10079                                 iemAImpl_fldln2:
 10080 000039CE 57                      push edi
 10081 000039CF 83EC20                  sub esp, 20
 10082                                 
 10083 000039D2 DBE3                    fninit
 10084 000039D4 D93424                  fnstenv [esp]
 10085                                 
 10086                                 
 10087 000039D7 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
 10088 000039DA 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
 10089 000039DF 66890424                mov [esp + X86FSTENV32P.FCW], ax
 10090                                 
 10091                                 
 10092 000039E3 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
 10093 000039E7 81E700470000            and edi, 0x4700
 10094 000039ED 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
 10095 000039F2 2500380000              and eax, 0x3800
 10096 000039F7 09F8                    or eax, edi
 10097 000039F9 6689442404              mov [esp + X86FSTENV32P.FSW], ax
 10098                                 
 10099 000039FE D92424                  fldenv [esp]
 10100 00003A01 D9ED                    fldln2
 10101                                 
 10102 00003A03 DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
 10103 00003A06 DBE2                    fnclex
 10104 00003A08 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
 10105                                 
 10106 00003A0A DBE3                    fninit
 10107 00003A0C 83C420                  add esp, 20
 10108 00003A0F 5F                      pop edi
 10109 00003A10 C20000                  ret 0
 10110                                 [global iemAImpl_fldln2_EndProc:function hidden]
 10111                                 iemAImpl_fldln2_EndProc:
 10112                                 [size iemAImpl_fldln2 iemAImpl_fldln2_EndProc - iemAImpl_fldln2]
 10113                                 [size iemAImpl_fldln2_EndProc 0]
 10114 00003A13 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10115                                 %line 2664+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10116                                 [global iemAImpl_fldz]
 10117                                 %line 2664+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10118                                 iemAImpl_fldz:
 10119 00003A17 57                      push edi
 10120 00003A18 83EC20                  sub esp, 20
 10121                                 
 10122 00003A1B DBE3                    fninit
 10123 00003A1D D93424                  fnstenv [esp]
 10124                                 
 10125                                 
 10126 00003A20 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
 10127 00003A23 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
 10128 00003A28 66890424                mov [esp + X86FSTENV32P.FCW], ax
 10129                                 
 10130                                 
 10131 00003A2C 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
 10132 00003A30 81E700470000            and edi, 0x4700
 10133 00003A36 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
 10134 00003A3B 2500380000              and eax, 0x3800
 10135 00003A40 09F8                    or eax, edi
 10136 00003A42 6689442404              mov [esp + X86FSTENV32P.FSW], ax
 10137                                 
 10138 00003A47 D92424                  fldenv [esp]
 10139 00003A4A D9EE                    fldz
 10140                                 
 10141 00003A4C DD7A0A                  fnstsw word [edx + IEMFPURESULT.FSW]
 10142 00003A4F DBE2                    fnclex
 10143 00003A51 DB3A                    fstp tword [edx + IEMFPURESULT.r80Result]
 10144                                 
 10145 00003A53 DBE3                    fninit
 10146 00003A55 83C420                  add esp, 20
 10147 00003A58 5F                      pop edi
 10148 00003A59 C20000                  ret 0
 10149                                 [global iemAImpl_fldz_EndProc:function hidden]
 10150                                 iemAImpl_fldz_EndProc:
 10151                                 [size iemAImpl_fldz iemAImpl_fldz_EndProc - iemAImpl_fldz]
 10152                                 [size iemAImpl_fldz_EndProc 0]
 10153 00003A5C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10154                                 %line 2665+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10155                                 
 10156                                 
 10157                                 
 10158                                 
 10159                                 
 10160                                 
 10161                                 
 10162                                 
 10163                                 
 10164                                 
 10165                                 
 10166                                 %line 2697+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10167                                 
 10168                                 [global iemAImpl_fptan_r80_r80]
 10169                                 %line 2698+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10170                                 iemAImpl_fptan_r80_r80:
 10171 00003A60 53                      push ebx
 10172 00003A61 8B5C2408                mov ebx, [esp + 4 + 4]
 10173 00003A65 57                      push edi
 10174 00003A66 83EC20                  sub esp, 20
 10175                                 
 10176 00003A69 DBE3                    fninit
 10177 00003A6B DB2B                    fld tword [ebx]
 10178 00003A6D D93424                  fnstenv [esp]
 10179                                 
 10180                                 
 10181 00003A70 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
 10182 00003A73 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
 10183 00003A78 66890424                mov [esp + X86FSTENV32P.FCW], ax
 10184                                 
 10185                                 
 10186 00003A7C 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
 10187 00003A80 81E700470000            and edi, 0x4700
 10188 00003A86 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
 10189 00003A8B 2500380000              and eax, 0x3800
 10190 00003A90 09F8                    or eax, edi
 10191 00003A92 6689442404              mov [esp + X86FSTENV32P.FSW], ax
 10192                                 
 10193 00003A97 D92424                  fldenv [esp]
 10194 00003A9A D9F2                    fptan
 10195                                 
 10196 00003A9C DD7A0A                  fnstsw word [edx + IEMFPURESULTTWO.FSW]
 10197 00003A9F DBE2                    fnclex
 10198 00003AA1 DB7A0C                  fstp tword [edx + IEMFPURESULTTWO.r80Result2]
 10199 00003AA4 DBE2                    fnclex
 10200 00003AA6 DB3A                    fstp tword [edx + IEMFPURESULTTWO.r80Result1]
 10201                                 
 10202 00003AA8 DBE3                    fninit
 10203 00003AAA 83C420                  add esp, 20
 10204 00003AAD 5F                      pop edi
 10205 00003AAE 5B                      pop ebx
 10206 00003AAF C20400                  ret 4
 10207                                 [global iemAImpl_fptan_r80_r80_EndProc:function hidden]
 10208                                 iemAImpl_fptan_r80_r80_EndProc:
 10209                                 [size iemAImpl_fptan_r80_r80 iemAImpl_fptan_r80_r80_EndProc - iemAImpl_fptan_r80_r80]
 10210                                 [size iemAImpl_fptan_r80_r80_EndProc 0]
 10211 00003AB2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10212                                 %line 2699+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10213                                 [global iemAImpl_fxtract_r80_r80]
 10214                                 %line 2699+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10215                                 iemAImpl_fxtract_r80_r80:
 10216 00003AB6 53                      push ebx
 10217 00003AB7 8B5C2408                mov ebx, [esp + 4 + 4]
 10218 00003ABB 57                      push edi
 10219 00003ABC 83EC20                  sub esp, 20
 10220                                 
 10221 00003ABF DBE3                    fninit
 10222 00003AC1 DB2B                    fld tword [ebx]
 10223 00003AC3 D93424                  fnstenv [esp]
 10224                                 
 10225                                 
 10226 00003AC6 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
 10227 00003AC9 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
 10228 00003ACE 66890424                mov [esp + X86FSTENV32P.FCW], ax
 10229                                 
 10230                                 
 10231 00003AD2 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
 10232 00003AD6 81E700470000            and edi, 0x4700
 10233 00003ADC 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
 10234 00003AE1 2500380000              and eax, 0x3800
 10235 00003AE6 09F8                    or eax, edi
 10236 00003AE8 6689442404              mov [esp + X86FSTENV32P.FSW], ax
 10237                                 
 10238 00003AED D92424                  fldenv [esp]
 10239 00003AF0 D9F4                    fxtract
 10240                                 
 10241 00003AF2 DD7A0A                  fnstsw word [edx + IEMFPURESULTTWO.FSW]
 10242 00003AF5 DBE2                    fnclex
 10243 00003AF7 DB7A0C                  fstp tword [edx + IEMFPURESULTTWO.r80Result2]
 10244 00003AFA DBE2                    fnclex
 10245 00003AFC DB3A                    fstp tword [edx + IEMFPURESULTTWO.r80Result1]
 10246                                 
 10247 00003AFE DBE3                    fninit
 10248 00003B00 83C420                  add esp, 20
 10249 00003B03 5F                      pop edi
 10250 00003B04 5B                      pop ebx
 10251 00003B05 C20400                  ret 4
 10252                                 [global iemAImpl_fxtract_r80_r80_EndProc:function hidden]
 10253                                 iemAImpl_fxtract_r80_r80_EndProc:
 10254                                 [size iemAImpl_fxtract_r80_r80 iemAImpl_fxtract_r80_r80_EndProc - iemAImpl_fxtract_r80_r80]
 10255                                 [size iemAImpl_fxtract_r80_r80_EndProc 0]
 10256 00003B08 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10257                                 %line 2700+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10258                                 [global iemAImpl_fsincos_r80_r80]
 10259                                 %line 2700+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10260                                 iemAImpl_fsincos_r80_r80:
 10261 00003B0C 53                      push ebx
 10262 00003B0D 8B5C2408                mov ebx, [esp + 4 + 4]
 10263 00003B11 57                      push edi
 10264 00003B12 83EC20                  sub esp, 20
 10265                                 
 10266 00003B15 DBE3                    fninit
 10267 00003B17 DB2B                    fld tword [ebx]
 10268 00003B19 D93424                  fnstenv [esp]
 10269                                 
 10270                                 
 10271 00003B1C 0FB701                  movzx eax, word [ecx + X86FXSTATE.FCW]
 10272 00003B1F 257F0F0000              and eax, 0x007f | 0x0300 | 0x0c00
 10273 00003B24 66890424                mov [esp + X86FSTENV32P.FCW], ax
 10274                                 
 10275                                 
 10276 00003B28 0FB77902                movzx edi, word [ecx + X86FXSTATE.FSW]
 10277 00003B2C 81E700470000            and edi, 0x4700
 10278 00003B32 0FB7442404              movzx eax, word [esp + X86FSTENV32P.FSW]
 10279 00003B37 2500380000              and eax, 0x3800
 10280 00003B3C 09F8                    or eax, edi
 10281 00003B3E 6689442404              mov [esp + X86FSTENV32P.FSW], ax
 10282                                 
 10283 00003B43 D92424                  fldenv [esp]
 10284 00003B46 D9FB                    fsincos
 10285                                 
 10286 00003B48 DD7A0A                  fnstsw word [edx + IEMFPURESULTTWO.FSW]
 10287 00003B4B DBE2                    fnclex
 10288 00003B4D DB7A0C                  fstp tword [edx + IEMFPURESULTTWO.r80Result2]
 10289 00003B50 DBE2                    fnclex
 10290 00003B52 DB3A                    fstp tword [edx + IEMFPURESULTTWO.r80Result1]
 10291                                 
 10292 00003B54 DBE3                    fninit
 10293 00003B56 83C420                  add esp, 20
 10294 00003B59 5F                      pop edi
 10295 00003B5A 5B                      pop ebx
 10296 00003B5B C20400                  ret 4
 10297                                 [global iemAImpl_fsincos_r80_r80_EndProc:function hidden]
 10298                                 iemAImpl_fsincos_r80_r80_EndProc:
 10299                                 [size iemAImpl_fsincos_r80_r80 iemAImpl_fsincos_r80_r80_EndProc - iemAImpl_fsincos_r80_r80]
 10300                                 [size iemAImpl_fsincos_r80_r80_EndProc 0]
 10301 00003B5E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10302                                 %line 2701+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10303                                 
 10304                                 
 10305                                 
 10306                                 
 10307                                 
 10308                                 
 10309                                 
 10310                                 %line 2712+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10311                                 
 10312                                 
 10313                                 %line 2718+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10314                                 
 10315                                 
 10316                                 
 10317                                 
 10318                                 
 10319                                 
 10320                                 
 10321                                 
 10322                                 
 10323                                 
 10324                                 
 10325                                 %line 2756+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10326                                 
 10327                                 [global iemAImpl_pxor_u64]
 10328                                 %line 2757+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10329                                 iemAImpl_pxor_u64:
 10330 00003B62 53                      push ebx
 10331 00003B63 8B5C2408                mov ebx, [esp + 4 + 4]
 10332 00003B67 57                      push edi
 10333                                 
 10334 00003B68 0F6F02                  movq mm0, [edx]
 10335 00003B6B 0F6F0B                  movq mm1, [ebx]
 10336 00003B6E 0FEFC1                  pxor mm0, mm1
 10337 00003B71 0F7F02                  movq [edx], mm0
 10338                                 
 10339 00003B74 5F                      pop edi
 10340 00003B75 5B                      pop ebx
 10341 00003B76 C20400                  ret 4
 10342                                 [global iemAImpl_pxor_u64_EndProc:function hidden]
 10343                                 iemAImpl_pxor_u64_EndProc:
 10344                                 [size iemAImpl_pxor_u64 iemAImpl_pxor_u64_EndProc - iemAImpl_pxor_u64]
 10345                                 [size iemAImpl_pxor_u64_EndProc 0]
 10346 00003B79 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10347                                 
 10348                                 [global iemAImpl_pxor_u128]
 10349                                 iemAImpl_pxor_u128:
 10350 00003B7D 53                      push ebx
 10351 00003B7E 8B5C2408                mov ebx, [esp + 4 + 4]
 10352 00003B82 57                      push edi
 10353                                 
 10354 00003B83 F30F6F02                movdqu xmm0, [edx]
 10355 00003B87 F30F6F0B                movdqu xmm1, [ebx]
 10356 00003B8B 660FEFC1                pxor xmm0, xmm1
 10357 00003B8F F30F7F02                movdqu [edx], xmm0
 10358                                 
 10359 00003B93 5F                      pop edi
 10360 00003B94 5B                      pop ebx
 10361 00003B95 C20400                  ret 4
 10362                                 [global iemAImpl_pxor_u128_EndProc:function hidden]
 10363                                 iemAImpl_pxor_u128_EndProc:
 10364                                 [size iemAImpl_pxor_u128 iemAImpl_pxor_u128_EndProc - iemAImpl_pxor_u128]
 10365                                 [size iemAImpl_pxor_u128_EndProc 0]
 10366 00003B98 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10367                                 %line 2758+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10368                                 [global iemAImpl_pcmpeqb_u64]
 10369                                 %line 2758+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10370                                 iemAImpl_pcmpeqb_u64:
 10371 00003B9C 53                      push ebx
 10372 00003B9D 8B5C2408                mov ebx, [esp + 4 + 4]
 10373 00003BA1 57                      push edi
 10374                                 
 10375 00003BA2 0F6F02                  movq mm0, [edx]
 10376 00003BA5 0F6F0B                  movq mm1, [ebx]
 10377 00003BA8 0F74C1                  pcmpeqb mm0, mm1
 10378 00003BAB 0F7F02                  movq [edx], mm0
 10379                                 
 10380 00003BAE 5F                      pop edi
 10381 00003BAF 5B                      pop ebx
 10382 00003BB0 C20400                  ret 4
 10383                                 [global iemAImpl_pcmpeqb_u64_EndProc:function hidden]
 10384                                 iemAImpl_pcmpeqb_u64_EndProc:
 10385                                 [size iemAImpl_pcmpeqb_u64 iemAImpl_pcmpeqb_u64_EndProc - iemAImpl_pcmpeqb_u64]
 10386                                 [size iemAImpl_pcmpeqb_u64_EndProc 0]
 10387 00003BB3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10388                                 
 10389                                 [global iemAImpl_pcmpeqb_u128]
 10390                                 iemAImpl_pcmpeqb_u128:
 10391 00003BB7 53                      push ebx
 10392 00003BB8 8B5C2408                mov ebx, [esp + 4 + 4]
 10393 00003BBC 57                      push edi
 10394                                 
 10395 00003BBD F30F6F02                movdqu xmm0, [edx]
 10396 00003BC1 F30F6F0B                movdqu xmm1, [ebx]
 10397 00003BC5 660F74C1                pcmpeqb xmm0, xmm1
 10398 00003BC9 F30F7F02                movdqu [edx], xmm0
 10399                                 
 10400 00003BCD 5F                      pop edi
 10401 00003BCE 5B                      pop ebx
 10402 00003BCF C20400                  ret 4
 10403                                 [global iemAImpl_pcmpeqb_u128_EndProc:function hidden]
 10404                                 iemAImpl_pcmpeqb_u128_EndProc:
 10405                                 [size iemAImpl_pcmpeqb_u128 iemAImpl_pcmpeqb_u128_EndProc - iemAImpl_pcmpeqb_u128]
 10406                                 [size iemAImpl_pcmpeqb_u128_EndProc 0]
 10407 00003BD2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10408                                 %line 2759+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10409                                 [global iemAImpl_pcmpeqw_u64]
 10410                                 %line 2759+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10411                                 iemAImpl_pcmpeqw_u64:
 10412 00003BD6 53                      push ebx
 10413 00003BD7 8B5C2408                mov ebx, [esp + 4 + 4]
 10414 00003BDB 57                      push edi
 10415                                 
 10416 00003BDC 0F6F02                  movq mm0, [edx]
 10417 00003BDF 0F6F0B                  movq mm1, [ebx]
 10418 00003BE2 0F75C1                  pcmpeqw mm0, mm1
 10419 00003BE5 0F7F02                  movq [edx], mm0
 10420                                 
 10421 00003BE8 5F                      pop edi
 10422 00003BE9 5B                      pop ebx
 10423 00003BEA C20400                  ret 4
 10424                                 [global iemAImpl_pcmpeqw_u64_EndProc:function hidden]
 10425                                 iemAImpl_pcmpeqw_u64_EndProc:
 10426                                 [size iemAImpl_pcmpeqw_u64 iemAImpl_pcmpeqw_u64_EndProc - iemAImpl_pcmpeqw_u64]
 10427                                 [size iemAImpl_pcmpeqw_u64_EndProc 0]
 10428 00003BED CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10429                                 
 10430                                 [global iemAImpl_pcmpeqw_u128]
 10431                                 iemAImpl_pcmpeqw_u128:
 10432 00003BF1 53                      push ebx
 10433 00003BF2 8B5C2408                mov ebx, [esp + 4 + 4]
 10434 00003BF6 57                      push edi
 10435                                 
 10436 00003BF7 F30F6F02                movdqu xmm0, [edx]
 10437 00003BFB F30F6F0B                movdqu xmm1, [ebx]
 10438 00003BFF 660F75C1                pcmpeqw xmm0, xmm1
 10439 00003C03 F30F7F02                movdqu [edx], xmm0
 10440                                 
 10441 00003C07 5F                      pop edi
 10442 00003C08 5B                      pop ebx
 10443 00003C09 C20400                  ret 4
 10444                                 [global iemAImpl_pcmpeqw_u128_EndProc:function hidden]
 10445                                 iemAImpl_pcmpeqw_u128_EndProc:
 10446                                 [size iemAImpl_pcmpeqw_u128 iemAImpl_pcmpeqw_u128_EndProc - iemAImpl_pcmpeqw_u128]
 10447                                 [size iemAImpl_pcmpeqw_u128_EndProc 0]
 10448 00003C0C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10449                                 %line 2760+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10450                                 [global iemAImpl_pcmpeqd_u64]
 10451                                 %line 2760+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10452                                 iemAImpl_pcmpeqd_u64:
 10453 00003C10 53                      push ebx
 10454 00003C11 8B5C2408                mov ebx, [esp + 4 + 4]
 10455 00003C15 57                      push edi
 10456                                 
 10457 00003C16 0F6F02                  movq mm0, [edx]
 10458 00003C19 0F6F0B                  movq mm1, [ebx]
 10459 00003C1C 0F76C1                  pcmpeqd mm0, mm1
 10460 00003C1F 0F7F02                  movq [edx], mm0
 10461                                 
 10462 00003C22 5F                      pop edi
 10463 00003C23 5B                      pop ebx
 10464 00003C24 C20400                  ret 4
 10465                                 [global iemAImpl_pcmpeqd_u64_EndProc:function hidden]
 10466                                 iemAImpl_pcmpeqd_u64_EndProc:
 10467                                 [size iemAImpl_pcmpeqd_u64 iemAImpl_pcmpeqd_u64_EndProc - iemAImpl_pcmpeqd_u64]
 10468                                 [size iemAImpl_pcmpeqd_u64_EndProc 0]
 10469 00003C27 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10470                                 
 10471                                 [global iemAImpl_pcmpeqd_u128]
 10472                                 iemAImpl_pcmpeqd_u128:
 10473 00003C2B 53                      push ebx
 10474 00003C2C 8B5C2408                mov ebx, [esp + 4 + 4]
 10475 00003C30 57                      push edi
 10476                                 
 10477 00003C31 F30F6F02                movdqu xmm0, [edx]
 10478 00003C35 F30F6F0B                movdqu xmm1, [ebx]
 10479 00003C39 660F76C1                pcmpeqd xmm0, xmm1
 10480 00003C3D F30F7F02                movdqu [edx], xmm0
 10481                                 
 10482 00003C41 5F                      pop edi
 10483 00003C42 5B                      pop ebx
 10484 00003C43 C20400                  ret 4
 10485                                 [global iemAImpl_pcmpeqd_u128_EndProc:function hidden]
 10486                                 iemAImpl_pcmpeqd_u128_EndProc:
 10487                                 [size iemAImpl_pcmpeqd_u128 iemAImpl_pcmpeqd_u128_EndProc - iemAImpl_pcmpeqd_u128]
 10488                                 [size iemAImpl_pcmpeqd_u128_EndProc 0]
 10489 00003C46 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10490                                 %line 2761+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10491                                 
 10492                                 
 10493                                 
 10494                                 
 10495                                 
 10496                                 
 10497                                 
 10498                                 
 10499                                 
 10500                                 
 10501                                 
 10502                                 
 10503                                 %line 2802+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10504                                 
 10505                                 [global iemAImpl_punpcklbw_u64]
 10506                                 %line 2803+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10507                                 iemAImpl_punpcklbw_u64:
 10508 00003C4A 53                      push ebx
 10509 00003C4B 8B5C2408                mov ebx, [esp + 4 + 4]
 10510 00003C4F 57                      push edi
 10511                                 
 10512 00003C50 0F6F02                  movq mm0, [edx]
 10513 00003C53 0F6E0B                  movd mm1, [ebx]
 10514 00003C56 0F60C1                  punpcklbw mm0, mm1
 10515 00003C59 0F7F02                  movq [edx], mm0
 10516                                 
 10517 00003C5C 5F                      pop edi
 10518 00003C5D 5B                      pop ebx
 10519 00003C5E C20400                  ret 4
 10520                                 [global iemAImpl_punpcklbw_u64_EndProc:function hidden]
 10521                                 iemAImpl_punpcklbw_u64_EndProc:
 10522                                 [size iemAImpl_punpcklbw_u64 iemAImpl_punpcklbw_u64_EndProc - iemAImpl_punpcklbw_u64]
 10523                                 [size iemAImpl_punpcklbw_u64_EndProc 0]
 10524 00003C61 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10525                                 
 10526                                 [global iemAImpl_punpcklbw_u128]
 10527                                 iemAImpl_punpcklbw_u128:
 10528 00003C65 53                      push ebx
 10529 00003C66 8B5C2408                mov ebx, [esp + 4 + 4]
 10530 00003C6A 57                      push edi
 10531                                 
 10532 00003C6B F30F6F02                movdqu xmm0, [edx]
 10533 00003C6F F30F7E0B                movq xmm1, [ebx]
 10534 00003C73 660F60C1                punpcklbw xmm0, xmm1
 10535 00003C77 F30F7F02                movdqu [edx], xmm0
 10536                                 
 10537 00003C7B 5F                      pop edi
 10538 00003C7C 5B                      pop ebx
 10539 00003C7D C20400                  ret 4
 10540                                 [global iemAImpl_punpcklbw_u128_EndProc:function hidden]
 10541                                 iemAImpl_punpcklbw_u128_EndProc:
 10542                                 [size iemAImpl_punpcklbw_u128 iemAImpl_punpcklbw_u128_EndProc - iemAImpl_punpcklbw_u128]
 10543                                 [size iemAImpl_punpcklbw_u128_EndProc 0]
 10544 00003C80 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10545                                 %line 2804+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10546                                 [global iemAImpl_punpcklwd_u64]
 10547                                 %line 2804+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10548                                 iemAImpl_punpcklwd_u64:
 10549 00003C84 53                      push ebx
 10550 00003C85 8B5C2408                mov ebx, [esp + 4 + 4]
 10551 00003C89 57                      push edi
 10552                                 
 10553 00003C8A 0F6F02                  movq mm0, [edx]
 10554 00003C8D 0F6E0B                  movd mm1, [ebx]
 10555 00003C90 0F61C1                  punpcklwd mm0, mm1
 10556 00003C93 0F7F02                  movq [edx], mm0
 10557                                 
 10558 00003C96 5F                      pop edi
 10559 00003C97 5B                      pop ebx
 10560 00003C98 C20400                  ret 4
 10561                                 [global iemAImpl_punpcklwd_u64_EndProc:function hidden]
 10562                                 iemAImpl_punpcklwd_u64_EndProc:
 10563                                 [size iemAImpl_punpcklwd_u64 iemAImpl_punpcklwd_u64_EndProc - iemAImpl_punpcklwd_u64]
 10564                                 [size iemAImpl_punpcklwd_u64_EndProc 0]
 10565 00003C9B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10566                                 
 10567                                 [global iemAImpl_punpcklwd_u128]
 10568                                 iemAImpl_punpcklwd_u128:
 10569 00003C9F 53                      push ebx
 10570 00003CA0 8B5C2408                mov ebx, [esp + 4 + 4]
 10571 00003CA4 57                      push edi
 10572                                 
 10573 00003CA5 F30F6F02                movdqu xmm0, [edx]
 10574 00003CA9 F30F7E0B                movq xmm1, [ebx]
 10575 00003CAD 660F61C1                punpcklwd xmm0, xmm1
 10576 00003CB1 F30F7F02                movdqu [edx], xmm0
 10577                                 
 10578 00003CB5 5F                      pop edi
 10579 00003CB6 5B                      pop ebx
 10580 00003CB7 C20400                  ret 4
 10581                                 [global iemAImpl_punpcklwd_u128_EndProc:function hidden]
 10582                                 iemAImpl_punpcklwd_u128_EndProc:
 10583                                 [size iemAImpl_punpcklwd_u128 iemAImpl_punpcklwd_u128_EndProc - iemAImpl_punpcklwd_u128]
 10584                                 [size iemAImpl_punpcklwd_u128_EndProc 0]
 10585 00003CBA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10586                                 %line 2805+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10587                                 [global iemAImpl_punpckldq_u64]
 10588                                 %line 2805+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10589                                 iemAImpl_punpckldq_u64:
 10590 00003CBE 53                      push ebx
 10591 00003CBF 8B5C2408                mov ebx, [esp + 4 + 4]
 10592 00003CC3 57                      push edi
 10593                                 
 10594 00003CC4 0F6F02                  movq mm0, [edx]
 10595 00003CC7 0F6E0B                  movd mm1, [ebx]
 10596 00003CCA 0F62C1                  punpckldq mm0, mm1
 10597 00003CCD 0F7F02                  movq [edx], mm0
 10598                                 
 10599 00003CD0 5F                      pop edi
 10600 00003CD1 5B                      pop ebx
 10601 00003CD2 C20400                  ret 4
 10602                                 [global iemAImpl_punpckldq_u64_EndProc:function hidden]
 10603                                 iemAImpl_punpckldq_u64_EndProc:
 10604                                 [size iemAImpl_punpckldq_u64 iemAImpl_punpckldq_u64_EndProc - iemAImpl_punpckldq_u64]
 10605                                 [size iemAImpl_punpckldq_u64_EndProc 0]
 10606 00003CD5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10607                                 
 10608                                 [global iemAImpl_punpckldq_u128]
 10609                                 iemAImpl_punpckldq_u128:
 10610 00003CD9 53                      push ebx
 10611 00003CDA 8B5C2408                mov ebx, [esp + 4 + 4]
 10612 00003CDE 57                      push edi
 10613                                 
 10614 00003CDF F30F6F02                movdqu xmm0, [edx]
 10615 00003CE3 F30F7E0B                movq xmm1, [ebx]
 10616 00003CE7 660F62C1                punpckldq xmm0, xmm1
 10617 00003CEB F30F7F02                movdqu [edx], xmm0
 10618                                 
 10619 00003CEF 5F                      pop edi
 10620 00003CF0 5B                      pop ebx
 10621 00003CF1 C20400                  ret 4
 10622                                 [global iemAImpl_punpckldq_u128_EndProc:function hidden]
 10623                                 iemAImpl_punpckldq_u128_EndProc:
 10624                                 [size iemAImpl_punpckldq_u128 iemAImpl_punpckldq_u128_EndProc - iemAImpl_punpckldq_u128]
 10625                                 [size iemAImpl_punpckldq_u128_EndProc 0]
 10626 00003CF4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10627                                 %line 2806+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10628                                 
 10629                                 %line 2806+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10630                                 [global iemAImpl_punpcklqdq_u128]
 10631                                 iemAImpl_punpcklqdq_u128:
 10632 00003CF8 53                      push ebx
 10633 00003CF9 8B5C2408                mov ebx, [esp + 4 + 4]
 10634 00003CFD 57                      push edi
 10635                                 
 10636 00003CFE F30F6F02                movdqu xmm0, [edx]
 10637 00003D02 F30F7E0B                movq xmm1, [ebx]
 10638 00003D06 660F6CC1                punpcklqdq xmm0, xmm1
 10639 00003D0A F30F7F02                movdqu [edx], xmm0
 10640                                 
 10641 00003D0E 5F                      pop edi
 10642 00003D0F 5B                      pop ebx
 10643 00003D10 C20400                  ret 4
 10644                                 [global iemAImpl_punpcklqdq_u128_EndProc:function hidden]
 10645                                 iemAImpl_punpcklqdq_u128_EndProc:
 10646                                 [size iemAImpl_punpcklqdq_u128 iemAImpl_punpcklqdq_u128_EndProc - iemAImpl_punpcklqdq_u128]
 10647                                 [size iemAImpl_punpcklqdq_u128_EndProc 0]
 10648 00003D13 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10649                                 %line 2807+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10650                                 
 10651                                 
 10652                                 
 10653                                 
 10654                                 
 10655                                 
 10656                                 
 10657                                 
 10658                                 
 10659                                 
 10660                                 
 10661                                 
 10662                                 
 10663                                 %line 2849+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10664                                 
 10665                                 [global iemAImpl_punpckhbw_u64]
 10666                                 %line 2850+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10667                                 iemAImpl_punpckhbw_u64:
 10668 00003D17 53                      push ebx
 10669 00003D18 8B5C2408                mov ebx, [esp + 4 + 4]
 10670 00003D1C 57                      push edi
 10671                                 
 10672 00003D1D 0F6F02                  movq mm0, [edx]
 10673 00003D20 0F6E0B                  movd mm1, [ebx]
 10674 00003D23 0F68C1                  punpckhbw mm0, mm1
 10675 00003D26 0F7F02                  movq [edx], mm0
 10676                                 
 10677 00003D29 5F                      pop edi
 10678 00003D2A 5B                      pop ebx
 10679 00003D2B C20400                  ret 4
 10680                                 [global iemAImpl_punpckhbw_u64_EndProc:function hidden]
 10681                                 iemAImpl_punpckhbw_u64_EndProc:
 10682                                 [size iemAImpl_punpckhbw_u64 iemAImpl_punpckhbw_u64_EndProc - iemAImpl_punpckhbw_u64]
 10683                                 [size iemAImpl_punpckhbw_u64_EndProc 0]
 10684 00003D2E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10685                                 
 10686                                 [global iemAImpl_punpckhbw_u128]
 10687                                 iemAImpl_punpckhbw_u128:
 10688 00003D32 53                      push ebx
 10689 00003D33 8B5C2408                mov ebx, [esp + 4 + 4]
 10690 00003D37 57                      push edi
 10691                                 
 10692 00003D38 F30F6F02                movdqu xmm0, [edx]
 10693 00003D3C F30F7E0B                movq xmm1, [ebx]
 10694 00003D40 660F68C1                punpckhbw xmm0, xmm1
 10695 00003D44 F30F7F02                movdqu [edx], xmm0
 10696                                 
 10697 00003D48 5F                      pop edi
 10698 00003D49 5B                      pop ebx
 10699 00003D4A C20400                  ret 4
 10700                                 [global iemAImpl_punpckhbw_u128_EndProc:function hidden]
 10701                                 iemAImpl_punpckhbw_u128_EndProc:
 10702                                 [size iemAImpl_punpckhbw_u128 iemAImpl_punpckhbw_u128_EndProc - iemAImpl_punpckhbw_u128]
 10703                                 [size iemAImpl_punpckhbw_u128_EndProc 0]
 10704 00003D4D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10705                                 %line 2851+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10706                                 [global iemAImpl_punpckhwd_u64]
 10707                                 %line 2851+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10708                                 iemAImpl_punpckhwd_u64:
 10709 00003D51 53                      push ebx
 10710 00003D52 8B5C2408                mov ebx, [esp + 4 + 4]
 10711 00003D56 57                      push edi
 10712                                 
 10713 00003D57 0F6F02                  movq mm0, [edx]
 10714 00003D5A 0F6E0B                  movd mm1, [ebx]
 10715 00003D5D 0F69C1                  punpckhwd mm0, mm1
 10716 00003D60 0F7F02                  movq [edx], mm0
 10717                                 
 10718 00003D63 5F                      pop edi
 10719 00003D64 5B                      pop ebx
 10720 00003D65 C20400                  ret 4
 10721                                 [global iemAImpl_punpckhwd_u64_EndProc:function hidden]
 10722                                 iemAImpl_punpckhwd_u64_EndProc:
 10723                                 [size iemAImpl_punpckhwd_u64 iemAImpl_punpckhwd_u64_EndProc - iemAImpl_punpckhwd_u64]
 10724                                 [size iemAImpl_punpckhwd_u64_EndProc 0]
 10725 00003D68 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10726                                 
 10727                                 [global iemAImpl_punpckhwd_u128]
 10728                                 iemAImpl_punpckhwd_u128:
 10729 00003D6C 53                      push ebx
 10730 00003D6D 8B5C2408                mov ebx, [esp + 4 + 4]
 10731 00003D71 57                      push edi
 10732                                 
 10733 00003D72 F30F6F02                movdqu xmm0, [edx]
 10734 00003D76 F30F7E0B                movq xmm1, [ebx]
 10735 00003D7A 660F69C1                punpckhwd xmm0, xmm1
 10736 00003D7E F30F7F02                movdqu [edx], xmm0
 10737                                 
 10738 00003D82 5F                      pop edi
 10739 00003D83 5B                      pop ebx
 10740 00003D84 C20400                  ret 4
 10741                                 [global iemAImpl_punpckhwd_u128_EndProc:function hidden]
 10742                                 iemAImpl_punpckhwd_u128_EndProc:
 10743                                 [size iemAImpl_punpckhwd_u128 iemAImpl_punpckhwd_u128_EndProc - iemAImpl_punpckhwd_u128]
 10744                                 [size iemAImpl_punpckhwd_u128_EndProc 0]
 10745 00003D87 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10746                                 %line 2852+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10747                                 [global iemAImpl_punpckhdq_u64]
 10748                                 %line 2852+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10749                                 iemAImpl_punpckhdq_u64:
 10750 00003D8B 53                      push ebx
 10751 00003D8C 8B5C2408                mov ebx, [esp + 4 + 4]
 10752 00003D90 57                      push edi
 10753                                 
 10754 00003D91 0F6F02                  movq mm0, [edx]
 10755 00003D94 0F6E0B                  movd mm1, [ebx]
 10756 00003D97 0F6AC1                  punpckhdq mm0, mm1
 10757 00003D9A 0F7F02                  movq [edx], mm0
 10758                                 
 10759 00003D9D 5F                      pop edi
 10760 00003D9E 5B                      pop ebx
 10761 00003D9F C20400                  ret 4
 10762                                 [global iemAImpl_punpckhdq_u64_EndProc:function hidden]
 10763                                 iemAImpl_punpckhdq_u64_EndProc:
 10764                                 [size iemAImpl_punpckhdq_u64 iemAImpl_punpckhdq_u64_EndProc - iemAImpl_punpckhdq_u64]
 10765                                 [size iemAImpl_punpckhdq_u64_EndProc 0]
 10766 00003DA2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10767                                 
 10768                                 [global iemAImpl_punpckhdq_u128]
 10769                                 iemAImpl_punpckhdq_u128:
 10770 00003DA6 53                      push ebx
 10771 00003DA7 8B5C2408                mov ebx, [esp + 4 + 4]
 10772 00003DAB 57                      push edi
 10773                                 
 10774 00003DAC F30F6F02                movdqu xmm0, [edx]
 10775 00003DB0 F30F7E0B                movq xmm1, [ebx]
 10776 00003DB4 660F6AC1                punpckhdq xmm0, xmm1
 10777 00003DB8 F30F7F02                movdqu [edx], xmm0
 10778                                 
 10779 00003DBC 5F                      pop edi
 10780 00003DBD 5B                      pop ebx
 10781 00003DBE C20400                  ret 4
 10782                                 [global iemAImpl_punpckhdq_u128_EndProc:function hidden]
 10783                                 iemAImpl_punpckhdq_u128_EndProc:
 10784                                 [size iemAImpl_punpckhdq_u128 iemAImpl_punpckhdq_u128_EndProc - iemAImpl_punpckhdq_u128]
 10785                                 [size iemAImpl_punpckhdq_u128_EndProc 0]
 10786 00003DC1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10787                                 %line 2853+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10788                                 
 10789                                 %line 2853+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10790                                 [global iemAImpl_punpckhqdq_u128]
 10791                                 iemAImpl_punpckhqdq_u128:
 10792 00003DC5 53                      push ebx
 10793 00003DC6 8B5C2408                mov ebx, [esp + 4 + 4]
 10794 00003DCA 57                      push edi
 10795                                 
 10796 00003DCB F30F6F02                movdqu xmm0, [edx]
 10797 00003DCF F30F7E0B                movq xmm1, [ebx]
 10798 00003DD3 660F6DC1                punpckhqdq xmm0, xmm1
 10799 00003DD7 F30F7F02                movdqu [edx], xmm0
 10800                                 
 10801 00003DDB 5F                      pop edi
 10802 00003DDC 5B                      pop ebx
 10803 00003DDD C20400                  ret 4
 10804                                 [global iemAImpl_punpckhqdq_u128_EndProc:function hidden]
 10805                                 iemAImpl_punpckhqdq_u128_EndProc:
 10806                                 [size iemAImpl_punpckhqdq_u128 iemAImpl_punpckhqdq_u128_EndProc - iemAImpl_punpckhqdq_u128]
 10807                                 [size iemAImpl_punpckhqdq_u128_EndProc 0]
 10808 00003DE0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10809                                 %line 2854+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10810                                 
 10811                                 
 10812                                 
 10813                                 
 10814                                 
 10815                                 
 10816                                 [global iemAImpl_pshufw]
 10817                                 %line 2860+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10818                                 iemAImpl_pshufw:
 10819                                 %line 2861+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10820 00003DE4 53                      push ebx
 10821                                 %line 2861+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10822 00003DE5 57                      push edi
 10823 00003DE6 56                      push esi
 10824 00003DE7 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
 10825 00003DEB 8B742414                mov esi, [esp + 12 + 4 + 4]
 10826                                 %line 2863+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10827                                 
 10828 00003DEF 0F6F02                  movq mm0, [edx]
 10829 00003DF2 0F6F0B                  movq mm1, [ebx]
 10830 00003DF5 8D04B6                  lea eax, [esi + esi*4]
 10831 00003DF8 8D3D[00000000]          lea edi, [.imm0 ]
 10832 00003DFE 8D3C07                  lea edi, [edi + eax]
 10833 00003E01 FFD7                    call edi
 10834 00003E03 0F7F02                  movq [edx], mm0
 10835                                 
 10836                                 %line 2873+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10837 00003E06 5E                      pop esi
 10838                                 %line 2873+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10839 00003E07 5F                      pop edi
 10840 00003E08 5B                      pop ebx
 10841 00003E09 C20800                  ret 8
 10842                                 %line 2880+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10843                                 .imm0:
 10844                                 %line 2880+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10845 00003E0C 0F70C100                pshufw mm0, mm1, 0
 10846 00003E10 C3                      ret
 10847                                 .imm1:
 10848 00003E11 0F70C101                pshufw mm0, mm1, 1
 10849 00003E15 C3                      ret
 10850                                 .imm2:
 10851 00003E16 0F70C102                pshufw mm0, mm1, 2
 10852 00003E1A C3                      ret
 10853                                 .imm3:
 10854 00003E1B 0F70C103                pshufw mm0, mm1, 3
 10855 00003E1F C3                      ret
 10856                                 .imm4:
 10857 00003E20 0F70C104                pshufw mm0, mm1, 4
 10858 00003E24 C3                      ret
 10859                                 .imm5:
 10860 00003E25 0F70C105                pshufw mm0, mm1, 5
 10861 00003E29 C3                      ret
 10862                                 .imm6:
 10863 00003E2A 0F70C106                pshufw mm0, mm1, 6
 10864 00003E2E C3                      ret
 10865                                 .imm7:
 10866 00003E2F 0F70C107                pshufw mm0, mm1, 7
 10867 00003E33 C3                      ret
 10868                                 .imm8:
 10869 00003E34 0F70C108                pshufw mm0, mm1, 8
 10870 00003E38 C3                      ret
 10871                                 .imm9:
 10872 00003E39 0F70C109                pshufw mm0, mm1, 9
 10873 00003E3D C3                      ret
 10874                                 .imm10:
 10875 00003E3E 0F70C10A                pshufw mm0, mm1, 10
 10876 00003E42 C3                      ret
 10877                                 .imm11:
 10878 00003E43 0F70C10B                pshufw mm0, mm1, 11
 10879 00003E47 C3                      ret
 10880                                 .imm12:
 10881 00003E48 0F70C10C                pshufw mm0, mm1, 12
 10882 00003E4C C3                      ret
 10883                                 .imm13:
 10884 00003E4D 0F70C10D                pshufw mm0, mm1, 13
 10885 00003E51 C3                      ret
 10886                                 .imm14:
 10887 00003E52 0F70C10E                pshufw mm0, mm1, 14
 10888 00003E56 C3                      ret
 10889                                 .imm15:
 10890 00003E57 0F70C10F                pshufw mm0, mm1, 15
 10891 00003E5B C3                      ret
 10892                                 .imm16:
 10893 00003E5C 0F70C110                pshufw mm0, mm1, 16
 10894 00003E60 C3                      ret
 10895                                 .imm17:
 10896 00003E61 0F70C111                pshufw mm0, mm1, 17
 10897 00003E65 C3                      ret
 10898                                 .imm18:
 10899 00003E66 0F70C112                pshufw mm0, mm1, 18
 10900 00003E6A C3                      ret
 10901                                 .imm19:
 10902 00003E6B 0F70C113                pshufw mm0, mm1, 19
 10903 00003E6F C3                      ret
 10904                                 .imm20:
 10905 00003E70 0F70C114                pshufw mm0, mm1, 20
 10906 00003E74 C3                      ret
 10907                                 .imm21:
 10908 00003E75 0F70C115                pshufw mm0, mm1, 21
 10909 00003E79 C3                      ret
 10910                                 .imm22:
 10911 00003E7A 0F70C116                pshufw mm0, mm1, 22
 10912 00003E7E C3                      ret
 10913                                 .imm23:
 10914 00003E7F 0F70C117                pshufw mm0, mm1, 23
 10915 00003E83 C3                      ret
 10916                                 .imm24:
 10917 00003E84 0F70C118                pshufw mm0, mm1, 24
 10918 00003E88 C3                      ret
 10919                                 .imm25:
 10920 00003E89 0F70C119                pshufw mm0, mm1, 25
 10921 00003E8D C3                      ret
 10922                                 .imm26:
 10923 00003E8E 0F70C11A                pshufw mm0, mm1, 26
 10924 00003E92 C3                      ret
 10925                                 .imm27:
 10926 00003E93 0F70C11B                pshufw mm0, mm1, 27
 10927 00003E97 C3                      ret
 10928                                 .imm28:
 10929 00003E98 0F70C11C                pshufw mm0, mm1, 28
 10930 00003E9C C3                      ret
 10931                                 .imm29:
 10932 00003E9D 0F70C11D                pshufw mm0, mm1, 29
 10933 00003EA1 C3                      ret
 10934                                 .imm30:
 10935 00003EA2 0F70C11E                pshufw mm0, mm1, 30
 10936 00003EA6 C3                      ret
 10937                                 .imm31:
 10938 00003EA7 0F70C11F                pshufw mm0, mm1, 31
 10939 00003EAB C3                      ret
 10940                                 .imm32:
 10941 00003EAC 0F70C120                pshufw mm0, mm1, 32
 10942 00003EB0 C3                      ret
 10943                                 .imm33:
 10944 00003EB1 0F70C121                pshufw mm0, mm1, 33
 10945 00003EB5 C3                      ret
 10946                                 .imm34:
 10947 00003EB6 0F70C122                pshufw mm0, mm1, 34
 10948 00003EBA C3                      ret
 10949                                 .imm35:
 10950 00003EBB 0F70C123                pshufw mm0, mm1, 35
 10951 00003EBF C3                      ret
 10952                                 .imm36:
 10953 00003EC0 0F70C124                pshufw mm0, mm1, 36
 10954 00003EC4 C3                      ret
 10955                                 .imm37:
 10956 00003EC5 0F70C125                pshufw mm0, mm1, 37
 10957 00003EC9 C3                      ret
 10958                                 .imm38:
 10959 00003ECA 0F70C126                pshufw mm0, mm1, 38
 10960 00003ECE C3                      ret
 10961                                 .imm39:
 10962 00003ECF 0F70C127                pshufw mm0, mm1, 39
 10963 00003ED3 C3                      ret
 10964                                 .imm40:
 10965 00003ED4 0F70C128                pshufw mm0, mm1, 40
 10966 00003ED8 C3                      ret
 10967                                 .imm41:
 10968 00003ED9 0F70C129                pshufw mm0, mm1, 41
 10969 00003EDD C3                      ret
 10970                                 .imm42:
 10971 00003EDE 0F70C12A                pshufw mm0, mm1, 42
 10972 00003EE2 C3                      ret
 10973                                 .imm43:
 10974 00003EE3 0F70C12B                pshufw mm0, mm1, 43
 10975 00003EE7 C3                      ret
 10976                                 .imm44:
 10977 00003EE8 0F70C12C                pshufw mm0, mm1, 44
 10978 00003EEC C3                      ret
 10979                                 .imm45:
 10980 00003EED 0F70C12D                pshufw mm0, mm1, 45
 10981 00003EF1 C3                      ret
 10982                                 .imm46:
 10983 00003EF2 0F70C12E                pshufw mm0, mm1, 46
 10984 00003EF6 C3                      ret
 10985                                 .imm47:
 10986 00003EF7 0F70C12F                pshufw mm0, mm1, 47
 10987 00003EFB C3                      ret
 10988                                 .imm48:
 10989 00003EFC 0F70C130                pshufw mm0, mm1, 48
 10990 00003F00 C3                      ret
 10991                                 .imm49:
 10992 00003F01 0F70C131                pshufw mm0, mm1, 49
 10993 00003F05 C3                      ret
 10994                                 .imm50:
 10995 00003F06 0F70C132                pshufw mm0, mm1, 50
 10996 00003F0A C3                      ret
 10997                                 .imm51:
 10998 00003F0B 0F70C133                pshufw mm0, mm1, 51
 10999 00003F0F C3                      ret
 11000                                 .imm52:
 11001 00003F10 0F70C134                pshufw mm0, mm1, 52
 11002 00003F14 C3                      ret
 11003                                 .imm53:
 11004 00003F15 0F70C135                pshufw mm0, mm1, 53
 11005 00003F19 C3                      ret
 11006                                 .imm54:
 11007 00003F1A 0F70C136                pshufw mm0, mm1, 54
 11008 00003F1E C3                      ret
 11009                                 .imm55:
 11010 00003F1F 0F70C137                pshufw mm0, mm1, 55
 11011 00003F23 C3                      ret
 11012                                 .imm56:
 11013 00003F24 0F70C138                pshufw mm0, mm1, 56
 11014 00003F28 C3                      ret
 11015                                 .imm57:
 11016 00003F29 0F70C139                pshufw mm0, mm1, 57
 11017 00003F2D C3                      ret
 11018                                 .imm58:
 11019 00003F2E 0F70C13A                pshufw mm0, mm1, 58
 11020 00003F32 C3                      ret
 11021                                 .imm59:
 11022 00003F33 0F70C13B                pshufw mm0, mm1, 59
 11023 00003F37 C3                      ret
 11024                                 .imm60:
 11025 00003F38 0F70C13C                pshufw mm0, mm1, 60
 11026 00003F3C C3                      ret
 11027                                 .imm61:
 11028 00003F3D 0F70C13D                pshufw mm0, mm1, 61
 11029 00003F41 C3                      ret
 11030                                 .imm62:
 11031 00003F42 0F70C13E                pshufw mm0, mm1, 62
 11032 00003F46 C3                      ret
 11033                                 .imm63:
 11034 00003F47 0F70C13F                pshufw mm0, mm1, 63
 11035 00003F4B C3                      ret
 11036                                 .imm64:
 11037 00003F4C 0F70C140                pshufw mm0, mm1, 64
 11038 00003F50 C3                      ret
 11039                                 .imm65:
 11040 00003F51 0F70C141                pshufw mm0, mm1, 65
 11041 00003F55 C3                      ret
 11042                                 .imm66:
 11043 00003F56 0F70C142                pshufw mm0, mm1, 66
 11044 00003F5A C3                      ret
 11045                                 .imm67:
 11046 00003F5B 0F70C143                pshufw mm0, mm1, 67
 11047 00003F5F C3                      ret
 11048                                 .imm68:
 11049 00003F60 0F70C144                pshufw mm0, mm1, 68
 11050 00003F64 C3                      ret
 11051                                 .imm69:
 11052 00003F65 0F70C145                pshufw mm0, mm1, 69
 11053 00003F69 C3                      ret
 11054                                 .imm70:
 11055 00003F6A 0F70C146                pshufw mm0, mm1, 70
 11056 00003F6E C3                      ret
 11057                                 .imm71:
 11058 00003F6F 0F70C147                pshufw mm0, mm1, 71
 11059 00003F73 C3                      ret
 11060                                 .imm72:
 11061 00003F74 0F70C148                pshufw mm0, mm1, 72
 11062 00003F78 C3                      ret
 11063                                 .imm73:
 11064 00003F79 0F70C149                pshufw mm0, mm1, 73
 11065 00003F7D C3                      ret
 11066                                 .imm74:
 11067 00003F7E 0F70C14A                pshufw mm0, mm1, 74
 11068 00003F82 C3                      ret
 11069                                 .imm75:
 11070 00003F83 0F70C14B                pshufw mm0, mm1, 75
 11071 00003F87 C3                      ret
 11072                                 .imm76:
 11073 00003F88 0F70C14C                pshufw mm0, mm1, 76
 11074 00003F8C C3                      ret
 11075                                 .imm77:
 11076 00003F8D 0F70C14D                pshufw mm0, mm1, 77
 11077 00003F91 C3                      ret
 11078                                 .imm78:
 11079 00003F92 0F70C14E                pshufw mm0, mm1, 78
 11080 00003F96 C3                      ret
 11081                                 .imm79:
 11082 00003F97 0F70C14F                pshufw mm0, mm1, 79
 11083 00003F9B C3                      ret
 11084                                 .imm80:
 11085 00003F9C 0F70C150                pshufw mm0, mm1, 80
 11086 00003FA0 C3                      ret
 11087                                 .imm81:
 11088 00003FA1 0F70C151                pshufw mm0, mm1, 81
 11089 00003FA5 C3                      ret
 11090                                 .imm82:
 11091 00003FA6 0F70C152                pshufw mm0, mm1, 82
 11092 00003FAA C3                      ret
 11093                                 .imm83:
 11094 00003FAB 0F70C153                pshufw mm0, mm1, 83
 11095 00003FAF C3                      ret
 11096                                 .imm84:
 11097 00003FB0 0F70C154                pshufw mm0, mm1, 84
 11098 00003FB4 C3                      ret
 11099                                 .imm85:
 11100 00003FB5 0F70C155                pshufw mm0, mm1, 85
 11101 00003FB9 C3                      ret
 11102                                 .imm86:
 11103 00003FBA 0F70C156                pshufw mm0, mm1, 86
 11104 00003FBE C3                      ret
 11105                                 .imm87:
 11106 00003FBF 0F70C157                pshufw mm0, mm1, 87
 11107 00003FC3 C3                      ret
 11108                                 .imm88:
 11109 00003FC4 0F70C158                pshufw mm0, mm1, 88
 11110 00003FC8 C3                      ret
 11111                                 .imm89:
 11112 00003FC9 0F70C159                pshufw mm0, mm1, 89
 11113 00003FCD C3                      ret
 11114                                 .imm90:
 11115 00003FCE 0F70C15A                pshufw mm0, mm1, 90
 11116 00003FD2 C3                      ret
 11117                                 .imm91:
 11118 00003FD3 0F70C15B                pshufw mm0, mm1, 91
 11119 00003FD7 C3                      ret
 11120                                 .imm92:
 11121 00003FD8 0F70C15C                pshufw mm0, mm1, 92
 11122 00003FDC C3                      ret
 11123                                 .imm93:
 11124 00003FDD 0F70C15D                pshufw mm0, mm1, 93
 11125 00003FE1 C3                      ret
 11126                                 .imm94:
 11127 00003FE2 0F70C15E                pshufw mm0, mm1, 94
 11128 00003FE6 C3                      ret
 11129                                 .imm95:
 11130 00003FE7 0F70C15F                pshufw mm0, mm1, 95
 11131 00003FEB C3                      ret
 11132                                 .imm96:
 11133 00003FEC 0F70C160                pshufw mm0, mm1, 96
 11134 00003FF0 C3                      ret
 11135                                 .imm97:
 11136 00003FF1 0F70C161                pshufw mm0, mm1, 97
 11137 00003FF5 C3                      ret
 11138                                 .imm98:
 11139 00003FF6 0F70C162                pshufw mm0, mm1, 98
 11140 00003FFA C3                      ret
 11141                                 .imm99:
 11142 00003FFB 0F70C163                pshufw mm0, mm1, 99
 11143 00003FFF C3                      ret
 11144                                 .imm100:
 11145 00004000 0F70C164                pshufw mm0, mm1, 100
 11146 00004004 C3                      ret
 11147                                 .imm101:
 11148 00004005 0F70C165                pshufw mm0, mm1, 101
 11149 00004009 C3                      ret
 11150                                 .imm102:
 11151 0000400A 0F70C166                pshufw mm0, mm1, 102
 11152 0000400E C3                      ret
 11153                                 .imm103:
 11154 0000400F 0F70C167                pshufw mm0, mm1, 103
 11155 00004013 C3                      ret
 11156                                 .imm104:
 11157 00004014 0F70C168                pshufw mm0, mm1, 104
 11158 00004018 C3                      ret
 11159                                 .imm105:
 11160 00004019 0F70C169                pshufw mm0, mm1, 105
 11161 0000401D C3                      ret
 11162                                 .imm106:
 11163 0000401E 0F70C16A                pshufw mm0, mm1, 106
 11164 00004022 C3                      ret
 11165                                 .imm107:
 11166 00004023 0F70C16B                pshufw mm0, mm1, 107
 11167 00004027 C3                      ret
 11168                                 .imm108:
 11169 00004028 0F70C16C                pshufw mm0, mm1, 108
 11170 0000402C C3                      ret
 11171                                 .imm109:
 11172 0000402D 0F70C16D                pshufw mm0, mm1, 109
 11173 00004031 C3                      ret
 11174                                 .imm110:
 11175 00004032 0F70C16E                pshufw mm0, mm1, 110
 11176 00004036 C3                      ret
 11177                                 .imm111:
 11178 00004037 0F70C16F                pshufw mm0, mm1, 111
 11179 0000403B C3                      ret
 11180                                 .imm112:
 11181 0000403C 0F70C170                pshufw mm0, mm1, 112
 11182 00004040 C3                      ret
 11183                                 .imm113:
 11184 00004041 0F70C171                pshufw mm0, mm1, 113
 11185 00004045 C3                      ret
 11186                                 .imm114:
 11187 00004046 0F70C172                pshufw mm0, mm1, 114
 11188 0000404A C3                      ret
 11189                                 .imm115:
 11190 0000404B 0F70C173                pshufw mm0, mm1, 115
 11191 0000404F C3                      ret
 11192                                 .imm116:
 11193 00004050 0F70C174                pshufw mm0, mm1, 116
 11194 00004054 C3                      ret
 11195                                 .imm117:
 11196 00004055 0F70C175                pshufw mm0, mm1, 117
 11197 00004059 C3                      ret
 11198                                 .imm118:
 11199 0000405A 0F70C176                pshufw mm0, mm1, 118
 11200 0000405E C3                      ret
 11201                                 .imm119:
 11202 0000405F 0F70C177                pshufw mm0, mm1, 119
 11203 00004063 C3                      ret
 11204                                 .imm120:
 11205 00004064 0F70C178                pshufw mm0, mm1, 120
 11206 00004068 C3                      ret
 11207                                 .imm121:
 11208 00004069 0F70C179                pshufw mm0, mm1, 121
 11209 0000406D C3                      ret
 11210                                 .imm122:
 11211 0000406E 0F70C17A                pshufw mm0, mm1, 122
 11212 00004072 C3                      ret
 11213                                 .imm123:
 11214 00004073 0F70C17B                pshufw mm0, mm1, 123
 11215 00004077 C3                      ret
 11216                                 .imm124:
 11217 00004078 0F70C17C                pshufw mm0, mm1, 124
 11218 0000407C C3                      ret
 11219                                 .imm125:
 11220 0000407D 0F70C17D                pshufw mm0, mm1, 125
 11221 00004081 C3                      ret
 11222                                 .imm126:
 11223 00004082 0F70C17E                pshufw mm0, mm1, 126
 11224 00004086 C3                      ret
 11225                                 .imm127:
 11226 00004087 0F70C17F                pshufw mm0, mm1, 127
 11227 0000408B C3                      ret
 11228                                 .imm128:
 11229 0000408C 0F70C180                pshufw mm0, mm1, 128
 11230 00004090 C3                      ret
 11231                                 .imm129:
 11232 00004091 0F70C181                pshufw mm0, mm1, 129
 11233 00004095 C3                      ret
 11234                                 .imm130:
 11235 00004096 0F70C182                pshufw mm0, mm1, 130
 11236 0000409A C3                      ret
 11237                                 .imm131:
 11238 0000409B 0F70C183                pshufw mm0, mm1, 131
 11239 0000409F C3                      ret
 11240                                 .imm132:
 11241 000040A0 0F70C184                pshufw mm0, mm1, 132
 11242 000040A4 C3                      ret
 11243                                 .imm133:
 11244 000040A5 0F70C185                pshufw mm0, mm1, 133
 11245 000040A9 C3                      ret
 11246                                 .imm134:
 11247 000040AA 0F70C186                pshufw mm0, mm1, 134
 11248 000040AE C3                      ret
 11249                                 .imm135:
 11250 000040AF 0F70C187                pshufw mm0, mm1, 135
 11251 000040B3 C3                      ret
 11252                                 .imm136:
 11253 000040B4 0F70C188                pshufw mm0, mm1, 136
 11254 000040B8 C3                      ret
 11255                                 .imm137:
 11256 000040B9 0F70C189                pshufw mm0, mm1, 137
 11257 000040BD C3                      ret
 11258                                 .imm138:
 11259 000040BE 0F70C18A                pshufw mm0, mm1, 138
 11260 000040C2 C3                      ret
 11261                                 .imm139:
 11262 000040C3 0F70C18B                pshufw mm0, mm1, 139
 11263 000040C7 C3                      ret
 11264                                 .imm140:
 11265 000040C8 0F70C18C                pshufw mm0, mm1, 140
 11266 000040CC C3                      ret
 11267                                 .imm141:
 11268 000040CD 0F70C18D                pshufw mm0, mm1, 141
 11269 000040D1 C3                      ret
 11270                                 .imm142:
 11271 000040D2 0F70C18E                pshufw mm0, mm1, 142
 11272 000040D6 C3                      ret
 11273                                 .imm143:
 11274 000040D7 0F70C18F                pshufw mm0, mm1, 143
 11275 000040DB C3                      ret
 11276                                 .imm144:
 11277 000040DC 0F70C190                pshufw mm0, mm1, 144
 11278 000040E0 C3                      ret
 11279                                 .imm145:
 11280 000040E1 0F70C191                pshufw mm0, mm1, 145
 11281 000040E5 C3                      ret
 11282                                 .imm146:
 11283 000040E6 0F70C192                pshufw mm0, mm1, 146
 11284 000040EA C3                      ret
 11285                                 .imm147:
 11286 000040EB 0F70C193                pshufw mm0, mm1, 147
 11287 000040EF C3                      ret
 11288                                 .imm148:
 11289 000040F0 0F70C194                pshufw mm0, mm1, 148
 11290 000040F4 C3                      ret
 11291                                 .imm149:
 11292 000040F5 0F70C195                pshufw mm0, mm1, 149
 11293 000040F9 C3                      ret
 11294                                 .imm150:
 11295 000040FA 0F70C196                pshufw mm0, mm1, 150
 11296 000040FE C3                      ret
 11297                                 .imm151:
 11298 000040FF 0F70C197                pshufw mm0, mm1, 151
 11299 00004103 C3                      ret
 11300                                 .imm152:
 11301 00004104 0F70C198                pshufw mm0, mm1, 152
 11302 00004108 C3                      ret
 11303                                 .imm153:
 11304 00004109 0F70C199                pshufw mm0, mm1, 153
 11305 0000410D C3                      ret
 11306                                 .imm154:
 11307 0000410E 0F70C19A                pshufw mm0, mm1, 154
 11308 00004112 C3                      ret
 11309                                 .imm155:
 11310 00004113 0F70C19B                pshufw mm0, mm1, 155
 11311 00004117 C3                      ret
 11312                                 .imm156:
 11313 00004118 0F70C19C                pshufw mm0, mm1, 156
 11314 0000411C C3                      ret
 11315                                 .imm157:
 11316 0000411D 0F70C19D                pshufw mm0, mm1, 157
 11317 00004121 C3                      ret
 11318                                 .imm158:
 11319 00004122 0F70C19E                pshufw mm0, mm1, 158
 11320 00004126 C3                      ret
 11321                                 .imm159:
 11322 00004127 0F70C19F                pshufw mm0, mm1, 159
 11323 0000412B C3                      ret
 11324                                 .imm160:
 11325 0000412C 0F70C1A0                pshufw mm0, mm1, 160
 11326 00004130 C3                      ret
 11327                                 .imm161:
 11328 00004131 0F70C1A1                pshufw mm0, mm1, 161
 11329 00004135 C3                      ret
 11330                                 .imm162:
 11331 00004136 0F70C1A2                pshufw mm0, mm1, 162
 11332 0000413A C3                      ret
 11333                                 .imm163:
 11334 0000413B 0F70C1A3                pshufw mm0, mm1, 163
 11335 0000413F C3                      ret
 11336                                 .imm164:
 11337 00004140 0F70C1A4                pshufw mm0, mm1, 164
 11338 00004144 C3                      ret
 11339                                 .imm165:
 11340 00004145 0F70C1A5                pshufw mm0, mm1, 165
 11341 00004149 C3                      ret
 11342                                 .imm166:
 11343 0000414A 0F70C1A6                pshufw mm0, mm1, 166
 11344 0000414E C3                      ret
 11345                                 .imm167:
 11346 0000414F 0F70C1A7                pshufw mm0, mm1, 167
 11347 00004153 C3                      ret
 11348                                 .imm168:
 11349 00004154 0F70C1A8                pshufw mm0, mm1, 168
 11350 00004158 C3                      ret
 11351                                 .imm169:
 11352 00004159 0F70C1A9                pshufw mm0, mm1, 169
 11353 0000415D C3                      ret
 11354                                 .imm170:
 11355 0000415E 0F70C1AA                pshufw mm0, mm1, 170
 11356 00004162 C3                      ret
 11357                                 .imm171:
 11358 00004163 0F70C1AB                pshufw mm0, mm1, 171
 11359 00004167 C3                      ret
 11360                                 .imm172:
 11361 00004168 0F70C1AC                pshufw mm0, mm1, 172
 11362 0000416C C3                      ret
 11363                                 .imm173:
 11364 0000416D 0F70C1AD                pshufw mm0, mm1, 173
 11365 00004171 C3                      ret
 11366                                 .imm174:
 11367 00004172 0F70C1AE                pshufw mm0, mm1, 174
 11368 00004176 C3                      ret
 11369                                 .imm175:
 11370 00004177 0F70C1AF                pshufw mm0, mm1, 175
 11371 0000417B C3                      ret
 11372                                 .imm176:
 11373 0000417C 0F70C1B0                pshufw mm0, mm1, 176
 11374 00004180 C3                      ret
 11375                                 .imm177:
 11376 00004181 0F70C1B1                pshufw mm0, mm1, 177
 11377 00004185 C3                      ret
 11378                                 .imm178:
 11379 00004186 0F70C1B2                pshufw mm0, mm1, 178
 11380 0000418A C3                      ret
 11381                                 .imm179:
 11382 0000418B 0F70C1B3                pshufw mm0, mm1, 179
 11383 0000418F C3                      ret
 11384                                 .imm180:
 11385 00004190 0F70C1B4                pshufw mm0, mm1, 180
 11386 00004194 C3                      ret
 11387                                 .imm181:
 11388 00004195 0F70C1B5                pshufw mm0, mm1, 181
 11389 00004199 C3                      ret
 11390                                 .imm182:
 11391 0000419A 0F70C1B6                pshufw mm0, mm1, 182
 11392 0000419E C3                      ret
 11393                                 .imm183:
 11394 0000419F 0F70C1B7                pshufw mm0, mm1, 183
 11395 000041A3 C3                      ret
 11396                                 .imm184:
 11397 000041A4 0F70C1B8                pshufw mm0, mm1, 184
 11398 000041A8 C3                      ret
 11399                                 .imm185:
 11400 000041A9 0F70C1B9                pshufw mm0, mm1, 185
 11401 000041AD C3                      ret
 11402                                 .imm186:
 11403 000041AE 0F70C1BA                pshufw mm0, mm1, 186
 11404 000041B2 C3                      ret
 11405                                 .imm187:
 11406 000041B3 0F70C1BB                pshufw mm0, mm1, 187
 11407 000041B7 C3                      ret
 11408                                 .imm188:
 11409 000041B8 0F70C1BC                pshufw mm0, mm1, 188
 11410 000041BC C3                      ret
 11411                                 .imm189:
 11412 000041BD 0F70C1BD                pshufw mm0, mm1, 189
 11413 000041C1 C3                      ret
 11414                                 .imm190:
 11415 000041C2 0F70C1BE                pshufw mm0, mm1, 190
 11416 000041C6 C3                      ret
 11417                                 .imm191:
 11418 000041C7 0F70C1BF                pshufw mm0, mm1, 191
 11419 000041CB C3                      ret
 11420                                 .imm192:
 11421 000041CC 0F70C1C0                pshufw mm0, mm1, 192
 11422 000041D0 C3                      ret
 11423                                 .imm193:
 11424 000041D1 0F70C1C1                pshufw mm0, mm1, 193
 11425 000041D5 C3                      ret
 11426                                 .imm194:
 11427 000041D6 0F70C1C2                pshufw mm0, mm1, 194
 11428 000041DA C3                      ret
 11429                                 .imm195:
 11430 000041DB 0F70C1C3                pshufw mm0, mm1, 195
 11431 000041DF C3                      ret
 11432                                 .imm196:
 11433 000041E0 0F70C1C4                pshufw mm0, mm1, 196
 11434 000041E4 C3                      ret
 11435                                 .imm197:
 11436 000041E5 0F70C1C5                pshufw mm0, mm1, 197
 11437 000041E9 C3                      ret
 11438                                 .imm198:
 11439 000041EA 0F70C1C6                pshufw mm0, mm1, 198
 11440 000041EE C3                      ret
 11441                                 .imm199:
 11442 000041EF 0F70C1C7                pshufw mm0, mm1, 199
 11443 000041F3 C3                      ret
 11444                                 .imm200:
 11445 000041F4 0F70C1C8                pshufw mm0, mm1, 200
 11446 000041F8 C3                      ret
 11447                                 .imm201:
 11448 000041F9 0F70C1C9                pshufw mm0, mm1, 201
 11449 000041FD C3                      ret
 11450                                 .imm202:
 11451 000041FE 0F70C1CA                pshufw mm0, mm1, 202
 11452 00004202 C3                      ret
 11453                                 .imm203:
 11454 00004203 0F70C1CB                pshufw mm0, mm1, 203
 11455 00004207 C3                      ret
 11456                                 .imm204:
 11457 00004208 0F70C1CC                pshufw mm0, mm1, 204
 11458 0000420C C3                      ret
 11459                                 .imm205:
 11460 0000420D 0F70C1CD                pshufw mm0, mm1, 205
 11461 00004211 C3                      ret
 11462                                 .imm206:
 11463 00004212 0F70C1CE                pshufw mm0, mm1, 206
 11464 00004216 C3                      ret
 11465                                 .imm207:
 11466 00004217 0F70C1CF                pshufw mm0, mm1, 207
 11467 0000421B C3                      ret
 11468                                 .imm208:
 11469 0000421C 0F70C1D0                pshufw mm0, mm1, 208
 11470 00004220 C3                      ret
 11471                                 .imm209:
 11472 00004221 0F70C1D1                pshufw mm0, mm1, 209
 11473 00004225 C3                      ret
 11474                                 .imm210:
 11475 00004226 0F70C1D2                pshufw mm0, mm1, 210
 11476 0000422A C3                      ret
 11477                                 .imm211:
 11478 0000422B 0F70C1D3                pshufw mm0, mm1, 211
 11479 0000422F C3                      ret
 11480                                 .imm212:
 11481 00004230 0F70C1D4                pshufw mm0, mm1, 212
 11482 00004234 C3                      ret
 11483                                 .imm213:
 11484 00004235 0F70C1D5                pshufw mm0, mm1, 213
 11485 00004239 C3                      ret
 11486                                 .imm214:
 11487 0000423A 0F70C1D6                pshufw mm0, mm1, 214
 11488 0000423E C3                      ret
 11489                                 .imm215:
 11490 0000423F 0F70C1D7                pshufw mm0, mm1, 215
 11491 00004243 C3                      ret
 11492                                 .imm216:
 11493 00004244 0F70C1D8                pshufw mm0, mm1, 216
 11494 00004248 C3                      ret
 11495                                 .imm217:
 11496 00004249 0F70C1D9                pshufw mm0, mm1, 217
 11497 0000424D C3                      ret
 11498                                 .imm218:
 11499 0000424E 0F70C1DA                pshufw mm0, mm1, 218
 11500 00004252 C3                      ret
 11501                                 .imm219:
 11502 00004253 0F70C1DB                pshufw mm0, mm1, 219
 11503 00004257 C3                      ret
 11504                                 .imm220:
 11505 00004258 0F70C1DC                pshufw mm0, mm1, 220
 11506 0000425C C3                      ret
 11507                                 .imm221:
 11508 0000425D 0F70C1DD                pshufw mm0, mm1, 221
 11509 00004261 C3                      ret
 11510                                 .imm222:
 11511 00004262 0F70C1DE                pshufw mm0, mm1, 222
 11512 00004266 C3                      ret
 11513                                 .imm223:
 11514 00004267 0F70C1DF                pshufw mm0, mm1, 223
 11515 0000426B C3                      ret
 11516                                 .imm224:
 11517 0000426C 0F70C1E0                pshufw mm0, mm1, 224
 11518 00004270 C3                      ret
 11519                                 .imm225:
 11520 00004271 0F70C1E1                pshufw mm0, mm1, 225
 11521 00004275 C3                      ret
 11522                                 .imm226:
 11523 00004276 0F70C1E2                pshufw mm0, mm1, 226
 11524 0000427A C3                      ret
 11525                                 .imm227:
 11526 0000427B 0F70C1E3                pshufw mm0, mm1, 227
 11527 0000427F C3                      ret
 11528                                 .imm228:
 11529 00004280 0F70C1E4                pshufw mm0, mm1, 228
 11530 00004284 C3                      ret
 11531                                 .imm229:
 11532 00004285 0F70C1E5                pshufw mm0, mm1, 229
 11533 00004289 C3                      ret
 11534                                 .imm230:
 11535 0000428A 0F70C1E6                pshufw mm0, mm1, 230
 11536 0000428E C3                      ret
 11537                                 .imm231:
 11538 0000428F 0F70C1E7                pshufw mm0, mm1, 231
 11539 00004293 C3                      ret
 11540                                 .imm232:
 11541 00004294 0F70C1E8                pshufw mm0, mm1, 232
 11542 00004298 C3                      ret
 11543                                 .imm233:
 11544 00004299 0F70C1E9                pshufw mm0, mm1, 233
 11545 0000429D C3                      ret
 11546                                 .imm234:
 11547 0000429E 0F70C1EA                pshufw mm0, mm1, 234
 11548 000042A2 C3                      ret
 11549                                 .imm235:
 11550 000042A3 0F70C1EB                pshufw mm0, mm1, 235
 11551 000042A7 C3                      ret
 11552                                 .imm236:
 11553 000042A8 0F70C1EC                pshufw mm0, mm1, 236
 11554 000042AC C3                      ret
 11555                                 .imm237:
 11556 000042AD 0F70C1ED                pshufw mm0, mm1, 237
 11557 000042B1 C3                      ret
 11558                                 .imm238:
 11559 000042B2 0F70C1EE                pshufw mm0, mm1, 238
 11560 000042B6 C3                      ret
 11561                                 .imm239:
 11562 000042B7 0F70C1EF                pshufw mm0, mm1, 239
 11563 000042BB C3                      ret
 11564                                 .imm240:
 11565 000042BC 0F70C1F0                pshufw mm0, mm1, 240
 11566 000042C0 C3                      ret
 11567                                 .imm241:
 11568 000042C1 0F70C1F1                pshufw mm0, mm1, 241
 11569 000042C5 C3                      ret
 11570                                 .imm242:
 11571 000042C6 0F70C1F2                pshufw mm0, mm1, 242
 11572 000042CA C3                      ret
 11573                                 .imm243:
 11574 000042CB 0F70C1F3                pshufw mm0, mm1, 243
 11575 000042CF C3                      ret
 11576                                 .imm244:
 11577 000042D0 0F70C1F4                pshufw mm0, mm1, 244
 11578 000042D4 C3                      ret
 11579                                 .imm245:
 11580 000042D5 0F70C1F5                pshufw mm0, mm1, 245
 11581 000042D9 C3                      ret
 11582                                 .imm246:
 11583 000042DA 0F70C1F6                pshufw mm0, mm1, 246
 11584 000042DE C3                      ret
 11585                                 .imm247:
 11586 000042DF 0F70C1F7                pshufw mm0, mm1, 247
 11587 000042E3 C3                      ret
 11588                                 .imm248:
 11589 000042E4 0F70C1F8                pshufw mm0, mm1, 248
 11590 000042E8 C3                      ret
 11591                                 .imm249:
 11592 000042E9 0F70C1F9                pshufw mm0, mm1, 249
 11593 000042ED C3                      ret
 11594                                 .imm250:
 11595 000042EE 0F70C1FA                pshufw mm0, mm1, 250
 11596 000042F2 C3                      ret
 11597                                 .imm251:
 11598 000042F3 0F70C1FB                pshufw mm0, mm1, 251
 11599 000042F7 C3                      ret
 11600                                 .imm252:
 11601 000042F8 0F70C1FC                pshufw mm0, mm1, 252
 11602 000042FC C3                      ret
 11603                                 .imm253:
 11604 000042FD 0F70C1FD                pshufw mm0, mm1, 253
 11605 00004301 C3                      ret
 11606                                 .imm254:
 11607 00004302 0F70C1FE                pshufw mm0, mm1, 254
 11608 00004306 C3                      ret
 11609                                 .imm255:
 11610 00004307 0F70C1FF                pshufw mm0, mm1, 255
 11611 0000430B C3                      ret
 11612                                 %line 2881+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11613                                 .immEnd:
 11614 0000430C FFFF                   dw 0xfaff + (.immEnd - .imm0)
 11615 0000430E FFFF                   dw 0x104ff - (.immEnd - .imm0)
 11616                                 [global iemAImpl_pshufw_EndProc:function hidden]
 11617                                 %line 2884+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11618                                 iemAImpl_pshufw_EndProc:
 11619                                 [size iemAImpl_pshufw iemAImpl_pshufw_EndProc - iemAImpl_pshufw]
 11620                                 [size iemAImpl_pshufw_EndProc 0]
 11621 00004310 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 11622                                 %line 2885+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11623                                 
 11624                                 
 11625                                 %line 2914+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11626                                 
 11627                                 [global iemAImpl_pshufhw]
 11628                                 %line 2915+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11629                                 iemAImpl_pshufhw:
 11630 00004314 53                      push ebx
 11631 00004315 57                      push edi
 11632 00004316 56                      push esi
 11633 00004317 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
 11634 0000431B 8B742414                mov esi, [esp + 12 + 4 + 4]
 11635                                 
 11636 0000431F F30F6F02                movdqu xmm0, [edx]
 11637 00004323 F30F6F0B                movdqu xmm1, [ebx]
 11638 00004327 8D3D[00000000]          lea edi, [.imm0 ]
 11639 0000432D 8D0476                  lea eax, [esi + esi*2]
 11640 00004330 8D3C47                  lea edi, [edi + eax*2]
 11641 00004333 FFD7                    call edi
 11642 00004335 F30F7F02                movdqu [edx], xmm0
 11643                                 
 11644 00004339 5E                      pop esi
 11645 0000433A 5F                      pop edi
 11646 0000433B 5B                      pop ebx
 11647 0000433C C20800                  ret 8
 11648                                 .imm0:
 11649 0000433F F30F70C100              pshufhw xmm0, xmm1, 0
 11650 00004344 C3                      ret
 11651                                 .imm1:
 11652 00004345 F30F70C101              pshufhw xmm0, xmm1, 1
 11653 0000434A C3                      ret
 11654                                 .imm2:
 11655 0000434B F30F70C102              pshufhw xmm0, xmm1, 2
 11656 00004350 C3                      ret
 11657                                 .imm3:
 11658 00004351 F30F70C103              pshufhw xmm0, xmm1, 3
 11659 00004356 C3                      ret
 11660                                 .imm4:
 11661 00004357 F30F70C104              pshufhw xmm0, xmm1, 4
 11662 0000435C C3                      ret
 11663                                 .imm5:
 11664 0000435D F30F70C105              pshufhw xmm0, xmm1, 5
 11665 00004362 C3                      ret
 11666                                 .imm6:
 11667 00004363 F30F70C106              pshufhw xmm0, xmm1, 6
 11668 00004368 C3                      ret
 11669                                 .imm7:
 11670 00004369 F30F70C107              pshufhw xmm0, xmm1, 7
 11671 0000436E C3                      ret
 11672                                 .imm8:
 11673 0000436F F30F70C108              pshufhw xmm0, xmm1, 8
 11674 00004374 C3                      ret
 11675                                 .imm9:
 11676 00004375 F30F70C109              pshufhw xmm0, xmm1, 9
 11677 0000437A C3                      ret
 11678                                 .imm10:
 11679 0000437B F30F70C10A              pshufhw xmm0, xmm1, 10
 11680 00004380 C3                      ret
 11681                                 .imm11:
 11682 00004381 F30F70C10B              pshufhw xmm0, xmm1, 11
 11683 00004386 C3                      ret
 11684                                 .imm12:
 11685 00004387 F30F70C10C              pshufhw xmm0, xmm1, 12
 11686 0000438C C3                      ret
 11687                                 .imm13:
 11688 0000438D F30F70C10D              pshufhw xmm0, xmm1, 13
 11689 00004392 C3                      ret
 11690                                 .imm14:
 11691 00004393 F30F70C10E              pshufhw xmm0, xmm1, 14
 11692 00004398 C3                      ret
 11693                                 .imm15:
 11694 00004399 F30F70C10F              pshufhw xmm0, xmm1, 15
 11695 0000439E C3                      ret
 11696                                 .imm16:
 11697 0000439F F30F70C110              pshufhw xmm0, xmm1, 16
 11698 000043A4 C3                      ret
 11699                                 .imm17:
 11700 000043A5 F30F70C111              pshufhw xmm0, xmm1, 17
 11701 000043AA C3                      ret
 11702                                 .imm18:
 11703 000043AB F30F70C112              pshufhw xmm0, xmm1, 18
 11704 000043B0 C3                      ret
 11705                                 .imm19:
 11706 000043B1 F30F70C113              pshufhw xmm0, xmm1, 19
 11707 000043B6 C3                      ret
 11708                                 .imm20:
 11709 000043B7 F30F70C114              pshufhw xmm0, xmm1, 20
 11710 000043BC C3                      ret
 11711                                 .imm21:
 11712 000043BD F30F70C115              pshufhw xmm0, xmm1, 21
 11713 000043C2 C3                      ret
 11714                                 .imm22:
 11715 000043C3 F30F70C116              pshufhw xmm0, xmm1, 22
 11716 000043C8 C3                      ret
 11717                                 .imm23:
 11718 000043C9 F30F70C117              pshufhw xmm0, xmm1, 23
 11719 000043CE C3                      ret
 11720                                 .imm24:
 11721 000043CF F30F70C118              pshufhw xmm0, xmm1, 24
 11722 000043D4 C3                      ret
 11723                                 .imm25:
 11724 000043D5 F30F70C119              pshufhw xmm0, xmm1, 25
 11725 000043DA C3                      ret
 11726                                 .imm26:
 11727 000043DB F30F70C11A              pshufhw xmm0, xmm1, 26
 11728 000043E0 C3                      ret
 11729                                 .imm27:
 11730 000043E1 F30F70C11B              pshufhw xmm0, xmm1, 27
 11731 000043E6 C3                      ret
 11732                                 .imm28:
 11733 000043E7 F30F70C11C              pshufhw xmm0, xmm1, 28
 11734 000043EC C3                      ret
 11735                                 .imm29:
 11736 000043ED F30F70C11D              pshufhw xmm0, xmm1, 29
 11737 000043F2 C3                      ret
 11738                                 .imm30:
 11739 000043F3 F30F70C11E              pshufhw xmm0, xmm1, 30
 11740 000043F8 C3                      ret
 11741                                 .imm31:
 11742 000043F9 F30F70C11F              pshufhw xmm0, xmm1, 31
 11743 000043FE C3                      ret
 11744                                 .imm32:
 11745 000043FF F30F70C120              pshufhw xmm0, xmm1, 32
 11746 00004404 C3                      ret
 11747                                 .imm33:
 11748 00004405 F30F70C121              pshufhw xmm0, xmm1, 33
 11749 0000440A C3                      ret
 11750                                 .imm34:
 11751 0000440B F30F70C122              pshufhw xmm0, xmm1, 34
 11752 00004410 C3                      ret
 11753                                 .imm35:
 11754 00004411 F30F70C123              pshufhw xmm0, xmm1, 35
 11755 00004416 C3                      ret
 11756                                 .imm36:
 11757 00004417 F30F70C124              pshufhw xmm0, xmm1, 36
 11758 0000441C C3                      ret
 11759                                 .imm37:
 11760 0000441D F30F70C125              pshufhw xmm0, xmm1, 37
 11761 00004422 C3                      ret
 11762                                 .imm38:
 11763 00004423 F30F70C126              pshufhw xmm0, xmm1, 38
 11764 00004428 C3                      ret
 11765                                 .imm39:
 11766 00004429 F30F70C127              pshufhw xmm0, xmm1, 39
 11767 0000442E C3                      ret
 11768                                 .imm40:
 11769 0000442F F30F70C128              pshufhw xmm0, xmm1, 40
 11770 00004434 C3                      ret
 11771                                 .imm41:
 11772 00004435 F30F70C129              pshufhw xmm0, xmm1, 41
 11773 0000443A C3                      ret
 11774                                 .imm42:
 11775 0000443B F30F70C12A              pshufhw xmm0, xmm1, 42
 11776 00004440 C3                      ret
 11777                                 .imm43:
 11778 00004441 F30F70C12B              pshufhw xmm0, xmm1, 43
 11779 00004446 C3                      ret
 11780                                 .imm44:
 11781 00004447 F30F70C12C              pshufhw xmm0, xmm1, 44
 11782 0000444C C3                      ret
 11783                                 .imm45:
 11784 0000444D F30F70C12D              pshufhw xmm0, xmm1, 45
 11785 00004452 C3                      ret
 11786                                 .imm46:
 11787 00004453 F30F70C12E              pshufhw xmm0, xmm1, 46
 11788 00004458 C3                      ret
 11789                                 .imm47:
 11790 00004459 F30F70C12F              pshufhw xmm0, xmm1, 47
 11791 0000445E C3                      ret
 11792                                 .imm48:
 11793 0000445F F30F70C130              pshufhw xmm0, xmm1, 48
 11794 00004464 C3                      ret
 11795                                 .imm49:
 11796 00004465 F30F70C131              pshufhw xmm0, xmm1, 49
 11797 0000446A C3                      ret
 11798                                 .imm50:
 11799 0000446B F30F70C132              pshufhw xmm0, xmm1, 50
 11800 00004470 C3                      ret
 11801                                 .imm51:
 11802 00004471 F30F70C133              pshufhw xmm0, xmm1, 51
 11803 00004476 C3                      ret
 11804                                 .imm52:
 11805 00004477 F30F70C134              pshufhw xmm0, xmm1, 52
 11806 0000447C C3                      ret
 11807                                 .imm53:
 11808 0000447D F30F70C135              pshufhw xmm0, xmm1, 53
 11809 00004482 C3                      ret
 11810                                 .imm54:
 11811 00004483 F30F70C136              pshufhw xmm0, xmm1, 54
 11812 00004488 C3                      ret
 11813                                 .imm55:
 11814 00004489 F30F70C137              pshufhw xmm0, xmm1, 55
 11815 0000448E C3                      ret
 11816                                 .imm56:
 11817 0000448F F30F70C138              pshufhw xmm0, xmm1, 56
 11818 00004494 C3                      ret
 11819                                 .imm57:
 11820 00004495 F30F70C139              pshufhw xmm0, xmm1, 57
 11821 0000449A C3                      ret
 11822                                 .imm58:
 11823 0000449B F30F70C13A              pshufhw xmm0, xmm1, 58
 11824 000044A0 C3                      ret
 11825                                 .imm59:
 11826 000044A1 F30F70C13B              pshufhw xmm0, xmm1, 59
 11827 000044A6 C3                      ret
 11828                                 .imm60:
 11829 000044A7 F30F70C13C              pshufhw xmm0, xmm1, 60
 11830 000044AC C3                      ret
 11831                                 .imm61:
 11832 000044AD F30F70C13D              pshufhw xmm0, xmm1, 61
 11833 000044B2 C3                      ret
 11834                                 .imm62:
 11835 000044B3 F30F70C13E              pshufhw xmm0, xmm1, 62
 11836 000044B8 C3                      ret
 11837                                 .imm63:
 11838 000044B9 F30F70C13F              pshufhw xmm0, xmm1, 63
 11839 000044BE C3                      ret
 11840                                 .imm64:
 11841 000044BF F30F70C140              pshufhw xmm0, xmm1, 64
 11842 000044C4 C3                      ret
 11843                                 .imm65:
 11844 000044C5 F30F70C141              pshufhw xmm0, xmm1, 65
 11845 000044CA C3                      ret
 11846                                 .imm66:
 11847 000044CB F30F70C142              pshufhw xmm0, xmm1, 66
 11848 000044D0 C3                      ret
 11849                                 .imm67:
 11850 000044D1 F30F70C143              pshufhw xmm0, xmm1, 67
 11851 000044D6 C3                      ret
 11852                                 .imm68:
 11853 000044D7 F30F70C144              pshufhw xmm0, xmm1, 68
 11854 000044DC C3                      ret
 11855                                 .imm69:
 11856 000044DD F30F70C145              pshufhw xmm0, xmm1, 69
 11857 000044E2 C3                      ret
 11858                                 .imm70:
 11859 000044E3 F30F70C146              pshufhw xmm0, xmm1, 70
 11860 000044E8 C3                      ret
 11861                                 .imm71:
 11862 000044E9 F30F70C147              pshufhw xmm0, xmm1, 71
 11863 000044EE C3                      ret
 11864                                 .imm72:
 11865 000044EF F30F70C148              pshufhw xmm0, xmm1, 72
 11866 000044F4 C3                      ret
 11867                                 .imm73:
 11868 000044F5 F30F70C149              pshufhw xmm0, xmm1, 73
 11869 000044FA C3                      ret
 11870                                 .imm74:
 11871 000044FB F30F70C14A              pshufhw xmm0, xmm1, 74
 11872 00004500 C3                      ret
 11873                                 .imm75:
 11874 00004501 F30F70C14B              pshufhw xmm0, xmm1, 75
 11875 00004506 C3                      ret
 11876                                 .imm76:
 11877 00004507 F30F70C14C              pshufhw xmm0, xmm1, 76
 11878 0000450C C3                      ret
 11879                                 .imm77:
 11880 0000450D F30F70C14D              pshufhw xmm0, xmm1, 77
 11881 00004512 C3                      ret
 11882                                 .imm78:
 11883 00004513 F30F70C14E              pshufhw xmm0, xmm1, 78
 11884 00004518 C3                      ret
 11885                                 .imm79:
 11886 00004519 F30F70C14F              pshufhw xmm0, xmm1, 79
 11887 0000451E C3                      ret
 11888                                 .imm80:
 11889 0000451F F30F70C150              pshufhw xmm0, xmm1, 80
 11890 00004524 C3                      ret
 11891                                 .imm81:
 11892 00004525 F30F70C151              pshufhw xmm0, xmm1, 81
 11893 0000452A C3                      ret
 11894                                 .imm82:
 11895 0000452B F30F70C152              pshufhw xmm0, xmm1, 82
 11896 00004530 C3                      ret
 11897                                 .imm83:
 11898 00004531 F30F70C153              pshufhw xmm0, xmm1, 83
 11899 00004536 C3                      ret
 11900                                 .imm84:
 11901 00004537 F30F70C154              pshufhw xmm0, xmm1, 84
 11902 0000453C C3                      ret
 11903                                 .imm85:
 11904 0000453D F30F70C155              pshufhw xmm0, xmm1, 85
 11905 00004542 C3                      ret
 11906                                 .imm86:
 11907 00004543 F30F70C156              pshufhw xmm0, xmm1, 86
 11908 00004548 C3                      ret
 11909                                 .imm87:
 11910 00004549 F30F70C157              pshufhw xmm0, xmm1, 87
 11911 0000454E C3                      ret
 11912                                 .imm88:
 11913 0000454F F30F70C158              pshufhw xmm0, xmm1, 88
 11914 00004554 C3                      ret
 11915                                 .imm89:
 11916 00004555 F30F70C159              pshufhw xmm0, xmm1, 89
 11917 0000455A C3                      ret
 11918                                 .imm90:
 11919 0000455B F30F70C15A              pshufhw xmm0, xmm1, 90
 11920 00004560 C3                      ret
 11921                                 .imm91:
 11922 00004561 F30F70C15B              pshufhw xmm0, xmm1, 91
 11923 00004566 C3                      ret
 11924                                 .imm92:
 11925 00004567 F30F70C15C              pshufhw xmm0, xmm1, 92
 11926 0000456C C3                      ret
 11927                                 .imm93:
 11928 0000456D F30F70C15D              pshufhw xmm0, xmm1, 93
 11929 00004572 C3                      ret
 11930                                 .imm94:
 11931 00004573 F30F70C15E              pshufhw xmm0, xmm1, 94
 11932 00004578 C3                      ret
 11933                                 .imm95:
 11934 00004579 F30F70C15F              pshufhw xmm0, xmm1, 95
 11935 0000457E C3                      ret
 11936                                 .imm96:
 11937 0000457F F30F70C160              pshufhw xmm0, xmm1, 96
 11938 00004584 C3                      ret
 11939                                 .imm97:
 11940 00004585 F30F70C161              pshufhw xmm0, xmm1, 97
 11941 0000458A C3                      ret
 11942                                 .imm98:
 11943 0000458B F30F70C162              pshufhw xmm0, xmm1, 98
 11944 00004590 C3                      ret
 11945                                 .imm99:
 11946 00004591 F30F70C163              pshufhw xmm0, xmm1, 99
 11947 00004596 C3                      ret
 11948                                 .imm100:
 11949 00004597 F30F70C164              pshufhw xmm0, xmm1, 100
 11950 0000459C C3                      ret
 11951                                 .imm101:
 11952 0000459D F30F70C165              pshufhw xmm0, xmm1, 101
 11953 000045A2 C3                      ret
 11954                                 .imm102:
 11955 000045A3 F30F70C166              pshufhw xmm0, xmm1, 102
 11956 000045A8 C3                      ret
 11957                                 .imm103:
 11958 000045A9 F30F70C167              pshufhw xmm0, xmm1, 103
 11959 000045AE C3                      ret
 11960                                 .imm104:
 11961 000045AF F30F70C168              pshufhw xmm0, xmm1, 104
 11962 000045B4 C3                      ret
 11963                                 .imm105:
 11964 000045B5 F30F70C169              pshufhw xmm0, xmm1, 105
 11965 000045BA C3                      ret
 11966                                 .imm106:
 11967 000045BB F30F70C16A              pshufhw xmm0, xmm1, 106
 11968 000045C0 C3                      ret
 11969                                 .imm107:
 11970 000045C1 F30F70C16B              pshufhw xmm0, xmm1, 107
 11971 000045C6 C3                      ret
 11972                                 .imm108:
 11973 000045C7 F30F70C16C              pshufhw xmm0, xmm1, 108
 11974 000045CC C3                      ret
 11975                                 .imm109:
 11976 000045CD F30F70C16D              pshufhw xmm0, xmm1, 109
 11977 000045D2 C3                      ret
 11978                                 .imm110:
 11979 000045D3 F30F70C16E              pshufhw xmm0, xmm1, 110
 11980 000045D8 C3                      ret
 11981                                 .imm111:
 11982 000045D9 F30F70C16F              pshufhw xmm0, xmm1, 111
 11983 000045DE C3                      ret
 11984                                 .imm112:
 11985 000045DF F30F70C170              pshufhw xmm0, xmm1, 112
 11986 000045E4 C3                      ret
 11987                                 .imm113:
 11988 000045E5 F30F70C171              pshufhw xmm0, xmm1, 113
 11989 000045EA C3                      ret
 11990                                 .imm114:
 11991 000045EB F30F70C172              pshufhw xmm0, xmm1, 114
 11992 000045F0 C3                      ret
 11993                                 .imm115:
 11994 000045F1 F30F70C173              pshufhw xmm0, xmm1, 115
 11995 000045F6 C3                      ret
 11996                                 .imm116:
 11997 000045F7 F30F70C174              pshufhw xmm0, xmm1, 116
 11998 000045FC C3                      ret
 11999                                 .imm117:
 12000 000045FD F30F70C175              pshufhw xmm0, xmm1, 117
 12001 00004602 C3                      ret
 12002                                 .imm118:
 12003 00004603 F30F70C176              pshufhw xmm0, xmm1, 118
 12004 00004608 C3                      ret
 12005                                 .imm119:
 12006 00004609 F30F70C177              pshufhw xmm0, xmm1, 119
 12007 0000460E C3                      ret
 12008                                 .imm120:
 12009 0000460F F30F70C178              pshufhw xmm0, xmm1, 120
 12010 00004614 C3                      ret
 12011                                 .imm121:
 12012 00004615 F30F70C179              pshufhw xmm0, xmm1, 121
 12013 0000461A C3                      ret
 12014                                 .imm122:
 12015 0000461B F30F70C17A              pshufhw xmm0, xmm1, 122
 12016 00004620 C3                      ret
 12017                                 .imm123:
 12018 00004621 F30F70C17B              pshufhw xmm0, xmm1, 123
 12019 00004626 C3                      ret
 12020                                 .imm124:
 12021 00004627 F30F70C17C              pshufhw xmm0, xmm1, 124
 12022 0000462C C3                      ret
 12023                                 .imm125:
 12024 0000462D F30F70C17D              pshufhw xmm0, xmm1, 125
 12025 00004632 C3                      ret
 12026                                 .imm126:
 12027 00004633 F30F70C17E              pshufhw xmm0, xmm1, 126
 12028 00004638 C3                      ret
 12029                                 .imm127:
 12030 00004639 F30F70C17F              pshufhw xmm0, xmm1, 127
 12031 0000463E C3                      ret
 12032                                 .imm128:
 12033 0000463F F30F70C180              pshufhw xmm0, xmm1, 128
 12034 00004644 C3                      ret
 12035                                 .imm129:
 12036 00004645 F30F70C181              pshufhw xmm0, xmm1, 129
 12037 0000464A C3                      ret
 12038                                 .imm130:
 12039 0000464B F30F70C182              pshufhw xmm0, xmm1, 130
 12040 00004650 C3                      ret
 12041                                 .imm131:
 12042 00004651 F30F70C183              pshufhw xmm0, xmm1, 131
 12043 00004656 C3                      ret
 12044                                 .imm132:
 12045 00004657 F30F70C184              pshufhw xmm0, xmm1, 132
 12046 0000465C C3                      ret
 12047                                 .imm133:
 12048 0000465D F30F70C185              pshufhw xmm0, xmm1, 133
 12049 00004662 C3                      ret
 12050                                 .imm134:
 12051 00004663 F30F70C186              pshufhw xmm0, xmm1, 134
 12052 00004668 C3                      ret
 12053                                 .imm135:
 12054 00004669 F30F70C187              pshufhw xmm0, xmm1, 135
 12055 0000466E C3                      ret
 12056                                 .imm136:
 12057 0000466F F30F70C188              pshufhw xmm0, xmm1, 136
 12058 00004674 C3                      ret
 12059                                 .imm137:
 12060 00004675 F30F70C189              pshufhw xmm0, xmm1, 137
 12061 0000467A C3                      ret
 12062                                 .imm138:
 12063 0000467B F30F70C18A              pshufhw xmm0, xmm1, 138
 12064 00004680 C3                      ret
 12065                                 .imm139:
 12066 00004681 F30F70C18B              pshufhw xmm0, xmm1, 139
 12067 00004686 C3                      ret
 12068                                 .imm140:
 12069 00004687 F30F70C18C              pshufhw xmm0, xmm1, 140
 12070 0000468C C3                      ret
 12071                                 .imm141:
 12072 0000468D F30F70C18D              pshufhw xmm0, xmm1, 141
 12073 00004692 C3                      ret
 12074                                 .imm142:
 12075 00004693 F30F70C18E              pshufhw xmm0, xmm1, 142
 12076 00004698 C3                      ret
 12077                                 .imm143:
 12078 00004699 F30F70C18F              pshufhw xmm0, xmm1, 143
 12079 0000469E C3                      ret
 12080                                 .imm144:
 12081 0000469F F30F70C190              pshufhw xmm0, xmm1, 144
 12082 000046A4 C3                      ret
 12083                                 .imm145:
 12084 000046A5 F30F70C191              pshufhw xmm0, xmm1, 145
 12085 000046AA C3                      ret
 12086                                 .imm146:
 12087 000046AB F30F70C192              pshufhw xmm0, xmm1, 146
 12088 000046B0 C3                      ret
 12089                                 .imm147:
 12090 000046B1 F30F70C193              pshufhw xmm0, xmm1, 147
 12091 000046B6 C3                      ret
 12092                                 .imm148:
 12093 000046B7 F30F70C194              pshufhw xmm0, xmm1, 148
 12094 000046BC C3                      ret
 12095                                 .imm149:
 12096 000046BD F30F70C195              pshufhw xmm0, xmm1, 149
 12097 000046C2 C3                      ret
 12098                                 .imm150:
 12099 000046C3 F30F70C196              pshufhw xmm0, xmm1, 150
 12100 000046C8 C3                      ret
 12101                                 .imm151:
 12102 000046C9 F30F70C197              pshufhw xmm0, xmm1, 151
 12103 000046CE C3                      ret
 12104                                 .imm152:
 12105 000046CF F30F70C198              pshufhw xmm0, xmm1, 152
 12106 000046D4 C3                      ret
 12107                                 .imm153:
 12108 000046D5 F30F70C199              pshufhw xmm0, xmm1, 153
 12109 000046DA C3                      ret
 12110                                 .imm154:
 12111 000046DB F30F70C19A              pshufhw xmm0, xmm1, 154
 12112 000046E0 C3                      ret
 12113                                 .imm155:
 12114 000046E1 F30F70C19B              pshufhw xmm0, xmm1, 155
 12115 000046E6 C3                      ret
 12116                                 .imm156:
 12117 000046E7 F30F70C19C              pshufhw xmm0, xmm1, 156
 12118 000046EC C3                      ret
 12119                                 .imm157:
 12120 000046ED F30F70C19D              pshufhw xmm0, xmm1, 157
 12121 000046F2 C3                      ret
 12122                                 .imm158:
 12123 000046F3 F30F70C19E              pshufhw xmm0, xmm1, 158
 12124 000046F8 C3                      ret
 12125                                 .imm159:
 12126 000046F9 F30F70C19F              pshufhw xmm0, xmm1, 159
 12127 000046FE C3                      ret
 12128                                 .imm160:
 12129 000046FF F30F70C1A0              pshufhw xmm0, xmm1, 160
 12130 00004704 C3                      ret
 12131                                 .imm161:
 12132 00004705 F30F70C1A1              pshufhw xmm0, xmm1, 161
 12133 0000470A C3                      ret
 12134                                 .imm162:
 12135 0000470B F30F70C1A2              pshufhw xmm0, xmm1, 162
 12136 00004710 C3                      ret
 12137                                 .imm163:
 12138 00004711 F30F70C1A3              pshufhw xmm0, xmm1, 163
 12139 00004716 C3                      ret
 12140                                 .imm164:
 12141 00004717 F30F70C1A4              pshufhw xmm0, xmm1, 164
 12142 0000471C C3                      ret
 12143                                 .imm165:
 12144 0000471D F30F70C1A5              pshufhw xmm0, xmm1, 165
 12145 00004722 C3                      ret
 12146                                 .imm166:
 12147 00004723 F30F70C1A6              pshufhw xmm0, xmm1, 166
 12148 00004728 C3                      ret
 12149                                 .imm167:
 12150 00004729 F30F70C1A7              pshufhw xmm0, xmm1, 167
 12151 0000472E C3                      ret
 12152                                 .imm168:
 12153 0000472F F30F70C1A8              pshufhw xmm0, xmm1, 168
 12154 00004734 C3                      ret
 12155                                 .imm169:
 12156 00004735 F30F70C1A9              pshufhw xmm0, xmm1, 169
 12157 0000473A C3                      ret
 12158                                 .imm170:
 12159 0000473B F30F70C1AA              pshufhw xmm0, xmm1, 170
 12160 00004740 C3                      ret
 12161                                 .imm171:
 12162 00004741 F30F70C1AB              pshufhw xmm0, xmm1, 171
 12163 00004746 C3                      ret
 12164                                 .imm172:
 12165 00004747 F30F70C1AC              pshufhw xmm0, xmm1, 172
 12166 0000474C C3                      ret
 12167                                 .imm173:
 12168 0000474D F30F70C1AD              pshufhw xmm0, xmm1, 173
 12169 00004752 C3                      ret
 12170                                 .imm174:
 12171 00004753 F30F70C1AE              pshufhw xmm0, xmm1, 174
 12172 00004758 C3                      ret
 12173                                 .imm175:
 12174 00004759 F30F70C1AF              pshufhw xmm0, xmm1, 175
 12175 0000475E C3                      ret
 12176                                 .imm176:
 12177 0000475F F30F70C1B0              pshufhw xmm0, xmm1, 176
 12178 00004764 C3                      ret
 12179                                 .imm177:
 12180 00004765 F30F70C1B1              pshufhw xmm0, xmm1, 177
 12181 0000476A C3                      ret
 12182                                 .imm178:
 12183 0000476B F30F70C1B2              pshufhw xmm0, xmm1, 178
 12184 00004770 C3                      ret
 12185                                 .imm179:
 12186 00004771 F30F70C1B3              pshufhw xmm0, xmm1, 179
 12187 00004776 C3                      ret
 12188                                 .imm180:
 12189 00004777 F30F70C1B4              pshufhw xmm0, xmm1, 180
 12190 0000477C C3                      ret
 12191                                 .imm181:
 12192 0000477D F30F70C1B5              pshufhw xmm0, xmm1, 181
 12193 00004782 C3                      ret
 12194                                 .imm182:
 12195 00004783 F30F70C1B6              pshufhw xmm0, xmm1, 182
 12196 00004788 C3                      ret
 12197                                 .imm183:
 12198 00004789 F30F70C1B7              pshufhw xmm0, xmm1, 183
 12199 0000478E C3                      ret
 12200                                 .imm184:
 12201 0000478F F30F70C1B8              pshufhw xmm0, xmm1, 184
 12202 00004794 C3                      ret
 12203                                 .imm185:
 12204 00004795 F30F70C1B9              pshufhw xmm0, xmm1, 185
 12205 0000479A C3                      ret
 12206                                 .imm186:
 12207 0000479B F30F70C1BA              pshufhw xmm0, xmm1, 186
 12208 000047A0 C3                      ret
 12209                                 .imm187:
 12210 000047A1 F30F70C1BB              pshufhw xmm0, xmm1, 187
 12211 000047A6 C3                      ret
 12212                                 .imm188:
 12213 000047A7 F30F70C1BC              pshufhw xmm0, xmm1, 188
 12214 000047AC C3                      ret
 12215                                 .imm189:
 12216 000047AD F30F70C1BD              pshufhw xmm0, xmm1, 189
 12217 000047B2 C3                      ret
 12218                                 .imm190:
 12219 000047B3 F30F70C1BE              pshufhw xmm0, xmm1, 190
 12220 000047B8 C3                      ret
 12221                                 .imm191:
 12222 000047B9 F30F70C1BF              pshufhw xmm0, xmm1, 191
 12223 000047BE C3                      ret
 12224                                 .imm192:
 12225 000047BF F30F70C1C0              pshufhw xmm0, xmm1, 192
 12226 000047C4 C3                      ret
 12227                                 .imm193:
 12228 000047C5 F30F70C1C1              pshufhw xmm0, xmm1, 193
 12229 000047CA C3                      ret
 12230                                 .imm194:
 12231 000047CB F30F70C1C2              pshufhw xmm0, xmm1, 194
 12232 000047D0 C3                      ret
 12233                                 .imm195:
 12234 000047D1 F30F70C1C3              pshufhw xmm0, xmm1, 195
 12235 000047D6 C3                      ret
 12236                                 .imm196:
 12237 000047D7 F30F70C1C4              pshufhw xmm0, xmm1, 196
 12238 000047DC C3                      ret
 12239                                 .imm197:
 12240 000047DD F30F70C1C5              pshufhw xmm0, xmm1, 197
 12241 000047E2 C3                      ret
 12242                                 .imm198:
 12243 000047E3 F30F70C1C6              pshufhw xmm0, xmm1, 198
 12244 000047E8 C3                      ret
 12245                                 .imm199:
 12246 000047E9 F30F70C1C7              pshufhw xmm0, xmm1, 199
 12247 000047EE C3                      ret
 12248                                 .imm200:
 12249 000047EF F30F70C1C8              pshufhw xmm0, xmm1, 200
 12250 000047F4 C3                      ret
 12251                                 .imm201:
 12252 000047F5 F30F70C1C9              pshufhw xmm0, xmm1, 201
 12253 000047FA C3                      ret
 12254                                 .imm202:
 12255 000047FB F30F70C1CA              pshufhw xmm0, xmm1, 202
 12256 00004800 C3                      ret
 12257                                 .imm203:
 12258 00004801 F30F70C1CB              pshufhw xmm0, xmm1, 203
 12259 00004806 C3                      ret
 12260                                 .imm204:
 12261 00004807 F30F70C1CC              pshufhw xmm0, xmm1, 204
 12262 0000480C C3                      ret
 12263                                 .imm205:
 12264 0000480D F30F70C1CD              pshufhw xmm0, xmm1, 205
 12265 00004812 C3                      ret
 12266                                 .imm206:
 12267 00004813 F30F70C1CE              pshufhw xmm0, xmm1, 206
 12268 00004818 C3                      ret
 12269                                 .imm207:
 12270 00004819 F30F70C1CF              pshufhw xmm0, xmm1, 207
 12271 0000481E C3                      ret
 12272                                 .imm208:
 12273 0000481F F30F70C1D0              pshufhw xmm0, xmm1, 208
 12274 00004824 C3                      ret
 12275                                 .imm209:
 12276 00004825 F30F70C1D1              pshufhw xmm0, xmm1, 209
 12277 0000482A C3                      ret
 12278                                 .imm210:
 12279 0000482B F30F70C1D2              pshufhw xmm0, xmm1, 210
 12280 00004830 C3                      ret
 12281                                 .imm211:
 12282 00004831 F30F70C1D3              pshufhw xmm0, xmm1, 211
 12283 00004836 C3                      ret
 12284                                 .imm212:
 12285 00004837 F30F70C1D4              pshufhw xmm0, xmm1, 212
 12286 0000483C C3                      ret
 12287                                 .imm213:
 12288 0000483D F30F70C1D5              pshufhw xmm0, xmm1, 213
 12289 00004842 C3                      ret
 12290                                 .imm214:
 12291 00004843 F30F70C1D6              pshufhw xmm0, xmm1, 214
 12292 00004848 C3                      ret
 12293                                 .imm215:
 12294 00004849 F30F70C1D7              pshufhw xmm0, xmm1, 215
 12295 0000484E C3                      ret
 12296                                 .imm216:
 12297 0000484F F30F70C1D8              pshufhw xmm0, xmm1, 216
 12298 00004854 C3                      ret
 12299                                 .imm217:
 12300 00004855 F30F70C1D9              pshufhw xmm0, xmm1, 217
 12301 0000485A C3                      ret
 12302                                 .imm218:
 12303 0000485B F30F70C1DA              pshufhw xmm0, xmm1, 218
 12304 00004860 C3                      ret
 12305                                 .imm219:
 12306 00004861 F30F70C1DB              pshufhw xmm0, xmm1, 219
 12307 00004866 C3                      ret
 12308                                 .imm220:
 12309 00004867 F30F70C1DC              pshufhw xmm0, xmm1, 220
 12310 0000486C C3                      ret
 12311                                 .imm221:
 12312 0000486D F30F70C1DD              pshufhw xmm0, xmm1, 221
 12313 00004872 C3                      ret
 12314                                 .imm222:
 12315 00004873 F30F70C1DE              pshufhw xmm0, xmm1, 222
 12316 00004878 C3                      ret
 12317                                 .imm223:
 12318 00004879 F30F70C1DF              pshufhw xmm0, xmm1, 223
 12319 0000487E C3                      ret
 12320                                 .imm224:
 12321 0000487F F30F70C1E0              pshufhw xmm0, xmm1, 224
 12322 00004884 C3                      ret
 12323                                 .imm225:
 12324 00004885 F30F70C1E1              pshufhw xmm0, xmm1, 225
 12325 0000488A C3                      ret
 12326                                 .imm226:
 12327 0000488B F30F70C1E2              pshufhw xmm0, xmm1, 226
 12328 00004890 C3                      ret
 12329                                 .imm227:
 12330 00004891 F30F70C1E3              pshufhw xmm0, xmm1, 227
 12331 00004896 C3                      ret
 12332                                 .imm228:
 12333 00004897 F30F70C1E4              pshufhw xmm0, xmm1, 228
 12334 0000489C C3                      ret
 12335                                 .imm229:
 12336 0000489D F30F70C1E5              pshufhw xmm0, xmm1, 229
 12337 000048A2 C3                      ret
 12338                                 .imm230:
 12339 000048A3 F30F70C1E6              pshufhw xmm0, xmm1, 230
 12340 000048A8 C3                      ret
 12341                                 .imm231:
 12342 000048A9 F30F70C1E7              pshufhw xmm0, xmm1, 231
 12343 000048AE C3                      ret
 12344                                 .imm232:
 12345 000048AF F30F70C1E8              pshufhw xmm0, xmm1, 232
 12346 000048B4 C3                      ret
 12347                                 .imm233:
 12348 000048B5 F30F70C1E9              pshufhw xmm0, xmm1, 233
 12349 000048BA C3                      ret
 12350                                 .imm234:
 12351 000048BB F30F70C1EA              pshufhw xmm0, xmm1, 234
 12352 000048C0 C3                      ret
 12353                                 .imm235:
 12354 000048C1 F30F70C1EB              pshufhw xmm0, xmm1, 235
 12355 000048C6 C3                      ret
 12356                                 .imm236:
 12357 000048C7 F30F70C1EC              pshufhw xmm0, xmm1, 236
 12358 000048CC C3                      ret
 12359                                 .imm237:
 12360 000048CD F30F70C1ED              pshufhw xmm0, xmm1, 237
 12361 000048D2 C3                      ret
 12362                                 .imm238:
 12363 000048D3 F30F70C1EE              pshufhw xmm0, xmm1, 238
 12364 000048D8 C3                      ret
 12365                                 .imm239:
 12366 000048D9 F30F70C1EF              pshufhw xmm0, xmm1, 239
 12367 000048DE C3                      ret
 12368                                 .imm240:
 12369 000048DF F30F70C1F0              pshufhw xmm0, xmm1, 240
 12370 000048E4 C3                      ret
 12371                                 .imm241:
 12372 000048E5 F30F70C1F1              pshufhw xmm0, xmm1, 241
 12373 000048EA C3                      ret
 12374                                 .imm242:
 12375 000048EB F30F70C1F2              pshufhw xmm0, xmm1, 242
 12376 000048F0 C3                      ret
 12377                                 .imm243:
 12378 000048F1 F30F70C1F3              pshufhw xmm0, xmm1, 243
 12379 000048F6 C3                      ret
 12380                                 .imm244:
 12381 000048F7 F30F70C1F4              pshufhw xmm0, xmm1, 244
 12382 000048FC C3                      ret
 12383                                 .imm245:
 12384 000048FD F30F70C1F5              pshufhw xmm0, xmm1, 245
 12385 00004902 C3                      ret
 12386                                 .imm246:
 12387 00004903 F30F70C1F6              pshufhw xmm0, xmm1, 246
 12388 00004908 C3                      ret
 12389                                 .imm247:
 12390 00004909 F30F70C1F7              pshufhw xmm0, xmm1, 247
 12391 0000490E C3                      ret
 12392                                 .imm248:
 12393 0000490F F30F70C1F8              pshufhw xmm0, xmm1, 248
 12394 00004914 C3                      ret
 12395                                 .imm249:
 12396 00004915 F30F70C1F9              pshufhw xmm0, xmm1, 249
 12397 0000491A C3                      ret
 12398                                 .imm250:
 12399 0000491B F30F70C1FA              pshufhw xmm0, xmm1, 250
 12400 00004920 C3                      ret
 12401                                 .imm251:
 12402 00004921 F30F70C1FB              pshufhw xmm0, xmm1, 251
 12403 00004926 C3                      ret
 12404                                 .imm252:
 12405 00004927 F30F70C1FC              pshufhw xmm0, xmm1, 252
 12406 0000492C C3                      ret
 12407                                 .imm253:
 12408 0000492D F30F70C1FD              pshufhw xmm0, xmm1, 253
 12409 00004932 C3                      ret
 12410                                 .imm254:
 12411 00004933 F30F70C1FE              pshufhw xmm0, xmm1, 254
 12412 00004938 C3                      ret
 12413                                 .imm255:
 12414 00004939 F30F70C1FF              pshufhw xmm0, xmm1, 255
 12415 0000493E C3                      ret
 12416                                 .immEnd:
 12417 0000493F FFFF                   dw 0xf9ff + (.immEnd - .imm0)
 12418 00004941 FFFF                   dw 0x105ff - (.immEnd - .imm0)
 12419                                 [global iemAImpl_pshufhw_EndProc:function hidden]
 12420                                 iemAImpl_pshufhw_EndProc:
 12421                                 [size iemAImpl_pshufhw iemAImpl_pshufhw_EndProc - iemAImpl_pshufhw]
 12422                                 [size iemAImpl_pshufhw_EndProc 0]
 12423 00004943 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 12424                                 %line 2916+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 12425                                 [global iemAImpl_pshuflw]
 12426                                 %line 2916+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 12427                                 iemAImpl_pshuflw:
 12428 00004947 53                      push ebx
 12429 00004948 57                      push edi
 12430 00004949 56                      push esi
 12431 0000494A 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
 12432 0000494E 8B742414                mov esi, [esp + 12 + 4 + 4]
 12433                                 
 12434 00004952 F30F6F02                movdqu xmm0, [edx]
 12435 00004956 F30F6F0B                movdqu xmm1, [ebx]
 12436 0000495A 8D3D[00000000]          lea edi, [.imm0 ]
 12437 00004960 8D0476                  lea eax, [esi + esi*2]
 12438 00004963 8D3C47                  lea edi, [edi + eax*2]
 12439 00004966 FFD7                    call edi
 12440 00004968 F30F7F02                movdqu [edx], xmm0
 12441                                 
 12442 0000496C 5E                      pop esi
 12443 0000496D 5F                      pop edi
 12444 0000496E 5B                      pop ebx
 12445 0000496F C20800                  ret 8
 12446                                 .imm0:
 12447 00004972 F20F70C100              pshuflw xmm0, xmm1, 0
 12448 00004977 C3                      ret
 12449                                 .imm1:
 12450 00004978 F20F70C101              pshuflw xmm0, xmm1, 1
 12451 0000497D C3                      ret
 12452                                 .imm2:
 12453 0000497E F20F70C102              pshuflw xmm0, xmm1, 2
 12454 00004983 C3                      ret
 12455                                 .imm3:
 12456 00004984 F20F70C103              pshuflw xmm0, xmm1, 3
 12457 00004989 C3                      ret
 12458                                 .imm4:
 12459 0000498A F20F70C104              pshuflw xmm0, xmm1, 4
 12460 0000498F C3                      ret
 12461                                 .imm5:
 12462 00004990 F20F70C105              pshuflw xmm0, xmm1, 5
 12463 00004995 C3                      ret
 12464                                 .imm6:
 12465 00004996 F20F70C106              pshuflw xmm0, xmm1, 6
 12466 0000499B C3                      ret
 12467                                 .imm7:
 12468 0000499C F20F70C107              pshuflw xmm0, xmm1, 7
 12469 000049A1 C3                      ret
 12470                                 .imm8:
 12471 000049A2 F20F70C108              pshuflw xmm0, xmm1, 8
 12472 000049A7 C3                      ret
 12473                                 .imm9:
 12474 000049A8 F20F70C109              pshuflw xmm0, xmm1, 9
 12475 000049AD C3                      ret
 12476                                 .imm10:
 12477 000049AE F20F70C10A              pshuflw xmm0, xmm1, 10
 12478 000049B3 C3                      ret
 12479                                 .imm11:
 12480 000049B4 F20F70C10B              pshuflw xmm0, xmm1, 11
 12481 000049B9 C3                      ret
 12482                                 .imm12:
 12483 000049BA F20F70C10C              pshuflw xmm0, xmm1, 12
 12484 000049BF C3                      ret
 12485                                 .imm13:
 12486 000049C0 F20F70C10D              pshuflw xmm0, xmm1, 13
 12487 000049C5 C3                      ret
 12488                                 .imm14:
 12489 000049C6 F20F70C10E              pshuflw xmm0, xmm1, 14
 12490 000049CB C3                      ret
 12491                                 .imm15:
 12492 000049CC F20F70C10F              pshuflw xmm0, xmm1, 15
 12493 000049D1 C3                      ret
 12494                                 .imm16:
 12495 000049D2 F20F70C110              pshuflw xmm0, xmm1, 16
 12496 000049D7 C3                      ret
 12497                                 .imm17:
 12498 000049D8 F20F70C111              pshuflw xmm0, xmm1, 17
 12499 000049DD C3                      ret
 12500                                 .imm18:
 12501 000049DE F20F70C112              pshuflw xmm0, xmm1, 18
 12502 000049E3 C3                      ret
 12503                                 .imm19:
 12504 000049E4 F20F70C113              pshuflw xmm0, xmm1, 19
 12505 000049E9 C3                      ret
 12506                                 .imm20:
 12507 000049EA F20F70C114              pshuflw xmm0, xmm1, 20
 12508 000049EF C3                      ret
 12509                                 .imm21:
 12510 000049F0 F20F70C115              pshuflw xmm0, xmm1, 21
 12511 000049F5 C3                      ret
 12512                                 .imm22:
 12513 000049F6 F20F70C116              pshuflw xmm0, xmm1, 22
 12514 000049FB C3                      ret
 12515                                 .imm23:
 12516 000049FC F20F70C117              pshuflw xmm0, xmm1, 23
 12517 00004A01 C3                      ret
 12518                                 .imm24:
 12519 00004A02 F20F70C118              pshuflw xmm0, xmm1, 24
 12520 00004A07 C3                      ret
 12521                                 .imm25:
 12522 00004A08 F20F70C119              pshuflw xmm0, xmm1, 25
 12523 00004A0D C3                      ret
 12524                                 .imm26:
 12525 00004A0E F20F70C11A              pshuflw xmm0, xmm1, 26
 12526 00004A13 C3                      ret
 12527                                 .imm27:
 12528 00004A14 F20F70C11B              pshuflw xmm0, xmm1, 27
 12529 00004A19 C3                      ret
 12530                                 .imm28:
 12531 00004A1A F20F70C11C              pshuflw xmm0, xmm1, 28
 12532 00004A1F C3                      ret
 12533                                 .imm29:
 12534 00004A20 F20F70C11D              pshuflw xmm0, xmm1, 29
 12535 00004A25 C3                      ret
 12536                                 .imm30:
 12537 00004A26 F20F70C11E              pshuflw xmm0, xmm1, 30
 12538 00004A2B C3                      ret
 12539                                 .imm31:
 12540 00004A2C F20F70C11F              pshuflw xmm0, xmm1, 31
 12541 00004A31 C3                      ret
 12542                                 .imm32:
 12543 00004A32 F20F70C120              pshuflw xmm0, xmm1, 32
 12544 00004A37 C3                      ret
 12545                                 .imm33:
 12546 00004A38 F20F70C121              pshuflw xmm0, xmm1, 33
 12547 00004A3D C3                      ret
 12548                                 .imm34:
 12549 00004A3E F20F70C122              pshuflw xmm0, xmm1, 34
 12550 00004A43 C3                      ret
 12551                                 .imm35:
 12552 00004A44 F20F70C123              pshuflw xmm0, xmm1, 35
 12553 00004A49 C3                      ret
 12554                                 .imm36:
 12555 00004A4A F20F70C124              pshuflw xmm0, xmm1, 36
 12556 00004A4F C3                      ret
 12557                                 .imm37:
 12558 00004A50 F20F70C125              pshuflw xmm0, xmm1, 37
 12559 00004A55 C3                      ret
 12560                                 .imm38:
 12561 00004A56 F20F70C126              pshuflw xmm0, xmm1, 38
 12562 00004A5B C3                      ret
 12563                                 .imm39:
 12564 00004A5C F20F70C127              pshuflw xmm0, xmm1, 39
 12565 00004A61 C3                      ret
 12566                                 .imm40:
 12567 00004A62 F20F70C128              pshuflw xmm0, xmm1, 40
 12568 00004A67 C3                      ret
 12569                                 .imm41:
 12570 00004A68 F20F70C129              pshuflw xmm0, xmm1, 41
 12571 00004A6D C3                      ret
 12572                                 .imm42:
 12573 00004A6E F20F70C12A              pshuflw xmm0, xmm1, 42
 12574 00004A73 C3                      ret
 12575                                 .imm43:
 12576 00004A74 F20F70C12B              pshuflw xmm0, xmm1, 43
 12577 00004A79 C3                      ret
 12578                                 .imm44:
 12579 00004A7A F20F70C12C              pshuflw xmm0, xmm1, 44
 12580 00004A7F C3                      ret
 12581                                 .imm45:
 12582 00004A80 F20F70C12D              pshuflw xmm0, xmm1, 45
 12583 00004A85 C3                      ret
 12584                                 .imm46:
 12585 00004A86 F20F70C12E              pshuflw xmm0, xmm1, 46
 12586 00004A8B C3                      ret
 12587                                 .imm47:
 12588 00004A8C F20F70C12F              pshuflw xmm0, xmm1, 47
 12589 00004A91 C3                      ret
 12590                                 .imm48:
 12591 00004A92 F20F70C130              pshuflw xmm0, xmm1, 48
 12592 00004A97 C3                      ret
 12593                                 .imm49:
 12594 00004A98 F20F70C131              pshuflw xmm0, xmm1, 49
 12595 00004A9D C3                      ret
 12596                                 .imm50:
 12597 00004A9E F20F70C132              pshuflw xmm0, xmm1, 50
 12598 00004AA3 C3                      ret
 12599                                 .imm51:
 12600 00004AA4 F20F70C133              pshuflw xmm0, xmm1, 51
 12601 00004AA9 C3                      ret
 12602                                 .imm52:
 12603 00004AAA F20F70C134              pshuflw xmm0, xmm1, 52
 12604 00004AAF C3                      ret
 12605                                 .imm53:
 12606 00004AB0 F20F70C135              pshuflw xmm0, xmm1, 53
 12607 00004AB5 C3                      ret
 12608                                 .imm54:
 12609 00004AB6 F20F70C136              pshuflw xmm0, xmm1, 54
 12610 00004ABB C3                      ret
 12611                                 .imm55:
 12612 00004ABC F20F70C137              pshuflw xmm0, xmm1, 55
 12613 00004AC1 C3                      ret
 12614                                 .imm56:
 12615 00004AC2 F20F70C138              pshuflw xmm0, xmm1, 56
 12616 00004AC7 C3                      ret
 12617                                 .imm57:
 12618 00004AC8 F20F70C139              pshuflw xmm0, xmm1, 57
 12619 00004ACD C3                      ret
 12620                                 .imm58:
 12621 00004ACE F20F70C13A              pshuflw xmm0, xmm1, 58
 12622 00004AD3 C3                      ret
 12623                                 .imm59:
 12624 00004AD4 F20F70C13B              pshuflw xmm0, xmm1, 59
 12625 00004AD9 C3                      ret
 12626                                 .imm60:
 12627 00004ADA F20F70C13C              pshuflw xmm0, xmm1, 60
 12628 00004ADF C3                      ret
 12629                                 .imm61:
 12630 00004AE0 F20F70C13D              pshuflw xmm0, xmm1, 61
 12631 00004AE5 C3                      ret
 12632                                 .imm62:
 12633 00004AE6 F20F70C13E              pshuflw xmm0, xmm1, 62
 12634 00004AEB C3                      ret
 12635                                 .imm63:
 12636 00004AEC F20F70C13F              pshuflw xmm0, xmm1, 63
 12637 00004AF1 C3                      ret
 12638                                 .imm64:
 12639 00004AF2 F20F70C140              pshuflw xmm0, xmm1, 64
 12640 00004AF7 C3                      ret
 12641                                 .imm65:
 12642 00004AF8 F20F70C141              pshuflw xmm0, xmm1, 65
 12643 00004AFD C3                      ret
 12644                                 .imm66:
 12645 00004AFE F20F70C142              pshuflw xmm0, xmm1, 66
 12646 00004B03 C3                      ret
 12647                                 .imm67:
 12648 00004B04 F20F70C143              pshuflw xmm0, xmm1, 67
 12649 00004B09 C3                      ret
 12650                                 .imm68:
 12651 00004B0A F20F70C144              pshuflw xmm0, xmm1, 68
 12652 00004B0F C3                      ret
 12653                                 .imm69:
 12654 00004B10 F20F70C145              pshuflw xmm0, xmm1, 69
 12655 00004B15 C3                      ret
 12656                                 .imm70:
 12657 00004B16 F20F70C146              pshuflw xmm0, xmm1, 70
 12658 00004B1B C3                      ret
 12659                                 .imm71:
 12660 00004B1C F20F70C147              pshuflw xmm0, xmm1, 71
 12661 00004B21 C3                      ret
 12662                                 .imm72:
 12663 00004B22 F20F70C148              pshuflw xmm0, xmm1, 72
 12664 00004B27 C3                      ret
 12665                                 .imm73:
 12666 00004B28 F20F70C149              pshuflw xmm0, xmm1, 73
 12667 00004B2D C3                      ret
 12668                                 .imm74:
 12669 00004B2E F20F70C14A              pshuflw xmm0, xmm1, 74
 12670 00004B33 C3                      ret
 12671                                 .imm75:
 12672 00004B34 F20F70C14B              pshuflw xmm0, xmm1, 75
 12673 00004B39 C3                      ret
 12674                                 .imm76:
 12675 00004B3A F20F70C14C              pshuflw xmm0, xmm1, 76
 12676 00004B3F C3                      ret
 12677                                 .imm77:
 12678 00004B40 F20F70C14D              pshuflw xmm0, xmm1, 77
 12679 00004B45 C3                      ret
 12680                                 .imm78:
 12681 00004B46 F20F70C14E              pshuflw xmm0, xmm1, 78
 12682 00004B4B C3                      ret
 12683                                 .imm79:
 12684 00004B4C F20F70C14F              pshuflw xmm0, xmm1, 79
 12685 00004B51 C3                      ret
 12686                                 .imm80:
 12687 00004B52 F20F70C150              pshuflw xmm0, xmm1, 80
 12688 00004B57 C3                      ret
 12689                                 .imm81:
 12690 00004B58 F20F70C151              pshuflw xmm0, xmm1, 81
 12691 00004B5D C3                      ret
 12692                                 .imm82:
 12693 00004B5E F20F70C152              pshuflw xmm0, xmm1, 82
 12694 00004B63 C3                      ret
 12695                                 .imm83:
 12696 00004B64 F20F70C153              pshuflw xmm0, xmm1, 83
 12697 00004B69 C3                      ret
 12698                                 .imm84:
 12699 00004B6A F20F70C154              pshuflw xmm0, xmm1, 84
 12700 00004B6F C3                      ret
 12701                                 .imm85:
 12702 00004B70 F20F70C155              pshuflw xmm0, xmm1, 85
 12703 00004B75 C3                      ret
 12704                                 .imm86:
 12705 00004B76 F20F70C156              pshuflw xmm0, xmm1, 86
 12706 00004B7B C3                      ret
 12707                                 .imm87:
 12708 00004B7C F20F70C157              pshuflw xmm0, xmm1, 87
 12709 00004B81 C3                      ret
 12710                                 .imm88:
 12711 00004B82 F20F70C158              pshuflw xmm0, xmm1, 88
 12712 00004B87 C3                      ret
 12713                                 .imm89:
 12714 00004B88 F20F70C159              pshuflw xmm0, xmm1, 89
 12715 00004B8D C3                      ret
 12716                                 .imm90:
 12717 00004B8E F20F70C15A              pshuflw xmm0, xmm1, 90
 12718 00004B93 C3                      ret
 12719                                 .imm91:
 12720 00004B94 F20F70C15B              pshuflw xmm0, xmm1, 91
 12721 00004B99 C3                      ret
 12722                                 .imm92:
 12723 00004B9A F20F70C15C              pshuflw xmm0, xmm1, 92
 12724 00004B9F C3                      ret
 12725                                 .imm93:
 12726 00004BA0 F20F70C15D              pshuflw xmm0, xmm1, 93
 12727 00004BA5 C3                      ret
 12728                                 .imm94:
 12729 00004BA6 F20F70C15E              pshuflw xmm0, xmm1, 94
 12730 00004BAB C3                      ret
 12731                                 .imm95:
 12732 00004BAC F20F70C15F              pshuflw xmm0, xmm1, 95
 12733 00004BB1 C3                      ret
 12734                                 .imm96:
 12735 00004BB2 F20F70C160              pshuflw xmm0, xmm1, 96
 12736 00004BB7 C3                      ret
 12737                                 .imm97:
 12738 00004BB8 F20F70C161              pshuflw xmm0, xmm1, 97
 12739 00004BBD C3                      ret
 12740                                 .imm98:
 12741 00004BBE F20F70C162              pshuflw xmm0, xmm1, 98
 12742 00004BC3 C3                      ret
 12743                                 .imm99:
 12744 00004BC4 F20F70C163              pshuflw xmm0, xmm1, 99
 12745 00004BC9 C3                      ret
 12746                                 .imm100:
 12747 00004BCA F20F70C164              pshuflw xmm0, xmm1, 100
 12748 00004BCF C3                      ret
 12749                                 .imm101:
 12750 00004BD0 F20F70C165              pshuflw xmm0, xmm1, 101
 12751 00004BD5 C3                      ret
 12752                                 .imm102:
 12753 00004BD6 F20F70C166              pshuflw xmm0, xmm1, 102
 12754 00004BDB C3                      ret
 12755                                 .imm103:
 12756 00004BDC F20F70C167              pshuflw xmm0, xmm1, 103
 12757 00004BE1 C3                      ret
 12758                                 .imm104:
 12759 00004BE2 F20F70C168              pshuflw xmm0, xmm1, 104
 12760 00004BE7 C3                      ret
 12761                                 .imm105:
 12762 00004BE8 F20F70C169              pshuflw xmm0, xmm1, 105
 12763 00004BED C3                      ret
 12764                                 .imm106:
 12765 00004BEE F20F70C16A              pshuflw xmm0, xmm1, 106
 12766 00004BF3 C3                      ret
 12767                                 .imm107:
 12768 00004BF4 F20F70C16B              pshuflw xmm0, xmm1, 107
 12769 00004BF9 C3                      ret
 12770                                 .imm108:
 12771 00004BFA F20F70C16C              pshuflw xmm0, xmm1, 108
 12772 00004BFF C3                      ret
 12773                                 .imm109:
 12774 00004C00 F20F70C16D              pshuflw xmm0, xmm1, 109
 12775 00004C05 C3                      ret
 12776                                 .imm110:
 12777 00004C06 F20F70C16E              pshuflw xmm0, xmm1, 110
 12778 00004C0B C3                      ret
 12779                                 .imm111:
 12780 00004C0C F20F70C16F              pshuflw xmm0, xmm1, 111
 12781 00004C11 C3                      ret
 12782                                 .imm112:
 12783 00004C12 F20F70C170              pshuflw xmm0, xmm1, 112
 12784 00004C17 C3                      ret
 12785                                 .imm113:
 12786 00004C18 F20F70C171              pshuflw xmm0, xmm1, 113
 12787 00004C1D C3                      ret
 12788                                 .imm114:
 12789 00004C1E F20F70C172              pshuflw xmm0, xmm1, 114
 12790 00004C23 C3                      ret
 12791                                 .imm115:
 12792 00004C24 F20F70C173              pshuflw xmm0, xmm1, 115
 12793 00004C29 C3                      ret
 12794                                 .imm116:
 12795 00004C2A F20F70C174              pshuflw xmm0, xmm1, 116
 12796 00004C2F C3                      ret
 12797                                 .imm117:
 12798 00004C30 F20F70C175              pshuflw xmm0, xmm1, 117
 12799 00004C35 C3                      ret
 12800                                 .imm118:
 12801 00004C36 F20F70C176              pshuflw xmm0, xmm1, 118
 12802 00004C3B C3                      ret
 12803                                 .imm119:
 12804 00004C3C F20F70C177              pshuflw xmm0, xmm1, 119
 12805 00004C41 C3                      ret
 12806                                 .imm120:
 12807 00004C42 F20F70C178              pshuflw xmm0, xmm1, 120
 12808 00004C47 C3                      ret
 12809                                 .imm121:
 12810 00004C48 F20F70C179              pshuflw xmm0, xmm1, 121
 12811 00004C4D C3                      ret
 12812                                 .imm122:
 12813 00004C4E F20F70C17A              pshuflw xmm0, xmm1, 122
 12814 00004C53 C3                      ret
 12815                                 .imm123:
 12816 00004C54 F20F70C17B              pshuflw xmm0, xmm1, 123
 12817 00004C59 C3                      ret
 12818                                 .imm124:
 12819 00004C5A F20F70C17C              pshuflw xmm0, xmm1, 124
 12820 00004C5F C3                      ret
 12821                                 .imm125:
 12822 00004C60 F20F70C17D              pshuflw xmm0, xmm1, 125
 12823 00004C65 C3                      ret
 12824                                 .imm126:
 12825 00004C66 F20F70C17E              pshuflw xmm0, xmm1, 126
 12826 00004C6B C3                      ret
 12827                                 .imm127:
 12828 00004C6C F20F70C17F              pshuflw xmm0, xmm1, 127
 12829 00004C71 C3                      ret
 12830                                 .imm128:
 12831 00004C72 F20F70C180              pshuflw xmm0, xmm1, 128
 12832 00004C77 C3                      ret
 12833                                 .imm129:
 12834 00004C78 F20F70C181              pshuflw xmm0, xmm1, 129
 12835 00004C7D C3                      ret
 12836                                 .imm130:
 12837 00004C7E F20F70C182              pshuflw xmm0, xmm1, 130
 12838 00004C83 C3                      ret
 12839                                 .imm131:
 12840 00004C84 F20F70C183              pshuflw xmm0, xmm1, 131
 12841 00004C89 C3                      ret
 12842                                 .imm132:
 12843 00004C8A F20F70C184              pshuflw xmm0, xmm1, 132
 12844 00004C8F C3                      ret
 12845                                 .imm133:
 12846 00004C90 F20F70C185              pshuflw xmm0, xmm1, 133
 12847 00004C95 C3                      ret
 12848                                 .imm134:
 12849 00004C96 F20F70C186              pshuflw xmm0, xmm1, 134
 12850 00004C9B C3                      ret
 12851                                 .imm135:
 12852 00004C9C F20F70C187              pshuflw xmm0, xmm1, 135
 12853 00004CA1 C3                      ret
 12854                                 .imm136:
 12855 00004CA2 F20F70C188              pshuflw xmm0, xmm1, 136
 12856 00004CA7 C3                      ret
 12857                                 .imm137:
 12858 00004CA8 F20F70C189              pshuflw xmm0, xmm1, 137
 12859 00004CAD C3                      ret
 12860                                 .imm138:
 12861 00004CAE F20F70C18A              pshuflw xmm0, xmm1, 138
 12862 00004CB3 C3                      ret
 12863                                 .imm139:
 12864 00004CB4 F20F70C18B              pshuflw xmm0, xmm1, 139
 12865 00004CB9 C3                      ret
 12866                                 .imm140:
 12867 00004CBA F20F70C18C              pshuflw xmm0, xmm1, 140
 12868 00004CBF C3                      ret
 12869                                 .imm141:
 12870 00004CC0 F20F70C18D              pshuflw xmm0, xmm1, 141
 12871 00004CC5 C3                      ret
 12872                                 .imm142:
 12873 00004CC6 F20F70C18E              pshuflw xmm0, xmm1, 142
 12874 00004CCB C3                      ret
 12875                                 .imm143:
 12876 00004CCC F20F70C18F              pshuflw xmm0, xmm1, 143
 12877 00004CD1 C3                      ret
 12878                                 .imm144:
 12879 00004CD2 F20F70C190              pshuflw xmm0, xmm1, 144
 12880 00004CD7 C3                      ret
 12881                                 .imm145:
 12882 00004CD8 F20F70C191              pshuflw xmm0, xmm1, 145
 12883 00004CDD C3                      ret
 12884                                 .imm146:
 12885 00004CDE F20F70C192              pshuflw xmm0, xmm1, 146
 12886 00004CE3 C3                      ret
 12887                                 .imm147:
 12888 00004CE4 F20F70C193              pshuflw xmm0, xmm1, 147
 12889 00004CE9 C3                      ret
 12890                                 .imm148:
 12891 00004CEA F20F70C194              pshuflw xmm0, xmm1, 148
 12892 00004CEF C3                      ret
 12893                                 .imm149:
 12894 00004CF0 F20F70C195              pshuflw xmm0, xmm1, 149
 12895 00004CF5 C3                      ret
 12896                                 .imm150:
 12897 00004CF6 F20F70C196              pshuflw xmm0, xmm1, 150
 12898 00004CFB C3                      ret
 12899                                 .imm151:
 12900 00004CFC F20F70C197              pshuflw xmm0, xmm1, 151
 12901 00004D01 C3                      ret
 12902                                 .imm152:
 12903 00004D02 F20F70C198              pshuflw xmm0, xmm1, 152
 12904 00004D07 C3                      ret
 12905                                 .imm153:
 12906 00004D08 F20F70C199              pshuflw xmm0, xmm1, 153
 12907 00004D0D C3                      ret
 12908                                 .imm154:
 12909 00004D0E F20F70C19A              pshuflw xmm0, xmm1, 154
 12910 00004D13 C3                      ret
 12911                                 .imm155:
 12912 00004D14 F20F70C19B              pshuflw xmm0, xmm1, 155
 12913 00004D19 C3                      ret
 12914                                 .imm156:
 12915 00004D1A F20F70C19C              pshuflw xmm0, xmm1, 156
 12916 00004D1F C3                      ret
 12917                                 .imm157:
 12918 00004D20 F20F70C19D              pshuflw xmm0, xmm1, 157
 12919 00004D25 C3                      ret
 12920                                 .imm158:
 12921 00004D26 F20F70C19E              pshuflw xmm0, xmm1, 158
 12922 00004D2B C3                      ret
 12923                                 .imm159:
 12924 00004D2C F20F70C19F              pshuflw xmm0, xmm1, 159
 12925 00004D31 C3                      ret
 12926                                 .imm160:
 12927 00004D32 F20F70C1A0              pshuflw xmm0, xmm1, 160
 12928 00004D37 C3                      ret
 12929                                 .imm161:
 12930 00004D38 F20F70C1A1              pshuflw xmm0, xmm1, 161
 12931 00004D3D C3                      ret
 12932                                 .imm162:
 12933 00004D3E F20F70C1A2              pshuflw xmm0, xmm1, 162
 12934 00004D43 C3                      ret
 12935                                 .imm163:
 12936 00004D44 F20F70C1A3              pshuflw xmm0, xmm1, 163
 12937 00004D49 C3                      ret
 12938                                 .imm164:
 12939 00004D4A F20F70C1A4              pshuflw xmm0, xmm1, 164
 12940 00004D4F C3                      ret
 12941                                 .imm165:
 12942 00004D50 F20F70C1A5              pshuflw xmm0, xmm1, 165
 12943 00004D55 C3                      ret
 12944                                 .imm166:
 12945 00004D56 F20F70C1A6              pshuflw xmm0, xmm1, 166
 12946 00004D5B C3                      ret
 12947                                 .imm167:
 12948 00004D5C F20F70C1A7              pshuflw xmm0, xmm1, 167
 12949 00004D61 C3                      ret
 12950                                 .imm168:
 12951 00004D62 F20F70C1A8              pshuflw xmm0, xmm1, 168
 12952 00004D67 C3                      ret
 12953                                 .imm169:
 12954 00004D68 F20F70C1A9              pshuflw xmm0, xmm1, 169
 12955 00004D6D C3                      ret
 12956                                 .imm170:
 12957 00004D6E F20F70C1AA              pshuflw xmm0, xmm1, 170
 12958 00004D73 C3                      ret
 12959                                 .imm171:
 12960 00004D74 F20F70C1AB              pshuflw xmm0, xmm1, 171
 12961 00004D79 C3                      ret
 12962                                 .imm172:
 12963 00004D7A F20F70C1AC              pshuflw xmm0, xmm1, 172
 12964 00004D7F C3                      ret
 12965                                 .imm173:
 12966 00004D80 F20F70C1AD              pshuflw xmm0, xmm1, 173
 12967 00004D85 C3                      ret
 12968                                 .imm174:
 12969 00004D86 F20F70C1AE              pshuflw xmm0, xmm1, 174
 12970 00004D8B C3                      ret
 12971                                 .imm175:
 12972 00004D8C F20F70C1AF              pshuflw xmm0, xmm1, 175
 12973 00004D91 C3                      ret
 12974                                 .imm176:
 12975 00004D92 F20F70C1B0              pshuflw xmm0, xmm1, 176
 12976 00004D97 C3                      ret
 12977                                 .imm177:
 12978 00004D98 F20F70C1B1              pshuflw xmm0, xmm1, 177
 12979 00004D9D C3                      ret
 12980                                 .imm178:
 12981 00004D9E F20F70C1B2              pshuflw xmm0, xmm1, 178
 12982 00004DA3 C3                      ret
 12983                                 .imm179:
 12984 00004DA4 F20F70C1B3              pshuflw xmm0, xmm1, 179
 12985 00004DA9 C3                      ret
 12986                                 .imm180:
 12987 00004DAA F20F70C1B4              pshuflw xmm0, xmm1, 180
 12988 00004DAF C3                      ret
 12989                                 .imm181:
 12990 00004DB0 F20F70C1B5              pshuflw xmm0, xmm1, 181
 12991 00004DB5 C3                      ret
 12992                                 .imm182:
 12993 00004DB6 F20F70C1B6              pshuflw xmm0, xmm1, 182
 12994 00004DBB C3                      ret
 12995                                 .imm183:
 12996 00004DBC F20F70C1B7              pshuflw xmm0, xmm1, 183
 12997 00004DC1 C3                      ret
 12998                                 .imm184:
 12999 00004DC2 F20F70C1B8              pshuflw xmm0, xmm1, 184
 13000 00004DC7 C3                      ret
 13001                                 .imm185:
 13002 00004DC8 F20F70C1B9              pshuflw xmm0, xmm1, 185
 13003 00004DCD C3                      ret
 13004                                 .imm186:
 13005 00004DCE F20F70C1BA              pshuflw xmm0, xmm1, 186
 13006 00004DD3 C3                      ret
 13007                                 .imm187:
 13008 00004DD4 F20F70C1BB              pshuflw xmm0, xmm1, 187
 13009 00004DD9 C3                      ret
 13010                                 .imm188:
 13011 00004DDA F20F70C1BC              pshuflw xmm0, xmm1, 188
 13012 00004DDF C3                      ret
 13013                                 .imm189:
 13014 00004DE0 F20F70C1BD              pshuflw xmm0, xmm1, 189
 13015 00004DE5 C3                      ret
 13016                                 .imm190:
 13017 00004DE6 F20F70C1BE              pshuflw xmm0, xmm1, 190
 13018 00004DEB C3                      ret
 13019                                 .imm191:
 13020 00004DEC F20F70C1BF              pshuflw xmm0, xmm1, 191
 13021 00004DF1 C3                      ret
 13022                                 .imm192:
 13023 00004DF2 F20F70C1C0              pshuflw xmm0, xmm1, 192
 13024 00004DF7 C3                      ret
 13025                                 .imm193:
 13026 00004DF8 F20F70C1C1              pshuflw xmm0, xmm1, 193
 13027 00004DFD C3                      ret
 13028                                 .imm194:
 13029 00004DFE F20F70C1C2              pshuflw xmm0, xmm1, 194
 13030 00004E03 C3                      ret
 13031                                 .imm195:
 13032 00004E04 F20F70C1C3              pshuflw xmm0, xmm1, 195
 13033 00004E09 C3                      ret
 13034                                 .imm196:
 13035 00004E0A F20F70C1C4              pshuflw xmm0, xmm1, 196
 13036 00004E0F C3                      ret
 13037                                 .imm197:
 13038 00004E10 F20F70C1C5              pshuflw xmm0, xmm1, 197
 13039 00004E15 C3                      ret
 13040                                 .imm198:
 13041 00004E16 F20F70C1C6              pshuflw xmm0, xmm1, 198
 13042 00004E1B C3                      ret
 13043                                 .imm199:
 13044 00004E1C F20F70C1C7              pshuflw xmm0, xmm1, 199
 13045 00004E21 C3                      ret
 13046                                 .imm200:
 13047 00004E22 F20F70C1C8              pshuflw xmm0, xmm1, 200
 13048 00004E27 C3                      ret
 13049                                 .imm201:
 13050 00004E28 F20F70C1C9              pshuflw xmm0, xmm1, 201
 13051 00004E2D C3                      ret
 13052                                 .imm202:
 13053 00004E2E F20F70C1CA              pshuflw xmm0, xmm1, 202
 13054 00004E33 C3                      ret
 13055                                 .imm203:
 13056 00004E34 F20F70C1CB              pshuflw xmm0, xmm1, 203
 13057 00004E39 C3                      ret
 13058                                 .imm204:
 13059 00004E3A F20F70C1CC              pshuflw xmm0, xmm1, 204
 13060 00004E3F C3                      ret
 13061                                 .imm205:
 13062 00004E40 F20F70C1CD              pshuflw xmm0, xmm1, 205
 13063 00004E45 C3                      ret
 13064                                 .imm206:
 13065 00004E46 F20F70C1CE              pshuflw xmm0, xmm1, 206
 13066 00004E4B C3                      ret
 13067                                 .imm207:
 13068 00004E4C F20F70C1CF              pshuflw xmm0, xmm1, 207
 13069 00004E51 C3                      ret
 13070                                 .imm208:
 13071 00004E52 F20F70C1D0              pshuflw xmm0, xmm1, 208
 13072 00004E57 C3                      ret
 13073                                 .imm209:
 13074 00004E58 F20F70C1D1              pshuflw xmm0, xmm1, 209
 13075 00004E5D C3                      ret
 13076                                 .imm210:
 13077 00004E5E F20F70C1D2              pshuflw xmm0, xmm1, 210
 13078 00004E63 C3                      ret
 13079                                 .imm211:
 13080 00004E64 F20F70C1D3              pshuflw xmm0, xmm1, 211
 13081 00004E69 C3                      ret
 13082                                 .imm212:
 13083 00004E6A F20F70C1D4              pshuflw xmm0, xmm1, 212
 13084 00004E6F C3                      ret
 13085                                 .imm213:
 13086 00004E70 F20F70C1D5              pshuflw xmm0, xmm1, 213
 13087 00004E75 C3                      ret
 13088                                 .imm214:
 13089 00004E76 F20F70C1D6              pshuflw xmm0, xmm1, 214
 13090 00004E7B C3                      ret
 13091                                 .imm215:
 13092 00004E7C F20F70C1D7              pshuflw xmm0, xmm1, 215
 13093 00004E81 C3                      ret
 13094                                 .imm216:
 13095 00004E82 F20F70C1D8              pshuflw xmm0, xmm1, 216
 13096 00004E87 C3                      ret
 13097                                 .imm217:
 13098 00004E88 F20F70C1D9              pshuflw xmm0, xmm1, 217
 13099 00004E8D C3                      ret
 13100                                 .imm218:
 13101 00004E8E F20F70C1DA              pshuflw xmm0, xmm1, 218
 13102 00004E93 C3                      ret
 13103                                 .imm219:
 13104 00004E94 F20F70C1DB              pshuflw xmm0, xmm1, 219
 13105 00004E99 C3                      ret
 13106                                 .imm220:
 13107 00004E9A F20F70C1DC              pshuflw xmm0, xmm1, 220
 13108 00004E9F C3                      ret
 13109                                 .imm221:
 13110 00004EA0 F20F70C1DD              pshuflw xmm0, xmm1, 221
 13111 00004EA5 C3                      ret
 13112                                 .imm222:
 13113 00004EA6 F20F70C1DE              pshuflw xmm0, xmm1, 222
 13114 00004EAB C3                      ret
 13115                                 .imm223:
 13116 00004EAC F20F70C1DF              pshuflw xmm0, xmm1, 223
 13117 00004EB1 C3                      ret
 13118                                 .imm224:
 13119 00004EB2 F20F70C1E0              pshuflw xmm0, xmm1, 224
 13120 00004EB7 C3                      ret
 13121                                 .imm225:
 13122 00004EB8 F20F70C1E1              pshuflw xmm0, xmm1, 225
 13123 00004EBD C3                      ret
 13124                                 .imm226:
 13125 00004EBE F20F70C1E2              pshuflw xmm0, xmm1, 226
 13126 00004EC3 C3                      ret
 13127                                 .imm227:
 13128 00004EC4 F20F70C1E3              pshuflw xmm0, xmm1, 227
 13129 00004EC9 C3                      ret
 13130                                 .imm228:
 13131 00004ECA F20F70C1E4              pshuflw xmm0, xmm1, 228
 13132 00004ECF C3                      ret
 13133                                 .imm229:
 13134 00004ED0 F20F70C1E5              pshuflw xmm0, xmm1, 229
 13135 00004ED5 C3                      ret
 13136                                 .imm230:
 13137 00004ED6 F20F70C1E6              pshuflw xmm0, xmm1, 230
 13138 00004EDB C3                      ret
 13139                                 .imm231:
 13140 00004EDC F20F70C1E7              pshuflw xmm0, xmm1, 231
 13141 00004EE1 C3                      ret
 13142                                 .imm232:
 13143 00004EE2 F20F70C1E8              pshuflw xmm0, xmm1, 232
 13144 00004EE7 C3                      ret
 13145                                 .imm233:
 13146 00004EE8 F20F70C1E9              pshuflw xmm0, xmm1, 233
 13147 00004EED C3                      ret
 13148                                 .imm234:
 13149 00004EEE F20F70C1EA              pshuflw xmm0, xmm1, 234
 13150 00004EF3 C3                      ret
 13151                                 .imm235:
 13152 00004EF4 F20F70C1EB              pshuflw xmm0, xmm1, 235
 13153 00004EF9 C3                      ret
 13154                                 .imm236:
 13155 00004EFA F20F70C1EC              pshuflw xmm0, xmm1, 236
 13156 00004EFF C3                      ret
 13157                                 .imm237:
 13158 00004F00 F20F70C1ED              pshuflw xmm0, xmm1, 237
 13159 00004F05 C3                      ret
 13160                                 .imm238:
 13161 00004F06 F20F70C1EE              pshuflw xmm0, xmm1, 238
 13162 00004F0B C3                      ret
 13163                                 .imm239:
 13164 00004F0C F20F70C1EF              pshuflw xmm0, xmm1, 239
 13165 00004F11 C3                      ret
 13166                                 .imm240:
 13167 00004F12 F20F70C1F0              pshuflw xmm0, xmm1, 240
 13168 00004F17 C3                      ret
 13169                                 .imm241:
 13170 00004F18 F20F70C1F1              pshuflw xmm0, xmm1, 241
 13171 00004F1D C3                      ret
 13172                                 .imm242:
 13173 00004F1E F20F70C1F2              pshuflw xmm0, xmm1, 242
 13174 00004F23 C3                      ret
 13175                                 .imm243:
 13176 00004F24 F20F70C1F3              pshuflw xmm0, xmm1, 243
 13177 00004F29 C3                      ret
 13178                                 .imm244:
 13179 00004F2A F20F70C1F4              pshuflw xmm0, xmm1, 244
 13180 00004F2F C3                      ret
 13181                                 .imm245:
 13182 00004F30 F20F70C1F5              pshuflw xmm0, xmm1, 245
 13183 00004F35 C3                      ret
 13184                                 .imm246:
 13185 00004F36 F20F70C1F6              pshuflw xmm0, xmm1, 246
 13186 00004F3B C3                      ret
 13187                                 .imm247:
 13188 00004F3C F20F70C1F7              pshuflw xmm0, xmm1, 247
 13189 00004F41 C3                      ret
 13190                                 .imm248:
 13191 00004F42 F20F70C1F8              pshuflw xmm0, xmm1, 248
 13192 00004F47 C3                      ret
 13193                                 .imm249:
 13194 00004F48 F20F70C1F9              pshuflw xmm0, xmm1, 249
 13195 00004F4D C3                      ret
 13196                                 .imm250:
 13197 00004F4E F20F70C1FA              pshuflw xmm0, xmm1, 250
 13198 00004F53 C3                      ret
 13199                                 .imm251:
 13200 00004F54 F20F70C1FB              pshuflw xmm0, xmm1, 251
 13201 00004F59 C3                      ret
 13202                                 .imm252:
 13203 00004F5A F20F70C1FC              pshuflw xmm0, xmm1, 252
 13204 00004F5F C3                      ret
 13205                                 .imm253:
 13206 00004F60 F20F70C1FD              pshuflw xmm0, xmm1, 253
 13207 00004F65 C3                      ret
 13208                                 .imm254:
 13209 00004F66 F20F70C1FE              pshuflw xmm0, xmm1, 254
 13210 00004F6B C3                      ret
 13211                                 .imm255:
 13212 00004F6C F20F70C1FF              pshuflw xmm0, xmm1, 255
 13213 00004F71 C3                      ret
 13214                                 .immEnd:
 13215 00004F72 FFFF                   dw 0xf9ff + (.immEnd - .imm0)
 13216 00004F74 FFFF                   dw 0x105ff - (.immEnd - .imm0)
 13217                                 [global iemAImpl_pshuflw_EndProc:function hidden]
 13218                                 iemAImpl_pshuflw_EndProc:
 13219                                 [size iemAImpl_pshuflw iemAImpl_pshuflw_EndProc - iemAImpl_pshuflw]
 13220                                 [size iemAImpl_pshuflw_EndProc 0]
 13221 00004F76 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 13222                                 %line 2917+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13223                                 [global iemAImpl_pshufd]
 13224                                 %line 2917+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13225                                 iemAImpl_pshufd:
 13226 00004F7A 53                      push ebx
 13227 00004F7B 57                      push edi
 13228 00004F7C 56                      push esi
 13229 00004F7D 8B5C2410                mov ebx, [esp + 12 + 4 + 0]
 13230 00004F81 8B742414                mov esi, [esp + 12 + 4 + 4]
 13231                                 
 13232 00004F85 F30F6F02                movdqu xmm0, [edx]
 13233 00004F89 F30F6F0B                movdqu xmm1, [ebx]
 13234 00004F8D 8D3D[00000000]          lea edi, [.imm0 ]
 13235 00004F93 8D0476                  lea eax, [esi + esi*2]
 13236 00004F96 8D3C47                  lea edi, [edi + eax*2]
 13237 00004F99 FFD7                    call edi
 13238 00004F9B F30F7F02                movdqu [edx], xmm0
 13239                                 
 13240 00004F9F 5E                      pop esi
 13241 00004FA0 5F                      pop edi
 13242 00004FA1 5B                      pop ebx
 13243 00004FA2 C20800                  ret 8
 13244                                 .imm0:
 13245 00004FA5 660F70C100              pshufd xmm0, xmm1, 0
 13246 00004FAA C3                      ret
 13247                                 .imm1:
 13248 00004FAB 660F70C101              pshufd xmm0, xmm1, 1
 13249 00004FB0 C3                      ret
 13250                                 .imm2:
 13251 00004FB1 660F70C102              pshufd xmm0, xmm1, 2
 13252 00004FB6 C3                      ret
 13253                                 .imm3:
 13254 00004FB7 660F70C103              pshufd xmm0, xmm1, 3
 13255 00004FBC C3                      ret
 13256                                 .imm4:
 13257 00004FBD 660F70C104              pshufd xmm0, xmm1, 4
 13258 00004FC2 C3                      ret
 13259                                 .imm5:
 13260 00004FC3 660F70C105              pshufd xmm0, xmm1, 5
 13261 00004FC8 C3                      ret
 13262                                 .imm6:
 13263 00004FC9 660F70C106              pshufd xmm0, xmm1, 6
 13264 00004FCE C3                      ret
 13265                                 .imm7:
 13266 00004FCF 660F70C107              pshufd xmm0, xmm1, 7
 13267 00004FD4 C3                      ret
 13268                                 .imm8:
 13269 00004FD5 660F70C108              pshufd xmm0, xmm1, 8
 13270 00004FDA C3                      ret
 13271                                 .imm9:
 13272 00004FDB 660F70C109              pshufd xmm0, xmm1, 9
 13273 00004FE0 C3                      ret
 13274                                 .imm10:
 13275 00004FE1 660F70C10A              pshufd xmm0, xmm1, 10
 13276 00004FE6 C3                      ret
 13277                                 .imm11:
 13278 00004FE7 660F70C10B              pshufd xmm0, xmm1, 11
 13279 00004FEC C3                      ret
 13280                                 .imm12:
 13281 00004FED 660F70C10C              pshufd xmm0, xmm1, 12
 13282 00004FF2 C3                      ret
 13283                                 .imm13:
 13284 00004FF3 660F70C10D              pshufd xmm0, xmm1, 13
 13285 00004FF8 C3                      ret
 13286                                 .imm14:
 13287 00004FF9 660F70C10E              pshufd xmm0, xmm1, 14
 13288 00004FFE C3                      ret
 13289                                 .imm15:
 13290 00004FFF 660F70C10F              pshufd xmm0, xmm1, 15
 13291 00005004 C3                      ret
 13292                                 .imm16:
 13293 00005005 660F70C110              pshufd xmm0, xmm1, 16
 13294 0000500A C3                      ret
 13295                                 .imm17:
 13296 0000500B 660F70C111              pshufd xmm0, xmm1, 17
 13297 00005010 C3                      ret
 13298                                 .imm18:
 13299 00005011 660F70C112              pshufd xmm0, xmm1, 18
 13300 00005016 C3                      ret
 13301                                 .imm19:
 13302 00005017 660F70C113              pshufd xmm0, xmm1, 19
 13303 0000501C C3                      ret
 13304                                 .imm20:
 13305 0000501D 660F70C114              pshufd xmm0, xmm1, 20
 13306 00005022 C3                      ret
 13307                                 .imm21:
 13308 00005023 660F70C115              pshufd xmm0, xmm1, 21
 13309 00005028 C3                      ret
 13310                                 .imm22:
 13311 00005029 660F70C116              pshufd xmm0, xmm1, 22
 13312 0000502E C3                      ret
 13313                                 .imm23:
 13314 0000502F 660F70C117              pshufd xmm0, xmm1, 23
 13315 00005034 C3                      ret
 13316                                 .imm24:
 13317 00005035 660F70C118              pshufd xmm0, xmm1, 24
 13318 0000503A C3                      ret
 13319                                 .imm25:
 13320 0000503B 660F70C119              pshufd xmm0, xmm1, 25
 13321 00005040 C3                      ret
 13322                                 .imm26:
 13323 00005041 660F70C11A              pshufd xmm0, xmm1, 26
 13324 00005046 C3                      ret
 13325                                 .imm27:
 13326 00005047 660F70C11B              pshufd xmm0, xmm1, 27
 13327 0000504C C3                      ret
 13328                                 .imm28:
 13329 0000504D 660F70C11C              pshufd xmm0, xmm1, 28
 13330 00005052 C3                      ret
 13331                                 .imm29:
 13332 00005053 660F70C11D              pshufd xmm0, xmm1, 29
 13333 00005058 C3                      ret
 13334                                 .imm30:
 13335 00005059 660F70C11E              pshufd xmm0, xmm1, 30
 13336 0000505E C3                      ret
 13337                                 .imm31:
 13338 0000505F 660F70C11F              pshufd xmm0, xmm1, 31
 13339 00005064 C3                      ret
 13340                                 .imm32:
 13341 00005065 660F70C120              pshufd xmm0, xmm1, 32
 13342 0000506A C3                      ret
 13343                                 .imm33:
 13344 0000506B 660F70C121              pshufd xmm0, xmm1, 33
 13345 00005070 C3                      ret
 13346                                 .imm34:
 13347 00005071 660F70C122              pshufd xmm0, xmm1, 34
 13348 00005076 C3                      ret
 13349                                 .imm35:
 13350 00005077 660F70C123              pshufd xmm0, xmm1, 35
 13351 0000507C C3                      ret
 13352                                 .imm36:
 13353 0000507D 660F70C124              pshufd xmm0, xmm1, 36
 13354 00005082 C3                      ret
 13355                                 .imm37:
 13356 00005083 660F70C125              pshufd xmm0, xmm1, 37
 13357 00005088 C3                      ret
 13358                                 .imm38:
 13359 00005089 660F70C126              pshufd xmm0, xmm1, 38
 13360 0000508E C3                      ret
 13361                                 .imm39:
 13362 0000508F 660F70C127              pshufd xmm0, xmm1, 39
 13363 00005094 C3                      ret
 13364                                 .imm40:
 13365 00005095 660F70C128              pshufd xmm0, xmm1, 40
 13366 0000509A C3                      ret
 13367                                 .imm41:
 13368 0000509B 660F70C129              pshufd xmm0, xmm1, 41
 13369 000050A0 C3                      ret
 13370                                 .imm42:
 13371 000050A1 660F70C12A              pshufd xmm0, xmm1, 42
 13372 000050A6 C3                      ret
 13373                                 .imm43:
 13374 000050A7 660F70C12B              pshufd xmm0, xmm1, 43
 13375 000050AC C3                      ret
 13376                                 .imm44:
 13377 000050AD 660F70C12C              pshufd xmm0, xmm1, 44
 13378 000050B2 C3                      ret
 13379                                 .imm45:
 13380 000050B3 660F70C12D              pshufd xmm0, xmm1, 45
 13381 000050B8 C3                      ret
 13382                                 .imm46:
 13383 000050B9 660F70C12E              pshufd xmm0, xmm1, 46
 13384 000050BE C3                      ret
 13385                                 .imm47:
 13386 000050BF 660F70C12F              pshufd xmm0, xmm1, 47
 13387 000050C4 C3                      ret
 13388                                 .imm48:
 13389 000050C5 660F70C130              pshufd xmm0, xmm1, 48
 13390 000050CA C3                      ret
 13391                                 .imm49:
 13392 000050CB 660F70C131              pshufd xmm0, xmm1, 49
 13393 000050D0 C3                      ret
 13394                                 .imm50:
 13395 000050D1 660F70C132              pshufd xmm0, xmm1, 50
 13396 000050D6 C3                      ret
 13397                                 .imm51:
 13398 000050D7 660F70C133              pshufd xmm0, xmm1, 51
 13399 000050DC C3                      ret
 13400                                 .imm52:
 13401 000050DD 660F70C134              pshufd xmm0, xmm1, 52
 13402 000050E2 C3                      ret
 13403                                 .imm53:
 13404 000050E3 660F70C135              pshufd xmm0, xmm1, 53
 13405 000050E8 C3                      ret
 13406                                 .imm54:
 13407 000050E9 660F70C136              pshufd xmm0, xmm1, 54
 13408 000050EE C3                      ret
 13409                                 .imm55:
 13410 000050EF 660F70C137              pshufd xmm0, xmm1, 55
 13411 000050F4 C3                      ret
 13412                                 .imm56:
 13413 000050F5 660F70C138              pshufd xmm0, xmm1, 56
 13414 000050FA C3                      ret
 13415                                 .imm57:
 13416 000050FB 660F70C139              pshufd xmm0, xmm1, 57
 13417 00005100 C3                      ret
 13418                                 .imm58:
 13419 00005101 660F70C13A              pshufd xmm0, xmm1, 58
 13420 00005106 C3                      ret
 13421                                 .imm59:
 13422 00005107 660F70C13B              pshufd xmm0, xmm1, 59
 13423 0000510C C3                      ret
 13424                                 .imm60:
 13425 0000510D 660F70C13C              pshufd xmm0, xmm1, 60
 13426 00005112 C3                      ret
 13427                                 .imm61:
 13428 00005113 660F70C13D              pshufd xmm0, xmm1, 61
 13429 00005118 C3                      ret
 13430                                 .imm62:
 13431 00005119 660F70C13E              pshufd xmm0, xmm1, 62
 13432 0000511E C3                      ret
 13433                                 .imm63:
 13434 0000511F 660F70C13F              pshufd xmm0, xmm1, 63
 13435 00005124 C3                      ret
 13436                                 .imm64:
 13437 00005125 660F70C140              pshufd xmm0, xmm1, 64
 13438 0000512A C3                      ret
 13439                                 .imm65:
 13440 0000512B 660F70C141              pshufd xmm0, xmm1, 65
 13441 00005130 C3                      ret
 13442                                 .imm66:
 13443 00005131 660F70C142              pshufd xmm0, xmm1, 66
 13444 00005136 C3                      ret
 13445                                 .imm67:
 13446 00005137 660F70C143              pshufd xmm0, xmm1, 67
 13447 0000513C C3                      ret
 13448                                 .imm68:
 13449 0000513D 660F70C144              pshufd xmm0, xmm1, 68
 13450 00005142 C3                      ret
 13451                                 .imm69:
 13452 00005143 660F70C145              pshufd xmm0, xmm1, 69
 13453 00005148 C3                      ret
 13454                                 .imm70:
 13455 00005149 660F70C146              pshufd xmm0, xmm1, 70
 13456 0000514E C3                      ret
 13457                                 .imm71:
 13458 0000514F 660F70C147              pshufd xmm0, xmm1, 71
 13459 00005154 C3                      ret
 13460                                 .imm72:
 13461 00005155 660F70C148              pshufd xmm0, xmm1, 72
 13462 0000515A C3                      ret
 13463                                 .imm73:
 13464 0000515B 660F70C149              pshufd xmm0, xmm1, 73
 13465 00005160 C3                      ret
 13466                                 .imm74:
 13467 00005161 660F70C14A              pshufd xmm0, xmm1, 74
 13468 00005166 C3                      ret
 13469                                 .imm75:
 13470 00005167 660F70C14B              pshufd xmm0, xmm1, 75
 13471 0000516C C3                      ret
 13472                                 .imm76:
 13473 0000516D 660F70C14C              pshufd xmm0, xmm1, 76
 13474 00005172 C3                      ret
 13475                                 .imm77:
 13476 00005173 660F70C14D              pshufd xmm0, xmm1, 77
 13477 00005178 C3                      ret
 13478                                 .imm78:
 13479 00005179 660F70C14E              pshufd xmm0, xmm1, 78
 13480 0000517E C3                      ret
 13481                                 .imm79:
 13482 0000517F 660F70C14F              pshufd xmm0, xmm1, 79
 13483 00005184 C3                      ret
 13484                                 .imm80:
 13485 00005185 660F70C150              pshufd xmm0, xmm1, 80
 13486 0000518A C3                      ret
 13487                                 .imm81:
 13488 0000518B 660F70C151              pshufd xmm0, xmm1, 81
 13489 00005190 C3                      ret
 13490                                 .imm82:
 13491 00005191 660F70C152              pshufd xmm0, xmm1, 82
 13492 00005196 C3                      ret
 13493                                 .imm83:
 13494 00005197 660F70C153              pshufd xmm0, xmm1, 83
 13495 0000519C C3                      ret
 13496                                 .imm84:
 13497 0000519D 660F70C154              pshufd xmm0, xmm1, 84
 13498 000051A2 C3                      ret
 13499                                 .imm85:
 13500 000051A3 660F70C155              pshufd xmm0, xmm1, 85
 13501 000051A8 C3                      ret
 13502                                 .imm86:
 13503 000051A9 660F70C156              pshufd xmm0, xmm1, 86
 13504 000051AE C3                      ret
 13505                                 .imm87:
 13506 000051AF 660F70C157              pshufd xmm0, xmm1, 87
 13507 000051B4 C3                      ret
 13508                                 .imm88:
 13509 000051B5 660F70C158              pshufd xmm0, xmm1, 88
 13510 000051BA C3                      ret
 13511                                 .imm89:
 13512 000051BB 660F70C159              pshufd xmm0, xmm1, 89
 13513 000051C0 C3                      ret
 13514                                 .imm90:
 13515 000051C1 660F70C15A              pshufd xmm0, xmm1, 90
 13516 000051C6 C3                      ret
 13517                                 .imm91:
 13518 000051C7 660F70C15B              pshufd xmm0, xmm1, 91
 13519 000051CC C3                      ret
 13520                                 .imm92:
 13521 000051CD 660F70C15C              pshufd xmm0, xmm1, 92
 13522 000051D2 C3                      ret
 13523                                 .imm93:
 13524 000051D3 660F70C15D              pshufd xmm0, xmm1, 93
 13525 000051D8 C3                      ret
 13526                                 .imm94:
 13527 000051D9 660F70C15E              pshufd xmm0, xmm1, 94
 13528 000051DE C3                      ret
 13529                                 .imm95:
 13530 000051DF 660F70C15F              pshufd xmm0, xmm1, 95
 13531 000051E4 C3                      ret
 13532                                 .imm96:
 13533 000051E5 660F70C160              pshufd xmm0, xmm1, 96
 13534 000051EA C3                      ret
 13535                                 .imm97:
 13536 000051EB 660F70C161              pshufd xmm0, xmm1, 97
 13537 000051F0 C3                      ret
 13538                                 .imm98:
 13539 000051F1 660F70C162              pshufd xmm0, xmm1, 98
 13540 000051F6 C3                      ret
 13541                                 .imm99:
 13542 000051F7 660F70C163              pshufd xmm0, xmm1, 99
 13543 000051FC C3                      ret
 13544                                 .imm100:
 13545 000051FD 660F70C164              pshufd xmm0, xmm1, 100
 13546 00005202 C3                      ret
 13547                                 .imm101:
 13548 00005203 660F70C165              pshufd xmm0, xmm1, 101
 13549 00005208 C3                      ret
 13550                                 .imm102:
 13551 00005209 660F70C166              pshufd xmm0, xmm1, 102
 13552 0000520E C3                      ret
 13553                                 .imm103:
 13554 0000520F 660F70C167              pshufd xmm0, xmm1, 103
 13555 00005214 C3                      ret
 13556                                 .imm104:
 13557 00005215 660F70C168              pshufd xmm0, xmm1, 104
 13558 0000521A C3                      ret
 13559                                 .imm105:
 13560 0000521B 660F70C169              pshufd xmm0, xmm1, 105
 13561 00005220 C3                      ret
 13562                                 .imm106:
 13563 00005221 660F70C16A              pshufd xmm0, xmm1, 106
 13564 00005226 C3                      ret
 13565                                 .imm107:
 13566 00005227 660F70C16B              pshufd xmm0, xmm1, 107
 13567 0000522C C3                      ret
 13568                                 .imm108:
 13569 0000522D 660F70C16C              pshufd xmm0, xmm1, 108
 13570 00005232 C3                      ret
 13571                                 .imm109:
 13572 00005233 660F70C16D              pshufd xmm0, xmm1, 109
 13573 00005238 C3                      ret
 13574                                 .imm110:
 13575 00005239 660F70C16E              pshufd xmm0, xmm1, 110
 13576 0000523E C3                      ret
 13577                                 .imm111:
 13578 0000523F 660F70C16F              pshufd xmm0, xmm1, 111
 13579 00005244 C3                      ret
 13580                                 .imm112:
 13581 00005245 660F70C170              pshufd xmm0, xmm1, 112
 13582 0000524A C3                      ret
 13583                                 .imm113:
 13584 0000524B 660F70C171              pshufd xmm0, xmm1, 113
 13585 00005250 C3                      ret
 13586                                 .imm114:
 13587 00005251 660F70C172              pshufd xmm0, xmm1, 114
 13588 00005256 C3                      ret
 13589                                 .imm115:
 13590 00005257 660F70C173              pshufd xmm0, xmm1, 115
 13591 0000525C C3                      ret
 13592                                 .imm116:
 13593 0000525D 660F70C174              pshufd xmm0, xmm1, 116
 13594 00005262 C3                      ret
 13595                                 .imm117:
 13596 00005263 660F70C175              pshufd xmm0, xmm1, 117
 13597 00005268 C3                      ret
 13598                                 .imm118:
 13599 00005269 660F70C176              pshufd xmm0, xmm1, 118
 13600 0000526E C3                      ret
 13601                                 .imm119:
 13602 0000526F 660F70C177              pshufd xmm0, xmm1, 119
 13603 00005274 C3                      ret
 13604                                 .imm120:
 13605 00005275 660F70C178              pshufd xmm0, xmm1, 120
 13606 0000527A C3                      ret
 13607                                 .imm121:
 13608 0000527B 660F70C179              pshufd xmm0, xmm1, 121
 13609 00005280 C3                      ret
 13610                                 .imm122:
 13611 00005281 660F70C17A              pshufd xmm0, xmm1, 122
 13612 00005286 C3                      ret
 13613                                 .imm123:
 13614 00005287 660F70C17B              pshufd xmm0, xmm1, 123
 13615 0000528C C3                      ret
 13616                                 .imm124:
 13617 0000528D 660F70C17C              pshufd xmm0, xmm1, 124
 13618 00005292 C3                      ret
 13619                                 .imm125:
 13620 00005293 660F70C17D              pshufd xmm0, xmm1, 125
 13621 00005298 C3                      ret
 13622                                 .imm126:
 13623 00005299 660F70C17E              pshufd xmm0, xmm1, 126
 13624 0000529E C3                      ret
 13625                                 .imm127:
 13626 0000529F 660F70C17F              pshufd xmm0, xmm1, 127
 13627 000052A4 C3                      ret
 13628                                 .imm128:
 13629 000052A5 660F70C180              pshufd xmm0, xmm1, 128
 13630 000052AA C3                      ret
 13631                                 .imm129:
 13632 000052AB 660F70C181              pshufd xmm0, xmm1, 129
 13633 000052B0 C3                      ret
 13634                                 .imm130:
 13635 000052B1 660F70C182              pshufd xmm0, xmm1, 130
 13636 000052B6 C3                      ret
 13637                                 .imm131:
 13638 000052B7 660F70C183              pshufd xmm0, xmm1, 131
 13639 000052BC C3                      ret
 13640                                 .imm132:
 13641 000052BD 660F70C184              pshufd xmm0, xmm1, 132
 13642 000052C2 C3                      ret
 13643                                 .imm133:
 13644 000052C3 660F70C185              pshufd xmm0, xmm1, 133
 13645 000052C8 C3                      ret
 13646                                 .imm134:
 13647 000052C9 660F70C186              pshufd xmm0, xmm1, 134
 13648 000052CE C3                      ret
 13649                                 .imm135:
 13650 000052CF 660F70C187              pshufd xmm0, xmm1, 135
 13651 000052D4 C3                      ret
 13652                                 .imm136:
 13653 000052D5 660F70C188              pshufd xmm0, xmm1, 136
 13654 000052DA C3                      ret
 13655                                 .imm137:
 13656 000052DB 660F70C189              pshufd xmm0, xmm1, 137
 13657 000052E0 C3                      ret
 13658                                 .imm138:
 13659 000052E1 660F70C18A              pshufd xmm0, xmm1, 138
 13660 000052E6 C3                      ret
 13661                                 .imm139:
 13662 000052E7 660F70C18B              pshufd xmm0, xmm1, 139
 13663 000052EC C3                      ret
 13664                                 .imm140:
 13665 000052ED 660F70C18C              pshufd xmm0, xmm1, 140
 13666 000052F2 C3                      ret
 13667                                 .imm141:
 13668 000052F3 660F70C18D              pshufd xmm0, xmm1, 141
 13669 000052F8 C3                      ret
 13670                                 .imm142:
 13671 000052F9 660F70C18E              pshufd xmm0, xmm1, 142
 13672 000052FE C3                      ret
 13673                                 .imm143:
 13674 000052FF 660F70C18F              pshufd xmm0, xmm1, 143
 13675 00005304 C3                      ret
 13676                                 .imm144:
 13677 00005305 660F70C190              pshufd xmm0, xmm1, 144
 13678 0000530A C3                      ret
 13679                                 .imm145:
 13680 0000530B 660F70C191              pshufd xmm0, xmm1, 145
 13681 00005310 C3                      ret
 13682                                 .imm146:
 13683 00005311 660F70C192              pshufd xmm0, xmm1, 146
 13684 00005316 C3                      ret
 13685                                 .imm147:
 13686 00005317 660F70C193              pshufd xmm0, xmm1, 147
 13687 0000531C C3                      ret
 13688                                 .imm148:
 13689 0000531D 660F70C194              pshufd xmm0, xmm1, 148
 13690 00005322 C3                      ret
 13691                                 .imm149:
 13692 00005323 660F70C195              pshufd xmm0, xmm1, 149
 13693 00005328 C3                      ret
 13694                                 .imm150:
 13695 00005329 660F70C196              pshufd xmm0, xmm1, 150
 13696 0000532E C3                      ret
 13697                                 .imm151:
 13698 0000532F 660F70C197              pshufd xmm0, xmm1, 151
 13699 00005334 C3                      ret
 13700                                 .imm152:
 13701 00005335 660F70C198              pshufd xmm0, xmm1, 152
 13702 0000533A C3                      ret
 13703                                 .imm153:
 13704 0000533B 660F70C199              pshufd xmm0, xmm1, 153
 13705 00005340 C3                      ret
 13706                                 .imm154:
 13707 00005341 660F70C19A              pshufd xmm0, xmm1, 154
 13708 00005346 C3                      ret
 13709                                 .imm155:
 13710 00005347 660F70C19B              pshufd xmm0, xmm1, 155
 13711 0000534C C3                      ret
 13712                                 .imm156:
 13713 0000534D 660F70C19C              pshufd xmm0, xmm1, 156
 13714 00005352 C3                      ret
 13715                                 .imm157:
 13716 00005353 660F70C19D              pshufd xmm0, xmm1, 157
 13717 00005358 C3                      ret
 13718                                 .imm158:
 13719 00005359 660F70C19E              pshufd xmm0, xmm1, 158
 13720 0000535E C3                      ret
 13721                                 .imm159:
 13722 0000535F 660F70C19F              pshufd xmm0, xmm1, 159
 13723 00005364 C3                      ret
 13724                                 .imm160:
 13725 00005365 660F70C1A0              pshufd xmm0, xmm1, 160
 13726 0000536A C3                      ret
 13727                                 .imm161:
 13728 0000536B 660F70C1A1              pshufd xmm0, xmm1, 161
 13729 00005370 C3                      ret
 13730                                 .imm162:
 13731 00005371 660F70C1A2              pshufd xmm0, xmm1, 162
 13732 00005376 C3                      ret
 13733                                 .imm163:
 13734 00005377 660F70C1A3              pshufd xmm0, xmm1, 163
 13735 0000537C C3                      ret
 13736                                 .imm164:
 13737 0000537D 660F70C1A4              pshufd xmm0, xmm1, 164
 13738 00005382 C3                      ret
 13739                                 .imm165:
 13740 00005383 660F70C1A5              pshufd xmm0, xmm1, 165
 13741 00005388 C3                      ret
 13742                                 .imm166:
 13743 00005389 660F70C1A6              pshufd xmm0, xmm1, 166
 13744 0000538E C3                      ret
 13745                                 .imm167:
 13746 0000538F 660F70C1A7              pshufd xmm0, xmm1, 167
 13747 00005394 C3                      ret
 13748                                 .imm168:
 13749 00005395 660F70C1A8              pshufd xmm0, xmm1, 168
 13750 0000539A C3                      ret
 13751                                 .imm169:
 13752 0000539B 660F70C1A9              pshufd xmm0, xmm1, 169
 13753 000053A0 C3                      ret
 13754                                 .imm170:
 13755 000053A1 660F70C1AA              pshufd xmm0, xmm1, 170
 13756 000053A6 C3                      ret
 13757                                 .imm171:
 13758 000053A7 660F70C1AB              pshufd xmm0, xmm1, 171
 13759 000053AC C3                      ret
 13760                                 .imm172:
 13761 000053AD 660F70C1AC              pshufd xmm0, xmm1, 172
 13762 000053B2 C3                      ret
 13763                                 .imm173:
 13764 000053B3 660F70C1AD              pshufd xmm0, xmm1, 173
 13765 000053B8 C3                      ret
 13766                                 .imm174:
 13767 000053B9 660F70C1AE              pshufd xmm0, xmm1, 174
 13768 000053BE C3                      ret
 13769                                 .imm175:
 13770 000053BF 660F70C1AF              pshufd xmm0, xmm1, 175
 13771 000053C4 C3                      ret
 13772                                 .imm176:
 13773 000053C5 660F70C1B0              pshufd xmm0, xmm1, 176
 13774 000053CA C3                      ret
 13775                                 .imm177:
 13776 000053CB 660F70C1B1              pshufd xmm0, xmm1, 177
 13777 000053D0 C3                      ret
 13778                                 .imm178:
 13779 000053D1 660F70C1B2              pshufd xmm0, xmm1, 178
 13780 000053D6 C3                      ret
 13781                                 .imm179:
 13782 000053D7 660F70C1B3              pshufd xmm0, xmm1, 179
 13783 000053DC C3                      ret
 13784                                 .imm180:
 13785 000053DD 660F70C1B4              pshufd xmm0, xmm1, 180
 13786 000053E2 C3                      ret
 13787                                 .imm181:
 13788 000053E3 660F70C1B5              pshufd xmm0, xmm1, 181
 13789 000053E8 C3                      ret
 13790                                 .imm182:
 13791 000053E9 660F70C1B6              pshufd xmm0, xmm1, 182
 13792 000053EE C3                      ret
 13793                                 .imm183:
 13794 000053EF 660F70C1B7              pshufd xmm0, xmm1, 183
 13795 000053F4 C3                      ret
 13796                                 .imm184:
 13797 000053F5 660F70C1B8              pshufd xmm0, xmm1, 184
 13798 000053FA C3                      ret
 13799                                 .imm185:
 13800 000053FB 660F70C1B9              pshufd xmm0, xmm1, 185
 13801 00005400 C3                      ret
 13802                                 .imm186:
 13803 00005401 660F70C1BA              pshufd xmm0, xmm1, 186
 13804 00005406 C3                      ret
 13805                                 .imm187:
 13806 00005407 660F70C1BB              pshufd xmm0, xmm1, 187
 13807 0000540C C3                      ret
 13808                                 .imm188:
 13809 0000540D 660F70C1BC              pshufd xmm0, xmm1, 188
 13810 00005412 C3                      ret
 13811                                 .imm189:
 13812 00005413 660F70C1BD              pshufd xmm0, xmm1, 189
 13813 00005418 C3                      ret
 13814                                 .imm190:
 13815 00005419 660F70C1BE              pshufd xmm0, xmm1, 190
 13816 0000541E C3                      ret
 13817                                 .imm191:
 13818 0000541F 660F70C1BF              pshufd xmm0, xmm1, 191
 13819 00005424 C3                      ret
 13820                                 .imm192:
 13821 00005425 660F70C1C0              pshufd xmm0, xmm1, 192
 13822 0000542A C3                      ret
 13823                                 .imm193:
 13824 0000542B 660F70C1C1              pshufd xmm0, xmm1, 193
 13825 00005430 C3                      ret
 13826                                 .imm194:
 13827 00005431 660F70C1C2              pshufd xmm0, xmm1, 194
 13828 00005436 C3                      ret
 13829                                 .imm195:
 13830 00005437 660F70C1C3              pshufd xmm0, xmm1, 195
 13831 0000543C C3                      ret
 13832                                 .imm196:
 13833 0000543D 660F70C1C4              pshufd xmm0, xmm1, 196
 13834 00005442 C3                      ret
 13835                                 .imm197:
 13836 00005443 660F70C1C5              pshufd xmm0, xmm1, 197
 13837 00005448 C3                      ret
 13838                                 .imm198:
 13839 00005449 660F70C1C6              pshufd xmm0, xmm1, 198
 13840 0000544E C3                      ret
 13841                                 .imm199:
 13842 0000544F 660F70C1C7              pshufd xmm0, xmm1, 199
 13843 00005454 C3                      ret
 13844                                 .imm200:
 13845 00005455 660F70C1C8              pshufd xmm0, xmm1, 200
 13846 0000545A C3                      ret
 13847                                 .imm201:
 13848 0000545B 660F70C1C9              pshufd xmm0, xmm1, 201
 13849 00005460 C3                      ret
 13850                                 .imm202:
 13851 00005461 660F70C1CA              pshufd xmm0, xmm1, 202
 13852 00005466 C3                      ret
 13853                                 .imm203:
 13854 00005467 660F70C1CB              pshufd xmm0, xmm1, 203
 13855 0000546C C3                      ret
 13856                                 .imm204:
 13857 0000546D 660F70C1CC              pshufd xmm0, xmm1, 204
 13858 00005472 C3                      ret
 13859                                 .imm205:
 13860 00005473 660F70C1CD              pshufd xmm0, xmm1, 205
 13861 00005478 C3                      ret
 13862                                 .imm206:
 13863 00005479 660F70C1CE              pshufd xmm0, xmm1, 206
 13864 0000547E C3                      ret
 13865                                 .imm207:
 13866 0000547F 660F70C1CF              pshufd xmm0, xmm1, 207
 13867 00005484 C3                      ret
 13868                                 .imm208:
 13869 00005485 660F70C1D0              pshufd xmm0, xmm1, 208
 13870 0000548A C3                      ret
 13871                                 .imm209:
 13872 0000548B 660F70C1D1              pshufd xmm0, xmm1, 209
 13873 00005490 C3                      ret
 13874                                 .imm210:
 13875 00005491 660F70C1D2              pshufd xmm0, xmm1, 210
 13876 00005496 C3                      ret
 13877                                 .imm211:
 13878 00005497 660F70C1D3              pshufd xmm0, xmm1, 211
 13879 0000549C C3                      ret
 13880                                 .imm212:
 13881 0000549D 660F70C1D4              pshufd xmm0, xmm1, 212
 13882 000054A2 C3                      ret
 13883                                 .imm213:
 13884 000054A3 660F70C1D5              pshufd xmm0, xmm1, 213
 13885 000054A8 C3                      ret
 13886                                 .imm214:
 13887 000054A9 660F70C1D6              pshufd xmm0, xmm1, 214
 13888 000054AE C3                      ret
 13889                                 .imm215:
 13890 000054AF 660F70C1D7              pshufd xmm0, xmm1, 215
 13891 000054B4 C3                      ret
 13892                                 .imm216:
 13893 000054B5 660F70C1D8              pshufd xmm0, xmm1, 216
 13894 000054BA C3                      ret
 13895                                 .imm217:
 13896 000054BB 660F70C1D9              pshufd xmm0, xmm1, 217
 13897 000054C0 C3                      ret
 13898                                 .imm218:
 13899 000054C1 660F70C1DA              pshufd xmm0, xmm1, 218
 13900 000054C6 C3                      ret
 13901                                 .imm219:
 13902 000054C7 660F70C1DB              pshufd xmm0, xmm1, 219
 13903 000054CC C3                      ret
 13904                                 .imm220:
 13905 000054CD 660F70C1DC              pshufd xmm0, xmm1, 220
 13906 000054D2 C3                      ret
 13907                                 .imm221:
 13908 000054D3 660F70C1DD              pshufd xmm0, xmm1, 221
 13909 000054D8 C3                      ret
 13910                                 .imm222:
 13911 000054D9 660F70C1DE              pshufd xmm0, xmm1, 222
 13912 000054DE C3                      ret
 13913                                 .imm223:
 13914 000054DF 660F70C1DF              pshufd xmm0, xmm1, 223
 13915 000054E4 C3                      ret
 13916                                 .imm224:
 13917 000054E5 660F70C1E0              pshufd xmm0, xmm1, 224
 13918 000054EA C3                      ret
 13919                                 .imm225:
 13920 000054EB 660F70C1E1              pshufd xmm0, xmm1, 225
 13921 000054F0 C3                      ret
 13922                                 .imm226:
 13923 000054F1 660F70C1E2              pshufd xmm0, xmm1, 226
 13924 000054F6 C3                      ret
 13925                                 .imm227:
 13926 000054F7 660F70C1E3              pshufd xmm0, xmm1, 227
 13927 000054FC C3                      ret
 13928                                 .imm228:
 13929 000054FD 660F70C1E4              pshufd xmm0, xmm1, 228
 13930 00005502 C3                      ret
 13931                                 .imm229:
 13932 00005503 660F70C1E5              pshufd xmm0, xmm1, 229
 13933 00005508 C3                      ret
 13934                                 .imm230:
 13935 00005509 660F70C1E6              pshufd xmm0, xmm1, 230
 13936 0000550E C3                      ret
 13937                                 .imm231:
 13938 0000550F 660F70C1E7              pshufd xmm0, xmm1, 231
 13939 00005514 C3                      ret
 13940                                 .imm232:
 13941 00005515 660F70C1E8              pshufd xmm0, xmm1, 232
 13942 0000551A C3                      ret
 13943                                 .imm233:
 13944 0000551B 660F70C1E9              pshufd xmm0, xmm1, 233
 13945 00005520 C3                      ret
 13946                                 .imm234:
 13947 00005521 660F70C1EA              pshufd xmm0, xmm1, 234
 13948 00005526 C3                      ret
 13949                                 .imm235:
 13950 00005527 660F70C1EB              pshufd xmm0, xmm1, 235
 13951 0000552C C3                      ret
 13952                                 .imm236:
 13953 0000552D 660F70C1EC              pshufd xmm0, xmm1, 236
 13954 00005532 C3                      ret
 13955                                 .imm237:
 13956 00005533 660F70C1ED              pshufd xmm0, xmm1, 237
 13957 00005538 C3                      ret
 13958                                 .imm238:
 13959 00005539 660F70C1EE              pshufd xmm0, xmm1, 238
 13960 0000553E C3                      ret
 13961                                 .imm239:
 13962 0000553F 660F70C1EF              pshufd xmm0, xmm1, 239
 13963 00005544 C3                      ret
 13964                                 .imm240:
 13965 00005545 660F70C1F0              pshufd xmm0, xmm1, 240
 13966 0000554A C3                      ret
 13967                                 .imm241:
 13968 0000554B 660F70C1F1              pshufd xmm0, xmm1, 241
 13969 00005550 C3                      ret
 13970                                 .imm242:
 13971 00005551 660F70C1F2              pshufd xmm0, xmm1, 242
 13972 00005556 C3                      ret
 13973                                 .imm243:
 13974 00005557 660F70C1F3              pshufd xmm0, xmm1, 243
 13975 0000555C C3                      ret
 13976                                 .imm244:
 13977 0000555D 660F70C1F4              pshufd xmm0, xmm1, 244
 13978 00005562 C3                      ret
 13979                                 .imm245:
 13980 00005563 660F70C1F5              pshufd xmm0, xmm1, 245
 13981 00005568 C3                      ret
 13982                                 .imm246:
 13983 00005569 660F70C1F6              pshufd xmm0, xmm1, 246
 13984 0000556E C3                      ret
 13985                                 .imm247:
 13986 0000556F 660F70C1F7              pshufd xmm0, xmm1, 247
 13987 00005574 C3                      ret
 13988                                 .imm248:
 13989 00005575 660F70C1F8              pshufd xmm0, xmm1, 248
 13990 0000557A C3                      ret
 13991                                 .imm249:
 13992 0000557B 660F70C1F9              pshufd xmm0, xmm1, 249
 13993 00005580 C3                      ret
 13994                                 .imm250:
 13995 00005581 660F70C1FA              pshufd xmm0, xmm1, 250
 13996 00005586 C3                      ret
 13997                                 .imm251:
 13998 00005587 660F70C1FB              pshufd xmm0, xmm1, 251
 13999 0000558C C3                      ret
 14000                                 .imm252:
 14001 0000558D 660F70C1FC              pshufd xmm0, xmm1, 252
 14002 00005592 C3                      ret
 14003                                 .imm253:
 14004 00005593 660F70C1FD              pshufd xmm0, xmm1, 253
 14005 00005598 C3                      ret
 14006                                 .imm254:
 14007 00005599 660F70C1FE              pshufd xmm0, xmm1, 254
 14008 0000559E C3                      ret
 14009                                 .imm255:
 14010 0000559F 660F70C1FF              pshufd xmm0, xmm1, 255
 14011 000055A4 C3                      ret
 14012                                 .immEnd:
 14013 000055A5 FFFF                   dw 0xf9ff + (.immEnd - .imm0)
 14014 000055A7 FFFF                   dw 0x105ff - (.immEnd - .imm0)
 14015                                 [global iemAImpl_pshufd_EndProc:function hidden]
 14016                                 iemAImpl_pshufd_EndProc:
 14017                                 [size iemAImpl_pshufd iemAImpl_pshufd_EndProc - iemAImpl_pshufd]
 14018                                 [size iemAImpl_pshufd_EndProc 0]
 14019 000055A9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 14020                                 %line 2918+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14021                                 
 14022                                 
 14023                                 
 14024                                 
 14025                                 
 14026                                 
 14027                                 [global iemAImpl_pmovmskb_u64]
 14028                                 %line 2924+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14029                                 iemAImpl_pmovmskb_u64:
 14030                                 %line 2925+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14031 000055AD 53                      push ebx
 14032                                 %line 2925+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14033 000055AE 8B5C2408                mov ebx, [esp + 4 + 4]
 14034 000055B2 57                      push edi
 14035                                 %line 2927+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14036                                 
 14037 000055B3 8B02                    mov eax, [edx]
 14038 000055B5 0F6F0B                  movq mm1, [ebx]
 14039 000055B8 0FD7C1                  pmovmskb eax, mm1
 14040 000055BB 8902                    mov [edx], eax
 14041                                 %line 2933+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14042 000055BD C7420400000000          mov dword [edx + 4], 0
 14043                                 %line 2936+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14044 000055C4 5F                      pop edi
 14045                                 %line 2936+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14046 000055C5 5B                      pop ebx
 14047 000055C6 C20400                  ret 4
 14048                                 %line 2937+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14049                                 [global iemAImpl_pmovmskb_u64_EndProc:function hidden]
 14050                                 %line 2937+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14051                                 iemAImpl_pmovmskb_u64_EndProc:
 14052                                 [size iemAImpl_pmovmskb_u64 iemAImpl_pmovmskb_u64_EndProc - iemAImpl_pmovmskb_u64]
 14053                                 [size iemAImpl_pmovmskb_u64_EndProc 0]
 14054 000055C9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 14055                                 %line 2938+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14056                                 
 14057                                 [global iemAImpl_pmovmskb_u128]
 14058                                 %line 2939+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14059                                 iemAImpl_pmovmskb_u128:
 14060                                 %line 2940+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14061 000055CD 53                      push ebx
 14062                                 %line 2940+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14063 000055CE 8B5C2408                mov ebx, [esp + 4 + 4]
 14064 000055D2 57                      push edi
 14065                                 %line 2942+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14066                                 
 14067 000055D3 8B02                    mov eax, [edx]
 14068 000055D5 F30F6F0B                movdqu xmm1, [ebx]
 14069 000055D9 660FD7C1                pmovmskb eax, xmm1
 14070 000055DD 8902                    mov [edx], eax
 14071                                 %line 2948+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14072 000055DF C7420400000000          mov dword [edx + 4], 0
 14073                                 %line 2951+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14074 000055E6 5F                      pop edi
 14075                                 %line 2951+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14076 000055E7 5B                      pop ebx
 14077 000055E8 C20400                  ret 4
 14078                                 %line 2952+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14079                                 [global iemAImpl_pmovmskb_u128_EndProc:function hidden]
 14080                                 %line 2952+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14081                                 iemAImpl_pmovmskb_u128_EndProc:
 14082                                 [size iemAImpl_pmovmskb_u128 iemAImpl_pmovmskb_u128_EndProc - iemAImpl_pmovmskb_u128]
 14083                                 [size iemAImpl_pmovmskb_u128_EndProc 0]
 14084 000055EB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 14085                                 %line 2953+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 14086                                 
