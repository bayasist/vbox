     1                                 %line 1+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 %line 1+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 
    41                                 
    42                                 
    43                                 
    44                                 
    45                                 
    46                                 
    47                                 
    48                                 %line 28+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
    49                                 
    50                                 
    51                                 
    52                                 
    53                                 %line 37+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
    54                                 
    55                                 %line 1+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    56                                 
    57                                 
    58                                 
    59                                 
    60                                 
    61                                 
    62                                 
    63                                 
    64                                 
    65                                 
    66                                 
    67                                 
    68                                 
    69                                 
    70                                 
    71                                 
    72                                 
    73                                 
    74                                 
    75                                 
    76                                 
    77                                 
    78                                 
    79                                 
    80                                 
    81                                 %line 28+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    82                                 
    83                                 
    84                                 
    85                                 
    86                                 
    87                                 
    88                                 %line 35+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    89                                 
    90                                 %line 37+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    91                                 
    92                                 %line 39+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    93                                 
    94                                 %line 41+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    95                                 
    96                                 %line 43+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    97                                 
    98                                 %line 45+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
    99                                 
   100                                 %line 47+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   101                                 
   102                                 %line 49+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   103                                 
   104                                 %line 51+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   105                                 
   106                                 %line 53+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   107                                 
   108                                 %line 55+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   109                                 
   110                                 %line 57+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   111                                 
   112                                 %line 59+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   113                                 
   114                                 %line 61+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   115                                 
   116                                 %line 63+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   117                                 
   118                                 %line 65+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   119                                 
   120                                 %line 67+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   121                                 
   122                                 
   123                                 
   124                                 
   125                                 
   126                                 %line 73+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   127                                 
   128                                 
   129                                 
   130                                 %line 77+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   131                                 
   132                                 
   133                                 %line 84+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   134                                 
   135                                 
   136                                 
   137                                 %line 92+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   138                                 
   139                                 
   140                                 
   141                                 %line 100+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   142                                 
   143                                 
   144                                 
   145                                 %line 108+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   146                                 
   147                                 
   148                                 
   149                                 %line 116+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   150                                 
   151                                 
   152                                 
   153                                 
   154                                 %line 121+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   155                                 
   156                                 
   157                                 
   158                                 %line 125+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   159                                 
   160                                 
   161                                 
   162                                 %line 129+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   163                                 
   164                                 
   165                                 
   166                                 
   167                                 
   168                                 %line 137+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   169                                 
   170                                 
   171                                 
   172                                 
   173                                 %line 157+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   174                                 
   175                                 
   176                                 
   177                                 %line 165+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   178                                 
   179                                 
   180                                 
   181                                 %line 177+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   182                                 
   183                                 
   184                                 
   185                                 
   186                                 %line 188+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   187                                 
   188                                 
   189                                 
   190                                 %line 211+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   191                                 
   192                                 
   193                                 
   194                                 
   195                                 
   196                                 %line 222+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   197                                 
   198                                 
   199                                 
   200                                 %line 236+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   201                                 
   202                                 
   203                                 
   204                                 %line 249+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   205                                 
   206                                 
   207                                 
   208                                 %line 263+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   209                                 
   210                                 
   211                                 
   212                                 %line 274+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   213                                 
   214                                 
   215                                 
   216                                 %line 288+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   217                                 
   218                                 
   219                                 
   220                                 %line 302+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   221                                 
   222                                 
   223                                 
   224                                 
   225                                 
   226                                 
   227                                 
   228                                 
   229                                 %line 356+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   230                                 
   231                                 %line 363+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   232                                 
   233                                 
   234                                 
   235                                 
   236                                 %line 376+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   237                                 
   238                                 
   239                                 
   240                                 
   241                                 
   242                                 
   243                                 
   244                                 %line 396+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   245                                 
   246                                 
   247                                 
   248                                 %line 408+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   249                                 
   250                                 
   251                                 
   252                                 %line 420+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   253                                 
   254                                 
   255                                 
   256                                 
   257                                 
   258                                 %line 432+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   259                                 
   260                                 
   261                                 
   262                                 %line 442+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   263                                 
   264                                 
   265                                 
   266                                 %line 452+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   267                                 
   268                                 
   269                                 
   270                                 %line 462+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   271                                 
   272                                 
   273                                 
   274                                 %line 472+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   275                                 
   276                                 
   277                                 
   278                                 
   279                                 
   280                                 %line 482+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   281                                 
   282                                 
   283                                 
   284                                 
   285                                 %line 491+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   286                                 
   287                                 
   288                                 
   289                                 %line 499+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   290                                 
   291                                 
   292                                 
   293                                 %line 507+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   294                                 
   295                                 
   296                                 
   297                                 
   298                                 
   299                                 %line 517+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   300                                 
   301                                 
   302                                 
   303                                 
   304                                 %line 526+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   305                                 
   306                                 
   307                                 
   308                                 %line 534+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   309                                 
   310                                 
   311                                 
   312                                 %line 542+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   313                                 
   314                                 
   315                                 
   316                                 
   317                                 
   318                                 %line 552+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   319                                 
   320                                 
   321                                 
   322                                 
   323                                 %line 561+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   324                                 
   325                                 
   326                                 
   327                                 %line 569+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   328                                 
   329                                 
   330                                 
   331                                 %line 577+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   332                                 
   333                                 
   334                                 
   335                                 
   336                                 
   337                                 %line 587+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   338                                 
   339                                 
   340                                 
   341                                 
   342                                 %line 596+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   343                                 
   344                                 %line 599+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   345                                 
   346                                 
   347                                 
   348                                 %line 607+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   349                                 
   350                                 
   351                                 
   352                                 %line 615+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   353                                 
   354                                 
   355                                 
   356                                 
   357                                 %line 620+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   358                                 
   359                                 
   360                                 
   361                                 
   362                                 %line 625+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   363                                 
   364                                 
   365                                 
   366                                 %line 629+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   367                                 
   368                                 
   369                                 
   370                                 %line 633+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   371                                 
   372                                 
   373                                 
   374                                 
   375                                 
   376                                 
   377                                 
   378                                 
   379                                 
   380                                 
   381                                 
   382                                 
   383                                 
   384                                 
   385                                 
   386                                 %line 666+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   387                                 
   388                                 
   389                                 
   390                                 
   391                                 
   392                                 %line 672+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   393                                 
   394                                 
   395                                 
   396                                 
   397                                 %line 677+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   398                                 
   399                                 
   400                                 
   401                                 %line 681+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   402                                 
   403                                 
   404                                 
   405                                 %line 685+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   406                                 
   407                                 
   408                                 
   409                                 
   410                                 
   411                                 %line 691+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   412                                 
   413                                 
   414                                 
   415                                 
   416                                 %line 696+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   417                                 
   418                                 
   419                                 
   420                                 %line 700+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   421                                 
   422                                 
   423                                 
   424                                 %line 704+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   425                                 
   426                                 
   427                                 
   428                                 
   429                                 
   430                                 
   431                                 
   432                                 
   433                                 %line 721+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   434                                 
   435                                 
   436                                 
   437                                 
   438                                 
   439                                 
   440                                 
   441                                 
   442                                 
   443                                 
   444                                 
   445                                 
   446                                 
   447                                 
   448                                 %line 738+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   449                                 
   450                                 %line 752+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   451                                 
   452                                 
   453                                 
   454                                 
   455                                 
   456                                 
   457                                 
   458                                 
   459                                 
   460                                 
   461                                 
   462                                 
   463                                 
   464                                 %line 770+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   465                                 
   466                                 
   467                                 
   468                                 
   469                                 
   470                                 
   471                                 
   472                                 %line 791+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   473                                 
   474                                 %line 797+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   475                                 
   476                                 
   477                                 
   478                                 
   479                                 
   480                                 
   481                                 
   482                                 
   483                                 
   484                                 
   485                                 
   486                                 
   487                                 
   488                                 
   489                                 
   490                                 
   491                                 
   492                                 
   493                                 
   494                                 
   495                                 
   496                                 
   497                                 
   498                                 
   499                                 
   500                                 
   501                                 
   502                                 
   503                                 
   504                                 
   505                                 
   506                                 
   507                                 
   508                                 %line 853+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   509                                 
   510                                 
   511                                 
   512                                 
   513                                 
   514                                 
   515                                 
   516                                 
   517                                 
   518                                 
   519                                 %line 873+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   520                                 
   521                                 
   522                                 
   523                                 %line 886+1 /home/se170/VirtualBox-4.3.28/include/iprt/asmdefs.mac
   524                                 
   525                                 %line 39+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   526                                 
   527                                 
   528                                 
   529                                 
   530                                 %line 51+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   531                                 
   532                                 
   533                                 %line 66+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   534                                 
   535                                 
   536                                 
   537                                 
   538                                 
   539                                 
   540                                 
   541                                 %line 116+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   542                                 
   543                                 
   544                                 
   545                                 
   546                                 
   547                                 
   548                                 %line 159+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   549                                 
   550                                 %line 195+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   551                                 
   552                                 %line 203+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   553                                 
   554                                 
   555                                 
   556                                 
   557                                 %line 232+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   558                                 
   559                                 
   560                                 
   561                                 
   562                                 
   563                                 %line 260+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   564                                 
   565                                 %line 284+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   566                                 
   567                                 %line 292+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   568                                 
   569                                 
   570                                 
   571                                 
   572                                 %line 331+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   573                                 
   574                                 
   575                                 
   576                                 
   577                                 
   578                                 %line 369+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   579                                 
   580                                 %line 403+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   581                                 
   582                                 %line 411+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   583                                 
   584                                 
   585                                 
   586                                 
   587                                 
   588                                 %line 453+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   589                                 
   590                                 
   591                                 
   592                                 
   593                                 
   594                                 %line 494+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   595                                 
   596                                 %line 531+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   597                                 
   598                                 %line 539+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   599                                 
   600                                 
   601                                 
   602                                 
   603                                 %line 579+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   604                                 
   605                                 
   606                                 
   607                                 
   608                                 
   609                                 %line 621+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   610                                 
   611                                 %line 659+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   612                                 
   613                                 %line 667+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   614                                 
   615                                 
   616                                 
   617                                 
   618                                 
   619                                 
   620                                 %line 701+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   621                                 
   622                                 %line 730+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   623                                 
   624                                 %line 738+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   625                                 
   626                                 
   627                                 
   628                                 
   629                                 
   630                                 %line 756+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   631                                 
   632                                 
   633                                 
   634                                 
   635                                 
   636                                 %line 773+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   637                                 
   638                                 %line 775+1 /home/se170/VirtualBox-4.3.28/include/VBox/asmdefs.mac
   639                                 
   640                                 %line 1+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   641                                 
   642                                 
   643                                 
   644                                 
   645                                 
   646                                 
   647                                 
   648                                 
   649                                 
   650                                 
   651                                 
   652                                 
   653                                 
   654                                 
   655                                 
   656                                 
   657                                 
   658                                 
   659                                 
   660                                 
   661                                 
   662                                 
   663                                 
   664                                 
   665                                 
   666                                 
   667                                 %line 29+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   668                                 
   669                                 
   670                                 %line 52+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   671                                 
   672                                 %line 54+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   673                                 
   674                                 
   675                                 
   676                                 
   677                                 
   678                                 [absolute 0]
   679                                 %line 59+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   680                                 X86FSTENV32P:
   681                                 %line 60+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   682                                  .FCW resw 1
   683                                  .padding1 resw 1
   684                                  .FSW resw 1
   685                                  .padding2 resw 1
   686                                  .FTW resw 1
   687                                  .padding3 resw 1
   688                                  .FPUIP resd 1
   689                                  .FPUCS resw 1
   690                                  .FOP resw 1
   691                                  .FPUDP resd 1
   692                                  .FPUDS resw 1
   693                                  .padding4 resw 1
   694                                 X86FSTENV32P_size:
   695                                 %line 72+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   696                                 [section .text]
   697                                 %line 73+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   698                                 
   699                                 
   700                                 
   701                                 
   702                                 
   703                                 [absolute 0]
   704                                 %line 78+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   705                                 X86FXSTATE:
   706                                 %line 79+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   707                                  .FCW resw 1
   708                                  .FSW resw 1
   709                                  .FTW resw 1
   710                                  .FOP resw 1
   711                                  .FPUIP resd 1
   712                                  .FPUCS resw 1
   713                                  .Rsrvd1 resw 1
   714                                  .FPUDP resd 1
   715                                  .FPUDS resw 1
   716                                  .Rsrvd2 resw 1
   717                                  .MXCSR resd 1
   718                                  .MXCSR_MASK resd 1
   719                                  .st0 resd 4
   720                                  .st1 resd 4
   721                                  .st2 resd 4
   722                                  .st3 resd 4
   723                                  .st4 resd 4
   724                                  .st5 resd 4
   725                                  .st6 resd 4
   726                                  .st7 resd 4
   727                                  .xmm0 resd 4
   728                                  .xmm1 resd 4
   729                                  .xmm2 resd 4
   730                                  .xmm3 resd 4
   731                                  .xmm4 resd 4
   732                                  .xmm5 resd 4
   733                                  .xmm6 resd 4
   734                                  .xmm7 resd 4
   735                                  .xmm8 resd 4
   736                                  .xmm9 resd 4
   737                                  .xmm10 resd 4
   738                                  .xmm11 resd 4
   739                                  .xmm12 resd 4
   740                                  .xmm13 resd 4
   741                                  .xmm14 resd 4
   742                                  .xmm15 resd 4
   743                                  .au32RsrvdRest resd 24
   744                                 X86FXSTATE_size:
   745                                 %line 116+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   746                                 [section .text]
   747                                 %line 117+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   748                                 
   749                                 
   750                                 [absolute 0]
   751                                 %line 119+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   752                                 X86TSS16:
   753                                 %line 120+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   754                                  .selPrev resw 1
   755                                  .sp0 resw 1
   756                                  .ss0 resw 1
   757                                  .sp1 resw 1
   758                                  .ss1 resw 1
   759                                  .sp2 resw 1
   760                                  .ss2 resw 1
   761                                  .ip resw 1
   762                                  .flags resw 1
   763                                  .ax resw 1
   764                                  .cx resw 1
   765                                  .dx resw 1
   766                                  .bx resw 1
   767                                  .sp resw 1
   768                                  .bp resw 1
   769                                  .si resw 1
   770                                  .di resw 1
   771                                  .es resw 1
   772                                  .cs resw 1
   773                                  .ss resw 1
   774                                  .ds resw 1
   775                                  .selLdt resw 1
   776                                 X86TSS16_size:
   777                                 %line 142+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   778                                 [section .text]
   779                                 %line 144+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   780                                 
   781                                 
   782                                 [absolute 0]
   783                                 %line 146+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   784                                 X86TSS32:
   785                                 %line 147+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   786                                  .selPrev resw 1
   787                                  .padding1 resw 1
   788                                  .esp0 resd 1
   789                                  .ss0 resw 1
   790                                  .padding_ss0 resw 1
   791                                  .esp1 resd 1
   792                                  .ss1 resw 1
   793                                  .padding_ss1 resw 1
   794                                  .esp2 resd 1
   795                                  .ss2 resw 1
   796                                  .padding_ss2 resw 1
   797                                  .cr3 resd 1
   798                                  .eip resd 1
   799                                  .eflags resd 1
   800                                  .eax resd 1
   801                                  .ecx resd 1
   802                                  .edx resd 1
   803                                  .ebx resd 1
   804                                  .esp resd 1
   805                                  .ebp resd 1
   806                                  .esi resd 1
   807                                  .edi resd 1
   808                                  .es resw 1
   809                                  .padding_es resw 1
   810                                  .cs resw 1
   811                                  .padding_cs resw 1
   812                                  .ss resw 1
   813                                  .padding_ss resw 1
   814                                  .ds resw 1
   815                                  .padding_ds resw 1
   816                                  .fs resw 1
   817                                  .padding_fs resw 1
   818                                  .gs resw 1
   819                                  .padding_gs resw 1
   820                                  .selLdt resw 1
   821                                  .padding_ldt resw 1
   822                                  .fDebugTrap resw 1
   823                                  .offIoBitmap resw 1
   824                                  .IntRedirBitmap resb 32
   825                                 X86TSS32_size:
   826                                 %line 186+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   827                                 [section .text]
   828                                 %line 187+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   829                                 
   830                                 
   831                                 [absolute 0]
   832                                 %line 189+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   833                                 X86TSS64:
   834                                 %line 190+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   835                                  .u32Reserved resd 1
   836                                  .rsp0 resq 1
   837                                  .rsp1 resq 1
   838                                  .rsp2 resq 1
   839                                  .u32Reserved2 resd 2
   840                                  .ist1 resq 1
   841                                  .ist2 resq 1
   842                                  .ist3 resq 1
   843                                  .ist4 resq 1
   844                                  .ist5 resq 1
   845                                  .ist6 resq 1
   846                                  .ist7 resq 1
   847                                  .u16Reserved resw 5
   848                                  .offIoBitmap resw 1
   849                                  .IntRedirBitmap resb 32
   850                                 X86TSS64_size:
   851                                 %line 205+0 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   852                                 [section .text]
   853                                 %line 207+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   854                                 
   855                                 %line 209+1 /home/se170/VirtualBox-4.3.28/include/iprt/x86extra.mac
   856                                 
   857                                 %line 24+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   858                                 
   859                                 
   860                                 
   861                                 
   862                                 
   863                                 
   864                                 
   865                                 
   866                                 
   867                                 %line 44+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   868                                 
   869                                 
   870                                 
   871                                 
   872                                 
   873                                 
   874                                 
   875                                 
   876                                 %line 59+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   877                                 
   878                                 
   879                                 
   880                                 
   881                                 
   882                                 
   883                                 
   884                                 %line 80+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   885                                 
   886                                 
   887                                 
   888                                 
   889                                 
   890                                 %line 94+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   891                                 
   892                                 %line 103+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   893                                 
   894                                 %line 112+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   895                                 
   896                                 %line 121+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   897                                 
   898                                 %line 127+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   899                                 
   900                                 %line 132+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   901                                 
   902                                 %line 137+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   903                                 
   904                                 %line 142+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   905                                 
   906                                 %line 163+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   907                                 
   908                                 %line 168+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   909                                 
   910                                 %line 173+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   911                                 
   912                                 %line 265+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   913                                 
   914                                 
   915                                 
   916                                 
   917                                 
   918                                 
   919                                 
   920                                 
   921                                 
   922                                 
   923                                 
   924                                 %line 286+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   925                                 
   926                                 
   927                                 
   928                                 
   929                                 
   930                                 
   931                                 
   932                                 
   933                                 
   934                                 %line 306+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   935                                 
   936                                 
   937                                 
   938                                 
   939                                 
   940                                 
   941                                 
   942                                 
   943                                 
   944                                 
   945                                 
   946                                 
   947                                 
   948                                 
   949                                 
   950                                 
   951                                 
   952                                 %line 396+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   953                                 
   954                                 
   955                                 [section .text]
   956                                 %line 398+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
   957                                 [global iemAImpl_add_u8]
   958                                 iemAImpl_add_u8:
   959                                 
   960 00000000 9C                      pushf
   961 00000001 8B02                    mov eax, [rdx]
   962 00000003 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   963 0000000A 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   964 0000000F 48090424                or [rsp], rax
   965 00000013 9D                      popf
   966                                 
   967 00000014 400037                  add byte [rdi], sil
   968 00000017 9C                      pushf
   969 00000018 415B                    pop r11
   970 0000001A 8B02                    mov eax, [rdx]
   971 0000001C 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   972 00000021 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   973 00000028 4409D8                  or eax, r11d
   974 0000002B 8902                    mov [rdx], eax
   975 0000002D C3                      ret
   976                                 [global iemAImpl_add_u8_EndProc:function hidden]
   977                                 iemAImpl_add_u8_EndProc:
   978                                 [size iemAImpl_add_u8 iemAImpl_add_u8_EndProc - iemAImpl_add_u8]
   979                                 [size iemAImpl_add_u8_EndProc 0]
   980 0000002E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
   981                                 
   982                                 [global iemAImpl_add_u16]
   983                                 iemAImpl_add_u16:
   984                                 
   985 00000032 9C                      pushf
   986 00000033 8B02                    mov eax, [rdx]
   987 00000035 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   988 0000003C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   989 00000041 48090424                or [rsp], rax
   990 00000045 9D                      popf
   991                                 
   992 00000046 660137                  add word [rdi], si
   993 00000049 9C                      pushf
   994 0000004A 415B                    pop r11
   995 0000004C 8B02                    mov eax, [rdx]
   996 0000004E 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   997 00000053 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
   998 0000005A 4409D8                  or eax, r11d
   999 0000005D 8902                    mov [rdx], eax
  1000 0000005F C3                      ret
  1001                                 [global iemAImpl_add_u16_EndProc:function hidden]
  1002                                 iemAImpl_add_u16_EndProc:
  1003                                 [size iemAImpl_add_u16 iemAImpl_add_u16_EndProc - iemAImpl_add_u16]
  1004                                 [size iemAImpl_add_u16_EndProc 0]
  1005 00000060 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1006                                 
  1007                                 [global iemAImpl_add_u32]
  1008                                 iemAImpl_add_u32:
  1009                                 
  1010 00000064 9C                      pushf
  1011 00000065 8B02                    mov eax, [rdx]
  1012 00000067 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1013 0000006E 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1014 00000073 48090424                or [rsp], rax
  1015 00000077 9D                      popf
  1016                                 
  1017 00000078 0137                    add dword [rdi], esi
  1018 0000007A 9C                      pushf
  1019 0000007B 415B                    pop r11
  1020 0000007D 8B02                    mov eax, [rdx]
  1021 0000007F 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1022 00000084 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1023 0000008B 4409D8                  or eax, r11d
  1024 0000008E 8902                    mov [rdx], eax
  1025 00000090 C3                      ret
  1026                                 [global iemAImpl_add_u32_EndProc:function hidden]
  1027                                 iemAImpl_add_u32_EndProc:
  1028                                 [size iemAImpl_add_u32 iemAImpl_add_u32_EndProc - iemAImpl_add_u32]
  1029                                 [size iemAImpl_add_u32_EndProc 0]
  1030 00000091 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1031                                 
  1032                                 [global iemAImpl_add_u64]
  1033                                 iemAImpl_add_u64:
  1034                                 
  1035 00000095 9C                      pushf
  1036 00000096 8B02                    mov eax, [rdx]
  1037 00000098 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1038 0000009F 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1039 000000A4 48090424                or [rsp], rax
  1040 000000A8 9D                      popf
  1041                                 
  1042 000000A9 480137                  add qword [rdi], rsi
  1043 000000AC 9C                      pushf
  1044 000000AD 415B                    pop r11
  1045 000000AF 8B02                    mov eax, [rdx]
  1046 000000B1 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1047 000000B6 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1048 000000BD 4409D8                  or eax, r11d
  1049 000000C0 8902                    mov [rdx], eax
  1050 000000C2 C3                      ret
  1051                                 [global iemAImpl_add_u64_EndProc:function hidden]
  1052                                 iemAImpl_add_u64_EndProc:
  1053                                 [size iemAImpl_add_u64 iemAImpl_add_u64_EndProc - iemAImpl_add_u64]
  1054                                 [size iemAImpl_add_u64_EndProc 0]
  1055 000000C3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1056                                 
  1057                                 
  1058                                 [global iemAImpl_add_u8_locked]
  1059                                 iemAImpl_add_u8_locked:
  1060                                 
  1061 000000C7 9C                      pushf
  1062 000000C8 8B02                    mov eax, [rdx]
  1063 000000CA 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1064 000000D1 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1065 000000D6 48090424                or [rsp], rax
  1066 000000DA 9D                      popf
  1067                                 
  1068 000000DB F0400037                lock add byte [rdi], sil
  1069 000000DF 9C                      pushf
  1070 000000E0 415B                    pop r11
  1071 000000E2 8B02                    mov eax, [rdx]
  1072 000000E4 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1073 000000E9 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1074 000000F0 4409D8                  or eax, r11d
  1075 000000F3 8902                    mov [rdx], eax
  1076 000000F5 C3                      ret
  1077                                 [global iemAImpl_add_u8_locked_EndProc:function hidden]
  1078                                 iemAImpl_add_u8_locked_EndProc:
  1079                                 [size iemAImpl_add_u8_locked iemAImpl_add_u8_locked_EndProc - iemAImpl_add_u8_locked]
  1080                                 [size iemAImpl_add_u8_locked_EndProc 0]
  1081 000000F6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1082                                 
  1083                                 [global iemAImpl_add_u16_locked]
  1084                                 iemAImpl_add_u16_locked:
  1085                                 
  1086 000000FA 9C                      pushf
  1087 000000FB 8B02                    mov eax, [rdx]
  1088 000000FD 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1089 00000104 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1090 00000109 48090424                or [rsp], rax
  1091 0000010D 9D                      popf
  1092                                 
  1093 0000010E 66F00137                lock add word [rdi], si
  1094 00000112 9C                      pushf
  1095 00000113 415B                    pop r11
  1096 00000115 8B02                    mov eax, [rdx]
  1097 00000117 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1098 0000011C 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1099 00000123 4409D8                  or eax, r11d
  1100 00000126 8902                    mov [rdx], eax
  1101 00000128 C3                      ret
  1102                                 [global iemAImpl_add_u16_locked_EndProc:function hidden]
  1103                                 iemAImpl_add_u16_locked_EndProc:
  1104                                 [size iemAImpl_add_u16_locked iemAImpl_add_u16_locked_EndProc - iemAImpl_add_u16_locked]
  1105                                 [size iemAImpl_add_u16_locked_EndProc 0]
  1106 00000129 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1107                                 
  1108                                 [global iemAImpl_add_u32_locked]
  1109                                 iemAImpl_add_u32_locked:
  1110                                 
  1111 0000012D 9C                      pushf
  1112 0000012E 8B02                    mov eax, [rdx]
  1113 00000130 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1114 00000137 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1115 0000013C 48090424                or [rsp], rax
  1116 00000140 9D                      popf
  1117                                 
  1118 00000141 F00137                  lock add dword [rdi], esi
  1119 00000144 9C                      pushf
  1120 00000145 415B                    pop r11
  1121 00000147 8B02                    mov eax, [rdx]
  1122 00000149 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1123 0000014E 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1124 00000155 4409D8                  or eax, r11d
  1125 00000158 8902                    mov [rdx], eax
  1126 0000015A C3                      ret
  1127                                 [global iemAImpl_add_u32_locked_EndProc:function hidden]
  1128                                 iemAImpl_add_u32_locked_EndProc:
  1129                                 [size iemAImpl_add_u32_locked iemAImpl_add_u32_locked_EndProc - iemAImpl_add_u32_locked]
  1130                                 [size iemAImpl_add_u32_locked_EndProc 0]
  1131 0000015B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1132                                 
  1133                                 [global iemAImpl_add_u64_locked]
  1134                                 iemAImpl_add_u64_locked:
  1135                                 
  1136 0000015F 9C                      pushf
  1137 00000160 8B02                    mov eax, [rdx]
  1138 00000162 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1139 00000169 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1140 0000016E 48090424                or [rsp], rax
  1141 00000172 9D                      popf
  1142                                 
  1143 00000173 F0480137                lock add qword [rdi], rsi
  1144 00000177 9C                      pushf
  1145 00000178 415B                    pop r11
  1146 0000017A 8B02                    mov eax, [rdx]
  1147 0000017C 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1148 00000181 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1149 00000188 4409D8                  or eax, r11d
  1150 0000018B 8902                    mov [rdx], eax
  1151 0000018D C3                      ret
  1152                                 [global iemAImpl_add_u64_locked_EndProc:function hidden]
  1153                                 iemAImpl_add_u64_locked_EndProc:
  1154                                 [size iemAImpl_add_u64_locked iemAImpl_add_u64_locked_EndProc - iemAImpl_add_u64_locked]
  1155                                 [size iemAImpl_add_u64_locked_EndProc 0]
  1156 0000018E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1157                                 %line 399+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1158                                 [section .text]
  1159                                 %line 399+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1160                                 [global iemAImpl_adc_u8]
  1161                                 iemAImpl_adc_u8:
  1162                                 
  1163 00000192 9C                      pushf
  1164 00000193 8B02                    mov eax, [rdx]
  1165 00000195 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1166 0000019C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1167 000001A1 48090424                or [rsp], rax
  1168 000001A5 9D                      popf
  1169                                 
  1170 000001A6 401037                  adc byte [rdi], sil
  1171 000001A9 9C                      pushf
  1172 000001AA 415B                    pop r11
  1173 000001AC 8B02                    mov eax, [rdx]
  1174 000001AE 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1175 000001B3 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1176 000001BA 4409D8                  or eax, r11d
  1177 000001BD 8902                    mov [rdx], eax
  1178 000001BF C3                      ret
  1179                                 [global iemAImpl_adc_u8_EndProc:function hidden]
  1180                                 iemAImpl_adc_u8_EndProc:
  1181                                 [size iemAImpl_adc_u8 iemAImpl_adc_u8_EndProc - iemAImpl_adc_u8]
  1182                                 [size iemAImpl_adc_u8_EndProc 0]
  1183 000001C0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1184                                 
  1185                                 [global iemAImpl_adc_u16]
  1186                                 iemAImpl_adc_u16:
  1187                                 
  1188 000001C4 9C                      pushf
  1189 000001C5 8B02                    mov eax, [rdx]
  1190 000001C7 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1191 000001CE 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1192 000001D3 48090424                or [rsp], rax
  1193 000001D7 9D                      popf
  1194                                 
  1195 000001D8 661137                  adc word [rdi], si
  1196 000001DB 9C                      pushf
  1197 000001DC 415B                    pop r11
  1198 000001DE 8B02                    mov eax, [rdx]
  1199 000001E0 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1200 000001E5 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1201 000001EC 4409D8                  or eax, r11d
  1202 000001EF 8902                    mov [rdx], eax
  1203 000001F1 C3                      ret
  1204                                 [global iemAImpl_adc_u16_EndProc:function hidden]
  1205                                 iemAImpl_adc_u16_EndProc:
  1206                                 [size iemAImpl_adc_u16 iemAImpl_adc_u16_EndProc - iemAImpl_adc_u16]
  1207                                 [size iemAImpl_adc_u16_EndProc 0]
  1208 000001F2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1209                                 
  1210                                 [global iemAImpl_adc_u32]
  1211                                 iemAImpl_adc_u32:
  1212                                 
  1213 000001F6 9C                      pushf
  1214 000001F7 8B02                    mov eax, [rdx]
  1215 000001F9 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1216 00000200 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1217 00000205 48090424                or [rsp], rax
  1218 00000209 9D                      popf
  1219                                 
  1220 0000020A 1137                    adc dword [rdi], esi
  1221 0000020C 9C                      pushf
  1222 0000020D 415B                    pop r11
  1223 0000020F 8B02                    mov eax, [rdx]
  1224 00000211 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1225 00000216 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1226 0000021D 4409D8                  or eax, r11d
  1227 00000220 8902                    mov [rdx], eax
  1228 00000222 C3                      ret
  1229                                 [global iemAImpl_adc_u32_EndProc:function hidden]
  1230                                 iemAImpl_adc_u32_EndProc:
  1231                                 [size iemAImpl_adc_u32 iemAImpl_adc_u32_EndProc - iemAImpl_adc_u32]
  1232                                 [size iemAImpl_adc_u32_EndProc 0]
  1233 00000223 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1234                                 
  1235                                 [global iemAImpl_adc_u64]
  1236                                 iemAImpl_adc_u64:
  1237                                 
  1238 00000227 9C                      pushf
  1239 00000228 8B02                    mov eax, [rdx]
  1240 0000022A 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1241 00000231 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1242 00000236 48090424                or [rsp], rax
  1243 0000023A 9D                      popf
  1244                                 
  1245 0000023B 481137                  adc qword [rdi], rsi
  1246 0000023E 9C                      pushf
  1247 0000023F 415B                    pop r11
  1248 00000241 8B02                    mov eax, [rdx]
  1249 00000243 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1250 00000248 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1251 0000024F 4409D8                  or eax, r11d
  1252 00000252 8902                    mov [rdx], eax
  1253 00000254 C3                      ret
  1254                                 [global iemAImpl_adc_u64_EndProc:function hidden]
  1255                                 iemAImpl_adc_u64_EndProc:
  1256                                 [size iemAImpl_adc_u64 iemAImpl_adc_u64_EndProc - iemAImpl_adc_u64]
  1257                                 [size iemAImpl_adc_u64_EndProc 0]
  1258 00000255 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1259                                 
  1260                                 
  1261                                 [global iemAImpl_adc_u8_locked]
  1262                                 iemAImpl_adc_u8_locked:
  1263                                 
  1264 00000259 9C                      pushf
  1265 0000025A 8B02                    mov eax, [rdx]
  1266 0000025C 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1267 00000263 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1268 00000268 48090424                or [rsp], rax
  1269 0000026C 9D                      popf
  1270                                 
  1271 0000026D F0401037                lock adc byte [rdi], sil
  1272 00000271 9C                      pushf
  1273 00000272 415B                    pop r11
  1274 00000274 8B02                    mov eax, [rdx]
  1275 00000276 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1276 0000027B 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1277 00000282 4409D8                  or eax, r11d
  1278 00000285 8902                    mov [rdx], eax
  1279 00000287 C3                      ret
  1280                                 [global iemAImpl_adc_u8_locked_EndProc:function hidden]
  1281                                 iemAImpl_adc_u8_locked_EndProc:
  1282                                 [size iemAImpl_adc_u8_locked iemAImpl_adc_u8_locked_EndProc - iemAImpl_adc_u8_locked]
  1283                                 [size iemAImpl_adc_u8_locked_EndProc 0]
  1284 00000288 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1285                                 
  1286                                 [global iemAImpl_adc_u16_locked]
  1287                                 iemAImpl_adc_u16_locked:
  1288                                 
  1289 0000028C 9C                      pushf
  1290 0000028D 8B02                    mov eax, [rdx]
  1291 0000028F 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1292 00000296 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1293 0000029B 48090424                or [rsp], rax
  1294 0000029F 9D                      popf
  1295                                 
  1296 000002A0 66F01137                lock adc word [rdi], si
  1297 000002A4 9C                      pushf
  1298 000002A5 415B                    pop r11
  1299 000002A7 8B02                    mov eax, [rdx]
  1300 000002A9 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1301 000002AE 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1302 000002B5 4409D8                  or eax, r11d
  1303 000002B8 8902                    mov [rdx], eax
  1304 000002BA C3                      ret
  1305                                 [global iemAImpl_adc_u16_locked_EndProc:function hidden]
  1306                                 iemAImpl_adc_u16_locked_EndProc:
  1307                                 [size iemAImpl_adc_u16_locked iemAImpl_adc_u16_locked_EndProc - iemAImpl_adc_u16_locked]
  1308                                 [size iemAImpl_adc_u16_locked_EndProc 0]
  1309 000002BB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1310                                 
  1311                                 [global iemAImpl_adc_u32_locked]
  1312                                 iemAImpl_adc_u32_locked:
  1313                                 
  1314 000002BF 9C                      pushf
  1315 000002C0 8B02                    mov eax, [rdx]
  1316 000002C2 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1317 000002C9 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1318 000002CE 48090424                or [rsp], rax
  1319 000002D2 9D                      popf
  1320                                 
  1321 000002D3 F01137                  lock adc dword [rdi], esi
  1322 000002D6 9C                      pushf
  1323 000002D7 415B                    pop r11
  1324 000002D9 8B02                    mov eax, [rdx]
  1325 000002DB 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1326 000002E0 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1327 000002E7 4409D8                  or eax, r11d
  1328 000002EA 8902                    mov [rdx], eax
  1329 000002EC C3                      ret
  1330                                 [global iemAImpl_adc_u32_locked_EndProc:function hidden]
  1331                                 iemAImpl_adc_u32_locked_EndProc:
  1332                                 [size iemAImpl_adc_u32_locked iemAImpl_adc_u32_locked_EndProc - iemAImpl_adc_u32_locked]
  1333                                 [size iemAImpl_adc_u32_locked_EndProc 0]
  1334 000002ED CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1335                                 
  1336                                 [global iemAImpl_adc_u64_locked]
  1337                                 iemAImpl_adc_u64_locked:
  1338                                 
  1339 000002F1 9C                      pushf
  1340 000002F2 8B02                    mov eax, [rdx]
  1341 000002F4 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1342 000002FB 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1343 00000300 48090424                or [rsp], rax
  1344 00000304 9D                      popf
  1345                                 
  1346 00000305 F0481137                lock adc qword [rdi], rsi
  1347 00000309 9C                      pushf
  1348 0000030A 415B                    pop r11
  1349 0000030C 8B02                    mov eax, [rdx]
  1350 0000030E 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1351 00000313 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1352 0000031A 4409D8                  or eax, r11d
  1353 0000031D 8902                    mov [rdx], eax
  1354 0000031F C3                      ret
  1355                                 [global iemAImpl_adc_u64_locked_EndProc:function hidden]
  1356                                 iemAImpl_adc_u64_locked_EndProc:
  1357                                 [size iemAImpl_adc_u64_locked iemAImpl_adc_u64_locked_EndProc - iemAImpl_adc_u64_locked]
  1358                                 [size iemAImpl_adc_u64_locked_EndProc 0]
  1359 00000320 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1360                                 %line 400+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1361                                 [section .text]
  1362                                 %line 400+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1363                                 [global iemAImpl_sub_u8]
  1364                                 iemAImpl_sub_u8:
  1365                                 
  1366 00000324 9C                      pushf
  1367 00000325 8B02                    mov eax, [rdx]
  1368 00000327 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1369 0000032E 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1370 00000333 48090424                or [rsp], rax
  1371 00000337 9D                      popf
  1372                                 
  1373 00000338 402837                  sub byte [rdi], sil
  1374 0000033B 9C                      pushf
  1375 0000033C 415B                    pop r11
  1376 0000033E 8B02                    mov eax, [rdx]
  1377 00000340 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1378 00000345 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1379 0000034C 4409D8                  or eax, r11d
  1380 0000034F 8902                    mov [rdx], eax
  1381 00000351 C3                      ret
  1382                                 [global iemAImpl_sub_u8_EndProc:function hidden]
  1383                                 iemAImpl_sub_u8_EndProc:
  1384                                 [size iemAImpl_sub_u8 iemAImpl_sub_u8_EndProc - iemAImpl_sub_u8]
  1385                                 [size iemAImpl_sub_u8_EndProc 0]
  1386 00000352 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1387                                 
  1388                                 [global iemAImpl_sub_u16]
  1389                                 iemAImpl_sub_u16:
  1390                                 
  1391 00000356 9C                      pushf
  1392 00000357 8B02                    mov eax, [rdx]
  1393 00000359 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1394 00000360 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1395 00000365 48090424                or [rsp], rax
  1396 00000369 9D                      popf
  1397                                 
  1398 0000036A 662937                  sub word [rdi], si
  1399 0000036D 9C                      pushf
  1400 0000036E 415B                    pop r11
  1401 00000370 8B02                    mov eax, [rdx]
  1402 00000372 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1403 00000377 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1404 0000037E 4409D8                  or eax, r11d
  1405 00000381 8902                    mov [rdx], eax
  1406 00000383 C3                      ret
  1407                                 [global iemAImpl_sub_u16_EndProc:function hidden]
  1408                                 iemAImpl_sub_u16_EndProc:
  1409                                 [size iemAImpl_sub_u16 iemAImpl_sub_u16_EndProc - iemAImpl_sub_u16]
  1410                                 [size iemAImpl_sub_u16_EndProc 0]
  1411 00000384 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1412                                 
  1413                                 [global iemAImpl_sub_u32]
  1414                                 iemAImpl_sub_u32:
  1415                                 
  1416 00000388 9C                      pushf
  1417 00000389 8B02                    mov eax, [rdx]
  1418 0000038B 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1419 00000392 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1420 00000397 48090424                or [rsp], rax
  1421 0000039B 9D                      popf
  1422                                 
  1423 0000039C 2937                    sub dword [rdi], esi
  1424 0000039E 9C                      pushf
  1425 0000039F 415B                    pop r11
  1426 000003A1 8B02                    mov eax, [rdx]
  1427 000003A3 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1428 000003A8 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1429 000003AF 4409D8                  or eax, r11d
  1430 000003B2 8902                    mov [rdx], eax
  1431 000003B4 C3                      ret
  1432                                 [global iemAImpl_sub_u32_EndProc:function hidden]
  1433                                 iemAImpl_sub_u32_EndProc:
  1434                                 [size iemAImpl_sub_u32 iemAImpl_sub_u32_EndProc - iemAImpl_sub_u32]
  1435                                 [size iemAImpl_sub_u32_EndProc 0]
  1436 000003B5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1437                                 
  1438                                 [global iemAImpl_sub_u64]
  1439                                 iemAImpl_sub_u64:
  1440                                 
  1441 000003B9 9C                      pushf
  1442 000003BA 8B02                    mov eax, [rdx]
  1443 000003BC 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1444 000003C3 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1445 000003C8 48090424                or [rsp], rax
  1446 000003CC 9D                      popf
  1447                                 
  1448 000003CD 482937                  sub qword [rdi], rsi
  1449 000003D0 9C                      pushf
  1450 000003D1 415B                    pop r11
  1451 000003D3 8B02                    mov eax, [rdx]
  1452 000003D5 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1453 000003DA 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1454 000003E1 4409D8                  or eax, r11d
  1455 000003E4 8902                    mov [rdx], eax
  1456 000003E6 C3                      ret
  1457                                 [global iemAImpl_sub_u64_EndProc:function hidden]
  1458                                 iemAImpl_sub_u64_EndProc:
  1459                                 [size iemAImpl_sub_u64 iemAImpl_sub_u64_EndProc - iemAImpl_sub_u64]
  1460                                 [size iemAImpl_sub_u64_EndProc 0]
  1461 000003E7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1462                                 
  1463                                 
  1464                                 [global iemAImpl_sub_u8_locked]
  1465                                 iemAImpl_sub_u8_locked:
  1466                                 
  1467 000003EB 9C                      pushf
  1468 000003EC 8B02                    mov eax, [rdx]
  1469 000003EE 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1470 000003F5 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1471 000003FA 48090424                or [rsp], rax
  1472 000003FE 9D                      popf
  1473                                 
  1474 000003FF F0402837                lock sub byte [rdi], sil
  1475 00000403 9C                      pushf
  1476 00000404 415B                    pop r11
  1477 00000406 8B02                    mov eax, [rdx]
  1478 00000408 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1479 0000040D 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1480 00000414 4409D8                  or eax, r11d
  1481 00000417 8902                    mov [rdx], eax
  1482 00000419 C3                      ret
  1483                                 [global iemAImpl_sub_u8_locked_EndProc:function hidden]
  1484                                 iemAImpl_sub_u8_locked_EndProc:
  1485                                 [size iemAImpl_sub_u8_locked iemAImpl_sub_u8_locked_EndProc - iemAImpl_sub_u8_locked]
  1486                                 [size iemAImpl_sub_u8_locked_EndProc 0]
  1487 0000041A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1488                                 
  1489                                 [global iemAImpl_sub_u16_locked]
  1490                                 iemAImpl_sub_u16_locked:
  1491                                 
  1492 0000041E 9C                      pushf
  1493 0000041F 8B02                    mov eax, [rdx]
  1494 00000421 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1495 00000428 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1496 0000042D 48090424                or [rsp], rax
  1497 00000431 9D                      popf
  1498                                 
  1499 00000432 66F02937                lock sub word [rdi], si
  1500 00000436 9C                      pushf
  1501 00000437 415B                    pop r11
  1502 00000439 8B02                    mov eax, [rdx]
  1503 0000043B 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1504 00000440 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1505 00000447 4409D8                  or eax, r11d
  1506 0000044A 8902                    mov [rdx], eax
  1507 0000044C C3                      ret
  1508                                 [global iemAImpl_sub_u16_locked_EndProc:function hidden]
  1509                                 iemAImpl_sub_u16_locked_EndProc:
  1510                                 [size iemAImpl_sub_u16_locked iemAImpl_sub_u16_locked_EndProc - iemAImpl_sub_u16_locked]
  1511                                 [size iemAImpl_sub_u16_locked_EndProc 0]
  1512 0000044D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1513                                 
  1514                                 [global iemAImpl_sub_u32_locked]
  1515                                 iemAImpl_sub_u32_locked:
  1516                                 
  1517 00000451 9C                      pushf
  1518 00000452 8B02                    mov eax, [rdx]
  1519 00000454 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1520 0000045B 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1521 00000460 48090424                or [rsp], rax
  1522 00000464 9D                      popf
  1523                                 
  1524 00000465 F02937                  lock sub dword [rdi], esi
  1525 00000468 9C                      pushf
  1526 00000469 415B                    pop r11
  1527 0000046B 8B02                    mov eax, [rdx]
  1528 0000046D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1529 00000472 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1530 00000479 4409D8                  or eax, r11d
  1531 0000047C 8902                    mov [rdx], eax
  1532 0000047E C3                      ret
  1533                                 [global iemAImpl_sub_u32_locked_EndProc:function hidden]
  1534                                 iemAImpl_sub_u32_locked_EndProc:
  1535                                 [size iemAImpl_sub_u32_locked iemAImpl_sub_u32_locked_EndProc - iemAImpl_sub_u32_locked]
  1536                                 [size iemAImpl_sub_u32_locked_EndProc 0]
  1537 0000047F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1538                                 
  1539                                 [global iemAImpl_sub_u64_locked]
  1540                                 iemAImpl_sub_u64_locked:
  1541                                 
  1542 00000483 9C                      pushf
  1543 00000484 8B02                    mov eax, [rdx]
  1544 00000486 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1545 0000048D 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1546 00000492 48090424                or [rsp], rax
  1547 00000496 9D                      popf
  1548                                 
  1549 00000497 F0482937                lock sub qword [rdi], rsi
  1550 0000049B 9C                      pushf
  1551 0000049C 415B                    pop r11
  1552 0000049E 8B02                    mov eax, [rdx]
  1553 000004A0 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1554 000004A5 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1555 000004AC 4409D8                  or eax, r11d
  1556 000004AF 8902                    mov [rdx], eax
  1557 000004B1 C3                      ret
  1558                                 [global iemAImpl_sub_u64_locked_EndProc:function hidden]
  1559                                 iemAImpl_sub_u64_locked_EndProc:
  1560                                 [size iemAImpl_sub_u64_locked iemAImpl_sub_u64_locked_EndProc - iemAImpl_sub_u64_locked]
  1561                                 [size iemAImpl_sub_u64_locked_EndProc 0]
  1562 000004B2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1563                                 %line 401+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1564                                 [section .text]
  1565                                 %line 401+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1566                                 [global iemAImpl_sbb_u8]
  1567                                 iemAImpl_sbb_u8:
  1568                                 
  1569 000004B6 9C                      pushf
  1570 000004B7 8B02                    mov eax, [rdx]
  1571 000004B9 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1572 000004C0 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1573 000004C5 48090424                or [rsp], rax
  1574 000004C9 9D                      popf
  1575                                 
  1576 000004CA 401837                  sbb byte [rdi], sil
  1577 000004CD 9C                      pushf
  1578 000004CE 415B                    pop r11
  1579 000004D0 8B02                    mov eax, [rdx]
  1580 000004D2 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1581 000004D7 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1582 000004DE 4409D8                  or eax, r11d
  1583 000004E1 8902                    mov [rdx], eax
  1584 000004E3 C3                      ret
  1585                                 [global iemAImpl_sbb_u8_EndProc:function hidden]
  1586                                 iemAImpl_sbb_u8_EndProc:
  1587                                 [size iemAImpl_sbb_u8 iemAImpl_sbb_u8_EndProc - iemAImpl_sbb_u8]
  1588                                 [size iemAImpl_sbb_u8_EndProc 0]
  1589 000004E4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1590                                 
  1591                                 [global iemAImpl_sbb_u16]
  1592                                 iemAImpl_sbb_u16:
  1593                                 
  1594 000004E8 9C                      pushf
  1595 000004E9 8B02                    mov eax, [rdx]
  1596 000004EB 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1597 000004F2 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1598 000004F7 48090424                or [rsp], rax
  1599 000004FB 9D                      popf
  1600                                 
  1601 000004FC 661937                  sbb word [rdi], si
  1602 000004FF 9C                      pushf
  1603 00000500 415B                    pop r11
  1604 00000502 8B02                    mov eax, [rdx]
  1605 00000504 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1606 00000509 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1607 00000510 4409D8                  or eax, r11d
  1608 00000513 8902                    mov [rdx], eax
  1609 00000515 C3                      ret
  1610                                 [global iemAImpl_sbb_u16_EndProc:function hidden]
  1611                                 iemAImpl_sbb_u16_EndProc:
  1612                                 [size iemAImpl_sbb_u16 iemAImpl_sbb_u16_EndProc - iemAImpl_sbb_u16]
  1613                                 [size iemAImpl_sbb_u16_EndProc 0]
  1614 00000516 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1615                                 
  1616                                 [global iemAImpl_sbb_u32]
  1617                                 iemAImpl_sbb_u32:
  1618                                 
  1619 0000051A 9C                      pushf
  1620 0000051B 8B02                    mov eax, [rdx]
  1621 0000051D 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1622 00000524 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1623 00000529 48090424                or [rsp], rax
  1624 0000052D 9D                      popf
  1625                                 
  1626 0000052E 1937                    sbb dword [rdi], esi
  1627 00000530 9C                      pushf
  1628 00000531 415B                    pop r11
  1629 00000533 8B02                    mov eax, [rdx]
  1630 00000535 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1631 0000053A 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1632 00000541 4409D8                  or eax, r11d
  1633 00000544 8902                    mov [rdx], eax
  1634 00000546 C3                      ret
  1635                                 [global iemAImpl_sbb_u32_EndProc:function hidden]
  1636                                 iemAImpl_sbb_u32_EndProc:
  1637                                 [size iemAImpl_sbb_u32 iemAImpl_sbb_u32_EndProc - iemAImpl_sbb_u32]
  1638                                 [size iemAImpl_sbb_u32_EndProc 0]
  1639 00000547 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1640                                 
  1641                                 [global iemAImpl_sbb_u64]
  1642                                 iemAImpl_sbb_u64:
  1643                                 
  1644 0000054B 9C                      pushf
  1645 0000054C 8B02                    mov eax, [rdx]
  1646 0000054E 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1647 00000555 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1648 0000055A 48090424                or [rsp], rax
  1649 0000055E 9D                      popf
  1650                                 
  1651 0000055F 481937                  sbb qword [rdi], rsi
  1652 00000562 9C                      pushf
  1653 00000563 415B                    pop r11
  1654 00000565 8B02                    mov eax, [rdx]
  1655 00000567 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1656 0000056C 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1657 00000573 4409D8                  or eax, r11d
  1658 00000576 8902                    mov [rdx], eax
  1659 00000578 C3                      ret
  1660                                 [global iemAImpl_sbb_u64_EndProc:function hidden]
  1661                                 iemAImpl_sbb_u64_EndProc:
  1662                                 [size iemAImpl_sbb_u64 iemAImpl_sbb_u64_EndProc - iemAImpl_sbb_u64]
  1663                                 [size iemAImpl_sbb_u64_EndProc 0]
  1664 00000579 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1665                                 
  1666                                 
  1667                                 [global iemAImpl_sbb_u8_locked]
  1668                                 iemAImpl_sbb_u8_locked:
  1669                                 
  1670 0000057D 9C                      pushf
  1671 0000057E 8B02                    mov eax, [rdx]
  1672 00000580 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1673 00000587 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1674 0000058C 48090424                or [rsp], rax
  1675 00000590 9D                      popf
  1676                                 
  1677 00000591 F0401837                lock sbb byte [rdi], sil
  1678 00000595 9C                      pushf
  1679 00000596 415B                    pop r11
  1680 00000598 8B02                    mov eax, [rdx]
  1681 0000059A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1682 0000059F 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1683 000005A6 4409D8                  or eax, r11d
  1684 000005A9 8902                    mov [rdx], eax
  1685 000005AB C3                      ret
  1686                                 [global iemAImpl_sbb_u8_locked_EndProc:function hidden]
  1687                                 iemAImpl_sbb_u8_locked_EndProc:
  1688                                 [size iemAImpl_sbb_u8_locked iemAImpl_sbb_u8_locked_EndProc - iemAImpl_sbb_u8_locked]
  1689                                 [size iemAImpl_sbb_u8_locked_EndProc 0]
  1690 000005AC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1691                                 
  1692                                 [global iemAImpl_sbb_u16_locked]
  1693                                 iemAImpl_sbb_u16_locked:
  1694                                 
  1695 000005B0 9C                      pushf
  1696 000005B1 8B02                    mov eax, [rdx]
  1697 000005B3 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1698 000005BA 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1699 000005BF 48090424                or [rsp], rax
  1700 000005C3 9D                      popf
  1701                                 
  1702 000005C4 66F01937                lock sbb word [rdi], si
  1703 000005C8 9C                      pushf
  1704 000005C9 415B                    pop r11
  1705 000005CB 8B02                    mov eax, [rdx]
  1706 000005CD 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1707 000005D2 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1708 000005D9 4409D8                  or eax, r11d
  1709 000005DC 8902                    mov [rdx], eax
  1710 000005DE C3                      ret
  1711                                 [global iemAImpl_sbb_u16_locked_EndProc:function hidden]
  1712                                 iemAImpl_sbb_u16_locked_EndProc:
  1713                                 [size iemAImpl_sbb_u16_locked iemAImpl_sbb_u16_locked_EndProc - iemAImpl_sbb_u16_locked]
  1714                                 [size iemAImpl_sbb_u16_locked_EndProc 0]
  1715 000005DF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1716                                 
  1717                                 [global iemAImpl_sbb_u32_locked]
  1718                                 iemAImpl_sbb_u32_locked:
  1719                                 
  1720 000005E3 9C                      pushf
  1721 000005E4 8B02                    mov eax, [rdx]
  1722 000005E6 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1723 000005ED 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1724 000005F2 48090424                or [rsp], rax
  1725 000005F6 9D                      popf
  1726                                 
  1727 000005F7 F01937                  lock sbb dword [rdi], esi
  1728 000005FA 9C                      pushf
  1729 000005FB 415B                    pop r11
  1730 000005FD 8B02                    mov eax, [rdx]
  1731 000005FF 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1732 00000604 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1733 0000060B 4409D8                  or eax, r11d
  1734 0000060E 8902                    mov [rdx], eax
  1735 00000610 C3                      ret
  1736                                 [global iemAImpl_sbb_u32_locked_EndProc:function hidden]
  1737                                 iemAImpl_sbb_u32_locked_EndProc:
  1738                                 [size iemAImpl_sbb_u32_locked iemAImpl_sbb_u32_locked_EndProc - iemAImpl_sbb_u32_locked]
  1739                                 [size iemAImpl_sbb_u32_locked_EndProc 0]
  1740 00000611 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1741                                 
  1742                                 [global iemAImpl_sbb_u64_locked]
  1743                                 iemAImpl_sbb_u64_locked:
  1744                                 
  1745 00000615 9C                      pushf
  1746 00000616 8B02                    mov eax, [rdx]
  1747 00000618 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1748 0000061F 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1749 00000624 48090424                or [rsp], rax
  1750 00000628 9D                      popf
  1751                                 
  1752 00000629 F0481937                lock sbb qword [rdi], rsi
  1753 0000062D 9C                      pushf
  1754 0000062E 415B                    pop r11
  1755 00000630 8B02                    mov eax, [rdx]
  1756 00000632 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1757 00000637 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  1758 0000063E 4409D8                  or eax, r11d
  1759 00000641 8902                    mov [rdx], eax
  1760 00000643 C3                      ret
  1761                                 [global iemAImpl_sbb_u64_locked_EndProc:function hidden]
  1762                                 iemAImpl_sbb_u64_locked_EndProc:
  1763                                 [size iemAImpl_sbb_u64_locked iemAImpl_sbb_u64_locked_EndProc - iemAImpl_sbb_u64_locked]
  1764                                 [size iemAImpl_sbb_u64_locked_EndProc 0]
  1765 00000644 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1766                                 %line 402+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1767                                 [section .text]
  1768                                 %line 402+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1769                                 [global iemAImpl_or_u8]
  1770                                 iemAImpl_or_u8:
  1771                                 
  1772 00000648 9C                      pushf
  1773 00000649 8B02                    mov eax, [rdx]
  1774 0000064B 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1775 00000652 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1776 00000657 48090424                or [rsp], rax
  1777 0000065B 9D                      popf
  1778                                 
  1779 0000065C 400837                  or byte [rdi], sil
  1780 0000065F 9C                      pushf
  1781 00000660 415B                    pop r11
  1782 00000662 8B02                    mov eax, [rdx]
  1783 00000664 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1784 00000669 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1785 00000670 4409D8                  or eax, r11d
  1786 00000673 8902                    mov [rdx], eax
  1787 00000675 C3                      ret
  1788                                 [global iemAImpl_or_u8_EndProc:function hidden]
  1789                                 iemAImpl_or_u8_EndProc:
  1790                                 [size iemAImpl_or_u8 iemAImpl_or_u8_EndProc - iemAImpl_or_u8]
  1791                                 [size iemAImpl_or_u8_EndProc 0]
  1792 00000676 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1793                                 
  1794                                 [global iemAImpl_or_u16]
  1795                                 iemAImpl_or_u16:
  1796                                 
  1797 0000067A 9C                      pushf
  1798 0000067B 8B02                    mov eax, [rdx]
  1799 0000067D 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1800 00000684 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1801 00000689 48090424                or [rsp], rax
  1802 0000068D 9D                      popf
  1803                                 
  1804 0000068E 660937                  or word [rdi], si
  1805 00000691 9C                      pushf
  1806 00000692 415B                    pop r11
  1807 00000694 8B02                    mov eax, [rdx]
  1808 00000696 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1809 0000069B 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1810 000006A2 4409D8                  or eax, r11d
  1811 000006A5 8902                    mov [rdx], eax
  1812 000006A7 C3                      ret
  1813                                 [global iemAImpl_or_u16_EndProc:function hidden]
  1814                                 iemAImpl_or_u16_EndProc:
  1815                                 [size iemAImpl_or_u16 iemAImpl_or_u16_EndProc - iemAImpl_or_u16]
  1816                                 [size iemAImpl_or_u16_EndProc 0]
  1817 000006A8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1818                                 
  1819                                 [global iemAImpl_or_u32]
  1820                                 iemAImpl_or_u32:
  1821                                 
  1822 000006AC 9C                      pushf
  1823 000006AD 8B02                    mov eax, [rdx]
  1824 000006AF 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1825 000006B6 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1826 000006BB 48090424                or [rsp], rax
  1827 000006BF 9D                      popf
  1828                                 
  1829 000006C0 0937                    or dword [rdi], esi
  1830 000006C2 9C                      pushf
  1831 000006C3 415B                    pop r11
  1832 000006C5 8B02                    mov eax, [rdx]
  1833 000006C7 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1834 000006CC 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1835 000006D3 4409D8                  or eax, r11d
  1836 000006D6 8902                    mov [rdx], eax
  1837 000006D8 C3                      ret
  1838                                 [global iemAImpl_or_u32_EndProc:function hidden]
  1839                                 iemAImpl_or_u32_EndProc:
  1840                                 [size iemAImpl_or_u32 iemAImpl_or_u32_EndProc - iemAImpl_or_u32]
  1841                                 [size iemAImpl_or_u32_EndProc 0]
  1842 000006D9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1843                                 
  1844                                 [global iemAImpl_or_u64]
  1845                                 iemAImpl_or_u64:
  1846                                 
  1847 000006DD 9C                      pushf
  1848 000006DE 8B02                    mov eax, [rdx]
  1849 000006E0 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1850 000006E7 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1851 000006EC 48090424                or [rsp], rax
  1852 000006F0 9D                      popf
  1853                                 
  1854 000006F1 480937                  or qword [rdi], rsi
  1855 000006F4 9C                      pushf
  1856 000006F5 415B                    pop r11
  1857 000006F7 8B02                    mov eax, [rdx]
  1858 000006F9 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1859 000006FE 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1860 00000705 4409D8                  or eax, r11d
  1861 00000708 8902                    mov [rdx], eax
  1862 0000070A C3                      ret
  1863                                 [global iemAImpl_or_u64_EndProc:function hidden]
  1864                                 iemAImpl_or_u64_EndProc:
  1865                                 [size iemAImpl_or_u64 iemAImpl_or_u64_EndProc - iemAImpl_or_u64]
  1866                                 [size iemAImpl_or_u64_EndProc 0]
  1867 0000070B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1868                                 
  1869                                 
  1870                                 [global iemAImpl_or_u8_locked]
  1871                                 iemAImpl_or_u8_locked:
  1872                                 
  1873 0000070F 9C                      pushf
  1874 00000710 8B02                    mov eax, [rdx]
  1875 00000712 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1876 00000719 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1877 0000071E 48090424                or [rsp], rax
  1878 00000722 9D                      popf
  1879                                 
  1880 00000723 F0400837                lock or byte [rdi], sil
  1881 00000727 9C                      pushf
  1882 00000728 415B                    pop r11
  1883 0000072A 8B02                    mov eax, [rdx]
  1884 0000072C 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1885 00000731 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1886 00000738 4409D8                  or eax, r11d
  1887 0000073B 8902                    mov [rdx], eax
  1888 0000073D C3                      ret
  1889                                 [global iemAImpl_or_u8_locked_EndProc:function hidden]
  1890                                 iemAImpl_or_u8_locked_EndProc:
  1891                                 [size iemAImpl_or_u8_locked iemAImpl_or_u8_locked_EndProc - iemAImpl_or_u8_locked]
  1892                                 [size iemAImpl_or_u8_locked_EndProc 0]
  1893 0000073E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1894                                 
  1895                                 [global iemAImpl_or_u16_locked]
  1896                                 iemAImpl_or_u16_locked:
  1897                                 
  1898 00000742 9C                      pushf
  1899 00000743 8B02                    mov eax, [rdx]
  1900 00000745 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1901 0000074C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1902 00000751 48090424                or [rsp], rax
  1903 00000755 9D                      popf
  1904                                 
  1905 00000756 66F00937                lock or word [rdi], si
  1906 0000075A 9C                      pushf
  1907 0000075B 415B                    pop r11
  1908 0000075D 8B02                    mov eax, [rdx]
  1909 0000075F 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1910 00000764 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1911 0000076B 4409D8                  or eax, r11d
  1912 0000076E 8902                    mov [rdx], eax
  1913 00000770 C3                      ret
  1914                                 [global iemAImpl_or_u16_locked_EndProc:function hidden]
  1915                                 iemAImpl_or_u16_locked_EndProc:
  1916                                 [size iemAImpl_or_u16_locked iemAImpl_or_u16_locked_EndProc - iemAImpl_or_u16_locked]
  1917                                 [size iemAImpl_or_u16_locked_EndProc 0]
  1918 00000771 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1919                                 
  1920                                 [global iemAImpl_or_u32_locked]
  1921                                 iemAImpl_or_u32_locked:
  1922                                 
  1923 00000775 9C                      pushf
  1924 00000776 8B02                    mov eax, [rdx]
  1925 00000778 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1926 0000077F 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1927 00000784 48090424                or [rsp], rax
  1928 00000788 9D                      popf
  1929                                 
  1930 00000789 F00937                  lock or dword [rdi], esi
  1931 0000078C 9C                      pushf
  1932 0000078D 415B                    pop r11
  1933 0000078F 8B02                    mov eax, [rdx]
  1934 00000791 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1935 00000796 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1936 0000079D 4409D8                  or eax, r11d
  1937 000007A0 8902                    mov [rdx], eax
  1938 000007A2 C3                      ret
  1939                                 [global iemAImpl_or_u32_locked_EndProc:function hidden]
  1940                                 iemAImpl_or_u32_locked_EndProc:
  1941                                 [size iemAImpl_or_u32_locked iemAImpl_or_u32_locked_EndProc - iemAImpl_or_u32_locked]
  1942                                 [size iemAImpl_or_u32_locked_EndProc 0]
  1943 000007A3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1944                                 
  1945                                 [global iemAImpl_or_u64_locked]
  1946                                 iemAImpl_or_u64_locked:
  1947                                 
  1948 000007A7 9C                      pushf
  1949 000007A8 8B02                    mov eax, [rdx]
  1950 000007AA 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1951 000007B1 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1952 000007B6 48090424                or [rsp], rax
  1953 000007BA 9D                      popf
  1954                                 
  1955 000007BB F0480937                lock or qword [rdi], rsi
  1956 000007BF 9C                      pushf
  1957 000007C0 415B                    pop r11
  1958 000007C2 8B02                    mov eax, [rdx]
  1959 000007C4 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1960 000007C9 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1961 000007D0 4409D8                  or eax, r11d
  1962 000007D3 8902                    mov [rdx], eax
  1963 000007D5 C3                      ret
  1964                                 [global iemAImpl_or_u64_locked_EndProc:function hidden]
  1965                                 iemAImpl_or_u64_locked_EndProc:
  1966                                 [size iemAImpl_or_u64_locked iemAImpl_or_u64_locked_EndProc - iemAImpl_or_u64_locked]
  1967                                 [size iemAImpl_or_u64_locked_EndProc 0]
  1968 000007D6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1969                                 %line 403+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1970                                 [section .text]
  1971                                 %line 403+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  1972                                 [global iemAImpl_xor_u8]
  1973                                 iemAImpl_xor_u8:
  1974                                 
  1975 000007DA 9C                      pushf
  1976 000007DB 8B02                    mov eax, [rdx]
  1977 000007DD 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1978 000007E4 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1979 000007E9 48090424                or [rsp], rax
  1980 000007ED 9D                      popf
  1981                                 
  1982 000007EE 403037                  xor byte [rdi], sil
  1983 000007F1 9C                      pushf
  1984 000007F2 415B                    pop r11
  1985 000007F4 8B02                    mov eax, [rdx]
  1986 000007F6 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1987 000007FB 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  1988 00000802 4409D8                  or eax, r11d
  1989 00000805 8902                    mov [rdx], eax
  1990 00000807 C3                      ret
  1991                                 [global iemAImpl_xor_u8_EndProc:function hidden]
  1992                                 iemAImpl_xor_u8_EndProc:
  1993                                 [size iemAImpl_xor_u8 iemAImpl_xor_u8_EndProc - iemAImpl_xor_u8]
  1994                                 [size iemAImpl_xor_u8_EndProc 0]
  1995 00000808 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  1996                                 
  1997                                 [global iemAImpl_xor_u16]
  1998                                 iemAImpl_xor_u16:
  1999                                 
  2000 0000080C 9C                      pushf
  2001 0000080D 8B02                    mov eax, [rdx]
  2002 0000080F 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2003 00000816 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2004 0000081B 48090424                or [rsp], rax
  2005 0000081F 9D                      popf
  2006                                 
  2007 00000820 663137                  xor word [rdi], si
  2008 00000823 9C                      pushf
  2009 00000824 415B                    pop r11
  2010 00000826 8B02                    mov eax, [rdx]
  2011 00000828 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2012 0000082D 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2013 00000834 4409D8                  or eax, r11d
  2014 00000837 8902                    mov [rdx], eax
  2015 00000839 C3                      ret
  2016                                 [global iemAImpl_xor_u16_EndProc:function hidden]
  2017                                 iemAImpl_xor_u16_EndProc:
  2018                                 [size iemAImpl_xor_u16 iemAImpl_xor_u16_EndProc - iemAImpl_xor_u16]
  2019                                 [size iemAImpl_xor_u16_EndProc 0]
  2020 0000083A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2021                                 
  2022                                 [global iemAImpl_xor_u32]
  2023                                 iemAImpl_xor_u32:
  2024                                 
  2025 0000083E 9C                      pushf
  2026 0000083F 8B02                    mov eax, [rdx]
  2027 00000841 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2028 00000848 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2029 0000084D 48090424                or [rsp], rax
  2030 00000851 9D                      popf
  2031                                 
  2032 00000852 3137                    xor dword [rdi], esi
  2033 00000854 9C                      pushf
  2034 00000855 415B                    pop r11
  2035 00000857 8B02                    mov eax, [rdx]
  2036 00000859 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2037 0000085E 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2038 00000865 4409D8                  or eax, r11d
  2039 00000868 8902                    mov [rdx], eax
  2040 0000086A C3                      ret
  2041                                 [global iemAImpl_xor_u32_EndProc:function hidden]
  2042                                 iemAImpl_xor_u32_EndProc:
  2043                                 [size iemAImpl_xor_u32 iemAImpl_xor_u32_EndProc - iemAImpl_xor_u32]
  2044                                 [size iemAImpl_xor_u32_EndProc 0]
  2045 0000086B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2046                                 
  2047                                 [global iemAImpl_xor_u64]
  2048                                 iemAImpl_xor_u64:
  2049                                 
  2050 0000086F 9C                      pushf
  2051 00000870 8B02                    mov eax, [rdx]
  2052 00000872 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2053 00000879 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2054 0000087E 48090424                or [rsp], rax
  2055 00000882 9D                      popf
  2056                                 
  2057 00000883 483137                  xor qword [rdi], rsi
  2058 00000886 9C                      pushf
  2059 00000887 415B                    pop r11
  2060 00000889 8B02                    mov eax, [rdx]
  2061 0000088B 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2062 00000890 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2063 00000897 4409D8                  or eax, r11d
  2064 0000089A 8902                    mov [rdx], eax
  2065 0000089C C3                      ret
  2066                                 [global iemAImpl_xor_u64_EndProc:function hidden]
  2067                                 iemAImpl_xor_u64_EndProc:
  2068                                 [size iemAImpl_xor_u64 iemAImpl_xor_u64_EndProc - iemAImpl_xor_u64]
  2069                                 [size iemAImpl_xor_u64_EndProc 0]
  2070 0000089D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2071                                 
  2072                                 
  2073                                 [global iemAImpl_xor_u8_locked]
  2074                                 iemAImpl_xor_u8_locked:
  2075                                 
  2076 000008A1 9C                      pushf
  2077 000008A2 8B02                    mov eax, [rdx]
  2078 000008A4 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2079 000008AB 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2080 000008B0 48090424                or [rsp], rax
  2081 000008B4 9D                      popf
  2082                                 
  2083 000008B5 F0403037                lock xor byte [rdi], sil
  2084 000008B9 9C                      pushf
  2085 000008BA 415B                    pop r11
  2086 000008BC 8B02                    mov eax, [rdx]
  2087 000008BE 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2088 000008C3 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2089 000008CA 4409D8                  or eax, r11d
  2090 000008CD 8902                    mov [rdx], eax
  2091 000008CF C3                      ret
  2092                                 [global iemAImpl_xor_u8_locked_EndProc:function hidden]
  2093                                 iemAImpl_xor_u8_locked_EndProc:
  2094                                 [size iemAImpl_xor_u8_locked iemAImpl_xor_u8_locked_EndProc - iemAImpl_xor_u8_locked]
  2095                                 [size iemAImpl_xor_u8_locked_EndProc 0]
  2096 000008D0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2097                                 
  2098                                 [global iemAImpl_xor_u16_locked]
  2099                                 iemAImpl_xor_u16_locked:
  2100                                 
  2101 000008D4 9C                      pushf
  2102 000008D5 8B02                    mov eax, [rdx]
  2103 000008D7 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2104 000008DE 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2105 000008E3 48090424                or [rsp], rax
  2106 000008E7 9D                      popf
  2107                                 
  2108 000008E8 66F03137                lock xor word [rdi], si
  2109 000008EC 9C                      pushf
  2110 000008ED 415B                    pop r11
  2111 000008EF 8B02                    mov eax, [rdx]
  2112 000008F1 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2113 000008F6 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2114 000008FD 4409D8                  or eax, r11d
  2115 00000900 8902                    mov [rdx], eax
  2116 00000902 C3                      ret
  2117                                 [global iemAImpl_xor_u16_locked_EndProc:function hidden]
  2118                                 iemAImpl_xor_u16_locked_EndProc:
  2119                                 [size iemAImpl_xor_u16_locked iemAImpl_xor_u16_locked_EndProc - iemAImpl_xor_u16_locked]
  2120                                 [size iemAImpl_xor_u16_locked_EndProc 0]
  2121 00000903 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2122                                 
  2123                                 [global iemAImpl_xor_u32_locked]
  2124                                 iemAImpl_xor_u32_locked:
  2125                                 
  2126 00000907 9C                      pushf
  2127 00000908 8B02                    mov eax, [rdx]
  2128 0000090A 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2129 00000911 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2130 00000916 48090424                or [rsp], rax
  2131 0000091A 9D                      popf
  2132                                 
  2133 0000091B F03137                  lock xor dword [rdi], esi
  2134 0000091E 9C                      pushf
  2135 0000091F 415B                    pop r11
  2136 00000921 8B02                    mov eax, [rdx]
  2137 00000923 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2138 00000928 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2139 0000092F 4409D8                  or eax, r11d
  2140 00000932 8902                    mov [rdx], eax
  2141 00000934 C3                      ret
  2142                                 [global iemAImpl_xor_u32_locked_EndProc:function hidden]
  2143                                 iemAImpl_xor_u32_locked_EndProc:
  2144                                 [size iemAImpl_xor_u32_locked iemAImpl_xor_u32_locked_EndProc - iemAImpl_xor_u32_locked]
  2145                                 [size iemAImpl_xor_u32_locked_EndProc 0]
  2146 00000935 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2147                                 
  2148                                 [global iemAImpl_xor_u64_locked]
  2149                                 iemAImpl_xor_u64_locked:
  2150                                 
  2151 00000939 9C                      pushf
  2152 0000093A 8B02                    mov eax, [rdx]
  2153 0000093C 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2154 00000943 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2155 00000948 48090424                or [rsp], rax
  2156 0000094C 9D                      popf
  2157                                 
  2158 0000094D F0483137                lock xor qword [rdi], rsi
  2159 00000951 9C                      pushf
  2160 00000952 415B                    pop r11
  2161 00000954 8B02                    mov eax, [rdx]
  2162 00000956 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2163 0000095B 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2164 00000962 4409D8                  or eax, r11d
  2165 00000965 8902                    mov [rdx], eax
  2166 00000967 C3                      ret
  2167                                 [global iemAImpl_xor_u64_locked_EndProc:function hidden]
  2168                                 iemAImpl_xor_u64_locked_EndProc:
  2169                                 [size iemAImpl_xor_u64_locked iemAImpl_xor_u64_locked_EndProc - iemAImpl_xor_u64_locked]
  2170                                 [size iemAImpl_xor_u64_locked_EndProc 0]
  2171 00000968 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2172                                 %line 404+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2173                                 [section .text]
  2174                                 %line 404+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2175                                 [global iemAImpl_and_u8]
  2176                                 iemAImpl_and_u8:
  2177                                 
  2178 0000096C 9C                      pushf
  2179 0000096D 8B02                    mov eax, [rdx]
  2180 0000096F 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2181 00000976 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2182 0000097B 48090424                or [rsp], rax
  2183 0000097F 9D                      popf
  2184                                 
  2185 00000980 402037                  and byte [rdi], sil
  2186 00000983 9C                      pushf
  2187 00000984 415B                    pop r11
  2188 00000986 8B02                    mov eax, [rdx]
  2189 00000988 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2190 0000098D 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2191 00000994 4409D8                  or eax, r11d
  2192 00000997 8902                    mov [rdx], eax
  2193 00000999 C3                      ret
  2194                                 [global iemAImpl_and_u8_EndProc:function hidden]
  2195                                 iemAImpl_and_u8_EndProc:
  2196                                 [size iemAImpl_and_u8 iemAImpl_and_u8_EndProc - iemAImpl_and_u8]
  2197                                 [size iemAImpl_and_u8_EndProc 0]
  2198 0000099A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2199                                 
  2200                                 [global iemAImpl_and_u16]
  2201                                 iemAImpl_and_u16:
  2202                                 
  2203 0000099E 9C                      pushf
  2204 0000099F 8B02                    mov eax, [rdx]
  2205 000009A1 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2206 000009A8 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2207 000009AD 48090424                or [rsp], rax
  2208 000009B1 9D                      popf
  2209                                 
  2210 000009B2 662137                  and word [rdi], si
  2211 000009B5 9C                      pushf
  2212 000009B6 415B                    pop r11
  2213 000009B8 8B02                    mov eax, [rdx]
  2214 000009BA 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2215 000009BF 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2216 000009C6 4409D8                  or eax, r11d
  2217 000009C9 8902                    mov [rdx], eax
  2218 000009CB C3                      ret
  2219                                 [global iemAImpl_and_u16_EndProc:function hidden]
  2220                                 iemAImpl_and_u16_EndProc:
  2221                                 [size iemAImpl_and_u16 iemAImpl_and_u16_EndProc - iemAImpl_and_u16]
  2222                                 [size iemAImpl_and_u16_EndProc 0]
  2223 000009CC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2224                                 
  2225                                 [global iemAImpl_and_u32]
  2226                                 iemAImpl_and_u32:
  2227                                 
  2228 000009D0 9C                      pushf
  2229 000009D1 8B02                    mov eax, [rdx]
  2230 000009D3 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2231 000009DA 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2232 000009DF 48090424                or [rsp], rax
  2233 000009E3 9D                      popf
  2234                                 
  2235 000009E4 2137                    and dword [rdi], esi
  2236 000009E6 9C                      pushf
  2237 000009E7 415B                    pop r11
  2238 000009E9 8B02                    mov eax, [rdx]
  2239 000009EB 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2240 000009F0 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2241 000009F7 4409D8                  or eax, r11d
  2242 000009FA 8902                    mov [rdx], eax
  2243 000009FC C3                      ret
  2244                                 [global iemAImpl_and_u32_EndProc:function hidden]
  2245                                 iemAImpl_and_u32_EndProc:
  2246                                 [size iemAImpl_and_u32 iemAImpl_and_u32_EndProc - iemAImpl_and_u32]
  2247                                 [size iemAImpl_and_u32_EndProc 0]
  2248 000009FD CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2249                                 
  2250                                 [global iemAImpl_and_u64]
  2251                                 iemAImpl_and_u64:
  2252                                 
  2253 00000A01 9C                      pushf
  2254 00000A02 8B02                    mov eax, [rdx]
  2255 00000A04 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2256 00000A0B 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2257 00000A10 48090424                or [rsp], rax
  2258 00000A14 9D                      popf
  2259                                 
  2260 00000A15 482137                  and qword [rdi], rsi
  2261 00000A18 9C                      pushf
  2262 00000A19 415B                    pop r11
  2263 00000A1B 8B02                    mov eax, [rdx]
  2264 00000A1D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2265 00000A22 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2266 00000A29 4409D8                  or eax, r11d
  2267 00000A2C 8902                    mov [rdx], eax
  2268 00000A2E C3                      ret
  2269                                 [global iemAImpl_and_u64_EndProc:function hidden]
  2270                                 iemAImpl_and_u64_EndProc:
  2271                                 [size iemAImpl_and_u64 iemAImpl_and_u64_EndProc - iemAImpl_and_u64]
  2272                                 [size iemAImpl_and_u64_EndProc 0]
  2273 00000A2F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2274                                 
  2275                                 
  2276                                 [global iemAImpl_and_u8_locked]
  2277                                 iemAImpl_and_u8_locked:
  2278                                 
  2279 00000A33 9C                      pushf
  2280 00000A34 8B02                    mov eax, [rdx]
  2281 00000A36 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2282 00000A3D 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2283 00000A42 48090424                or [rsp], rax
  2284 00000A46 9D                      popf
  2285                                 
  2286 00000A47 F0402037                lock and byte [rdi], sil
  2287 00000A4B 9C                      pushf
  2288 00000A4C 415B                    pop r11
  2289 00000A4E 8B02                    mov eax, [rdx]
  2290 00000A50 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2291 00000A55 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2292 00000A5C 4409D8                  or eax, r11d
  2293 00000A5F 8902                    mov [rdx], eax
  2294 00000A61 C3                      ret
  2295                                 [global iemAImpl_and_u8_locked_EndProc:function hidden]
  2296                                 iemAImpl_and_u8_locked_EndProc:
  2297                                 [size iemAImpl_and_u8_locked iemAImpl_and_u8_locked_EndProc - iemAImpl_and_u8_locked]
  2298                                 [size iemAImpl_and_u8_locked_EndProc 0]
  2299 00000A62 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2300                                 
  2301                                 [global iemAImpl_and_u16_locked]
  2302                                 iemAImpl_and_u16_locked:
  2303                                 
  2304 00000A66 9C                      pushf
  2305 00000A67 8B02                    mov eax, [rdx]
  2306 00000A69 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2307 00000A70 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2308 00000A75 48090424                or [rsp], rax
  2309 00000A79 9D                      popf
  2310                                 
  2311 00000A7A 66F02137                lock and word [rdi], si
  2312 00000A7E 9C                      pushf
  2313 00000A7F 415B                    pop r11
  2314 00000A81 8B02                    mov eax, [rdx]
  2315 00000A83 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2316 00000A88 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2317 00000A8F 4409D8                  or eax, r11d
  2318 00000A92 8902                    mov [rdx], eax
  2319 00000A94 C3                      ret
  2320                                 [global iemAImpl_and_u16_locked_EndProc:function hidden]
  2321                                 iemAImpl_and_u16_locked_EndProc:
  2322                                 [size iemAImpl_and_u16_locked iemAImpl_and_u16_locked_EndProc - iemAImpl_and_u16_locked]
  2323                                 [size iemAImpl_and_u16_locked_EndProc 0]
  2324 00000A95 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2325                                 
  2326                                 [global iemAImpl_and_u32_locked]
  2327                                 iemAImpl_and_u32_locked:
  2328                                 
  2329 00000A99 9C                      pushf
  2330 00000A9A 8B02                    mov eax, [rdx]
  2331 00000A9C 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2332 00000AA3 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2333 00000AA8 48090424                or [rsp], rax
  2334 00000AAC 9D                      popf
  2335                                 
  2336 00000AAD F02137                  lock and dword [rdi], esi
  2337 00000AB0 9C                      pushf
  2338 00000AB1 415B                    pop r11
  2339 00000AB3 8B02                    mov eax, [rdx]
  2340 00000AB5 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2341 00000ABA 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2342 00000AC1 4409D8                  or eax, r11d
  2343 00000AC4 8902                    mov [rdx], eax
  2344 00000AC6 C3                      ret
  2345                                 [global iemAImpl_and_u32_locked_EndProc:function hidden]
  2346                                 iemAImpl_and_u32_locked_EndProc:
  2347                                 [size iemAImpl_and_u32_locked iemAImpl_and_u32_locked_EndProc - iemAImpl_and_u32_locked]
  2348                                 [size iemAImpl_and_u32_locked_EndProc 0]
  2349 00000AC7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2350                                 
  2351                                 [global iemAImpl_and_u64_locked]
  2352                                 iemAImpl_and_u64_locked:
  2353                                 
  2354 00000ACB 9C                      pushf
  2355 00000ACC 8B02                    mov eax, [rdx]
  2356 00000ACE 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2357 00000AD5 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2358 00000ADA 48090424                or [rsp], rax
  2359 00000ADE 9D                      popf
  2360                                 
  2361 00000ADF F0482137                lock and qword [rdi], rsi
  2362 00000AE3 9C                      pushf
  2363 00000AE4 415B                    pop r11
  2364 00000AE6 8B02                    mov eax, [rdx]
  2365 00000AE8 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2366 00000AED 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2367 00000AF4 4409D8                  or eax, r11d
  2368 00000AF7 8902                    mov [rdx], eax
  2369 00000AF9 C3                      ret
  2370                                 [global iemAImpl_and_u64_locked_EndProc:function hidden]
  2371                                 iemAImpl_and_u64_locked_EndProc:
  2372                                 [size iemAImpl_and_u64_locked iemAImpl_and_u64_locked_EndProc - iemAImpl_and_u64_locked]
  2373                                 [size iemAImpl_and_u64_locked_EndProc 0]
  2374 00000AFA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2375                                 %line 405+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2376                                 [section .text]
  2377                                 %line 405+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2378                                 [global iemAImpl_cmp_u8]
  2379                                 iemAImpl_cmp_u8:
  2380                                 
  2381 00000AFE 9C                      pushf
  2382 00000AFF 8B02                    mov eax, [rdx]
  2383 00000B01 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2384 00000B08 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2385 00000B0D 48090424                or [rsp], rax
  2386 00000B11 9D                      popf
  2387                                 
  2388 00000B12 403837                  cmp byte [rdi], sil
  2389 00000B15 9C                      pushf
  2390 00000B16 415B                    pop r11
  2391 00000B18 8B02                    mov eax, [rdx]
  2392 00000B1A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2393 00000B1F 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2394 00000B26 4409D8                  or eax, r11d
  2395 00000B29 8902                    mov [rdx], eax
  2396 00000B2B C3                      ret
  2397                                 [global iemAImpl_cmp_u8_EndProc:function hidden]
  2398                                 iemAImpl_cmp_u8_EndProc:
  2399                                 [size iemAImpl_cmp_u8 iemAImpl_cmp_u8_EndProc - iemAImpl_cmp_u8]
  2400                                 [size iemAImpl_cmp_u8_EndProc 0]
  2401 00000B2C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2402                                 
  2403                                 [global iemAImpl_cmp_u16]
  2404                                 iemAImpl_cmp_u16:
  2405                                 
  2406 00000B30 9C                      pushf
  2407 00000B31 8B02                    mov eax, [rdx]
  2408 00000B33 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2409 00000B3A 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2410 00000B3F 48090424                or [rsp], rax
  2411 00000B43 9D                      popf
  2412                                 
  2413 00000B44 663937                  cmp word [rdi], si
  2414 00000B47 9C                      pushf
  2415 00000B48 415B                    pop r11
  2416 00000B4A 8B02                    mov eax, [rdx]
  2417 00000B4C 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2418 00000B51 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2419 00000B58 4409D8                  or eax, r11d
  2420 00000B5B 8902                    mov [rdx], eax
  2421 00000B5D C3                      ret
  2422                                 [global iemAImpl_cmp_u16_EndProc:function hidden]
  2423                                 iemAImpl_cmp_u16_EndProc:
  2424                                 [size iemAImpl_cmp_u16 iemAImpl_cmp_u16_EndProc - iemAImpl_cmp_u16]
  2425                                 [size iemAImpl_cmp_u16_EndProc 0]
  2426 00000B5E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2427                                 
  2428                                 [global iemAImpl_cmp_u32]
  2429                                 iemAImpl_cmp_u32:
  2430                                 
  2431 00000B62 9C                      pushf
  2432 00000B63 8B02                    mov eax, [rdx]
  2433 00000B65 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2434 00000B6C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2435 00000B71 48090424                or [rsp], rax
  2436 00000B75 9D                      popf
  2437                                 
  2438 00000B76 3937                    cmp dword [rdi], esi
  2439 00000B78 9C                      pushf
  2440 00000B79 415B                    pop r11
  2441 00000B7B 8B02                    mov eax, [rdx]
  2442 00000B7D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2443 00000B82 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2444 00000B89 4409D8                  or eax, r11d
  2445 00000B8C 8902                    mov [rdx], eax
  2446 00000B8E C3                      ret
  2447                                 [global iemAImpl_cmp_u32_EndProc:function hidden]
  2448                                 iemAImpl_cmp_u32_EndProc:
  2449                                 [size iemAImpl_cmp_u32 iemAImpl_cmp_u32_EndProc - iemAImpl_cmp_u32]
  2450                                 [size iemAImpl_cmp_u32_EndProc 0]
  2451 00000B8F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2452                                 
  2453                                 [global iemAImpl_cmp_u64]
  2454                                 iemAImpl_cmp_u64:
  2455                                 
  2456 00000B93 9C                      pushf
  2457 00000B94 8B02                    mov eax, [rdx]
  2458 00000B96 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2459 00000B9D 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2460 00000BA2 48090424                or [rsp], rax
  2461 00000BA6 9D                      popf
  2462                                 
  2463 00000BA7 483937                  cmp qword [rdi], rsi
  2464 00000BAA 9C                      pushf
  2465 00000BAB 415B                    pop r11
  2466 00000BAD 8B02                    mov eax, [rdx]
  2467 00000BAF 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2468 00000BB4 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  2469 00000BBB 4409D8                  or eax, r11d
  2470 00000BBE 8902                    mov [rdx], eax
  2471 00000BC0 C3                      ret
  2472                                 [global iemAImpl_cmp_u64_EndProc:function hidden]
  2473                                 iemAImpl_cmp_u64_EndProc:
  2474                                 [size iemAImpl_cmp_u64 iemAImpl_cmp_u64_EndProc - iemAImpl_cmp_u64]
  2475                                 [size iemAImpl_cmp_u64_EndProc 0]
  2476 00000BC1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2477                                 
  2478                                 %line 406+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2479                                 [section .text]
  2480                                 %line 406+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2481                                 [global iemAImpl_test_u8]
  2482                                 iemAImpl_test_u8:
  2483                                 
  2484 00000BC5 9C                      pushf
  2485 00000BC6 8B02                    mov eax, [rdx]
  2486 00000BC8 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2487 00000BCF 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2488 00000BD4 48090424                or [rsp], rax
  2489 00000BD8 9D                      popf
  2490                                 
  2491 00000BD9 408437                  test byte [rdi], sil
  2492 00000BDC 9C                      pushf
  2493 00000BDD 415B                    pop r11
  2494 00000BDF 8B02                    mov eax, [rdx]
  2495 00000BE1 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2496 00000BE6 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2497 00000BED 4409D8                  or eax, r11d
  2498 00000BF0 8902                    mov [rdx], eax
  2499 00000BF2 C3                      ret
  2500                                 [global iemAImpl_test_u8_EndProc:function hidden]
  2501                                 iemAImpl_test_u8_EndProc:
  2502                                 [size iemAImpl_test_u8 iemAImpl_test_u8_EndProc - iemAImpl_test_u8]
  2503                                 [size iemAImpl_test_u8_EndProc 0]
  2504 00000BF3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2505                                 
  2506                                 [global iemAImpl_test_u16]
  2507                                 iemAImpl_test_u16:
  2508                                 
  2509 00000BF7 9C                      pushf
  2510 00000BF8 8B02                    mov eax, [rdx]
  2511 00000BFA 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2512 00000C01 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2513 00000C06 48090424                or [rsp], rax
  2514 00000C0A 9D                      popf
  2515                                 
  2516 00000C0B 668537                  test word [rdi], si
  2517 00000C0E 9C                      pushf
  2518 00000C0F 415B                    pop r11
  2519 00000C11 8B02                    mov eax, [rdx]
  2520 00000C13 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2521 00000C18 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2522 00000C1F 4409D8                  or eax, r11d
  2523 00000C22 8902                    mov [rdx], eax
  2524 00000C24 C3                      ret
  2525                                 [global iemAImpl_test_u16_EndProc:function hidden]
  2526                                 iemAImpl_test_u16_EndProc:
  2527                                 [size iemAImpl_test_u16 iemAImpl_test_u16_EndProc - iemAImpl_test_u16]
  2528                                 [size iemAImpl_test_u16_EndProc 0]
  2529 00000C25 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2530                                 
  2531                                 [global iemAImpl_test_u32]
  2532                                 iemAImpl_test_u32:
  2533                                 
  2534 00000C29 9C                      pushf
  2535 00000C2A 8B02                    mov eax, [rdx]
  2536 00000C2C 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2537 00000C33 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2538 00000C38 48090424                or [rsp], rax
  2539 00000C3C 9D                      popf
  2540                                 
  2541 00000C3D 8537                    test dword [rdi], esi
  2542 00000C3F 9C                      pushf
  2543 00000C40 415B                    pop r11
  2544 00000C42 8B02                    mov eax, [rdx]
  2545 00000C44 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2546 00000C49 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2547 00000C50 4409D8                  or eax, r11d
  2548 00000C53 8902                    mov [rdx], eax
  2549 00000C55 C3                      ret
  2550                                 [global iemAImpl_test_u32_EndProc:function hidden]
  2551                                 iemAImpl_test_u32_EndProc:
  2552                                 [size iemAImpl_test_u32 iemAImpl_test_u32_EndProc - iemAImpl_test_u32]
  2553                                 [size iemAImpl_test_u32_EndProc 0]
  2554 00000C56 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2555                                 
  2556                                 [global iemAImpl_test_u64]
  2557                                 iemAImpl_test_u64:
  2558                                 
  2559 00000C5A 9C                      pushf
  2560 00000C5B 8B02                    mov eax, [rdx]
  2561 00000C5D 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2562 00000C64 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2563 00000C69 48090424                or [rsp], rax
  2564 00000C6D 9D                      popf
  2565                                 
  2566 00000C6E 488537                  test qword [rdi], rsi
  2567 00000C71 9C                      pushf
  2568 00000C72 415B                    pop r11
  2569 00000C74 8B02                    mov eax, [rdx]
  2570 00000C76 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2571 00000C7B 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | (1 << 4))
  2572 00000C82 4409D8                  or eax, r11d
  2573 00000C85 8902                    mov [rdx], eax
  2574 00000C87 C3                      ret
  2575                                 [global iemAImpl_test_u64_EndProc:function hidden]
  2576                                 iemAImpl_test_u64_EndProc:
  2577                                 [size iemAImpl_test_u64 iemAImpl_test_u64_EndProc - iemAImpl_test_u64]
  2578                                 [size iemAImpl_test_u64_EndProc 0]
  2579 00000C88 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2580                                 
  2581                                 %line 407+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2582                                 
  2583                                 
  2584                                 
  2585                                 
  2586                                 
  2587                                 
  2588                                 
  2589                                 
  2590                                 
  2591                                 
  2592                                 
  2593                                 
  2594                                 
  2595                                 
  2596                                 
  2597                                 
  2598                                 
  2599                                 %line 481+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2600                                 [section .text]
  2601                                 %line 481+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2602                                 [global iemAImpl_bt_u16]
  2603                                 iemAImpl_bt_u16:
  2604                                 
  2605 00000C8C 9C                      pushf
  2606 00000C8D 8B02                    mov eax, [rdx]
  2607 00000C8F 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2608 00000C96 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2609 00000C9B 48090424                or [rsp], rax
  2610 00000C9F 9D                      popf
  2611                                 
  2612 00000CA0 660FA337                bt word [rdi], si
  2613 00000CA4 9C                      pushf
  2614 00000CA5 415B                    pop r11
  2615 00000CA7 8B02                    mov eax, [rdx]
  2616 00000CA9 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2617 00000CAE 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2618 00000CB5 4409D8                  or eax, r11d
  2619 00000CB8 8902                    mov [rdx], eax
  2620 00000CBA C3                      ret
  2621                                 [global iemAImpl_bt_u16_EndProc:function hidden]
  2622                                 iemAImpl_bt_u16_EndProc:
  2623                                 [size iemAImpl_bt_u16 iemAImpl_bt_u16_EndProc - iemAImpl_bt_u16]
  2624                                 [size iemAImpl_bt_u16_EndProc 0]
  2625 00000CBB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2626                                 
  2627                                 [global iemAImpl_bt_u32]
  2628                                 iemAImpl_bt_u32:
  2629                                 
  2630 00000CBF 9C                      pushf
  2631 00000CC0 8B02                    mov eax, [rdx]
  2632 00000CC2 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2633 00000CC9 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2634 00000CCE 48090424                or [rsp], rax
  2635 00000CD2 9D                      popf
  2636                                 
  2637 00000CD3 0FA337                  bt dword [rdi], esi
  2638 00000CD6 9C                      pushf
  2639 00000CD7 415B                    pop r11
  2640 00000CD9 8B02                    mov eax, [rdx]
  2641 00000CDB 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2642 00000CE0 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2643 00000CE7 4409D8                  or eax, r11d
  2644 00000CEA 8902                    mov [rdx], eax
  2645 00000CEC C3                      ret
  2646                                 [global iemAImpl_bt_u32_EndProc:function hidden]
  2647                                 iemAImpl_bt_u32_EndProc:
  2648                                 [size iemAImpl_bt_u32 iemAImpl_bt_u32_EndProc - iemAImpl_bt_u32]
  2649                                 [size iemAImpl_bt_u32_EndProc 0]
  2650 00000CED CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2651                                 
  2652                                 [global iemAImpl_bt_u64]
  2653                                 iemAImpl_bt_u64:
  2654                                 
  2655 00000CF1 9C                      pushf
  2656 00000CF2 8B02                    mov eax, [rdx]
  2657 00000CF4 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2658 00000CFB 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2659 00000D00 48090424                or [rsp], rax
  2660 00000D04 9D                      popf
  2661                                 
  2662 00000D05 480FA337                bt qword [rdi], rsi
  2663 00000D09 9C                      pushf
  2664 00000D0A 415B                    pop r11
  2665 00000D0C 8B02                    mov eax, [rdx]
  2666 00000D0E 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2667 00000D13 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2668 00000D1A 4409D8                  or eax, r11d
  2669 00000D1D 8902                    mov [rdx], eax
  2670 00000D1F C3                      ret
  2671                                 [global iemAImpl_bt_u64_EndProc:function hidden]
  2672                                 iemAImpl_bt_u64_EndProc:
  2673                                 [size iemAImpl_bt_u64 iemAImpl_bt_u64_EndProc - iemAImpl_bt_u64]
  2674                                 [size iemAImpl_bt_u64_EndProc 0]
  2675 00000D20 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2676                                 
  2677                                 %line 482+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2678                                 [section .text]
  2679                                 %line 482+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2680                                 [global iemAImpl_btc_u16]
  2681                                 iemAImpl_btc_u16:
  2682                                 
  2683 00000D24 9C                      pushf
  2684 00000D25 8B02                    mov eax, [rdx]
  2685 00000D27 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2686 00000D2E 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2687 00000D33 48090424                or [rsp], rax
  2688 00000D37 9D                      popf
  2689                                 
  2690 00000D38 660FBB37                btc word [rdi], si
  2691 00000D3C 9C                      pushf
  2692 00000D3D 415B                    pop r11
  2693 00000D3F 8B02                    mov eax, [rdx]
  2694 00000D41 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2695 00000D46 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2696 00000D4D 4409D8                  or eax, r11d
  2697 00000D50 8902                    mov [rdx], eax
  2698 00000D52 C3                      ret
  2699                                 [global iemAImpl_btc_u16_EndProc:function hidden]
  2700                                 iemAImpl_btc_u16_EndProc:
  2701                                 [size iemAImpl_btc_u16 iemAImpl_btc_u16_EndProc - iemAImpl_btc_u16]
  2702                                 [size iemAImpl_btc_u16_EndProc 0]
  2703 00000D53 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2704                                 
  2705                                 [global iemAImpl_btc_u32]
  2706                                 iemAImpl_btc_u32:
  2707                                 
  2708 00000D57 9C                      pushf
  2709 00000D58 8B02                    mov eax, [rdx]
  2710 00000D5A 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2711 00000D61 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2712 00000D66 48090424                or [rsp], rax
  2713 00000D6A 9D                      popf
  2714                                 
  2715 00000D6B 0FBB37                  btc dword [rdi], esi
  2716 00000D6E 9C                      pushf
  2717 00000D6F 415B                    pop r11
  2718 00000D71 8B02                    mov eax, [rdx]
  2719 00000D73 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2720 00000D78 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2721 00000D7F 4409D8                  or eax, r11d
  2722 00000D82 8902                    mov [rdx], eax
  2723 00000D84 C3                      ret
  2724                                 [global iemAImpl_btc_u32_EndProc:function hidden]
  2725                                 iemAImpl_btc_u32_EndProc:
  2726                                 [size iemAImpl_btc_u32 iemAImpl_btc_u32_EndProc - iemAImpl_btc_u32]
  2727                                 [size iemAImpl_btc_u32_EndProc 0]
  2728 00000D85 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2729                                 
  2730                                 [global iemAImpl_btc_u64]
  2731                                 iemAImpl_btc_u64:
  2732                                 
  2733 00000D89 9C                      pushf
  2734 00000D8A 8B02                    mov eax, [rdx]
  2735 00000D8C 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2736 00000D93 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2737 00000D98 48090424                or [rsp], rax
  2738 00000D9C 9D                      popf
  2739                                 
  2740 00000D9D 480FBB37                btc qword [rdi], rsi
  2741 00000DA1 9C                      pushf
  2742 00000DA2 415B                    pop r11
  2743 00000DA4 8B02                    mov eax, [rdx]
  2744 00000DA6 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2745 00000DAB 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2746 00000DB2 4409D8                  or eax, r11d
  2747 00000DB5 8902                    mov [rdx], eax
  2748 00000DB7 C3                      ret
  2749                                 [global iemAImpl_btc_u64_EndProc:function hidden]
  2750                                 iemAImpl_btc_u64_EndProc:
  2751                                 [size iemAImpl_btc_u64 iemAImpl_btc_u64_EndProc - iemAImpl_btc_u64]
  2752                                 [size iemAImpl_btc_u64_EndProc 0]
  2753 00000DB8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2754                                 
  2755                                 
  2756                                 [global iemAImpl_btc_u16_locked]
  2757                                 iemAImpl_btc_u16_locked:
  2758                                 
  2759 00000DBC 9C                      pushf
  2760 00000DBD 8B02                    mov eax, [rdx]
  2761 00000DBF 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2762 00000DC6 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2763 00000DCB 48090424                or [rsp], rax
  2764 00000DCF 9D                      popf
  2765                                 
  2766 00000DD0 66F00FBB37              lock btc word [rdi], si
  2767 00000DD5 9C                      pushf
  2768 00000DD6 415B                    pop r11
  2769 00000DD8 8B02                    mov eax, [rdx]
  2770 00000DDA 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2771 00000DDF 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2772 00000DE6 4409D8                  or eax, r11d
  2773 00000DE9 8902                    mov [rdx], eax
  2774 00000DEB C3                      ret
  2775                                 [global iemAImpl_btc_u16_locked_EndProc:function hidden]
  2776                                 iemAImpl_btc_u16_locked_EndProc:
  2777                                 [size iemAImpl_btc_u16_locked iemAImpl_btc_u16_locked_EndProc - iemAImpl_btc_u16_locked]
  2778                                 [size iemAImpl_btc_u16_locked_EndProc 0]
  2779 00000DEC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2780                                 
  2781                                 [global iemAImpl_btc_u32_locked]
  2782                                 iemAImpl_btc_u32_locked:
  2783                                 
  2784 00000DF0 9C                      pushf
  2785 00000DF1 8B02                    mov eax, [rdx]
  2786 00000DF3 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2787 00000DFA 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2788 00000DFF 48090424                or [rsp], rax
  2789 00000E03 9D                      popf
  2790                                 
  2791 00000E04 F00FBB37                lock btc dword [rdi], esi
  2792 00000E08 9C                      pushf
  2793 00000E09 415B                    pop r11
  2794 00000E0B 8B02                    mov eax, [rdx]
  2795 00000E0D 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2796 00000E12 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2797 00000E19 4409D8                  or eax, r11d
  2798 00000E1C 8902                    mov [rdx], eax
  2799 00000E1E C3                      ret
  2800                                 [global iemAImpl_btc_u32_locked_EndProc:function hidden]
  2801                                 iemAImpl_btc_u32_locked_EndProc:
  2802                                 [size iemAImpl_btc_u32_locked iemAImpl_btc_u32_locked_EndProc - iemAImpl_btc_u32_locked]
  2803                                 [size iemAImpl_btc_u32_locked_EndProc 0]
  2804 00000E1F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2805                                 
  2806                                 [global iemAImpl_btc_u64_locked]
  2807                                 iemAImpl_btc_u64_locked:
  2808                                 
  2809 00000E23 9C                      pushf
  2810 00000E24 8B02                    mov eax, [rdx]
  2811 00000E26 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2812 00000E2D 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2813 00000E32 48090424                or [rsp], rax
  2814 00000E36 9D                      popf
  2815                                 
  2816 00000E37 F0480FBB37              lock btc qword [rdi], rsi
  2817 00000E3C 9C                      pushf
  2818 00000E3D 415B                    pop r11
  2819 00000E3F 8B02                    mov eax, [rdx]
  2820 00000E41 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2821 00000E46 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2822 00000E4D 4409D8                  or eax, r11d
  2823 00000E50 8902                    mov [rdx], eax
  2824 00000E52 C3                      ret
  2825                                 [global iemAImpl_btc_u64_locked_EndProc:function hidden]
  2826                                 iemAImpl_btc_u64_locked_EndProc:
  2827                                 [size iemAImpl_btc_u64_locked iemAImpl_btc_u64_locked_EndProc - iemAImpl_btc_u64_locked]
  2828                                 [size iemAImpl_btc_u64_locked_EndProc 0]
  2829 00000E53 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2830                                 %line 483+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2831                                 [section .text]
  2832                                 %line 483+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2833                                 [global iemAImpl_bts_u16]
  2834                                 iemAImpl_bts_u16:
  2835                                 
  2836 00000E57 9C                      pushf
  2837 00000E58 8B02                    mov eax, [rdx]
  2838 00000E5A 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2839 00000E61 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2840 00000E66 48090424                or [rsp], rax
  2841 00000E6A 9D                      popf
  2842                                 
  2843 00000E6B 660FAB37                bts word [rdi], si
  2844 00000E6F 9C                      pushf
  2845 00000E70 415B                    pop r11
  2846 00000E72 8B02                    mov eax, [rdx]
  2847 00000E74 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2848 00000E79 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2849 00000E80 4409D8                  or eax, r11d
  2850 00000E83 8902                    mov [rdx], eax
  2851 00000E85 C3                      ret
  2852                                 [global iemAImpl_bts_u16_EndProc:function hidden]
  2853                                 iemAImpl_bts_u16_EndProc:
  2854                                 [size iemAImpl_bts_u16 iemAImpl_bts_u16_EndProc - iemAImpl_bts_u16]
  2855                                 [size iemAImpl_bts_u16_EndProc 0]
  2856 00000E86 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2857                                 
  2858                                 [global iemAImpl_bts_u32]
  2859                                 iemAImpl_bts_u32:
  2860                                 
  2861 00000E8A 9C                      pushf
  2862 00000E8B 8B02                    mov eax, [rdx]
  2863 00000E8D 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2864 00000E94 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2865 00000E99 48090424                or [rsp], rax
  2866 00000E9D 9D                      popf
  2867                                 
  2868 00000E9E 0FAB37                  bts dword [rdi], esi
  2869 00000EA1 9C                      pushf
  2870 00000EA2 415B                    pop r11
  2871 00000EA4 8B02                    mov eax, [rdx]
  2872 00000EA6 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2873 00000EAB 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2874 00000EB2 4409D8                  or eax, r11d
  2875 00000EB5 8902                    mov [rdx], eax
  2876 00000EB7 C3                      ret
  2877                                 [global iemAImpl_bts_u32_EndProc:function hidden]
  2878                                 iemAImpl_bts_u32_EndProc:
  2879                                 [size iemAImpl_bts_u32 iemAImpl_bts_u32_EndProc - iemAImpl_bts_u32]
  2880                                 [size iemAImpl_bts_u32_EndProc 0]
  2881 00000EB8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2882                                 
  2883                                 [global iemAImpl_bts_u64]
  2884                                 iemAImpl_bts_u64:
  2885                                 
  2886 00000EBC 9C                      pushf
  2887 00000EBD 8B02                    mov eax, [rdx]
  2888 00000EBF 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2889 00000EC6 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2890 00000ECB 48090424                or [rsp], rax
  2891 00000ECF 9D                      popf
  2892                                 
  2893 00000ED0 480FAB37                bts qword [rdi], rsi
  2894 00000ED4 9C                      pushf
  2895 00000ED5 415B                    pop r11
  2896 00000ED7 8B02                    mov eax, [rdx]
  2897 00000ED9 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2898 00000EDE 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2899 00000EE5 4409D8                  or eax, r11d
  2900 00000EE8 8902                    mov [rdx], eax
  2901 00000EEA C3                      ret
  2902                                 [global iemAImpl_bts_u64_EndProc:function hidden]
  2903                                 iemAImpl_bts_u64_EndProc:
  2904                                 [size iemAImpl_bts_u64 iemAImpl_bts_u64_EndProc - iemAImpl_bts_u64]
  2905                                 [size iemAImpl_bts_u64_EndProc 0]
  2906 00000EEB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2907                                 
  2908                                 
  2909                                 [global iemAImpl_bts_u16_locked]
  2910                                 iemAImpl_bts_u16_locked:
  2911                                 
  2912 00000EEF 9C                      pushf
  2913 00000EF0 8B02                    mov eax, [rdx]
  2914 00000EF2 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2915 00000EF9 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2916 00000EFE 48090424                or [rsp], rax
  2917 00000F02 9D                      popf
  2918                                 
  2919 00000F03 66F00FAB37              lock bts word [rdi], si
  2920 00000F08 9C                      pushf
  2921 00000F09 415B                    pop r11
  2922 00000F0B 8B02                    mov eax, [rdx]
  2923 00000F0D 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2924 00000F12 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2925 00000F19 4409D8                  or eax, r11d
  2926 00000F1C 8902                    mov [rdx], eax
  2927 00000F1E C3                      ret
  2928                                 [global iemAImpl_bts_u16_locked_EndProc:function hidden]
  2929                                 iemAImpl_bts_u16_locked_EndProc:
  2930                                 [size iemAImpl_bts_u16_locked iemAImpl_bts_u16_locked_EndProc - iemAImpl_bts_u16_locked]
  2931                                 [size iemAImpl_bts_u16_locked_EndProc 0]
  2932 00000F1F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2933                                 
  2934                                 [global iemAImpl_bts_u32_locked]
  2935                                 iemAImpl_bts_u32_locked:
  2936                                 
  2937 00000F23 9C                      pushf
  2938 00000F24 8B02                    mov eax, [rdx]
  2939 00000F26 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2940 00000F2D 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2941 00000F32 48090424                or [rsp], rax
  2942 00000F36 9D                      popf
  2943                                 
  2944 00000F37 F00FAB37                lock bts dword [rdi], esi
  2945 00000F3B 9C                      pushf
  2946 00000F3C 415B                    pop r11
  2947 00000F3E 8B02                    mov eax, [rdx]
  2948 00000F40 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2949 00000F45 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2950 00000F4C 4409D8                  or eax, r11d
  2951 00000F4F 8902                    mov [rdx], eax
  2952 00000F51 C3                      ret
  2953                                 [global iemAImpl_bts_u32_locked_EndProc:function hidden]
  2954                                 iemAImpl_bts_u32_locked_EndProc:
  2955                                 [size iemAImpl_bts_u32_locked iemAImpl_bts_u32_locked_EndProc - iemAImpl_bts_u32_locked]
  2956                                 [size iemAImpl_bts_u32_locked_EndProc 0]
  2957 00000F52 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2958                                 
  2959                                 [global iemAImpl_bts_u64_locked]
  2960                                 iemAImpl_bts_u64_locked:
  2961                                 
  2962 00000F56 9C                      pushf
  2963 00000F57 8B02                    mov eax, [rdx]
  2964 00000F59 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2965 00000F60 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2966 00000F65 48090424                or [rsp], rax
  2967 00000F69 9D                      popf
  2968                                 
  2969 00000F6A F0480FAB37              lock bts qword [rdi], rsi
  2970 00000F6F 9C                      pushf
  2971 00000F70 415B                    pop r11
  2972 00000F72 8B02                    mov eax, [rdx]
  2973 00000F74 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2974 00000F79 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2975 00000F80 4409D8                  or eax, r11d
  2976 00000F83 8902                    mov [rdx], eax
  2977 00000F85 C3                      ret
  2978                                 [global iemAImpl_bts_u64_locked_EndProc:function hidden]
  2979                                 iemAImpl_bts_u64_locked_EndProc:
  2980                                 [size iemAImpl_bts_u64_locked iemAImpl_bts_u64_locked_EndProc - iemAImpl_bts_u64_locked]
  2981                                 [size iemAImpl_bts_u64_locked_EndProc 0]
  2982 00000F86 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  2983                                 %line 484+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2984                                 [section .text]
  2985                                 %line 484+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  2986                                 [global iemAImpl_btr_u16]
  2987                                 iemAImpl_btr_u16:
  2988                                 
  2989 00000F8A 9C                      pushf
  2990 00000F8B 8B02                    mov eax, [rdx]
  2991 00000F8D 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2992 00000F94 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  2993 00000F99 48090424                or [rsp], rax
  2994 00000F9D 9D                      popf
  2995                                 
  2996 00000F9E 660FB337                btr word [rdi], si
  2997 00000FA2 9C                      pushf
  2998 00000FA3 415B                    pop r11
  2999 00000FA5 8B02                    mov eax, [rdx]
  3000 00000FA7 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3001 00000FAC 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3002 00000FB3 4409D8                  or eax, r11d
  3003 00000FB6 8902                    mov [rdx], eax
  3004 00000FB8 C3                      ret
  3005                                 [global iemAImpl_btr_u16_EndProc:function hidden]
  3006                                 iemAImpl_btr_u16_EndProc:
  3007                                 [size iemAImpl_btr_u16 iemAImpl_btr_u16_EndProc - iemAImpl_btr_u16]
  3008                                 [size iemAImpl_btr_u16_EndProc 0]
  3009 00000FB9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3010                                 
  3011                                 [global iemAImpl_btr_u32]
  3012                                 iemAImpl_btr_u32:
  3013                                 
  3014 00000FBD 9C                      pushf
  3015 00000FBE 8B02                    mov eax, [rdx]
  3016 00000FC0 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3017 00000FC7 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3018 00000FCC 48090424                or [rsp], rax
  3019 00000FD0 9D                      popf
  3020                                 
  3021 00000FD1 0FB337                  btr dword [rdi], esi
  3022 00000FD4 9C                      pushf
  3023 00000FD5 415B                    pop r11
  3024 00000FD7 8B02                    mov eax, [rdx]
  3025 00000FD9 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3026 00000FDE 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3027 00000FE5 4409D8                  or eax, r11d
  3028 00000FE8 8902                    mov [rdx], eax
  3029 00000FEA C3                      ret
  3030                                 [global iemAImpl_btr_u32_EndProc:function hidden]
  3031                                 iemAImpl_btr_u32_EndProc:
  3032                                 [size iemAImpl_btr_u32 iemAImpl_btr_u32_EndProc - iemAImpl_btr_u32]
  3033                                 [size iemAImpl_btr_u32_EndProc 0]
  3034 00000FEB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3035                                 
  3036                                 [global iemAImpl_btr_u64]
  3037                                 iemAImpl_btr_u64:
  3038                                 
  3039 00000FEF 9C                      pushf
  3040 00000FF0 8B02                    mov eax, [rdx]
  3041 00000FF2 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3042 00000FF9 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3043 00000FFE 48090424                or [rsp], rax
  3044 00001002 9D                      popf
  3045                                 
  3046 00001003 480FB337                btr qword [rdi], rsi
  3047 00001007 9C                      pushf
  3048 00001008 415B                    pop r11
  3049 0000100A 8B02                    mov eax, [rdx]
  3050 0000100C 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3051 00001011 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3052 00001018 4409D8                  or eax, r11d
  3053 0000101B 8902                    mov [rdx], eax
  3054 0000101D C3                      ret
  3055                                 [global iemAImpl_btr_u64_EndProc:function hidden]
  3056                                 iemAImpl_btr_u64_EndProc:
  3057                                 [size iemAImpl_btr_u64 iemAImpl_btr_u64_EndProc - iemAImpl_btr_u64]
  3058                                 [size iemAImpl_btr_u64_EndProc 0]
  3059 0000101E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3060                                 
  3061                                 
  3062                                 [global iemAImpl_btr_u16_locked]
  3063                                 iemAImpl_btr_u16_locked:
  3064                                 
  3065 00001022 9C                      pushf
  3066 00001023 8B02                    mov eax, [rdx]
  3067 00001025 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3068 0000102C 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3069 00001031 48090424                or [rsp], rax
  3070 00001035 9D                      popf
  3071                                 
  3072 00001036 66F00FB337              lock btr word [rdi], si
  3073 0000103B 9C                      pushf
  3074 0000103C 415B                    pop r11
  3075 0000103E 8B02                    mov eax, [rdx]
  3076 00001040 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3077 00001045 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3078 0000104C 4409D8                  or eax, r11d
  3079 0000104F 8902                    mov [rdx], eax
  3080 00001051 C3                      ret
  3081                                 [global iemAImpl_btr_u16_locked_EndProc:function hidden]
  3082                                 iemAImpl_btr_u16_locked_EndProc:
  3083                                 [size iemAImpl_btr_u16_locked iemAImpl_btr_u16_locked_EndProc - iemAImpl_btr_u16_locked]
  3084                                 [size iemAImpl_btr_u16_locked_EndProc 0]
  3085 00001052 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3086                                 
  3087                                 [global iemAImpl_btr_u32_locked]
  3088                                 iemAImpl_btr_u32_locked:
  3089                                 
  3090 00001056 9C                      pushf
  3091 00001057 8B02                    mov eax, [rdx]
  3092 00001059 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3093 00001060 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3094 00001065 48090424                or [rsp], rax
  3095 00001069 9D                      popf
  3096                                 
  3097 0000106A F00FB337                lock btr dword [rdi], esi
  3098 0000106E 9C                      pushf
  3099 0000106F 415B                    pop r11
  3100 00001071 8B02                    mov eax, [rdx]
  3101 00001073 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3102 00001078 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3103 0000107F 4409D8                  or eax, r11d
  3104 00001082 8902                    mov [rdx], eax
  3105 00001084 C3                      ret
  3106                                 [global iemAImpl_btr_u32_locked_EndProc:function hidden]
  3107                                 iemAImpl_btr_u32_locked_EndProc:
  3108                                 [size iemAImpl_btr_u32_locked iemAImpl_btr_u32_locked_EndProc - iemAImpl_btr_u32_locked]
  3109                                 [size iemAImpl_btr_u32_locked_EndProc 0]
  3110 00001085 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3111                                 
  3112                                 [global iemAImpl_btr_u64_locked]
  3113                                 iemAImpl_btr_u64_locked:
  3114                                 
  3115 00001089 9C                      pushf
  3116 0000108A 8B02                    mov eax, [rdx]
  3117 0000108C 8124242AF7FFFF          and dword [rsp], ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3118 00001093 25D5080000              and eax, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3119 00001098 48090424                or [rsp], rax
  3120 0000109C 9D                      popf
  3121                                 
  3122 0000109D F0480FB337              lock btr qword [rdi], rsi
  3123 000010A2 9C                      pushf
  3124 000010A3 415B                    pop r11
  3125 000010A5 8B02                    mov eax, [rdx]
  3126 000010A7 252AF7FFFF              and eax, ~(((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3127 000010AC 4181E3D5080000          and r11d, (((1 << 0)) | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3128 000010B3 4409D8                  or eax, r11d
  3129 000010B6 8902                    mov [rdx], eax
  3130 000010B8 C3                      ret
  3131                                 [global iemAImpl_btr_u64_locked_EndProc:function hidden]
  3132                                 iemAImpl_btr_u64_locked_EndProc:
  3133                                 [size iemAImpl_btr_u64_locked iemAImpl_btr_u64_locked_EndProc - iemAImpl_btr_u64_locked]
  3134                                 [size iemAImpl_btr_u64_locked_EndProc 0]
  3135 000010B9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3136                                 %line 485+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3137                                 
  3138                                 
  3139                                 
  3140                                 
  3141                                 
  3142                                 
  3143                                 
  3144                                 
  3145                                 
  3146                                 
  3147                                 
  3148                                 
  3149                                 
  3150                                 
  3151                                 %line 536+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3152                                 [section .text]
  3153                                 %line 536+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3154                                 [global iemAImpl_bsf_u16]
  3155                                 iemAImpl_bsf_u16:
  3156                                 
  3157 000010BD 9C                      pushf
  3158 000010BE 8B02                    mov eax, [rdx]
  3159 000010C0 8124242AF7FFFF          and dword [rsp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3160 000010C7 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3161 000010CC 48090424                or [rsp], rax
  3162 000010D0 9D                      popf
  3163                                 
  3164 000010D1 660FBCC6                bsf ax, si
  3165 000010D5 7401                    jz .unchanged_dst
  3166 000010D7 668907                  mov [rdi], ax
  3167                                 .unchanged_dst:
  3168 000010DA 9C                      pushf
  3169 000010DB 415B                    pop r11
  3170 000010DD 8B02                    mov eax, [rdx]
  3171 000010DF 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3172 000010E4 4181E3D5080000          and r11d, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3173 000010EB 4409D8                  or eax, r11d
  3174 000010EE 8902                    mov [rdx], eax
  3175 000010F0 C3                      ret
  3176                                 [global iemAImpl_bsf_u16_EndProc:function hidden]
  3177                                 iemAImpl_bsf_u16_EndProc:
  3178                                 [size iemAImpl_bsf_u16 iemAImpl_bsf_u16_EndProc - iemAImpl_bsf_u16]
  3179                                 [size iemAImpl_bsf_u16_EndProc 0]
  3180 000010F1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3181                                 
  3182                                 [global iemAImpl_bsf_u32]
  3183                                 iemAImpl_bsf_u32:
  3184                                 
  3185 000010F5 9C                      pushf
  3186 000010F6 8B02                    mov eax, [rdx]
  3187 000010F8 8124242AF7FFFF          and dword [rsp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3188 000010FF 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3189 00001104 48090424                or [rsp], rax
  3190 00001108 9D                      popf
  3191                                 
  3192 00001109 0FBCC6                  bsf eax, esi
  3193 0000110C 7400                    jz .unchanged_dst
  3194 0000110E 8907                    mov [rdi], eax
  3195                                 .unchanged_dst:
  3196 00001110 9C                      pushf
  3197 00001111 415B                    pop r11
  3198 00001113 8B02                    mov eax, [rdx]
  3199 00001115 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3200 0000111A 4181E3D5080000          and r11d, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3201 00001121 4409D8                  or eax, r11d
  3202 00001124 8902                    mov [rdx], eax
  3203 00001126 C3                      ret
  3204                                 [global iemAImpl_bsf_u32_EndProc:function hidden]
  3205                                 iemAImpl_bsf_u32_EndProc:
  3206                                 [size iemAImpl_bsf_u32 iemAImpl_bsf_u32_EndProc - iemAImpl_bsf_u32]
  3207                                 [size iemAImpl_bsf_u32_EndProc 0]
  3208 00001127 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3209                                 
  3210                                 [global iemAImpl_bsf_u64]
  3211                                 iemAImpl_bsf_u64:
  3212                                 
  3213 0000112B 9C                      pushf
  3214 0000112C 8B02                    mov eax, [rdx]
  3215 0000112E 8124242AF7FFFF          and dword [rsp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3216 00001135 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3217 0000113A 48090424                or [rsp], rax
  3218 0000113E 9D                      popf
  3219                                 
  3220 0000113F 480FBCC6                bsf rax, rsi
  3221 00001143 7401                    jz .unchanged_dst
  3222 00001145 488907                  mov [rdi], rax
  3223                                 .unchanged_dst:
  3224 00001148 9C                      pushf
  3225 00001149 415B                    pop r11
  3226 0000114B 8B02                    mov eax, [rdx]
  3227 0000114D 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3228 00001152 4181E3D5080000          and r11d, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3229 00001159 4409D8                  or eax, r11d
  3230 0000115C 8902                    mov [rdx], eax
  3231 0000115E C3                      ret
  3232                                 [global iemAImpl_bsf_u64_EndProc:function hidden]
  3233                                 iemAImpl_bsf_u64_EndProc:
  3234                                 [size iemAImpl_bsf_u64 iemAImpl_bsf_u64_EndProc - iemAImpl_bsf_u64]
  3235                                 [size iemAImpl_bsf_u64_EndProc 0]
  3236 0000115F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3237                                 %line 537+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3238                                 [section .text]
  3239                                 %line 537+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3240                                 [global iemAImpl_bsr_u16]
  3241                                 iemAImpl_bsr_u16:
  3242                                 
  3243 00001163 9C                      pushf
  3244 00001164 8B02                    mov eax, [rdx]
  3245 00001166 8124242AF7FFFF          and dword [rsp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3246 0000116D 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3247 00001172 48090424                or [rsp], rax
  3248 00001176 9D                      popf
  3249                                 
  3250 00001177 660FBDC6                bsr ax, si
  3251 0000117B 7401                    jz .unchanged_dst
  3252 0000117D 668907                  mov [rdi], ax
  3253                                 .unchanged_dst:
  3254 00001180 9C                      pushf
  3255 00001181 415B                    pop r11
  3256 00001183 8B02                    mov eax, [rdx]
  3257 00001185 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3258 0000118A 4181E3D5080000          and r11d, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3259 00001191 4409D8                  or eax, r11d
  3260 00001194 8902                    mov [rdx], eax
  3261 00001196 C3                      ret
  3262                                 [global iemAImpl_bsr_u16_EndProc:function hidden]
  3263                                 iemAImpl_bsr_u16_EndProc:
  3264                                 [size iemAImpl_bsr_u16 iemAImpl_bsr_u16_EndProc - iemAImpl_bsr_u16]
  3265                                 [size iemAImpl_bsr_u16_EndProc 0]
  3266 00001197 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3267                                 
  3268                                 [global iemAImpl_bsr_u32]
  3269                                 iemAImpl_bsr_u32:
  3270                                 
  3271 0000119B 9C                      pushf
  3272 0000119C 8B02                    mov eax, [rdx]
  3273 0000119E 8124242AF7FFFF          and dword [rsp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3274 000011A5 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3275 000011AA 48090424                or [rsp], rax
  3276 000011AE 9D                      popf
  3277                                 
  3278 000011AF 0FBDC6                  bsr eax, esi
  3279 000011B2 7400                    jz .unchanged_dst
  3280 000011B4 8907                    mov [rdi], eax
  3281                                 .unchanged_dst:
  3282 000011B6 9C                      pushf
  3283 000011B7 415B                    pop r11
  3284 000011B9 8B02                    mov eax, [rdx]
  3285 000011BB 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3286 000011C0 4181E3D5080000          and r11d, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3287 000011C7 4409D8                  or eax, r11d
  3288 000011CA 8902                    mov [rdx], eax
  3289 000011CC C3                      ret
  3290                                 [global iemAImpl_bsr_u32_EndProc:function hidden]
  3291                                 iemAImpl_bsr_u32_EndProc:
  3292                                 [size iemAImpl_bsr_u32 iemAImpl_bsr_u32_EndProc - iemAImpl_bsr_u32]
  3293                                 [size iemAImpl_bsr_u32_EndProc 0]
  3294 000011CD CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3295                                 
  3296                                 [global iemAImpl_bsr_u64]
  3297                                 iemAImpl_bsr_u64:
  3298                                 
  3299 000011D1 9C                      pushf
  3300 000011D2 8B02                    mov eax, [rdx]
  3301 000011D4 8124242AF7FFFF          and dword [rsp], ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3302 000011DB 25D5080000              and eax, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3303 000011E0 48090424                or [rsp], rax
  3304 000011E4 9D                      popf
  3305                                 
  3306 000011E5 480FBDC6                bsr rax, rsi
  3307 000011E9 7401                    jz .unchanged_dst
  3308 000011EB 488907                  mov [rdi], rax
  3309                                 .unchanged_dst:
  3310 000011EE 9C                      pushf
  3311 000011EF 415B                    pop r11
  3312 000011F1 8B02                    mov eax, [rdx]
  3313 000011F3 252AF7FFFF              and eax, ~(((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3314 000011F8 4181E3D5080000          and r11d, (((1 << 6)) | ((1 << 11) | (1 << 7) | (1 << 4) | (1 << 2) | (1 << 0)))
  3315 000011FF 4409D8                  or eax, r11d
  3316 00001202 8902                    mov [rdx], eax
  3317 00001204 C3                      ret
  3318                                 [global iemAImpl_bsr_u64_EndProc:function hidden]
  3319                                 iemAImpl_bsr_u64_EndProc:
  3320                                 [size iemAImpl_bsr_u64 iemAImpl_bsr_u64_EndProc - iemAImpl_bsr_u64]
  3321                                 [size iemAImpl_bsr_u64_EndProc 0]
  3322 00001205 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3323                                 %line 538+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3324                                 
  3325                                 
  3326                                 
  3327                                 
  3328                                 
  3329                                 
  3330                                 [section .text]
  3331                                 [global iemAImpl_imul_two_u16]
  3332                                 %line 545+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3333                                 iemAImpl_imul_two_u16:
  3334                                 %line 547+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3335                                 
  3336                                 %line 547+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3337 00001209 9C                      pushf
  3338 0000120A 8B02                    mov eax, [rdx]
  3339 0000120C 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3340 00001213 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3341 00001218 48090424                or [rsp], rax
  3342 0000121C 9D                      popf
  3343                                 
  3344                                 %line 548+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3345 0000121D 660FAF37                imul si, word [rdi]
  3346 00001221 668937                  mov [rdi], si
  3347 00001224 9C                      pushf
  3348                                 %line 550+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3349 00001225 415B                    pop r11
  3350 00001227 8B02                    mov eax, [rdx]
  3351 00001229 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3352 0000122E 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3353 00001235 4409D8                  or eax, r11d
  3354 00001238 8902                    mov [rdx], eax
  3355                                 %line 551+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3356 0000123A C3                      ret
  3357                                 [global iemAImpl_imul_two_u16_EndProc:function hidden]
  3358                                 %line 552+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3359                                 iemAImpl_imul_two_u16_EndProc:
  3360                                 [size iemAImpl_imul_two_u16 iemAImpl_imul_two_u16_EndProc - iemAImpl_imul_two_u16]
  3361                                 [size iemAImpl_imul_two_u16_EndProc 0]
  3362 0000123B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3363                                 %line 553+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3364                                 
  3365                                 [global iemAImpl_imul_two_u32]
  3366                                 %line 554+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3367                                 iemAImpl_imul_two_u32:
  3368                                 %line 556+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3369                                 
  3370                                 %line 556+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3371 0000123F 9C                      pushf
  3372 00001240 8B02                    mov eax, [rdx]
  3373 00001242 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3374 00001249 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3375 0000124E 48090424                or [rsp], rax
  3376 00001252 9D                      popf
  3377                                 
  3378                                 %line 557+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3379 00001253 0FAF37                  imul esi, dword [rdi]
  3380 00001256 8937                    mov [rdi], esi
  3381 00001258 9C                      pushf
  3382                                 %line 559+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3383 00001259 415B                    pop r11
  3384 0000125B 8B02                    mov eax, [rdx]
  3385 0000125D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3386 00001262 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3387 00001269 4409D8                  or eax, r11d
  3388 0000126C 8902                    mov [rdx], eax
  3389                                 %line 560+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3390 0000126E C3                      ret
  3391                                 [global iemAImpl_imul_two_u32_EndProc:function hidden]
  3392                                 %line 561+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3393                                 iemAImpl_imul_two_u32_EndProc:
  3394                                 [size iemAImpl_imul_two_u32 iemAImpl_imul_two_u32_EndProc - iemAImpl_imul_two_u32]
  3395                                 [size iemAImpl_imul_two_u32_EndProc 0]
  3396 0000126F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3397                                 %line 562+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3398                                 
  3399                                 %line 564+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3400                                 [global iemAImpl_imul_two_u64]
  3401                                 %line 564+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3402                                 iemAImpl_imul_two_u64:
  3403                                 %line 566+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3404                                 
  3405                                 %line 566+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3406 00001273 9C                      pushf
  3407 00001274 8B02                    mov eax, [rdx]
  3408 00001276 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3409 0000127D 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3410 00001282 48090424                or [rsp], rax
  3411 00001286 9D                      popf
  3412                                 
  3413                                 %line 567+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3414 00001287 480FAF37                imul rsi, qword [rdi]
  3415 0000128B 488937                  mov [rdi], rsi
  3416 0000128E 9C                      pushf
  3417                                 %line 569+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3418 0000128F 415B                    pop r11
  3419 00001291 8B02                    mov eax, [rdx]
  3420 00001293 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3421 00001298 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  3422 0000129F 4409D8                  or eax, r11d
  3423 000012A2 8902                    mov [rdx], eax
  3424                                 %line 570+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3425 000012A4 C3                      ret
  3426                                 [global iemAImpl_imul_two_u64_EndProc:function hidden]
  3427                                 %line 571+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3428                                 iemAImpl_imul_two_u64_EndProc:
  3429                                 [size iemAImpl_imul_two_u64 iemAImpl_imul_two_u64_EndProc - iemAImpl_imul_two_u64]
  3430                                 [size iemAImpl_imul_two_u64_EndProc 0]
  3431 000012A5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3432                                 %line 573+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3433                                 
  3434                                 
  3435                                 
  3436                                 
  3437                                 
  3438                                 
  3439                                 
  3440                                 
  3441                                 [section .text]
  3442                                 [global iemAImpl_xchg_u8]
  3443                                 %line 582+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3444                                 iemAImpl_xchg_u8:
  3445                                 %line 584+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3446 000012A9 8A06                    mov al, [rsi]
  3447 000012AB 8607                    xchg [rdi], al
  3448 000012AD 8806                    mov [rsi], al
  3449 000012AF C3                      ret
  3450                                 [global iemAImpl_xchg_u8_EndProc:function hidden]
  3451                                 %line 588+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3452                                 iemAImpl_xchg_u8_EndProc:
  3453                                 [size iemAImpl_xchg_u8 iemAImpl_xchg_u8_EndProc - iemAImpl_xchg_u8]
  3454                                 [size iemAImpl_xchg_u8_EndProc 0]
  3455 000012B0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3456                                 %line 589+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3457                                 
  3458                                 [global iemAImpl_xchg_u16]
  3459                                 %line 590+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3460                                 iemAImpl_xchg_u16:
  3461                                 %line 592+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3462 000012B4 668B06                  mov ax, [rsi]
  3463 000012B7 668707                  xchg [rdi], ax
  3464 000012BA 668906                  mov [rsi], ax
  3465 000012BD C3                      ret
  3466                                 [global iemAImpl_xchg_u16_EndProc:function hidden]
  3467                                 %line 596+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3468                                 iemAImpl_xchg_u16_EndProc:
  3469                                 [size iemAImpl_xchg_u16 iemAImpl_xchg_u16_EndProc - iemAImpl_xchg_u16]
  3470                                 [size iemAImpl_xchg_u16_EndProc 0]
  3471 000012BE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3472                                 %line 597+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3473                                 
  3474                                 [global iemAImpl_xchg_u32]
  3475                                 %line 598+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3476                                 iemAImpl_xchg_u32:
  3477                                 %line 600+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3478 000012C2 8B06                    mov eax, [rsi]
  3479 000012C4 8707                    xchg [rdi], eax
  3480 000012C6 8906                    mov [rsi], eax
  3481 000012C8 C3                      ret
  3482                                 [global iemAImpl_xchg_u32_EndProc:function hidden]
  3483                                 %line 604+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3484                                 iemAImpl_xchg_u32_EndProc:
  3485                                 [size iemAImpl_xchg_u32 iemAImpl_xchg_u32_EndProc - iemAImpl_xchg_u32]
  3486                                 [size iemAImpl_xchg_u32_EndProc 0]
  3487 000012C9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3488                                 %line 605+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3489                                 
  3490                                 %line 607+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3491                                 [global iemAImpl_xchg_u64]
  3492                                 %line 607+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3493                                 iemAImpl_xchg_u64:
  3494                                 %line 609+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3495 000012CD 488B06                  mov rax, [rsi]
  3496 000012D0 488707                  xchg [rdi], rax
  3497 000012D3 488906                  mov [rsi], rax
  3498 000012D6 C3                      ret
  3499                                 [global iemAImpl_xchg_u64_EndProc:function hidden]
  3500                                 %line 613+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3501                                 iemAImpl_xchg_u64_EndProc:
  3502                                 [size iemAImpl_xchg_u64 iemAImpl_xchg_u64_EndProc - iemAImpl_xchg_u64]
  3503                                 [size iemAImpl_xchg_u64_EndProc 0]
  3504 000012D7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3505                                 %line 615+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3506                                 
  3507                                 
  3508                                 
  3509                                 
  3510                                 
  3511                                 
  3512                                 
  3513                                 
  3514                                 
  3515                                 [section .text]
  3516                                 [global iemAImpl_xadd_u8]
  3517                                 %line 625+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3518                                 iemAImpl_xadd_u8:
  3519                                 %line 627+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3520                                 
  3521                                 %line 627+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3522 000012DB 9C                      pushf
  3523 000012DC 8B02                    mov eax, [rdx]
  3524 000012DE 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3525 000012E5 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3526 000012EA 48090424                or [rsp], rax
  3527 000012EE 9D                      popf
  3528                                 
  3529                                 %line 628+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3530 000012EF 8A06                    mov al, [rsi]
  3531 000012F1 0FC007                  xadd [rdi], al
  3532 000012F4 8806                    mov [rsi], al
  3533 000012F6 9C                      pushf
  3534                                 %line 631+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3535 000012F7 415B                    pop r11
  3536 000012F9 8B02                    mov eax, [rdx]
  3537 000012FB 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3538 00001300 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3539 00001307 4409D8                  or eax, r11d
  3540 0000130A 8902                    mov [rdx], eax
  3541                                 %line 632+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3542 0000130C C3                      ret
  3543                                 [global iemAImpl_xadd_u8_EndProc:function hidden]
  3544                                 %line 633+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3545                                 iemAImpl_xadd_u8_EndProc:
  3546                                 [size iemAImpl_xadd_u8 iemAImpl_xadd_u8_EndProc - iemAImpl_xadd_u8]
  3547                                 [size iemAImpl_xadd_u8_EndProc 0]
  3548 0000130D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3549                                 %line 634+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3550                                 
  3551                                 [global iemAImpl_xadd_u16]
  3552                                 %line 635+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3553                                 iemAImpl_xadd_u16:
  3554                                 %line 637+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3555                                 
  3556                                 %line 637+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3557 00001311 9C                      pushf
  3558 00001312 8B02                    mov eax, [rdx]
  3559 00001314 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3560 0000131B 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3561 00001320 48090424                or [rsp], rax
  3562 00001324 9D                      popf
  3563                                 
  3564                                 %line 638+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3565 00001325 668B06                  mov ax, [rsi]
  3566 00001328 660FC107                xadd [rdi], ax
  3567 0000132C 668906                  mov [rsi], ax
  3568 0000132F 9C                      pushf
  3569                                 %line 641+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3570 00001330 415B                    pop r11
  3571 00001332 8B02                    mov eax, [rdx]
  3572 00001334 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3573 00001339 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3574 00001340 4409D8                  or eax, r11d
  3575 00001343 8902                    mov [rdx], eax
  3576                                 %line 642+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3577 00001345 C3                      ret
  3578                                 [global iemAImpl_xadd_u16_EndProc:function hidden]
  3579                                 %line 643+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3580                                 iemAImpl_xadd_u16_EndProc:
  3581                                 [size iemAImpl_xadd_u16 iemAImpl_xadd_u16_EndProc - iemAImpl_xadd_u16]
  3582                                 [size iemAImpl_xadd_u16_EndProc 0]
  3583 00001346 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3584                                 %line 644+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3585                                 
  3586                                 [global iemAImpl_xadd_u32]
  3587                                 %line 645+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3588                                 iemAImpl_xadd_u32:
  3589                                 %line 647+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3590                                 
  3591                                 %line 647+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3592 0000134A 9C                      pushf
  3593 0000134B 8B02                    mov eax, [rdx]
  3594 0000134D 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3595 00001354 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3596 00001359 48090424                or [rsp], rax
  3597 0000135D 9D                      popf
  3598                                 
  3599                                 %line 648+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3600 0000135E 8B06                    mov eax, [rsi]
  3601 00001360 0FC107                  xadd [rdi], eax
  3602 00001363 8906                    mov [rsi], eax
  3603 00001365 9C                      pushf
  3604                                 %line 651+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3605 00001366 415B                    pop r11
  3606 00001368 8B02                    mov eax, [rdx]
  3607 0000136A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3608 0000136F 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3609 00001376 4409D8                  or eax, r11d
  3610 00001379 8902                    mov [rdx], eax
  3611                                 %line 652+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3612 0000137B C3                      ret
  3613                                 [global iemAImpl_xadd_u32_EndProc:function hidden]
  3614                                 %line 653+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3615                                 iemAImpl_xadd_u32_EndProc:
  3616                                 [size iemAImpl_xadd_u32 iemAImpl_xadd_u32_EndProc - iemAImpl_xadd_u32]
  3617                                 [size iemAImpl_xadd_u32_EndProc 0]
  3618 0000137C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3619                                 %line 654+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3620                                 
  3621                                 %line 656+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3622                                 [global iemAImpl_xadd_u64]
  3623                                 %line 656+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3624                                 iemAImpl_xadd_u64:
  3625                                 %line 658+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3626                                 
  3627                                 %line 658+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3628 00001380 9C                      pushf
  3629 00001381 8B02                    mov eax, [rdx]
  3630 00001383 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3631 0000138A 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3632 0000138F 48090424                or [rsp], rax
  3633 00001393 9D                      popf
  3634                                 
  3635                                 %line 659+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3636 00001394 488B06                  mov rax, [rsi]
  3637 00001397 480FC107                xadd [rdi], rax
  3638 0000139B 488906                  mov [rsi], rax
  3639 0000139E 9C                      pushf
  3640                                 %line 662+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3641 0000139F 415B                    pop r11
  3642 000013A1 8B02                    mov eax, [rdx]
  3643 000013A3 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3644 000013A8 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3645 000013AF 4409D8                  or eax, r11d
  3646 000013B2 8902                    mov [rdx], eax
  3647                                 %line 663+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3648 000013B4 C3                      ret
  3649                                 [global iemAImpl_xadd_u64_EndProc:function hidden]
  3650                                 %line 664+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3651                                 iemAImpl_xadd_u64_EndProc:
  3652                                 [size iemAImpl_xadd_u64 iemAImpl_xadd_u64_EndProc - iemAImpl_xadd_u64]
  3653                                 [size iemAImpl_xadd_u64_EndProc 0]
  3654 000013B5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3655                                 %line 666+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3656                                 
  3657                                 [global iemAImpl_xadd_u8_locked]
  3658                                 %line 667+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3659                                 iemAImpl_xadd_u8_locked:
  3660                                 %line 669+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3661                                 
  3662                                 %line 669+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3663 000013B9 9C                      pushf
  3664 000013BA 8B02                    mov eax, [rdx]
  3665 000013BC 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3666 000013C3 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3667 000013C8 48090424                or [rsp], rax
  3668 000013CC 9D                      popf
  3669                                 
  3670                                 %line 670+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3671 000013CD 8A06                    mov al, [rsi]
  3672 000013CF F00FC007                lock xadd [rdi], al
  3673 000013D3 8806                    mov [rsi], al
  3674 000013D5 9C                      pushf
  3675                                 %line 673+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3676 000013D6 415B                    pop r11
  3677 000013D8 8B02                    mov eax, [rdx]
  3678 000013DA 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3679 000013DF 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3680 000013E6 4409D8                  or eax, r11d
  3681 000013E9 8902                    mov [rdx], eax
  3682                                 %line 674+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3683 000013EB C3                      ret
  3684                                 [global iemAImpl_xadd_u8_locked_EndProc:function hidden]
  3685                                 %line 675+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3686                                 iemAImpl_xadd_u8_locked_EndProc:
  3687                                 [size iemAImpl_xadd_u8_locked iemAImpl_xadd_u8_locked_EndProc - iemAImpl_xadd_u8_locked]
  3688                                 [size iemAImpl_xadd_u8_locked_EndProc 0]
  3689 000013EC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3690                                 %line 676+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3691                                 
  3692                                 [global iemAImpl_xadd_u16_locked]
  3693                                 %line 677+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3694                                 iemAImpl_xadd_u16_locked:
  3695                                 %line 679+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3696                                 
  3697                                 %line 679+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3698 000013F0 9C                      pushf
  3699 000013F1 8B02                    mov eax, [rdx]
  3700 000013F3 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3701 000013FA 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3702 000013FF 48090424                or [rsp], rax
  3703 00001403 9D                      popf
  3704                                 
  3705                                 %line 680+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3706 00001404 668B06                  mov ax, [rsi]
  3707 00001407 66F00FC107              lock xadd [rdi], ax
  3708 0000140C 668906                  mov [rsi], ax
  3709 0000140F 9C                      pushf
  3710                                 %line 683+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3711 00001410 415B                    pop r11
  3712 00001412 8B02                    mov eax, [rdx]
  3713 00001414 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3714 00001419 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3715 00001420 4409D8                  or eax, r11d
  3716 00001423 8902                    mov [rdx], eax
  3717                                 %line 684+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3718 00001425 C3                      ret
  3719                                 [global iemAImpl_xadd_u16_locked_EndProc:function hidden]
  3720                                 %line 685+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3721                                 iemAImpl_xadd_u16_locked_EndProc:
  3722                                 [size iemAImpl_xadd_u16_locked iemAImpl_xadd_u16_locked_EndProc - iemAImpl_xadd_u16_locked]
  3723                                 [size iemAImpl_xadd_u16_locked_EndProc 0]
  3724 00001426 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3725                                 %line 686+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3726                                 
  3727                                 [global iemAImpl_xadd_u32_locked]
  3728                                 %line 687+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3729                                 iemAImpl_xadd_u32_locked:
  3730                                 %line 689+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3731                                 
  3732                                 %line 689+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3733 0000142A 9C                      pushf
  3734 0000142B 8B02                    mov eax, [rdx]
  3735 0000142D 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3736 00001434 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3737 00001439 48090424                or [rsp], rax
  3738 0000143D 9D                      popf
  3739                                 
  3740                                 %line 690+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3741 0000143E 8B06                    mov eax, [rsi]
  3742 00001440 F00FC107                lock xadd [rdi], eax
  3743 00001444 8906                    mov [rsi], eax
  3744 00001446 9C                      pushf
  3745                                 %line 693+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3746 00001447 415B                    pop r11
  3747 00001449 8B02                    mov eax, [rdx]
  3748 0000144B 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3749 00001450 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3750 00001457 4409D8                  or eax, r11d
  3751 0000145A 8902                    mov [rdx], eax
  3752                                 %line 694+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3753 0000145C C3                      ret
  3754                                 [global iemAImpl_xadd_u32_locked_EndProc:function hidden]
  3755                                 %line 695+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3756                                 iemAImpl_xadd_u32_locked_EndProc:
  3757                                 [size iemAImpl_xadd_u32_locked iemAImpl_xadd_u32_locked_EndProc - iemAImpl_xadd_u32_locked]
  3758                                 [size iemAImpl_xadd_u32_locked_EndProc 0]
  3759 0000145D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3760                                 %line 696+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3761                                 
  3762                                 %line 698+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3763                                 [global iemAImpl_xadd_u64_locked]
  3764                                 %line 698+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3765                                 iemAImpl_xadd_u64_locked:
  3766                                 %line 700+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3767                                 
  3768                                 %line 700+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3769 00001461 9C                      pushf
  3770 00001462 8B02                    mov eax, [rdx]
  3771 00001464 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3772 0000146B 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3773 00001470 48090424                or [rsp], rax
  3774 00001474 9D                      popf
  3775                                 
  3776                                 %line 701+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3777 00001475 488B06                  mov rax, [rsi]
  3778 00001478 F0480FC107              lock xadd [rdi], rax
  3779 0000147D 488906                  mov [rsi], rax
  3780 00001480 9C                      pushf
  3781                                 %line 704+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3782 00001481 415B                    pop r11
  3783 00001483 8B02                    mov eax, [rdx]
  3784 00001485 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3785 0000148A 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  3786 00001491 4409D8                  or eax, r11d
  3787 00001494 8902                    mov [rdx], eax
  3788                                 %line 705+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3789 00001496 C3                      ret
  3790                                 [global iemAImpl_xadd_u64_locked_EndProc:function hidden]
  3791                                 %line 706+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3792                                 iemAImpl_xadd_u64_locked_EndProc:
  3793                                 [size iemAImpl_xadd_u64_locked iemAImpl_xadd_u64_locked_EndProc - iemAImpl_xadd_u64_locked]
  3794                                 [size iemAImpl_xadd_u64_locked_EndProc 0]
  3795 00001497 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3796                                 %line 708+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3797                                 
  3798                                 
  3799                                 
  3800                                 
  3801                                 
  3802                                 
  3803                                 
  3804                                 
  3805                                 
  3806                                 
  3807                                 
  3808                                 
  3809                                 
  3810                                 
  3811                                 [section .text]
  3812                                 [global iemAImpl_cmpxchg8b]
  3813                                 %line 723+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3814                                 iemAImpl_cmpxchg8b:
  3815                                 %line 746+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3816 0000149B 53                      push rbx
  3817                                 
  3818 0000149C 4989CA                  mov r10, rcx
  3819 0000149F 4989D3                  mov r11, rdx
  3820                                 
  3821 000014A2 418B1B                  mov ebx, [r11]
  3822 000014A5 418B4B04                mov ecx, [r11 + 4]
  3823                                 
  3824                                 %line 753+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3825 000014A9 9C                      pushf
  3826 000014AA 418B02                  mov eax, [r10]
  3827 000014AD 832424BF                and dword [rsp], ~(((1 << 6)) | 0)
  3828 000014B1 83E040                  and eax, (((1 << 6)) | 0)
  3829 000014B4 48090424                or [rsp], rax
  3830 000014B8 9D                      popf
  3831                                 
  3832                                 %line 754+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3833 000014B9 8B06                    mov eax, [rsi]
  3834 000014BB 8B5604                  mov edx, [rsi + 4]
  3835                                 
  3836 000014BE F00FC70F                lock cmpxchg8b [rdi]
  3837                                 
  3838 000014C2 8906                    mov [rsi], eax
  3839 000014C4 895604                  mov [rsi + 4], edx
  3840 000014C7 9C                      pushf
  3841                                 %line 761+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3842 000014C8 415B                    pop r11
  3843 000014CA 418B02                  mov eax, [r10]
  3844 000014CD 83E0BF                  and eax, ~(((1 << 6)) | 0)
  3845 000014D0 4183E340                and r11d, (((1 << 6)) | 0)
  3846 000014D4 4409D8                  or eax, r11d
  3847 000014D7 418902                  mov [r10], eax
  3848                                 %line 762+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3849                                 
  3850 000014DA 5B                      pop rbx
  3851 000014DB C3                      ret
  3852                                 
  3853                                 %line 796+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3854                                 [global iemAImpl_cmpxchg8b_EndProc:function hidden]
  3855                                 %line 796+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3856                                 iemAImpl_cmpxchg8b_EndProc:
  3857                                 [size iemAImpl_cmpxchg8b iemAImpl_cmpxchg8b_EndProc - iemAImpl_cmpxchg8b]
  3858                                 [size iemAImpl_cmpxchg8b_EndProc 0]
  3859 000014DC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3860                                 %line 797+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3861                                 
  3862                                 [global iemAImpl_cmpxchg8b_locked]
  3863                                 %line 798+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3864                                 iemAImpl_cmpxchg8b_locked:
  3865                                 %line 799+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3866                                 
  3867 000014E0 EBB7                    jmp iemAImpl_cmpxchg8b
  3868                                 [global iemAImpl_cmpxchg8b_locked_EndProc:function hidden]
  3869                                 %line 801+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3870                                 iemAImpl_cmpxchg8b_locked_EndProc:
  3871                                 [size iemAImpl_cmpxchg8b_locked iemAImpl_cmpxchg8b_locked_EndProc - iemAImpl_cmpxchg8b_locked]
  3872                                 [size iemAImpl_cmpxchg8b_locked_EndProc 0]
  3873 000014E2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3874                                 %line 802+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3875                                 
  3876                                 
  3877                                 
  3878                                 
  3879                                 
  3880                                 
  3881                                 
  3882                                 
  3883                                 
  3884                                 
  3885                                 
  3886                                 [section .text]
  3887                                 %line 899+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3888                                 
  3889                                 [global iemAImpl_cmpxchg_u8]
  3890                                 %line 900+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3891                                 iemAImpl_cmpxchg_u8:
  3892                                 
  3893 000014E6 9C                      pushf
  3894 000014E7 8B01                    mov eax, [rcx]
  3895 000014E9 8124242AF7FFFF          and dword [rsp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3896 000014F0 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3897 000014F5 48090424                or [rsp], rax
  3898 000014F9 9D                      popf
  3899                                 
  3900 000014FA 8A06                    mov al, [rsi]
  3901 000014FC 0FB017                  cmpxchg [rdi], dl
  3902 000014FF 8806                    mov [rsi], al
  3903 00001501 9C                      pushf
  3904 00001502 415B                    pop r11
  3905 00001504 8B01                    mov eax, [rcx]
  3906 00001506 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3907 0000150B 4181E3D5080000          and r11d, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3908 00001512 4409D8                  or eax, r11d
  3909 00001515 8901                    mov [rcx], eax
  3910 00001517 C3                      ret
  3911                                 [global iemAImpl_cmpxchg_u8_EndProc:function hidden]
  3912                                 iemAImpl_cmpxchg_u8_EndProc:
  3913                                 [size iemAImpl_cmpxchg_u8 iemAImpl_cmpxchg_u8_EndProc - iemAImpl_cmpxchg_u8]
  3914                                 [size iemAImpl_cmpxchg_u8_EndProc 0]
  3915 00001518 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3916                                 
  3917                                 [global iemAImpl_cmpxchg_u16]
  3918                                 iemAImpl_cmpxchg_u16:
  3919                                 
  3920 0000151C 9C                      pushf
  3921 0000151D 8B01                    mov eax, [rcx]
  3922 0000151F 8124242AF7FFFF          and dword [rsp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3923 00001526 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3924 0000152B 48090424                or [rsp], rax
  3925 0000152F 9D                      popf
  3926                                 
  3927 00001530 668B06                  mov ax, [rsi]
  3928 00001533 660FB117                cmpxchg [rdi], dx
  3929 00001537 668906                  mov [rsi], ax
  3930 0000153A 9C                      pushf
  3931 0000153B 415B                    pop r11
  3932 0000153D 8B01                    mov eax, [rcx]
  3933 0000153F 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3934 00001544 4181E3D5080000          and r11d, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3935 0000154B 4409D8                  or eax, r11d
  3936 0000154E 8901                    mov [rcx], eax
  3937 00001550 C3                      ret
  3938                                 [global iemAImpl_cmpxchg_u16_EndProc:function hidden]
  3939                                 iemAImpl_cmpxchg_u16_EndProc:
  3940                                 [size iemAImpl_cmpxchg_u16 iemAImpl_cmpxchg_u16_EndProc - iemAImpl_cmpxchg_u16]
  3941                                 [size iemAImpl_cmpxchg_u16_EndProc 0]
  3942 00001551 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3943                                 
  3944                                 [global iemAImpl_cmpxchg_u32]
  3945                                 iemAImpl_cmpxchg_u32:
  3946                                 
  3947 00001555 9C                      pushf
  3948 00001556 8B01                    mov eax, [rcx]
  3949 00001558 8124242AF7FFFF          and dword [rsp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3950 0000155F 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3951 00001564 48090424                or [rsp], rax
  3952 00001568 9D                      popf
  3953                                 
  3954 00001569 8B06                    mov eax, [rsi]
  3955 0000156B 0FB117                  cmpxchg [rdi], edx
  3956 0000156E 8906                    mov [rsi], eax
  3957 00001570 9C                      pushf
  3958 00001571 415B                    pop r11
  3959 00001573 8B01                    mov eax, [rcx]
  3960 00001575 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3961 0000157A 4181E3D5080000          and r11d, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3962 00001581 4409D8                  or eax, r11d
  3963 00001584 8901                    mov [rcx], eax
  3964 00001586 C3                      ret
  3965                                 [global iemAImpl_cmpxchg_u32_EndProc:function hidden]
  3966                                 iemAImpl_cmpxchg_u32_EndProc:
  3967                                 [size iemAImpl_cmpxchg_u32 iemAImpl_cmpxchg_u32_EndProc - iemAImpl_cmpxchg_u32]
  3968                                 [size iemAImpl_cmpxchg_u32_EndProc 0]
  3969 00001587 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3970                                 
  3971                                 [global iemAImpl_cmpxchg_u64]
  3972                                 iemAImpl_cmpxchg_u64:
  3973                                 
  3974 0000158B 9C                      pushf
  3975 0000158C 8B01                    mov eax, [rcx]
  3976 0000158E 8124242AF7FFFF          and dword [rsp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3977 00001595 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3978 0000159A 48090424                or [rsp], rax
  3979 0000159E 9D                      popf
  3980                                 
  3981 0000159F 488B06                  mov rax, [rsi]
  3982 000015A2 480FB117                cmpxchg [rdi], rdx
  3983 000015A6 488906                  mov [rsi], rax
  3984 000015A9 9C                      pushf
  3985 000015AA 415B                    pop r11
  3986 000015AC 8B01                    mov eax, [rcx]
  3987 000015AE 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3988 000015B3 4181E3D5080000          and r11d, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  3989 000015BA 4409D8                  or eax, r11d
  3990 000015BD 8901                    mov [rcx], eax
  3991 000015BF C3                      ret
  3992                                 [global iemAImpl_cmpxchg_u64_EndProc:function hidden]
  3993                                 iemAImpl_cmpxchg_u64_EndProc:
  3994                                 [size iemAImpl_cmpxchg_u64 iemAImpl_cmpxchg_u64_EndProc - iemAImpl_cmpxchg_u64]
  3995                                 [size iemAImpl_cmpxchg_u64_EndProc 0]
  3996 000015C0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  3997                                 %line 901+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  3998                                 [global iemAImpl_cmpxchg_u8_locked]
  3999                                 %line 901+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4000                                 iemAImpl_cmpxchg_u8_locked:
  4001                                 
  4002 000015C4 9C                      pushf
  4003 000015C5 8B01                    mov eax, [rcx]
  4004 000015C7 8124242AF7FFFF          and dword [rsp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4005 000015CE 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4006 000015D3 48090424                or [rsp], rax
  4007 000015D7 9D                      popf
  4008                                 
  4009 000015D8 8A06                    mov al, [rsi]
  4010 000015DA F00FB017                lock cmpxchg [rdi], dl
  4011 000015DE 8806                    mov [rsi], al
  4012 000015E0 9C                      pushf
  4013 000015E1 415B                    pop r11
  4014 000015E3 8B01                    mov eax, [rcx]
  4015 000015E5 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4016 000015EA 4181E3D5080000          and r11d, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4017 000015F1 4409D8                  or eax, r11d
  4018 000015F4 8901                    mov [rcx], eax
  4019 000015F6 C3                      ret
  4020                                 [global iemAImpl_cmpxchg_u8_locked_EndProc:function hidden]
  4021                                 iemAImpl_cmpxchg_u8_locked_EndProc:
  4022                                 [size iemAImpl_cmpxchg_u8_locked iemAImpl_cmpxchg_u8_locked_EndProc - iemAImpl_cmpxchg_u8_locked]
  4023                                 [size iemAImpl_cmpxchg_u8_locked_EndProc 0]
  4024 000015F7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4025                                 
  4026                                 [global iemAImpl_cmpxchg_u16_locked]
  4027                                 iemAImpl_cmpxchg_u16_locked:
  4028                                 
  4029 000015FB 9C                      pushf
  4030 000015FC 8B01                    mov eax, [rcx]
  4031 000015FE 8124242AF7FFFF          and dword [rsp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4032 00001605 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4033 0000160A 48090424                or [rsp], rax
  4034 0000160E 9D                      popf
  4035                                 
  4036 0000160F 668B06                  mov ax, [rsi]
  4037 00001612 66F00FB117              lock cmpxchg [rdi], dx
  4038 00001617 668906                  mov [rsi], ax
  4039 0000161A 9C                      pushf
  4040 0000161B 415B                    pop r11
  4041 0000161D 8B01                    mov eax, [rcx]
  4042 0000161F 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4043 00001624 4181E3D5080000          and r11d, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4044 0000162B 4409D8                  or eax, r11d
  4045 0000162E 8901                    mov [rcx], eax
  4046 00001630 C3                      ret
  4047                                 [global iemAImpl_cmpxchg_u16_locked_EndProc:function hidden]
  4048                                 iemAImpl_cmpxchg_u16_locked_EndProc:
  4049                                 [size iemAImpl_cmpxchg_u16_locked iemAImpl_cmpxchg_u16_locked_EndProc - iemAImpl_cmpxchg_u16_locked]
  4050                                 [size iemAImpl_cmpxchg_u16_locked_EndProc 0]
  4051 00001631 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4052                                 
  4053                                 [global iemAImpl_cmpxchg_u32_locked]
  4054                                 iemAImpl_cmpxchg_u32_locked:
  4055                                 
  4056 00001635 9C                      pushf
  4057 00001636 8B01                    mov eax, [rcx]
  4058 00001638 8124242AF7FFFF          and dword [rsp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4059 0000163F 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4060 00001644 48090424                or [rsp], rax
  4061 00001648 9D                      popf
  4062                                 
  4063 00001649 8B06                    mov eax, [rsi]
  4064 0000164B F00FB117                lock cmpxchg [rdi], edx
  4065 0000164F 8906                    mov [rsi], eax
  4066 00001651 9C                      pushf
  4067 00001652 415B                    pop r11
  4068 00001654 8B01                    mov eax, [rcx]
  4069 00001656 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4070 0000165B 4181E3D5080000          and r11d, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4071 00001662 4409D8                  or eax, r11d
  4072 00001665 8901                    mov [rcx], eax
  4073 00001667 C3                      ret
  4074                                 [global iemAImpl_cmpxchg_u32_locked_EndProc:function hidden]
  4075                                 iemAImpl_cmpxchg_u32_locked_EndProc:
  4076                                 [size iemAImpl_cmpxchg_u32_locked iemAImpl_cmpxchg_u32_locked_EndProc - iemAImpl_cmpxchg_u32_locked]
  4077                                 [size iemAImpl_cmpxchg_u32_locked_EndProc 0]
  4078 00001668 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4079                                 
  4080                                 [global iemAImpl_cmpxchg_u64_locked]
  4081                                 iemAImpl_cmpxchg_u64_locked:
  4082                                 
  4083 0000166C 9C                      pushf
  4084 0000166D 8B01                    mov eax, [rcx]
  4085 0000166F 8124242AF7FFFF          and dword [rsp], ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4086 00001676 25D5080000              and eax, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4087 0000167B 48090424                or [rsp], rax
  4088 0000167F 9D                      popf
  4089                                 
  4090 00001680 488B06                  mov rax, [rsi]
  4091 00001683 F0480FB117              lock cmpxchg [rdi], rdx
  4092 00001688 488906                  mov [rsi], rax
  4093 0000168B 9C                      pushf
  4094 0000168C 415B                    pop r11
  4095 0000168E 8B01                    mov eax, [rcx]
  4096 00001690 252AF7FFFF              and eax, ~(((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4097 00001695 4181E3D5080000          and r11d, (((1 << 6) | (1 << 0) | (1 << 2) | (1 << 4) | (1 << 7) | (1 << 11)) | 0)
  4098 0000169C 4409D8                  or eax, r11d
  4099 0000169F 8901                    mov [rcx], eax
  4100 000016A1 C3                      ret
  4101                                 [global iemAImpl_cmpxchg_u64_locked_EndProc:function hidden]
  4102                                 iemAImpl_cmpxchg_u64_locked_EndProc:
  4103                                 [size iemAImpl_cmpxchg_u64_locked iemAImpl_cmpxchg_u64_locked_EndProc - iemAImpl_cmpxchg_u64_locked]
  4104                                 [size iemAImpl_cmpxchg_u64_locked_EndProc 0]
  4105 000016A2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4106                                 %line 902+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4107                                 
  4108                                 
  4109                                 
  4110                                 
  4111                                 
  4112                                 
  4113                                 
  4114                                 
  4115                                 
  4116                                 
  4117                                 
  4118                                 
  4119                                 
  4120                                 
  4121                                 
  4122                                 %line 986+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4123                                 
  4124                                 [section .text]
  4125                                 %line 987+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4126                                 [global iemAImpl_inc_u8]
  4127                                 iemAImpl_inc_u8:
  4128                                 
  4129 000016A6 9C                      pushf
  4130 000016A7 8B06                    mov eax, [rsi]
  4131 000016A9 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4132 000016B0 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4133 000016B5 48090424                or [rsp], rax
  4134 000016B9 9D                      popf
  4135                                 
  4136 000016BA FE07                    inc byte [rdi]
  4137 000016BC 9C                      pushf
  4138 000016BD 415B                    pop r11
  4139 000016BF 8B06                    mov eax, [rsi]
  4140 000016C1 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4141 000016C6 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4142 000016CD 4409D8                  or eax, r11d
  4143 000016D0 8906                    mov [rsi], eax
  4144 000016D2 C3                      ret
  4145                                 [global iemAImpl_inc_u8_EndProc:function hidden]
  4146                                 iemAImpl_inc_u8_EndProc:
  4147                                 [size iemAImpl_inc_u8 iemAImpl_inc_u8_EndProc - iemAImpl_inc_u8]
  4148                                 [size iemAImpl_inc_u8_EndProc 0]
  4149 000016D3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4150                                 
  4151                                 [global iemAImpl_inc_u8_locked]
  4152                                 iemAImpl_inc_u8_locked:
  4153                                 
  4154 000016D7 9C                      pushf
  4155 000016D8 8B06                    mov eax, [rsi]
  4156 000016DA 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4157 000016E1 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4158 000016E6 48090424                or [rsp], rax
  4159 000016EA 9D                      popf
  4160                                 
  4161 000016EB F0FE07                  lock inc byte [rdi]
  4162 000016EE 9C                      pushf
  4163 000016EF 415B                    pop r11
  4164 000016F1 8B06                    mov eax, [rsi]
  4165 000016F3 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4166 000016F8 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4167 000016FF 4409D8                  or eax, r11d
  4168 00001702 8906                    mov [rsi], eax
  4169 00001704 C3                      ret
  4170                                 [global iemAImpl_inc_u8_locked_EndProc:function hidden]
  4171                                 iemAImpl_inc_u8_locked_EndProc:
  4172                                 [size iemAImpl_inc_u8_locked iemAImpl_inc_u8_locked_EndProc - iemAImpl_inc_u8_locked]
  4173                                 [size iemAImpl_inc_u8_locked_EndProc 0]
  4174 00001705 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4175                                 
  4176                                 [global iemAImpl_inc_u16]
  4177                                 iemAImpl_inc_u16:
  4178                                 
  4179 00001709 9C                      pushf
  4180 0000170A 8B06                    mov eax, [rsi]
  4181 0000170C 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4182 00001713 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4183 00001718 48090424                or [rsp], rax
  4184 0000171C 9D                      popf
  4185                                 
  4186 0000171D 66FF07                  inc word [rdi]
  4187 00001720 9C                      pushf
  4188 00001721 415B                    pop r11
  4189 00001723 8B06                    mov eax, [rsi]
  4190 00001725 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4191 0000172A 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4192 00001731 4409D8                  or eax, r11d
  4193 00001734 8906                    mov [rsi], eax
  4194 00001736 C3                      ret
  4195                                 [global iemAImpl_inc_u16_EndProc:function hidden]
  4196                                 iemAImpl_inc_u16_EndProc:
  4197                                 [size iemAImpl_inc_u16 iemAImpl_inc_u16_EndProc - iemAImpl_inc_u16]
  4198                                 [size iemAImpl_inc_u16_EndProc 0]
  4199 00001737 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4200                                 
  4201                                 [global iemAImpl_inc_u16_locked]
  4202                                 iemAImpl_inc_u16_locked:
  4203                                 
  4204 0000173B 9C                      pushf
  4205 0000173C 8B06                    mov eax, [rsi]
  4206 0000173E 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4207 00001745 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4208 0000174A 48090424                or [rsp], rax
  4209 0000174E 9D                      popf
  4210                                 
  4211 0000174F 66F0FF07                lock inc word [rdi]
  4212 00001753 9C                      pushf
  4213 00001754 415B                    pop r11
  4214 00001756 8B06                    mov eax, [rsi]
  4215 00001758 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4216 0000175D 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4217 00001764 4409D8                  or eax, r11d
  4218 00001767 8906                    mov [rsi], eax
  4219 00001769 C3                      ret
  4220                                 [global iemAImpl_inc_u16_locked_EndProc:function hidden]
  4221                                 iemAImpl_inc_u16_locked_EndProc:
  4222                                 [size iemAImpl_inc_u16_locked iemAImpl_inc_u16_locked_EndProc - iemAImpl_inc_u16_locked]
  4223                                 [size iemAImpl_inc_u16_locked_EndProc 0]
  4224 0000176A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4225                                 
  4226                                 [global iemAImpl_inc_u32]
  4227                                 iemAImpl_inc_u32:
  4228                                 
  4229 0000176E 9C                      pushf
  4230 0000176F 8B06                    mov eax, [rsi]
  4231 00001771 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4232 00001778 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4233 0000177D 48090424                or [rsp], rax
  4234 00001781 9D                      popf
  4235                                 
  4236 00001782 FF07                    inc dword [rdi]
  4237 00001784 9C                      pushf
  4238 00001785 415B                    pop r11
  4239 00001787 8B06                    mov eax, [rsi]
  4240 00001789 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4241 0000178E 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4242 00001795 4409D8                  or eax, r11d
  4243 00001798 8906                    mov [rsi], eax
  4244 0000179A C3                      ret
  4245                                 [global iemAImpl_inc_u32_EndProc:function hidden]
  4246                                 iemAImpl_inc_u32_EndProc:
  4247                                 [size iemAImpl_inc_u32 iemAImpl_inc_u32_EndProc - iemAImpl_inc_u32]
  4248                                 [size iemAImpl_inc_u32_EndProc 0]
  4249 0000179B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4250                                 
  4251                                 [global iemAImpl_inc_u32_locked]
  4252                                 iemAImpl_inc_u32_locked:
  4253                                 
  4254 0000179F 9C                      pushf
  4255 000017A0 8B06                    mov eax, [rsi]
  4256 000017A2 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4257 000017A9 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4258 000017AE 48090424                or [rsp], rax
  4259 000017B2 9D                      popf
  4260                                 
  4261 000017B3 F0FF07                  lock inc dword [rdi]
  4262 000017B6 9C                      pushf
  4263 000017B7 415B                    pop r11
  4264 000017B9 8B06                    mov eax, [rsi]
  4265 000017BB 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4266 000017C0 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4267 000017C7 4409D8                  or eax, r11d
  4268 000017CA 8906                    mov [rsi], eax
  4269 000017CC C3                      ret
  4270                                 [global iemAImpl_inc_u32_locked_EndProc:function hidden]
  4271                                 iemAImpl_inc_u32_locked_EndProc:
  4272                                 [size iemAImpl_inc_u32_locked iemAImpl_inc_u32_locked_EndProc - iemAImpl_inc_u32_locked]
  4273                                 [size iemAImpl_inc_u32_locked_EndProc 0]
  4274 000017CD CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4275                                 
  4276                                 [global iemAImpl_inc_u64]
  4277                                 iemAImpl_inc_u64:
  4278                                 
  4279 000017D1 9C                      pushf
  4280 000017D2 8B06                    mov eax, [rsi]
  4281 000017D4 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4282 000017DB 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4283 000017E0 48090424                or [rsp], rax
  4284 000017E4 9D                      popf
  4285                                 
  4286 000017E5 48FF07                  inc qword [rdi]
  4287 000017E8 9C                      pushf
  4288 000017E9 415B                    pop r11
  4289 000017EB 8B06                    mov eax, [rsi]
  4290 000017ED 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4291 000017F2 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4292 000017F9 4409D8                  or eax, r11d
  4293 000017FC 8906                    mov [rsi], eax
  4294 000017FE C3                      ret
  4295                                 [global iemAImpl_inc_u64_EndProc:function hidden]
  4296                                 iemAImpl_inc_u64_EndProc:
  4297                                 [size iemAImpl_inc_u64 iemAImpl_inc_u64_EndProc - iemAImpl_inc_u64]
  4298                                 [size iemAImpl_inc_u64_EndProc 0]
  4299 000017FF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4300                                 
  4301                                 [global iemAImpl_inc_u64_locked]
  4302                                 iemAImpl_inc_u64_locked:
  4303                                 
  4304 00001803 9C                      pushf
  4305 00001804 8B06                    mov eax, [rsi]
  4306 00001806 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4307 0000180D 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4308 00001812 48090424                or [rsp], rax
  4309 00001816 9D                      popf
  4310                                 
  4311 00001817 F048FF07                lock inc qword [rdi]
  4312 0000181B 9C                      pushf
  4313 0000181C 415B                    pop r11
  4314 0000181E 8B06                    mov eax, [rsi]
  4315 00001820 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4316 00001825 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4317 0000182C 4409D8                  or eax, r11d
  4318 0000182F 8906                    mov [rsi], eax
  4319 00001831 C3                      ret
  4320                                 [global iemAImpl_inc_u64_locked_EndProc:function hidden]
  4321                                 iemAImpl_inc_u64_locked_EndProc:
  4322                                 [size iemAImpl_inc_u64_locked iemAImpl_inc_u64_locked_EndProc - iemAImpl_inc_u64_locked]
  4323                                 [size iemAImpl_inc_u64_locked_EndProc 0]
  4324 00001832 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4325                                 
  4326                                 %line 988+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4327                                 [section .text]
  4328                                 %line 988+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4329                                 [global iemAImpl_dec_u8]
  4330                                 iemAImpl_dec_u8:
  4331                                 
  4332 00001836 9C                      pushf
  4333 00001837 8B06                    mov eax, [rsi]
  4334 00001839 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4335 00001840 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4336 00001845 48090424                or [rsp], rax
  4337 00001849 9D                      popf
  4338                                 
  4339 0000184A FE0F                    dec byte [rdi]
  4340 0000184C 9C                      pushf
  4341 0000184D 415B                    pop r11
  4342 0000184F 8B06                    mov eax, [rsi]
  4343 00001851 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4344 00001856 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4345 0000185D 4409D8                  or eax, r11d
  4346 00001860 8906                    mov [rsi], eax
  4347 00001862 C3                      ret
  4348                                 [global iemAImpl_dec_u8_EndProc:function hidden]
  4349                                 iemAImpl_dec_u8_EndProc:
  4350                                 [size iemAImpl_dec_u8 iemAImpl_dec_u8_EndProc - iemAImpl_dec_u8]
  4351                                 [size iemAImpl_dec_u8_EndProc 0]
  4352 00001863 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4353                                 
  4354                                 [global iemAImpl_dec_u8_locked]
  4355                                 iemAImpl_dec_u8_locked:
  4356                                 
  4357 00001867 9C                      pushf
  4358 00001868 8B06                    mov eax, [rsi]
  4359 0000186A 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4360 00001871 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4361 00001876 48090424                or [rsp], rax
  4362 0000187A 9D                      popf
  4363                                 
  4364 0000187B F0FE0F                  lock dec byte [rdi]
  4365 0000187E 9C                      pushf
  4366 0000187F 415B                    pop r11
  4367 00001881 8B06                    mov eax, [rsi]
  4368 00001883 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4369 00001888 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4370 0000188F 4409D8                  or eax, r11d
  4371 00001892 8906                    mov [rsi], eax
  4372 00001894 C3                      ret
  4373                                 [global iemAImpl_dec_u8_locked_EndProc:function hidden]
  4374                                 iemAImpl_dec_u8_locked_EndProc:
  4375                                 [size iemAImpl_dec_u8_locked iemAImpl_dec_u8_locked_EndProc - iemAImpl_dec_u8_locked]
  4376                                 [size iemAImpl_dec_u8_locked_EndProc 0]
  4377 00001895 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4378                                 
  4379                                 [global iemAImpl_dec_u16]
  4380                                 iemAImpl_dec_u16:
  4381                                 
  4382 00001899 9C                      pushf
  4383 0000189A 8B06                    mov eax, [rsi]
  4384 0000189C 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4385 000018A3 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4386 000018A8 48090424                or [rsp], rax
  4387 000018AC 9D                      popf
  4388                                 
  4389 000018AD 66FF0F                  dec word [rdi]
  4390 000018B0 9C                      pushf
  4391 000018B1 415B                    pop r11
  4392 000018B3 8B06                    mov eax, [rsi]
  4393 000018B5 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4394 000018BA 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4395 000018C1 4409D8                  or eax, r11d
  4396 000018C4 8906                    mov [rsi], eax
  4397 000018C6 C3                      ret
  4398                                 [global iemAImpl_dec_u16_EndProc:function hidden]
  4399                                 iemAImpl_dec_u16_EndProc:
  4400                                 [size iemAImpl_dec_u16 iemAImpl_dec_u16_EndProc - iemAImpl_dec_u16]
  4401                                 [size iemAImpl_dec_u16_EndProc 0]
  4402 000018C7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4403                                 
  4404                                 [global iemAImpl_dec_u16_locked]
  4405                                 iemAImpl_dec_u16_locked:
  4406                                 
  4407 000018CB 9C                      pushf
  4408 000018CC 8B06                    mov eax, [rsi]
  4409 000018CE 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4410 000018D5 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4411 000018DA 48090424                or [rsp], rax
  4412 000018DE 9D                      popf
  4413                                 
  4414 000018DF 66F0FF0F                lock dec word [rdi]
  4415 000018E3 9C                      pushf
  4416 000018E4 415B                    pop r11
  4417 000018E6 8B06                    mov eax, [rsi]
  4418 000018E8 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4419 000018ED 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4420 000018F4 4409D8                  or eax, r11d
  4421 000018F7 8906                    mov [rsi], eax
  4422 000018F9 C3                      ret
  4423                                 [global iemAImpl_dec_u16_locked_EndProc:function hidden]
  4424                                 iemAImpl_dec_u16_locked_EndProc:
  4425                                 [size iemAImpl_dec_u16_locked iemAImpl_dec_u16_locked_EndProc - iemAImpl_dec_u16_locked]
  4426                                 [size iemAImpl_dec_u16_locked_EndProc 0]
  4427 000018FA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4428                                 
  4429                                 [global iemAImpl_dec_u32]
  4430                                 iemAImpl_dec_u32:
  4431                                 
  4432 000018FE 9C                      pushf
  4433 000018FF 8B06                    mov eax, [rsi]
  4434 00001901 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4435 00001908 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4436 0000190D 48090424                or [rsp], rax
  4437 00001911 9D                      popf
  4438                                 
  4439 00001912 FF0F                    dec dword [rdi]
  4440 00001914 9C                      pushf
  4441 00001915 415B                    pop r11
  4442 00001917 8B06                    mov eax, [rsi]
  4443 00001919 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4444 0000191E 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4445 00001925 4409D8                  or eax, r11d
  4446 00001928 8906                    mov [rsi], eax
  4447 0000192A C3                      ret
  4448                                 [global iemAImpl_dec_u32_EndProc:function hidden]
  4449                                 iemAImpl_dec_u32_EndProc:
  4450                                 [size iemAImpl_dec_u32 iemAImpl_dec_u32_EndProc - iemAImpl_dec_u32]
  4451                                 [size iemAImpl_dec_u32_EndProc 0]
  4452 0000192B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4453                                 
  4454                                 [global iemAImpl_dec_u32_locked]
  4455                                 iemAImpl_dec_u32_locked:
  4456                                 
  4457 0000192F 9C                      pushf
  4458 00001930 8B06                    mov eax, [rsi]
  4459 00001932 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4460 00001939 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4461 0000193E 48090424                or [rsp], rax
  4462 00001942 9D                      popf
  4463                                 
  4464 00001943 F0FF0F                  lock dec dword [rdi]
  4465 00001946 9C                      pushf
  4466 00001947 415B                    pop r11
  4467 00001949 8B06                    mov eax, [rsi]
  4468 0000194B 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4469 00001950 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4470 00001957 4409D8                  or eax, r11d
  4471 0000195A 8906                    mov [rsi], eax
  4472 0000195C C3                      ret
  4473                                 [global iemAImpl_dec_u32_locked_EndProc:function hidden]
  4474                                 iemAImpl_dec_u32_locked_EndProc:
  4475                                 [size iemAImpl_dec_u32_locked iemAImpl_dec_u32_locked_EndProc - iemAImpl_dec_u32_locked]
  4476                                 [size iemAImpl_dec_u32_locked_EndProc 0]
  4477 0000195D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4478                                 
  4479                                 [global iemAImpl_dec_u64]
  4480                                 iemAImpl_dec_u64:
  4481                                 
  4482 00001961 9C                      pushf
  4483 00001962 8B06                    mov eax, [rsi]
  4484 00001964 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4485 0000196B 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4486 00001970 48090424                or [rsp], rax
  4487 00001974 9D                      popf
  4488                                 
  4489 00001975 48FF0F                  dec qword [rdi]
  4490 00001978 9C                      pushf
  4491 00001979 415B                    pop r11
  4492 0000197B 8B06                    mov eax, [rsi]
  4493 0000197D 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4494 00001982 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4495 00001989 4409D8                  or eax, r11d
  4496 0000198C 8906                    mov [rsi], eax
  4497 0000198E C3                      ret
  4498                                 [global iemAImpl_dec_u64_EndProc:function hidden]
  4499                                 iemAImpl_dec_u64_EndProc:
  4500                                 [size iemAImpl_dec_u64 iemAImpl_dec_u64_EndProc - iemAImpl_dec_u64]
  4501                                 [size iemAImpl_dec_u64_EndProc 0]
  4502 0000198F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4503                                 
  4504                                 [global iemAImpl_dec_u64_locked]
  4505                                 iemAImpl_dec_u64_locked:
  4506                                 
  4507 00001993 9C                      pushf
  4508 00001994 8B06                    mov eax, [rsi]
  4509 00001996 8124242BF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4510 0000199D 25D4080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4511 000019A2 48090424                or [rsp], rax
  4512 000019A6 9D                      popf
  4513                                 
  4514 000019A7 F048FF0F                lock dec qword [rdi]
  4515 000019AB 9C                      pushf
  4516 000019AC 415B                    pop r11
  4517 000019AE 8B06                    mov eax, [rsi]
  4518 000019B0 252BF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4519 000019B5 4181E3D4080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)) | 0)
  4520 000019BC 4409D8                  or eax, r11d
  4521 000019BF 8906                    mov [rsi], eax
  4522 000019C1 C3                      ret
  4523                                 [global iemAImpl_dec_u64_locked_EndProc:function hidden]
  4524                                 iemAImpl_dec_u64_locked_EndProc:
  4525                                 [size iemAImpl_dec_u64_locked iemAImpl_dec_u64_locked_EndProc - iemAImpl_dec_u64_locked]
  4526                                 [size iemAImpl_dec_u64_locked_EndProc 0]
  4527 000019C2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4528                                 
  4529                                 %line 989+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4530                                 [section .text]
  4531                                 %line 989+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4532                                 [global iemAImpl_neg_u8]
  4533                                 iemAImpl_neg_u8:
  4534                                 
  4535 000019C6 9C                      pushf
  4536 000019C7 8B06                    mov eax, [rsi]
  4537 000019C9 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4538 000019D0 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4539 000019D5 48090424                or [rsp], rax
  4540 000019D9 9D                      popf
  4541                                 
  4542 000019DA F61F                    neg byte [rdi]
  4543 000019DC 9C                      pushf
  4544 000019DD 415B                    pop r11
  4545 000019DF 8B06                    mov eax, [rsi]
  4546 000019E1 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4547 000019E6 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4548 000019ED 4409D8                  or eax, r11d
  4549 000019F0 8906                    mov [rsi], eax
  4550 000019F2 C3                      ret
  4551                                 [global iemAImpl_neg_u8_EndProc:function hidden]
  4552                                 iemAImpl_neg_u8_EndProc:
  4553                                 [size iemAImpl_neg_u8 iemAImpl_neg_u8_EndProc - iemAImpl_neg_u8]
  4554                                 [size iemAImpl_neg_u8_EndProc 0]
  4555 000019F3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4556                                 
  4557                                 [global iemAImpl_neg_u8_locked]
  4558                                 iemAImpl_neg_u8_locked:
  4559                                 
  4560 000019F7 9C                      pushf
  4561 000019F8 8B06                    mov eax, [rsi]
  4562 000019FA 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4563 00001A01 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4564 00001A06 48090424                or [rsp], rax
  4565 00001A0A 9D                      popf
  4566                                 
  4567 00001A0B F0F61F                  lock neg byte [rdi]
  4568 00001A0E 9C                      pushf
  4569 00001A0F 415B                    pop r11
  4570 00001A11 8B06                    mov eax, [rsi]
  4571 00001A13 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4572 00001A18 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4573 00001A1F 4409D8                  or eax, r11d
  4574 00001A22 8906                    mov [rsi], eax
  4575 00001A24 C3                      ret
  4576                                 [global iemAImpl_neg_u8_locked_EndProc:function hidden]
  4577                                 iemAImpl_neg_u8_locked_EndProc:
  4578                                 [size iemAImpl_neg_u8_locked iemAImpl_neg_u8_locked_EndProc - iemAImpl_neg_u8_locked]
  4579                                 [size iemAImpl_neg_u8_locked_EndProc 0]
  4580 00001A25 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4581                                 
  4582                                 [global iemAImpl_neg_u16]
  4583                                 iemAImpl_neg_u16:
  4584                                 
  4585 00001A29 9C                      pushf
  4586 00001A2A 8B06                    mov eax, [rsi]
  4587 00001A2C 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4588 00001A33 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4589 00001A38 48090424                or [rsp], rax
  4590 00001A3C 9D                      popf
  4591                                 
  4592 00001A3D 66F71F                  neg word [rdi]
  4593 00001A40 9C                      pushf
  4594 00001A41 415B                    pop r11
  4595 00001A43 8B06                    mov eax, [rsi]
  4596 00001A45 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4597 00001A4A 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4598 00001A51 4409D8                  or eax, r11d
  4599 00001A54 8906                    mov [rsi], eax
  4600 00001A56 C3                      ret
  4601                                 [global iemAImpl_neg_u16_EndProc:function hidden]
  4602                                 iemAImpl_neg_u16_EndProc:
  4603                                 [size iemAImpl_neg_u16 iemAImpl_neg_u16_EndProc - iemAImpl_neg_u16]
  4604                                 [size iemAImpl_neg_u16_EndProc 0]
  4605 00001A57 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4606                                 
  4607                                 [global iemAImpl_neg_u16_locked]
  4608                                 iemAImpl_neg_u16_locked:
  4609                                 
  4610 00001A5B 9C                      pushf
  4611 00001A5C 8B06                    mov eax, [rsi]
  4612 00001A5E 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4613 00001A65 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4614 00001A6A 48090424                or [rsp], rax
  4615 00001A6E 9D                      popf
  4616                                 
  4617 00001A6F 66F0F71F                lock neg word [rdi]
  4618 00001A73 9C                      pushf
  4619 00001A74 415B                    pop r11
  4620 00001A76 8B06                    mov eax, [rsi]
  4621 00001A78 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4622 00001A7D 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4623 00001A84 4409D8                  or eax, r11d
  4624 00001A87 8906                    mov [rsi], eax
  4625 00001A89 C3                      ret
  4626                                 [global iemAImpl_neg_u16_locked_EndProc:function hidden]
  4627                                 iemAImpl_neg_u16_locked_EndProc:
  4628                                 [size iemAImpl_neg_u16_locked iemAImpl_neg_u16_locked_EndProc - iemAImpl_neg_u16_locked]
  4629                                 [size iemAImpl_neg_u16_locked_EndProc 0]
  4630 00001A8A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4631                                 
  4632                                 [global iemAImpl_neg_u32]
  4633                                 iemAImpl_neg_u32:
  4634                                 
  4635 00001A8E 9C                      pushf
  4636 00001A8F 8B06                    mov eax, [rsi]
  4637 00001A91 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4638 00001A98 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4639 00001A9D 48090424                or [rsp], rax
  4640 00001AA1 9D                      popf
  4641                                 
  4642 00001AA2 F71F                    neg dword [rdi]
  4643 00001AA4 9C                      pushf
  4644 00001AA5 415B                    pop r11
  4645 00001AA7 8B06                    mov eax, [rsi]
  4646 00001AA9 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4647 00001AAE 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4648 00001AB5 4409D8                  or eax, r11d
  4649 00001AB8 8906                    mov [rsi], eax
  4650 00001ABA C3                      ret
  4651                                 [global iemAImpl_neg_u32_EndProc:function hidden]
  4652                                 iemAImpl_neg_u32_EndProc:
  4653                                 [size iemAImpl_neg_u32 iemAImpl_neg_u32_EndProc - iemAImpl_neg_u32]
  4654                                 [size iemAImpl_neg_u32_EndProc 0]
  4655 00001ABB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4656                                 
  4657                                 [global iemAImpl_neg_u32_locked]
  4658                                 iemAImpl_neg_u32_locked:
  4659                                 
  4660 00001ABF 9C                      pushf
  4661 00001AC0 8B06                    mov eax, [rsi]
  4662 00001AC2 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4663 00001AC9 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4664 00001ACE 48090424                or [rsp], rax
  4665 00001AD2 9D                      popf
  4666                                 
  4667 00001AD3 F0F71F                  lock neg dword [rdi]
  4668 00001AD6 9C                      pushf
  4669 00001AD7 415B                    pop r11
  4670 00001AD9 8B06                    mov eax, [rsi]
  4671 00001ADB 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4672 00001AE0 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4673 00001AE7 4409D8                  or eax, r11d
  4674 00001AEA 8906                    mov [rsi], eax
  4675 00001AEC C3                      ret
  4676                                 [global iemAImpl_neg_u32_locked_EndProc:function hidden]
  4677                                 iemAImpl_neg_u32_locked_EndProc:
  4678                                 [size iemAImpl_neg_u32_locked iemAImpl_neg_u32_locked_EndProc - iemAImpl_neg_u32_locked]
  4679                                 [size iemAImpl_neg_u32_locked_EndProc 0]
  4680 00001AED CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4681                                 
  4682                                 [global iemAImpl_neg_u64]
  4683                                 iemAImpl_neg_u64:
  4684                                 
  4685 00001AF1 9C                      pushf
  4686 00001AF2 8B06                    mov eax, [rsi]
  4687 00001AF4 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4688 00001AFB 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4689 00001B00 48090424                or [rsp], rax
  4690 00001B04 9D                      popf
  4691                                 
  4692 00001B05 48F71F                  neg qword [rdi]
  4693 00001B08 9C                      pushf
  4694 00001B09 415B                    pop r11
  4695 00001B0B 8B06                    mov eax, [rsi]
  4696 00001B0D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4697 00001B12 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4698 00001B19 4409D8                  or eax, r11d
  4699 00001B1C 8906                    mov [rsi], eax
  4700 00001B1E C3                      ret
  4701                                 [global iemAImpl_neg_u64_EndProc:function hidden]
  4702                                 iemAImpl_neg_u64_EndProc:
  4703                                 [size iemAImpl_neg_u64 iemAImpl_neg_u64_EndProc - iemAImpl_neg_u64]
  4704                                 [size iemAImpl_neg_u64_EndProc 0]
  4705 00001B1F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4706                                 
  4707                                 [global iemAImpl_neg_u64_locked]
  4708                                 iemAImpl_neg_u64_locked:
  4709                                 
  4710 00001B23 9C                      pushf
  4711 00001B24 8B06                    mov eax, [rsi]
  4712 00001B26 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4713 00001B2D 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4714 00001B32 48090424                or [rsp], rax
  4715 00001B36 9D                      popf
  4716                                 
  4717 00001B37 F048F71F                lock neg qword [rdi]
  4718 00001B3B 9C                      pushf
  4719 00001B3C 415B                    pop r11
  4720 00001B3E 8B06                    mov eax, [rsi]
  4721 00001B40 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4722 00001B45 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)) | 0)
  4723 00001B4C 4409D8                  or eax, r11d
  4724 00001B4F 8906                    mov [rsi], eax
  4725 00001B51 C3                      ret
  4726                                 [global iemAImpl_neg_u64_locked_EndProc:function hidden]
  4727                                 iemAImpl_neg_u64_locked_EndProc:
  4728                                 [size iemAImpl_neg_u64_locked iemAImpl_neg_u64_locked_EndProc - iemAImpl_neg_u64_locked]
  4729                                 [size iemAImpl_neg_u64_locked_EndProc 0]
  4730 00001B52 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4731                                 
  4732                                 %line 990+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4733                                 [section .text]
  4734                                 %line 990+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4735                                 [global iemAImpl_not_u8]
  4736                                 iemAImpl_not_u8:
  4737                                 
  4738 00001B56 9C                      pushf
  4739 00001B57 8B06                    mov eax, [rsi]
  4740 00001B59 832424FF                and dword [rsp], ~(0 | 0)
  4741 00001B5D 83E000                  and eax, (0 | 0)
  4742 00001B60 48090424                or [rsp], rax
  4743 00001B64 9D                      popf
  4744                                 
  4745 00001B65 F617                    not byte [rdi]
  4746 00001B67 C3                      ret
  4747                                 [global iemAImpl_not_u8_EndProc:function hidden]
  4748                                 iemAImpl_not_u8_EndProc:
  4749                                 [size iemAImpl_not_u8 iemAImpl_not_u8_EndProc - iemAImpl_not_u8]
  4750                                 [size iemAImpl_not_u8_EndProc 0]
  4751 00001B68 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4752                                 
  4753                                 [global iemAImpl_not_u8_locked]
  4754                                 iemAImpl_not_u8_locked:
  4755                                 
  4756 00001B6C 9C                      pushf
  4757 00001B6D 8B06                    mov eax, [rsi]
  4758 00001B6F 832424FF                and dword [rsp], ~(0 | 0)
  4759 00001B73 83E000                  and eax, (0 | 0)
  4760 00001B76 48090424                or [rsp], rax
  4761 00001B7A 9D                      popf
  4762                                 
  4763 00001B7B F0F617                  lock not byte [rdi]
  4764 00001B7E C3                      ret
  4765                                 [global iemAImpl_not_u8_locked_EndProc:function hidden]
  4766                                 iemAImpl_not_u8_locked_EndProc:
  4767                                 [size iemAImpl_not_u8_locked iemAImpl_not_u8_locked_EndProc - iemAImpl_not_u8_locked]
  4768                                 [size iemAImpl_not_u8_locked_EndProc 0]
  4769 00001B7F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4770                                 
  4771                                 [global iemAImpl_not_u16]
  4772                                 iemAImpl_not_u16:
  4773                                 
  4774 00001B83 9C                      pushf
  4775 00001B84 8B06                    mov eax, [rsi]
  4776 00001B86 832424FF                and dword [rsp], ~(0 | 0)
  4777 00001B8A 83E000                  and eax, (0 | 0)
  4778 00001B8D 48090424                or [rsp], rax
  4779 00001B91 9D                      popf
  4780                                 
  4781 00001B92 66F717                  not word [rdi]
  4782 00001B95 C3                      ret
  4783                                 [global iemAImpl_not_u16_EndProc:function hidden]
  4784                                 iemAImpl_not_u16_EndProc:
  4785                                 [size iemAImpl_not_u16 iemAImpl_not_u16_EndProc - iemAImpl_not_u16]
  4786                                 [size iemAImpl_not_u16_EndProc 0]
  4787 00001B96 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4788                                 
  4789                                 [global iemAImpl_not_u16_locked]
  4790                                 iemAImpl_not_u16_locked:
  4791                                 
  4792 00001B9A 9C                      pushf
  4793 00001B9B 8B06                    mov eax, [rsi]
  4794 00001B9D 832424FF                and dword [rsp], ~(0 | 0)
  4795 00001BA1 83E000                  and eax, (0 | 0)
  4796 00001BA4 48090424                or [rsp], rax
  4797 00001BA8 9D                      popf
  4798                                 
  4799 00001BA9 66F0F717                lock not word [rdi]
  4800 00001BAD C3                      ret
  4801                                 [global iemAImpl_not_u16_locked_EndProc:function hidden]
  4802                                 iemAImpl_not_u16_locked_EndProc:
  4803                                 [size iemAImpl_not_u16_locked iemAImpl_not_u16_locked_EndProc - iemAImpl_not_u16_locked]
  4804                                 [size iemAImpl_not_u16_locked_EndProc 0]
  4805 00001BAE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4806                                 
  4807                                 [global iemAImpl_not_u32]
  4808                                 iemAImpl_not_u32:
  4809                                 
  4810 00001BB2 9C                      pushf
  4811 00001BB3 8B06                    mov eax, [rsi]
  4812 00001BB5 832424FF                and dword [rsp], ~(0 | 0)
  4813 00001BB9 83E000                  and eax, (0 | 0)
  4814 00001BBC 48090424                or [rsp], rax
  4815 00001BC0 9D                      popf
  4816                                 
  4817 00001BC1 F717                    not dword [rdi]
  4818 00001BC3 C3                      ret
  4819                                 [global iemAImpl_not_u32_EndProc:function hidden]
  4820                                 iemAImpl_not_u32_EndProc:
  4821                                 [size iemAImpl_not_u32 iemAImpl_not_u32_EndProc - iemAImpl_not_u32]
  4822                                 [size iemAImpl_not_u32_EndProc 0]
  4823 00001BC4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4824                                 
  4825                                 [global iemAImpl_not_u32_locked]
  4826                                 iemAImpl_not_u32_locked:
  4827                                 
  4828 00001BC8 9C                      pushf
  4829 00001BC9 8B06                    mov eax, [rsi]
  4830 00001BCB 832424FF                and dword [rsp], ~(0 | 0)
  4831 00001BCF 83E000                  and eax, (0 | 0)
  4832 00001BD2 48090424                or [rsp], rax
  4833 00001BD6 9D                      popf
  4834                                 
  4835 00001BD7 F0F717                  lock not dword [rdi]
  4836 00001BDA C3                      ret
  4837                                 [global iemAImpl_not_u32_locked_EndProc:function hidden]
  4838                                 iemAImpl_not_u32_locked_EndProc:
  4839                                 [size iemAImpl_not_u32_locked iemAImpl_not_u32_locked_EndProc - iemAImpl_not_u32_locked]
  4840                                 [size iemAImpl_not_u32_locked_EndProc 0]
  4841 00001BDB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4842                                 
  4843                                 [global iemAImpl_not_u64]
  4844                                 iemAImpl_not_u64:
  4845                                 
  4846 00001BDF 9C                      pushf
  4847 00001BE0 8B06                    mov eax, [rsi]
  4848 00001BE2 832424FF                and dword [rsp], ~(0 | 0)
  4849 00001BE6 83E000                  and eax, (0 | 0)
  4850 00001BE9 48090424                or [rsp], rax
  4851 00001BED 9D                      popf
  4852                                 
  4853 00001BEE 48F717                  not qword [rdi]
  4854 00001BF1 C3                      ret
  4855                                 [global iemAImpl_not_u64_EndProc:function hidden]
  4856                                 iemAImpl_not_u64_EndProc:
  4857                                 [size iemAImpl_not_u64 iemAImpl_not_u64_EndProc - iemAImpl_not_u64]
  4858                                 [size iemAImpl_not_u64_EndProc 0]
  4859 00001BF2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4860                                 
  4861                                 [global iemAImpl_not_u64_locked]
  4862                                 iemAImpl_not_u64_locked:
  4863                                 
  4864 00001BF6 9C                      pushf
  4865 00001BF7 8B06                    mov eax, [rsi]
  4866 00001BF9 832424FF                and dword [rsp], ~(0 | 0)
  4867 00001BFD 83E000                  and eax, (0 | 0)
  4868 00001C00 48090424                or [rsp], rax
  4869 00001C04 9D                      popf
  4870                                 
  4871 00001C05 F048F717                lock not qword [rdi]
  4872 00001C09 C3                      ret
  4873                                 [global iemAImpl_not_u64_locked_EndProc:function hidden]
  4874                                 iemAImpl_not_u64_locked_EndProc:
  4875                                 [size iemAImpl_not_u64_locked iemAImpl_not_u64_locked_EndProc - iemAImpl_not_u64_locked]
  4876                                 [size iemAImpl_not_u64_locked_EndProc 0]
  4877 00001C0A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4878                                 
  4879                                 %line 991+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4880                                 
  4881                                 
  4882                                 
  4883                                 
  4884                                 
  4885                                 
  4886                                 
  4887                                 
  4888                                 
  4889                                 %line 1007+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4890                                 
  4891                                 [section .text]
  4892                                 %line 1008+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4893                                 [global iemAImpl_lfence]
  4894                                 iemAImpl_lfence:
  4895 00001C0E 0FAEE8                  lfence
  4896 00001C11 C3                      ret
  4897                                 [global iemAImpl_lfence_EndProc:function hidden]
  4898                                 iemAImpl_lfence_EndProc:
  4899                                 [size iemAImpl_lfence iemAImpl_lfence_EndProc - iemAImpl_lfence]
  4900                                 [size iemAImpl_lfence_EndProc 0]
  4901 00001C12 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4902                                 %line 1009+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4903                                 [section .text]
  4904                                 %line 1009+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4905                                 [global iemAImpl_sfence]
  4906                                 iemAImpl_sfence:
  4907 00001C16 0FAEF8                  sfence
  4908 00001C19 C3                      ret
  4909                                 [global iemAImpl_sfence_EndProc:function hidden]
  4910                                 iemAImpl_sfence_EndProc:
  4911                                 [size iemAImpl_sfence iemAImpl_sfence_EndProc - iemAImpl_sfence]
  4912                                 [size iemAImpl_sfence_EndProc 0]
  4913 00001C1A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4914                                 %line 1010+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4915                                 [section .text]
  4916                                 %line 1010+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4917                                 [global iemAImpl_mfence]
  4918                                 iemAImpl_mfence:
  4919 00001C1E 0FAEF0                  mfence
  4920 00001C21 C3                      ret
  4921                                 [global iemAImpl_mfence_EndProc:function hidden]
  4922                                 iemAImpl_mfence_EndProc:
  4923                                 [size iemAImpl_mfence iemAImpl_mfence_EndProc - iemAImpl_mfence]
  4924                                 [size iemAImpl_mfence_EndProc 0]
  4925 00001C22 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4926                                 %line 1011+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4927                                 
  4928                                 
  4929                                 
  4930                                 
  4931                                 [global iemAImpl_alt_mem_fence]
  4932                                 %line 1015+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4933                                 iemAImpl_alt_mem_fence:
  4934                                 %line 1016+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4935 00001C26 50                      push rax
  4936 00001C27 48870424                xchg rax, [rsp]
  4937 00001C2B 4883C408                add rsp, 8
  4938 00001C2F C3                      ret
  4939                                 [global iemAImpl_alt_mem_fence_EndProc:function hidden]
  4940                                 %line 1020+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4941                                 iemAImpl_alt_mem_fence_EndProc:
  4942                                 [size iemAImpl_alt_mem_fence iemAImpl_alt_mem_fence_EndProc - iemAImpl_alt_mem_fence]
  4943                                 [size iemAImpl_alt_mem_fence_EndProc 0]
  4944 00001C30 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4945                                 %line 1021+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4946                                 
  4947                                 
  4948                                 
  4949                                 
  4950                                 
  4951                                 
  4952                                 
  4953                                 
  4954                                 
  4955                                 
  4956                                 
  4957                                 
  4958                                 
  4959                                 
  4960                                 
  4961                                 
  4962                                 
  4963                                 
  4964                                 %line 1100+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4965                                 
  4966                                 [section .text]
  4967                                 %line 1101+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  4968                                 [global iemAImpl_rol_u8]
  4969                                 iemAImpl_rol_u8:
  4970                                 
  4971 00001C34 9C                      pushf
  4972 00001C35 8B02                    mov eax, [rdx]
  4973 00001C37 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  4974 00001C3E 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  4975 00001C43 48090424                or [rsp], rax
  4976 00001C47 9D                      popf
  4977                                 
  4978 00001C48 4088F1                  mov cl, sil
  4979 00001C4B D207                    rol byte [rdi], cl
  4980 00001C4D 9C                      pushf
  4981 00001C4E 415B                    pop r11
  4982 00001C50 8B02                    mov eax, [rdx]
  4983 00001C52 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  4984 00001C57 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  4985 00001C5E 4409D8                  or eax, r11d
  4986 00001C61 8902                    mov [rdx], eax
  4987 00001C63 C3                      ret
  4988                                 [global iemAImpl_rol_u8_EndProc:function hidden]
  4989                                 iemAImpl_rol_u8_EndProc:
  4990                                 [size iemAImpl_rol_u8 iemAImpl_rol_u8_EndProc - iemAImpl_rol_u8]
  4991                                 [size iemAImpl_rol_u8_EndProc 0]
  4992 00001C64 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  4993                                 
  4994                                 [global iemAImpl_rol_u16]
  4995                                 iemAImpl_rol_u16:
  4996                                 
  4997 00001C68 9C                      pushf
  4998 00001C69 8B02                    mov eax, [rdx]
  4999 00001C6B 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5000 00001C72 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5001 00001C77 48090424                or [rsp], rax
  5002 00001C7B 9D                      popf
  5003                                 
  5004 00001C7C 4088F1                  mov cl, sil
  5005 00001C7F 66D307                  rol word [rdi], cl
  5006 00001C82 9C                      pushf
  5007 00001C83 415B                    pop r11
  5008 00001C85 8B02                    mov eax, [rdx]
  5009 00001C87 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5010 00001C8C 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5011 00001C93 4409D8                  or eax, r11d
  5012 00001C96 8902                    mov [rdx], eax
  5013 00001C98 C3                      ret
  5014                                 [global iemAImpl_rol_u16_EndProc:function hidden]
  5015                                 iemAImpl_rol_u16_EndProc:
  5016                                 [size iemAImpl_rol_u16 iemAImpl_rol_u16_EndProc - iemAImpl_rol_u16]
  5017                                 [size iemAImpl_rol_u16_EndProc 0]
  5018 00001C99 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5019                                 
  5020                                 [global iemAImpl_rol_u32]
  5021                                 iemAImpl_rol_u32:
  5022                                 
  5023 00001C9D 9C                      pushf
  5024 00001C9E 8B02                    mov eax, [rdx]
  5025 00001CA0 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5026 00001CA7 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5027 00001CAC 48090424                or [rsp], rax
  5028 00001CB0 9D                      popf
  5029                                 
  5030 00001CB1 4088F1                  mov cl, sil
  5031 00001CB4 D307                    rol dword [rdi], cl
  5032 00001CB6 9C                      pushf
  5033 00001CB7 415B                    pop r11
  5034 00001CB9 8B02                    mov eax, [rdx]
  5035 00001CBB 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5036 00001CC0 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5037 00001CC7 4409D8                  or eax, r11d
  5038 00001CCA 8902                    mov [rdx], eax
  5039 00001CCC C3                      ret
  5040                                 [global iemAImpl_rol_u32_EndProc:function hidden]
  5041                                 iemAImpl_rol_u32_EndProc:
  5042                                 [size iemAImpl_rol_u32 iemAImpl_rol_u32_EndProc - iemAImpl_rol_u32]
  5043                                 [size iemAImpl_rol_u32_EndProc 0]
  5044 00001CCD CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5045                                 
  5046                                 [global iemAImpl_rol_u64]
  5047                                 iemAImpl_rol_u64:
  5048                                 
  5049 00001CD1 9C                      pushf
  5050 00001CD2 8B02                    mov eax, [rdx]
  5051 00001CD4 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5052 00001CDB 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5053 00001CE0 48090424                or [rsp], rax
  5054 00001CE4 9D                      popf
  5055                                 
  5056 00001CE5 4088F1                  mov cl, sil
  5057 00001CE8 48D307                  rol qword [rdi], cl
  5058 00001CEB 9C                      pushf
  5059 00001CEC 415B                    pop r11
  5060 00001CEE 8B02                    mov eax, [rdx]
  5061 00001CF0 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5062 00001CF5 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5063 00001CFC 4409D8                  or eax, r11d
  5064 00001CFF 8902                    mov [rdx], eax
  5065 00001D01 C3                      ret
  5066                                 [global iemAImpl_rol_u64_EndProc:function hidden]
  5067                                 iemAImpl_rol_u64_EndProc:
  5068                                 [size iemAImpl_rol_u64 iemAImpl_rol_u64_EndProc - iemAImpl_rol_u64]
  5069                                 [size iemAImpl_rol_u64_EndProc 0]
  5070 00001D02 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5071                                 
  5072                                 %line 1102+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5073                                 [section .text]
  5074                                 %line 1102+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5075                                 [global iemAImpl_ror_u8]
  5076                                 iemAImpl_ror_u8:
  5077                                 
  5078 00001D06 9C                      pushf
  5079 00001D07 8B02                    mov eax, [rdx]
  5080 00001D09 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5081 00001D10 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5082 00001D15 48090424                or [rsp], rax
  5083 00001D19 9D                      popf
  5084                                 
  5085 00001D1A 4088F1                  mov cl, sil
  5086 00001D1D D20F                    ror byte [rdi], cl
  5087 00001D1F 9C                      pushf
  5088 00001D20 415B                    pop r11
  5089 00001D22 8B02                    mov eax, [rdx]
  5090 00001D24 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5091 00001D29 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5092 00001D30 4409D8                  or eax, r11d
  5093 00001D33 8902                    mov [rdx], eax
  5094 00001D35 C3                      ret
  5095                                 [global iemAImpl_ror_u8_EndProc:function hidden]
  5096                                 iemAImpl_ror_u8_EndProc:
  5097                                 [size iemAImpl_ror_u8 iemAImpl_ror_u8_EndProc - iemAImpl_ror_u8]
  5098                                 [size iemAImpl_ror_u8_EndProc 0]
  5099 00001D36 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5100                                 
  5101                                 [global iemAImpl_ror_u16]
  5102                                 iemAImpl_ror_u16:
  5103                                 
  5104 00001D3A 9C                      pushf
  5105 00001D3B 8B02                    mov eax, [rdx]
  5106 00001D3D 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5107 00001D44 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5108 00001D49 48090424                or [rsp], rax
  5109 00001D4D 9D                      popf
  5110                                 
  5111 00001D4E 4088F1                  mov cl, sil
  5112 00001D51 66D30F                  ror word [rdi], cl
  5113 00001D54 9C                      pushf
  5114 00001D55 415B                    pop r11
  5115 00001D57 8B02                    mov eax, [rdx]
  5116 00001D59 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5117 00001D5E 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5118 00001D65 4409D8                  or eax, r11d
  5119 00001D68 8902                    mov [rdx], eax
  5120 00001D6A C3                      ret
  5121                                 [global iemAImpl_ror_u16_EndProc:function hidden]
  5122                                 iemAImpl_ror_u16_EndProc:
  5123                                 [size iemAImpl_ror_u16 iemAImpl_ror_u16_EndProc - iemAImpl_ror_u16]
  5124                                 [size iemAImpl_ror_u16_EndProc 0]
  5125 00001D6B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5126                                 
  5127                                 [global iemAImpl_ror_u32]
  5128                                 iemAImpl_ror_u32:
  5129                                 
  5130 00001D6F 9C                      pushf
  5131 00001D70 8B02                    mov eax, [rdx]
  5132 00001D72 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5133 00001D79 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5134 00001D7E 48090424                or [rsp], rax
  5135 00001D82 9D                      popf
  5136                                 
  5137 00001D83 4088F1                  mov cl, sil
  5138 00001D86 D30F                    ror dword [rdi], cl
  5139 00001D88 9C                      pushf
  5140 00001D89 415B                    pop r11
  5141 00001D8B 8B02                    mov eax, [rdx]
  5142 00001D8D 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5143 00001D92 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5144 00001D99 4409D8                  or eax, r11d
  5145 00001D9C 8902                    mov [rdx], eax
  5146 00001D9E C3                      ret
  5147                                 [global iemAImpl_ror_u32_EndProc:function hidden]
  5148                                 iemAImpl_ror_u32_EndProc:
  5149                                 [size iemAImpl_ror_u32 iemAImpl_ror_u32_EndProc - iemAImpl_ror_u32]
  5150                                 [size iemAImpl_ror_u32_EndProc 0]
  5151 00001D9F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5152                                 
  5153                                 [global iemAImpl_ror_u64]
  5154                                 iemAImpl_ror_u64:
  5155                                 
  5156 00001DA3 9C                      pushf
  5157 00001DA4 8B02                    mov eax, [rdx]
  5158 00001DA6 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5159 00001DAD 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5160 00001DB2 48090424                or [rsp], rax
  5161 00001DB6 9D                      popf
  5162                                 
  5163 00001DB7 4088F1                  mov cl, sil
  5164 00001DBA 48D30F                  ror qword [rdi], cl
  5165 00001DBD 9C                      pushf
  5166 00001DBE 415B                    pop r11
  5167 00001DC0 8B02                    mov eax, [rdx]
  5168 00001DC2 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5169 00001DC7 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5170 00001DCE 4409D8                  or eax, r11d
  5171 00001DD1 8902                    mov [rdx], eax
  5172 00001DD3 C3                      ret
  5173                                 [global iemAImpl_ror_u64_EndProc:function hidden]
  5174                                 iemAImpl_ror_u64_EndProc:
  5175                                 [size iemAImpl_ror_u64 iemAImpl_ror_u64_EndProc - iemAImpl_ror_u64]
  5176                                 [size iemAImpl_ror_u64_EndProc 0]
  5177 00001DD4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5178                                 
  5179                                 %line 1103+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5180                                 [section .text]
  5181                                 %line 1103+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5182                                 [global iemAImpl_rcl_u8]
  5183                                 iemAImpl_rcl_u8:
  5184                                 
  5185 00001DD8 9C                      pushf
  5186 00001DD9 8B02                    mov eax, [rdx]
  5187 00001DDB 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5188 00001DE2 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5189 00001DE7 48090424                or [rsp], rax
  5190 00001DEB 9D                      popf
  5191                                 
  5192 00001DEC 4088F1                  mov cl, sil
  5193 00001DEF D217                    rcl byte [rdi], cl
  5194 00001DF1 9C                      pushf
  5195 00001DF2 415B                    pop r11
  5196 00001DF4 8B02                    mov eax, [rdx]
  5197 00001DF6 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5198 00001DFB 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5199 00001E02 4409D8                  or eax, r11d
  5200 00001E05 8902                    mov [rdx], eax
  5201 00001E07 C3                      ret
  5202                                 [global iemAImpl_rcl_u8_EndProc:function hidden]
  5203                                 iemAImpl_rcl_u8_EndProc:
  5204                                 [size iemAImpl_rcl_u8 iemAImpl_rcl_u8_EndProc - iemAImpl_rcl_u8]
  5205                                 [size iemAImpl_rcl_u8_EndProc 0]
  5206 00001E08 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5207                                 
  5208                                 [global iemAImpl_rcl_u16]
  5209                                 iemAImpl_rcl_u16:
  5210                                 
  5211 00001E0C 9C                      pushf
  5212 00001E0D 8B02                    mov eax, [rdx]
  5213 00001E0F 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5214 00001E16 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5215 00001E1B 48090424                or [rsp], rax
  5216 00001E1F 9D                      popf
  5217                                 
  5218 00001E20 4088F1                  mov cl, sil
  5219 00001E23 66D317                  rcl word [rdi], cl
  5220 00001E26 9C                      pushf
  5221 00001E27 415B                    pop r11
  5222 00001E29 8B02                    mov eax, [rdx]
  5223 00001E2B 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5224 00001E30 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5225 00001E37 4409D8                  or eax, r11d
  5226 00001E3A 8902                    mov [rdx], eax
  5227 00001E3C C3                      ret
  5228                                 [global iemAImpl_rcl_u16_EndProc:function hidden]
  5229                                 iemAImpl_rcl_u16_EndProc:
  5230                                 [size iemAImpl_rcl_u16 iemAImpl_rcl_u16_EndProc - iemAImpl_rcl_u16]
  5231                                 [size iemAImpl_rcl_u16_EndProc 0]
  5232 00001E3D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5233                                 
  5234                                 [global iemAImpl_rcl_u32]
  5235                                 iemAImpl_rcl_u32:
  5236                                 
  5237 00001E41 9C                      pushf
  5238 00001E42 8B02                    mov eax, [rdx]
  5239 00001E44 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5240 00001E4B 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5241 00001E50 48090424                or [rsp], rax
  5242 00001E54 9D                      popf
  5243                                 
  5244 00001E55 4088F1                  mov cl, sil
  5245 00001E58 D317                    rcl dword [rdi], cl
  5246 00001E5A 9C                      pushf
  5247 00001E5B 415B                    pop r11
  5248 00001E5D 8B02                    mov eax, [rdx]
  5249 00001E5F 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5250 00001E64 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5251 00001E6B 4409D8                  or eax, r11d
  5252 00001E6E 8902                    mov [rdx], eax
  5253 00001E70 C3                      ret
  5254                                 [global iemAImpl_rcl_u32_EndProc:function hidden]
  5255                                 iemAImpl_rcl_u32_EndProc:
  5256                                 [size iemAImpl_rcl_u32 iemAImpl_rcl_u32_EndProc - iemAImpl_rcl_u32]
  5257                                 [size iemAImpl_rcl_u32_EndProc 0]
  5258 00001E71 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5259                                 
  5260                                 [global iemAImpl_rcl_u64]
  5261                                 iemAImpl_rcl_u64:
  5262                                 
  5263 00001E75 9C                      pushf
  5264 00001E76 8B02                    mov eax, [rdx]
  5265 00001E78 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5266 00001E7F 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5267 00001E84 48090424                or [rsp], rax
  5268 00001E88 9D                      popf
  5269                                 
  5270 00001E89 4088F1                  mov cl, sil
  5271 00001E8C 48D317                  rcl qword [rdi], cl
  5272 00001E8F 9C                      pushf
  5273 00001E90 415B                    pop r11
  5274 00001E92 8B02                    mov eax, [rdx]
  5275 00001E94 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5276 00001E99 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5277 00001EA0 4409D8                  or eax, r11d
  5278 00001EA3 8902                    mov [rdx], eax
  5279 00001EA5 C3                      ret
  5280                                 [global iemAImpl_rcl_u64_EndProc:function hidden]
  5281                                 iemAImpl_rcl_u64_EndProc:
  5282                                 [size iemAImpl_rcl_u64 iemAImpl_rcl_u64_EndProc - iemAImpl_rcl_u64]
  5283                                 [size iemAImpl_rcl_u64_EndProc 0]
  5284 00001EA6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5285                                 
  5286                                 %line 1104+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5287                                 [section .text]
  5288                                 %line 1104+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5289                                 [global iemAImpl_rcr_u8]
  5290                                 iemAImpl_rcr_u8:
  5291                                 
  5292 00001EAA 9C                      pushf
  5293 00001EAB 8B02                    mov eax, [rdx]
  5294 00001EAD 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5295 00001EB4 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5296 00001EB9 48090424                or [rsp], rax
  5297 00001EBD 9D                      popf
  5298                                 
  5299 00001EBE 4088F1                  mov cl, sil
  5300 00001EC1 D21F                    rcr byte [rdi], cl
  5301 00001EC3 9C                      pushf
  5302 00001EC4 415B                    pop r11
  5303 00001EC6 8B02                    mov eax, [rdx]
  5304 00001EC8 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5305 00001ECD 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5306 00001ED4 4409D8                  or eax, r11d
  5307 00001ED7 8902                    mov [rdx], eax
  5308 00001ED9 C3                      ret
  5309                                 [global iemAImpl_rcr_u8_EndProc:function hidden]
  5310                                 iemAImpl_rcr_u8_EndProc:
  5311                                 [size iemAImpl_rcr_u8 iemAImpl_rcr_u8_EndProc - iemAImpl_rcr_u8]
  5312                                 [size iemAImpl_rcr_u8_EndProc 0]
  5313 00001EDA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5314                                 
  5315                                 [global iemAImpl_rcr_u16]
  5316                                 iemAImpl_rcr_u16:
  5317                                 
  5318 00001EDE 9C                      pushf
  5319 00001EDF 8B02                    mov eax, [rdx]
  5320 00001EE1 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5321 00001EE8 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5322 00001EED 48090424                or [rsp], rax
  5323 00001EF1 9D                      popf
  5324                                 
  5325 00001EF2 4088F1                  mov cl, sil
  5326 00001EF5 66D31F                  rcr word [rdi], cl
  5327 00001EF8 9C                      pushf
  5328 00001EF9 415B                    pop r11
  5329 00001EFB 8B02                    mov eax, [rdx]
  5330 00001EFD 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5331 00001F02 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5332 00001F09 4409D8                  or eax, r11d
  5333 00001F0C 8902                    mov [rdx], eax
  5334 00001F0E C3                      ret
  5335                                 [global iemAImpl_rcr_u16_EndProc:function hidden]
  5336                                 iemAImpl_rcr_u16_EndProc:
  5337                                 [size iemAImpl_rcr_u16 iemAImpl_rcr_u16_EndProc - iemAImpl_rcr_u16]
  5338                                 [size iemAImpl_rcr_u16_EndProc 0]
  5339 00001F0F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5340                                 
  5341                                 [global iemAImpl_rcr_u32]
  5342                                 iemAImpl_rcr_u32:
  5343                                 
  5344 00001F13 9C                      pushf
  5345 00001F14 8B02                    mov eax, [rdx]
  5346 00001F16 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5347 00001F1D 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5348 00001F22 48090424                or [rsp], rax
  5349 00001F26 9D                      popf
  5350                                 
  5351 00001F27 4088F1                  mov cl, sil
  5352 00001F2A D31F                    rcr dword [rdi], cl
  5353 00001F2C 9C                      pushf
  5354 00001F2D 415B                    pop r11
  5355 00001F2F 8B02                    mov eax, [rdx]
  5356 00001F31 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5357 00001F36 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5358 00001F3D 4409D8                  or eax, r11d
  5359 00001F40 8902                    mov [rdx], eax
  5360 00001F42 C3                      ret
  5361                                 [global iemAImpl_rcr_u32_EndProc:function hidden]
  5362                                 iemAImpl_rcr_u32_EndProc:
  5363                                 [size iemAImpl_rcr_u32 iemAImpl_rcr_u32_EndProc - iemAImpl_rcr_u32]
  5364                                 [size iemAImpl_rcr_u32_EndProc 0]
  5365 00001F43 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5366                                 
  5367                                 [global iemAImpl_rcr_u64]
  5368                                 iemAImpl_rcr_u64:
  5369                                 
  5370 00001F47 9C                      pushf
  5371 00001F48 8B02                    mov eax, [rdx]
  5372 00001F4A 812424FEF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | 0)
  5373 00001F51 2501080000              and eax, (((1 << 11) | (1 << 0)) | 0)
  5374 00001F56 48090424                or [rsp], rax
  5375 00001F5A 9D                      popf
  5376                                 
  5377 00001F5B 4088F1                  mov cl, sil
  5378 00001F5E 48D31F                  rcr qword [rdi], cl
  5379 00001F61 9C                      pushf
  5380 00001F62 415B                    pop r11
  5381 00001F64 8B02                    mov eax, [rdx]
  5382 00001F66 25FEF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | 0)
  5383 00001F6B 4181E301080000          and r11d, (((1 << 11) | (1 << 0)) | 0)
  5384 00001F72 4409D8                  or eax, r11d
  5385 00001F75 8902                    mov [rdx], eax
  5386 00001F77 C3                      ret
  5387                                 [global iemAImpl_rcr_u64_EndProc:function hidden]
  5388                                 iemAImpl_rcr_u64_EndProc:
  5389                                 [size iemAImpl_rcr_u64 iemAImpl_rcr_u64_EndProc - iemAImpl_rcr_u64]
  5390                                 [size iemAImpl_rcr_u64_EndProc 0]
  5391 00001F78 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5392                                 
  5393                                 %line 1105+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5394                                 [section .text]
  5395                                 %line 1105+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5396                                 [global iemAImpl_shl_u8]
  5397                                 iemAImpl_shl_u8:
  5398                                 
  5399 00001F7C 9C                      pushf
  5400 00001F7D 8B02                    mov eax, [rdx]
  5401 00001F7F 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5402 00001F86 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5403 00001F8B 48090424                or [rsp], rax
  5404 00001F8F 9D                      popf
  5405                                 
  5406 00001F90 4088F1                  mov cl, sil
  5407 00001F93 D227                    shl byte [rdi], cl
  5408 00001F95 9C                      pushf
  5409 00001F96 415B                    pop r11
  5410 00001F98 8B02                    mov eax, [rdx]
  5411 00001F9A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5412 00001F9F 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5413 00001FA6 4409D8                  or eax, r11d
  5414 00001FA9 8902                    mov [rdx], eax
  5415 00001FAB C3                      ret
  5416                                 [global iemAImpl_shl_u8_EndProc:function hidden]
  5417                                 iemAImpl_shl_u8_EndProc:
  5418                                 [size iemAImpl_shl_u8 iemAImpl_shl_u8_EndProc - iemAImpl_shl_u8]
  5419                                 [size iemAImpl_shl_u8_EndProc 0]
  5420 00001FAC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5421                                 
  5422                                 [global iemAImpl_shl_u16]
  5423                                 iemAImpl_shl_u16:
  5424                                 
  5425 00001FB0 9C                      pushf
  5426 00001FB1 8B02                    mov eax, [rdx]
  5427 00001FB3 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5428 00001FBA 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5429 00001FBF 48090424                or [rsp], rax
  5430 00001FC3 9D                      popf
  5431                                 
  5432 00001FC4 4088F1                  mov cl, sil
  5433 00001FC7 66D327                  shl word [rdi], cl
  5434 00001FCA 9C                      pushf
  5435 00001FCB 415B                    pop r11
  5436 00001FCD 8B02                    mov eax, [rdx]
  5437 00001FCF 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5438 00001FD4 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5439 00001FDB 4409D8                  or eax, r11d
  5440 00001FDE 8902                    mov [rdx], eax
  5441 00001FE0 C3                      ret
  5442                                 [global iemAImpl_shl_u16_EndProc:function hidden]
  5443                                 iemAImpl_shl_u16_EndProc:
  5444                                 [size iemAImpl_shl_u16 iemAImpl_shl_u16_EndProc - iemAImpl_shl_u16]
  5445                                 [size iemAImpl_shl_u16_EndProc 0]
  5446 00001FE1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5447                                 
  5448                                 [global iemAImpl_shl_u32]
  5449                                 iemAImpl_shl_u32:
  5450                                 
  5451 00001FE5 9C                      pushf
  5452 00001FE6 8B02                    mov eax, [rdx]
  5453 00001FE8 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5454 00001FEF 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5455 00001FF4 48090424                or [rsp], rax
  5456 00001FF8 9D                      popf
  5457                                 
  5458 00001FF9 4088F1                  mov cl, sil
  5459 00001FFC D327                    shl dword [rdi], cl
  5460 00001FFE 9C                      pushf
  5461 00001FFF 415B                    pop r11
  5462 00002001 8B02                    mov eax, [rdx]
  5463 00002003 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5464 00002008 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5465 0000200F 4409D8                  or eax, r11d
  5466 00002012 8902                    mov [rdx], eax
  5467 00002014 C3                      ret
  5468                                 [global iemAImpl_shl_u32_EndProc:function hidden]
  5469                                 iemAImpl_shl_u32_EndProc:
  5470                                 [size iemAImpl_shl_u32 iemAImpl_shl_u32_EndProc - iemAImpl_shl_u32]
  5471                                 [size iemAImpl_shl_u32_EndProc 0]
  5472 00002015 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5473                                 
  5474                                 [global iemAImpl_shl_u64]
  5475                                 iemAImpl_shl_u64:
  5476                                 
  5477 00002019 9C                      pushf
  5478 0000201A 8B02                    mov eax, [rdx]
  5479 0000201C 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5480 00002023 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5481 00002028 48090424                or [rsp], rax
  5482 0000202C 9D                      popf
  5483                                 
  5484 0000202D 4088F1                  mov cl, sil
  5485 00002030 48D327                  shl qword [rdi], cl
  5486 00002033 9C                      pushf
  5487 00002034 415B                    pop r11
  5488 00002036 8B02                    mov eax, [rdx]
  5489 00002038 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5490 0000203D 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5491 00002044 4409D8                  or eax, r11d
  5492 00002047 8902                    mov [rdx], eax
  5493 00002049 C3                      ret
  5494                                 [global iemAImpl_shl_u64_EndProc:function hidden]
  5495                                 iemAImpl_shl_u64_EndProc:
  5496                                 [size iemAImpl_shl_u64 iemAImpl_shl_u64_EndProc - iemAImpl_shl_u64]
  5497                                 [size iemAImpl_shl_u64_EndProc 0]
  5498 0000204A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5499                                 
  5500                                 %line 1106+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5501                                 [section .text]
  5502                                 %line 1106+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5503                                 [global iemAImpl_shr_u8]
  5504                                 iemAImpl_shr_u8:
  5505                                 
  5506 0000204E 9C                      pushf
  5507 0000204F 8B02                    mov eax, [rdx]
  5508 00002051 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5509 00002058 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5510 0000205D 48090424                or [rsp], rax
  5511 00002061 9D                      popf
  5512                                 
  5513 00002062 4088F1                  mov cl, sil
  5514 00002065 D22F                    shr byte [rdi], cl
  5515 00002067 9C                      pushf
  5516 00002068 415B                    pop r11
  5517 0000206A 8B02                    mov eax, [rdx]
  5518 0000206C 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5519 00002071 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5520 00002078 4409D8                  or eax, r11d
  5521 0000207B 8902                    mov [rdx], eax
  5522 0000207D C3                      ret
  5523                                 [global iemAImpl_shr_u8_EndProc:function hidden]
  5524                                 iemAImpl_shr_u8_EndProc:
  5525                                 [size iemAImpl_shr_u8 iemAImpl_shr_u8_EndProc - iemAImpl_shr_u8]
  5526                                 [size iemAImpl_shr_u8_EndProc 0]
  5527 0000207E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5528                                 
  5529                                 [global iemAImpl_shr_u16]
  5530                                 iemAImpl_shr_u16:
  5531                                 
  5532 00002082 9C                      pushf
  5533 00002083 8B02                    mov eax, [rdx]
  5534 00002085 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5535 0000208C 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5536 00002091 48090424                or [rsp], rax
  5537 00002095 9D                      popf
  5538                                 
  5539 00002096 4088F1                  mov cl, sil
  5540 00002099 66D32F                  shr word [rdi], cl
  5541 0000209C 9C                      pushf
  5542 0000209D 415B                    pop r11
  5543 0000209F 8B02                    mov eax, [rdx]
  5544 000020A1 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5545 000020A6 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5546 000020AD 4409D8                  or eax, r11d
  5547 000020B0 8902                    mov [rdx], eax
  5548 000020B2 C3                      ret
  5549                                 [global iemAImpl_shr_u16_EndProc:function hidden]
  5550                                 iemAImpl_shr_u16_EndProc:
  5551                                 [size iemAImpl_shr_u16 iemAImpl_shr_u16_EndProc - iemAImpl_shr_u16]
  5552                                 [size iemAImpl_shr_u16_EndProc 0]
  5553 000020B3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5554                                 
  5555                                 [global iemAImpl_shr_u32]
  5556                                 iemAImpl_shr_u32:
  5557                                 
  5558 000020B7 9C                      pushf
  5559 000020B8 8B02                    mov eax, [rdx]
  5560 000020BA 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5561 000020C1 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5562 000020C6 48090424                or [rsp], rax
  5563 000020CA 9D                      popf
  5564                                 
  5565 000020CB 4088F1                  mov cl, sil
  5566 000020CE D32F                    shr dword [rdi], cl
  5567 000020D0 9C                      pushf
  5568 000020D1 415B                    pop r11
  5569 000020D3 8B02                    mov eax, [rdx]
  5570 000020D5 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5571 000020DA 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5572 000020E1 4409D8                  or eax, r11d
  5573 000020E4 8902                    mov [rdx], eax
  5574 000020E6 C3                      ret
  5575                                 [global iemAImpl_shr_u32_EndProc:function hidden]
  5576                                 iemAImpl_shr_u32_EndProc:
  5577                                 [size iemAImpl_shr_u32 iemAImpl_shr_u32_EndProc - iemAImpl_shr_u32]
  5578                                 [size iemAImpl_shr_u32_EndProc 0]
  5579 000020E7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5580                                 
  5581                                 [global iemAImpl_shr_u64]
  5582                                 iemAImpl_shr_u64:
  5583                                 
  5584 000020EB 9C                      pushf
  5585 000020EC 8B02                    mov eax, [rdx]
  5586 000020EE 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5587 000020F5 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5588 000020FA 48090424                or [rsp], rax
  5589 000020FE 9D                      popf
  5590                                 
  5591 000020FF 4088F1                  mov cl, sil
  5592 00002102 48D32F                  shr qword [rdi], cl
  5593 00002105 9C                      pushf
  5594 00002106 415B                    pop r11
  5595 00002108 8B02                    mov eax, [rdx]
  5596 0000210A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5597 0000210F 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5598 00002116 4409D8                  or eax, r11d
  5599 00002119 8902                    mov [rdx], eax
  5600 0000211B C3                      ret
  5601                                 [global iemAImpl_shr_u64_EndProc:function hidden]
  5602                                 iemAImpl_shr_u64_EndProc:
  5603                                 [size iemAImpl_shr_u64 iemAImpl_shr_u64_EndProc - iemAImpl_shr_u64]
  5604                                 [size iemAImpl_shr_u64_EndProc 0]
  5605 0000211C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5606                                 
  5607                                 %line 1107+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5608                                 [section .text]
  5609                                 %line 1107+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5610                                 [global iemAImpl_sar_u8]
  5611                                 iemAImpl_sar_u8:
  5612                                 
  5613 00002120 9C                      pushf
  5614 00002121 8B02                    mov eax, [rdx]
  5615 00002123 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5616 0000212A 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5617 0000212F 48090424                or [rsp], rax
  5618 00002133 9D                      popf
  5619                                 
  5620 00002134 4088F1                  mov cl, sil
  5621 00002137 D23F                    sar byte [rdi], cl
  5622 00002139 9C                      pushf
  5623 0000213A 415B                    pop r11
  5624 0000213C 8B02                    mov eax, [rdx]
  5625 0000213E 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5626 00002143 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5627 0000214A 4409D8                  or eax, r11d
  5628 0000214D 8902                    mov [rdx], eax
  5629 0000214F C3                      ret
  5630                                 [global iemAImpl_sar_u8_EndProc:function hidden]
  5631                                 iemAImpl_sar_u8_EndProc:
  5632                                 [size iemAImpl_sar_u8 iemAImpl_sar_u8_EndProc - iemAImpl_sar_u8]
  5633                                 [size iemAImpl_sar_u8_EndProc 0]
  5634 00002150 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5635                                 
  5636                                 [global iemAImpl_sar_u16]
  5637                                 iemAImpl_sar_u16:
  5638                                 
  5639 00002154 9C                      pushf
  5640 00002155 8B02                    mov eax, [rdx]
  5641 00002157 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5642 0000215E 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5643 00002163 48090424                or [rsp], rax
  5644 00002167 9D                      popf
  5645                                 
  5646 00002168 4088F1                  mov cl, sil
  5647 0000216B 66D33F                  sar word [rdi], cl
  5648 0000216E 9C                      pushf
  5649 0000216F 415B                    pop r11
  5650 00002171 8B02                    mov eax, [rdx]
  5651 00002173 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5652 00002178 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5653 0000217F 4409D8                  or eax, r11d
  5654 00002182 8902                    mov [rdx], eax
  5655 00002184 C3                      ret
  5656                                 [global iemAImpl_sar_u16_EndProc:function hidden]
  5657                                 iemAImpl_sar_u16_EndProc:
  5658                                 [size iemAImpl_sar_u16 iemAImpl_sar_u16_EndProc - iemAImpl_sar_u16]
  5659                                 [size iemAImpl_sar_u16_EndProc 0]
  5660 00002185 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5661                                 
  5662                                 [global iemAImpl_sar_u32]
  5663                                 iemAImpl_sar_u32:
  5664                                 
  5665 00002189 9C                      pushf
  5666 0000218A 8B02                    mov eax, [rdx]
  5667 0000218C 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5668 00002193 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5669 00002198 48090424                or [rsp], rax
  5670 0000219C 9D                      popf
  5671                                 
  5672 0000219D 4088F1                  mov cl, sil
  5673 000021A0 D33F                    sar dword [rdi], cl
  5674 000021A2 9C                      pushf
  5675 000021A3 415B                    pop r11
  5676 000021A5 8B02                    mov eax, [rdx]
  5677 000021A7 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5678 000021AC 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5679 000021B3 4409D8                  or eax, r11d
  5680 000021B6 8902                    mov [rdx], eax
  5681 000021B8 C3                      ret
  5682                                 [global iemAImpl_sar_u32_EndProc:function hidden]
  5683                                 iemAImpl_sar_u32_EndProc:
  5684                                 [size iemAImpl_sar_u32 iemAImpl_sar_u32_EndProc - iemAImpl_sar_u32]
  5685                                 [size iemAImpl_sar_u32_EndProc 0]
  5686 000021B9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5687                                 
  5688                                 [global iemAImpl_sar_u64]
  5689                                 iemAImpl_sar_u64:
  5690                                 
  5691 000021BD 9C                      pushf
  5692 000021BE 8B02                    mov eax, [rdx]
  5693 000021C0 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5694 000021C7 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5695 000021CC 48090424                or [rsp], rax
  5696 000021D0 9D                      popf
  5697                                 
  5698 000021D1 4088F1                  mov cl, sil
  5699 000021D4 48D33F                  sar qword [rdi], cl
  5700 000021D7 9C                      pushf
  5701 000021D8 415B                    pop r11
  5702 000021DA 8B02                    mov eax, [rdx]
  5703 000021DC 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5704 000021E1 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5705 000021E8 4409D8                  or eax, r11d
  5706 000021EB 8902                    mov [rdx], eax
  5707 000021ED C3                      ret
  5708                                 [global iemAImpl_sar_u64_EndProc:function hidden]
  5709                                 iemAImpl_sar_u64_EndProc:
  5710                                 [size iemAImpl_sar_u64 iemAImpl_sar_u64_EndProc - iemAImpl_sar_u64]
  5711                                 [size iemAImpl_sar_u64_EndProc 0]
  5712 000021EE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5713                                 
  5714                                 %line 1108+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5715                                 
  5716                                 
  5717                                 
  5718                                 
  5719                                 
  5720                                 
  5721                                 
  5722                                 
  5723                                 
  5724                                 
  5725                                 
  5726                                 
  5727                                 
  5728                                 
  5729                                 
  5730                                 
  5731                                 
  5732                                 %line 1175+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5733                                 
  5734                                 [section .text]
  5735                                 %line 1176+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5736                                 [global iemAImpl_shld_u16]
  5737                                 iemAImpl_shld_u16:
  5738                                 
  5739 000021F2 9C                      pushf
  5740 000021F3 8B01                    mov eax, [rcx]
  5741 000021F5 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5742 000021FC 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5743 00002201 48090424                or [rsp], rax
  5744 00002205 9D                      popf
  5745                                 
  5746 00002206 4887D1                  xchg rcx, rdx
  5747 00002209 660FA537                shld [rdi], si, cl
  5748 0000220D 4887D1                  xchg rcx, rdx
  5749 00002210 9C                      pushf
  5750 00002211 415B                    pop r11
  5751 00002213 8B01                    mov eax, [rcx]
  5752 00002215 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5753 0000221A 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5754 00002221 4409D8                  or eax, r11d
  5755 00002224 8901                    mov [rcx], eax
  5756 00002226 C3                      ret
  5757                                 [global iemAImpl_shld_u16_EndProc:function hidden]
  5758                                 iemAImpl_shld_u16_EndProc:
  5759                                 [size iemAImpl_shld_u16 iemAImpl_shld_u16_EndProc - iemAImpl_shld_u16]
  5760                                 [size iemAImpl_shld_u16_EndProc 0]
  5761 00002227 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5762                                 
  5763                                 [global iemAImpl_shld_u32]
  5764                                 iemAImpl_shld_u32:
  5765                                 
  5766 0000222B 9C                      pushf
  5767 0000222C 8B01                    mov eax, [rcx]
  5768 0000222E 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5769 00002235 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5770 0000223A 48090424                or [rsp], rax
  5771 0000223E 9D                      popf
  5772                                 
  5773 0000223F 4887D1                  xchg rcx, rdx
  5774 00002242 0FA537                  shld [rdi], esi, cl
  5775 00002245 4887D1                  xchg rcx, rdx
  5776 00002248 9C                      pushf
  5777 00002249 415B                    pop r11
  5778 0000224B 8B01                    mov eax, [rcx]
  5779 0000224D 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5780 00002252 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5781 00002259 4409D8                  or eax, r11d
  5782 0000225C 8901                    mov [rcx], eax
  5783 0000225E C3                      ret
  5784                                 [global iemAImpl_shld_u32_EndProc:function hidden]
  5785                                 iemAImpl_shld_u32_EndProc:
  5786                                 [size iemAImpl_shld_u32 iemAImpl_shld_u32_EndProc - iemAImpl_shld_u32]
  5787                                 [size iemAImpl_shld_u32_EndProc 0]
  5788 0000225F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5789                                 
  5790                                 [global iemAImpl_shld_u64]
  5791                                 iemAImpl_shld_u64:
  5792                                 
  5793 00002263 9C                      pushf
  5794 00002264 8B01                    mov eax, [rcx]
  5795 00002266 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5796 0000226D 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5797 00002272 48090424                or [rsp], rax
  5798 00002276 9D                      popf
  5799                                 
  5800 00002277 4887D1                  xchg rcx, rdx
  5801 0000227A 480FA537                shld [rdi], rsi, cl
  5802 0000227E 4887D1                  xchg rcx, rdx
  5803 00002281 9C                      pushf
  5804 00002282 415B                    pop r11
  5805 00002284 8B01                    mov eax, [rcx]
  5806 00002286 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5807 0000228B 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5808 00002292 4409D8                  or eax, r11d
  5809 00002295 8901                    mov [rcx], eax
  5810 00002297 C3                      ret
  5811                                 [global iemAImpl_shld_u64_EndProc:function hidden]
  5812                                 iemAImpl_shld_u64_EndProc:
  5813                                 [size iemAImpl_shld_u64 iemAImpl_shld_u64_EndProc - iemAImpl_shld_u64]
  5814                                 [size iemAImpl_shld_u64_EndProc 0]
  5815 00002298 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5816                                 
  5817                                 %line 1177+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5818                                 [section .text]
  5819                                 %line 1177+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5820                                 [global iemAImpl_shrd_u16]
  5821                                 iemAImpl_shrd_u16:
  5822                                 
  5823 0000229C 9C                      pushf
  5824 0000229D 8B01                    mov eax, [rcx]
  5825 0000229F 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5826 000022A6 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5827 000022AB 48090424                or [rsp], rax
  5828 000022AF 9D                      popf
  5829                                 
  5830 000022B0 4887D1                  xchg rcx, rdx
  5831 000022B3 660FAD37                shrd [rdi], si, cl
  5832 000022B7 4887D1                  xchg rcx, rdx
  5833 000022BA 9C                      pushf
  5834 000022BB 415B                    pop r11
  5835 000022BD 8B01                    mov eax, [rcx]
  5836 000022BF 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5837 000022C4 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5838 000022CB 4409D8                  or eax, r11d
  5839 000022CE 8901                    mov [rcx], eax
  5840 000022D0 C3                      ret
  5841                                 [global iemAImpl_shrd_u16_EndProc:function hidden]
  5842                                 iemAImpl_shrd_u16_EndProc:
  5843                                 [size iemAImpl_shrd_u16 iemAImpl_shrd_u16_EndProc - iemAImpl_shrd_u16]
  5844                                 [size iemAImpl_shrd_u16_EndProc 0]
  5845 000022D1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5846                                 
  5847                                 [global iemAImpl_shrd_u32]
  5848                                 iemAImpl_shrd_u32:
  5849                                 
  5850 000022D5 9C                      pushf
  5851 000022D6 8B01                    mov eax, [rcx]
  5852 000022D8 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5853 000022DF 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5854 000022E4 48090424                or [rsp], rax
  5855 000022E8 9D                      popf
  5856                                 
  5857 000022E9 4887D1                  xchg rcx, rdx
  5858 000022EC 0FAD37                  shrd [rdi], esi, cl
  5859 000022EF 4887D1                  xchg rcx, rdx
  5860 000022F2 9C                      pushf
  5861 000022F3 415B                    pop r11
  5862 000022F5 8B01                    mov eax, [rcx]
  5863 000022F7 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5864 000022FC 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5865 00002303 4409D8                  or eax, r11d
  5866 00002306 8901                    mov [rcx], eax
  5867 00002308 C3                      ret
  5868                                 [global iemAImpl_shrd_u32_EndProc:function hidden]
  5869                                 iemAImpl_shrd_u32_EndProc:
  5870                                 [size iemAImpl_shrd_u32 iemAImpl_shrd_u32_EndProc - iemAImpl_shrd_u32]
  5871                                 [size iemAImpl_shrd_u32_EndProc 0]
  5872 00002309 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5873                                 
  5874                                 [global iemAImpl_shrd_u64]
  5875                                 iemAImpl_shrd_u64:
  5876                                 
  5877 0000230D 9C                      pushf
  5878 0000230E 8B01                    mov eax, [rcx]
  5879 00002310 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5880 00002317 25D5080000              and eax, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5881 0000231C 48090424                or [rsp], rax
  5882 00002320 9D                      popf
  5883                                 
  5884 00002321 4887D1                  xchg rcx, rdx
  5885 00002324 480FAD37                shrd [rdi], rsi, cl
  5886 00002328 4887D1                  xchg rcx, rdx
  5887 0000232B 9C                      pushf
  5888 0000232C 415B                    pop r11
  5889 0000232E 8B01                    mov eax, [rcx]
  5890 00002330 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5891 00002335 4181E3D5080000          and r11d, (((1 << 11) | (1 << 7) | (1 << 6) | (1 << 2) | (1 << 0)) | ((1 << 4)))
  5892 0000233C 4409D8                  or eax, r11d
  5893 0000233F 8901                    mov [rcx], eax
  5894 00002341 C3                      ret
  5895                                 [global iemAImpl_shrd_u64_EndProc:function hidden]
  5896                                 iemAImpl_shrd_u64_EndProc:
  5897                                 [size iemAImpl_shrd_u64 iemAImpl_shrd_u64_EndProc - iemAImpl_shrd_u64]
  5898                                 [size iemAImpl_shrd_u64_EndProc 0]
  5899 00002342 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5900                                 
  5901                                 %line 1178+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5902                                 
  5903                                 
  5904                                 
  5905                                 
  5906                                 
  5907                                 
  5908                                 
  5909                                 
  5910                                 
  5911                                 
  5912                                 
  5913                                 
  5914                                 
  5915                                 
  5916                                 
  5917                                 
  5918                                 
  5919                                 
  5920                                 
  5921                                 
  5922                                 
  5923                                 %line 1272+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5924                                 
  5925                                 [section .text]
  5926                                 %line 1273+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  5927                                 [global iemAImpl_mul_u8]
  5928                                 iemAImpl_mul_u8:
  5929                                 
  5930 00002346 9C                      pushf
  5931 00002347 8B02                    mov eax, [rdx]
  5932 00002349 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5933 00002350 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5934 00002355 48090424                or [rsp], rax
  5935 00002359 9D                      popf
  5936                                 
  5937 0000235A 8A07                    mov al, [rdi]
  5938 0000235C 40F6E6                  mul sil
  5939 0000235F 668907                  mov [rdi], ax
  5940 00002362 9C                      pushf
  5941 00002363 415B                    pop r11
  5942 00002365 8B02                    mov eax, [rdx]
  5943 00002367 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5944 0000236C 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5945 00002373 4409D8                  or eax, r11d
  5946 00002376 8902                    mov [rdx], eax
  5947 00002378 31C0                    xor eax, eax
  5948 0000237A C3                      ret
  5949                                 [global iemAImpl_mul_u8_EndProc:function hidden]
  5950                                 iemAImpl_mul_u8_EndProc:
  5951                                 [size iemAImpl_mul_u8 iemAImpl_mul_u8_EndProc - iemAImpl_mul_u8]
  5952                                 [size iemAImpl_mul_u8_EndProc 0]
  5953 0000237B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5954                                 
  5955                                 [global iemAImpl_mul_u16]
  5956                                 iemAImpl_mul_u16:
  5957                                 
  5958 0000237F 9C                      pushf
  5959 00002380 8B01                    mov eax, [rcx]
  5960 00002382 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5961 00002389 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5962 0000238E 48090424                or [rsp], rax
  5963 00002392 9D                      popf
  5964                                 
  5965 00002393 668B07                  mov ax, [rdi]
  5966 00002396 66F7E2                  mul dx
  5967 00002399 668907                  mov [rdi], ax
  5968 0000239C 668916                  mov [rsi], dx
  5969 0000239F 9C                      pushf
  5970 000023A0 415B                    pop r11
  5971 000023A2 8B01                    mov eax, [rcx]
  5972 000023A4 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5973 000023A9 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5974 000023B0 4409D8                  or eax, r11d
  5975 000023B3 8901                    mov [rcx], eax
  5976 000023B5 31C0                    xor eax, eax
  5977 000023B7 C3                      ret
  5978                                 [global iemAImpl_mul_u16_EndProc:function hidden]
  5979                                 iemAImpl_mul_u16_EndProc:
  5980                                 [size iemAImpl_mul_u16 iemAImpl_mul_u16_EndProc - iemAImpl_mul_u16]
  5981                                 [size iemAImpl_mul_u16_EndProc 0]
  5982 000023B8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  5983                                 
  5984                                 [global iemAImpl_mul_u32]
  5985                                 iemAImpl_mul_u32:
  5986                                 
  5987 000023BC 9C                      pushf
  5988 000023BD 8B01                    mov eax, [rcx]
  5989 000023BF 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5990 000023C6 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  5991 000023CB 48090424                or [rsp], rax
  5992 000023CF 9D                      popf
  5993                                 
  5994 000023D0 8B07                    mov eax, [rdi]
  5995 000023D2 F7E2                    mul edx
  5996 000023D4 8907                    mov [rdi], eax
  5997 000023D6 8916                    mov [rsi], edx
  5998 000023D8 9C                      pushf
  5999 000023D9 415B                    pop r11
  6000 000023DB 8B01                    mov eax, [rcx]
  6001 000023DD 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6002 000023E2 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6003 000023E9 4409D8                  or eax, r11d
  6004 000023EC 8901                    mov [rcx], eax
  6005 000023EE 31C0                    xor eax, eax
  6006 000023F0 C3                      ret
  6007                                 [global iemAImpl_mul_u32_EndProc:function hidden]
  6008                                 iemAImpl_mul_u32_EndProc:
  6009                                 [size iemAImpl_mul_u32 iemAImpl_mul_u32_EndProc - iemAImpl_mul_u32]
  6010                                 [size iemAImpl_mul_u32_EndProc 0]
  6011 000023F1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6012                                 
  6013                                 [global iemAImpl_mul_u64]
  6014                                 iemAImpl_mul_u64:
  6015                                 
  6016 000023F5 9C                      pushf
  6017 000023F6 8B01                    mov eax, [rcx]
  6018 000023F8 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6019 000023FF 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6020 00002404 48090424                or [rsp], rax
  6021 00002408 9D                      popf
  6022                                 
  6023 00002409 488B07                  mov rax, [rdi]
  6024 0000240C 48F7E2                  mul rdx
  6025 0000240F 488907                  mov [rdi], rax
  6026 00002412 488916                  mov [rsi], rdx
  6027 00002415 9C                      pushf
  6028 00002416 415B                    pop r11
  6029 00002418 8B01                    mov eax, [rcx]
  6030 0000241A 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6031 0000241F 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6032 00002426 4409D8                  or eax, r11d
  6033 00002429 8901                    mov [rcx], eax
  6034 0000242B 31C0                    xor eax, eax
  6035 0000242D C3                      ret
  6036                                 [global iemAImpl_mul_u64_EndProc:function hidden]
  6037                                 iemAImpl_mul_u64_EndProc:
  6038                                 [size iemAImpl_mul_u64 iemAImpl_mul_u64_EndProc - iemAImpl_mul_u64]
  6039                                 [size iemAImpl_mul_u64_EndProc 0]
  6040 0000242E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6041                                 
  6042                                 %line 1274+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6043                                 [section .text]
  6044                                 %line 1274+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6045                                 [global iemAImpl_imul_u8]
  6046                                 iemAImpl_imul_u8:
  6047                                 
  6048 00002432 9C                      pushf
  6049 00002433 8B02                    mov eax, [rdx]
  6050 00002435 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6051 0000243C 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6052 00002441 48090424                or [rsp], rax
  6053 00002445 9D                      popf
  6054                                 
  6055 00002446 8A07                    mov al, [rdi]
  6056 00002448 40F6EE                  imul sil
  6057 0000244B 668907                  mov [rdi], ax
  6058 0000244E 9C                      pushf
  6059 0000244F 415B                    pop r11
  6060 00002451 8B02                    mov eax, [rdx]
  6061 00002453 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6062 00002458 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6063 0000245F 4409D8                  or eax, r11d
  6064 00002462 8902                    mov [rdx], eax
  6065 00002464 31C0                    xor eax, eax
  6066 00002466 C3                      ret
  6067                                 [global iemAImpl_imul_u8_EndProc:function hidden]
  6068                                 iemAImpl_imul_u8_EndProc:
  6069                                 [size iemAImpl_imul_u8 iemAImpl_imul_u8_EndProc - iemAImpl_imul_u8]
  6070                                 [size iemAImpl_imul_u8_EndProc 0]
  6071 00002467 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6072                                 
  6073                                 [global iemAImpl_imul_u16]
  6074                                 iemAImpl_imul_u16:
  6075                                 
  6076 0000246B 9C                      pushf
  6077 0000246C 8B01                    mov eax, [rcx]
  6078 0000246E 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6079 00002475 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6080 0000247A 48090424                or [rsp], rax
  6081 0000247E 9D                      popf
  6082                                 
  6083 0000247F 668B07                  mov ax, [rdi]
  6084 00002482 66F7EA                  imul dx
  6085 00002485 668907                  mov [rdi], ax
  6086 00002488 668916                  mov [rsi], dx
  6087 0000248B 9C                      pushf
  6088 0000248C 415B                    pop r11
  6089 0000248E 8B01                    mov eax, [rcx]
  6090 00002490 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6091 00002495 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6092 0000249C 4409D8                  or eax, r11d
  6093 0000249F 8901                    mov [rcx], eax
  6094 000024A1 31C0                    xor eax, eax
  6095 000024A3 C3                      ret
  6096                                 [global iemAImpl_imul_u16_EndProc:function hidden]
  6097                                 iemAImpl_imul_u16_EndProc:
  6098                                 [size iemAImpl_imul_u16 iemAImpl_imul_u16_EndProc - iemAImpl_imul_u16]
  6099                                 [size iemAImpl_imul_u16_EndProc 0]
  6100 000024A4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6101                                 
  6102                                 [global iemAImpl_imul_u32]
  6103                                 iemAImpl_imul_u32:
  6104                                 
  6105 000024A8 9C                      pushf
  6106 000024A9 8B01                    mov eax, [rcx]
  6107 000024AB 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6108 000024B2 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6109 000024B7 48090424                or [rsp], rax
  6110 000024BB 9D                      popf
  6111                                 
  6112 000024BC 8B07                    mov eax, [rdi]
  6113 000024BE F7EA                    imul edx
  6114 000024C0 8907                    mov [rdi], eax
  6115 000024C2 8916                    mov [rsi], edx
  6116 000024C4 9C                      pushf
  6117 000024C5 415B                    pop r11
  6118 000024C7 8B01                    mov eax, [rcx]
  6119 000024C9 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6120 000024CE 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6121 000024D5 4409D8                  or eax, r11d
  6122 000024D8 8901                    mov [rcx], eax
  6123 000024DA 31C0                    xor eax, eax
  6124 000024DC C3                      ret
  6125                                 [global iemAImpl_imul_u32_EndProc:function hidden]
  6126                                 iemAImpl_imul_u32_EndProc:
  6127                                 [size iemAImpl_imul_u32 iemAImpl_imul_u32_EndProc - iemAImpl_imul_u32]
  6128                                 [size iemAImpl_imul_u32_EndProc 0]
  6129 000024DD CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6130                                 
  6131                                 [global iemAImpl_imul_u64]
  6132                                 iemAImpl_imul_u64:
  6133                                 
  6134 000024E1 9C                      pushf
  6135 000024E2 8B01                    mov eax, [rcx]
  6136 000024E4 8124242AF7FFFF          and dword [rsp], ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6137 000024EB 25D5080000              and eax, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6138 000024F0 48090424                or [rsp], rax
  6139 000024F4 9D                      popf
  6140                                 
  6141 000024F5 488B07                  mov rax, [rdi]
  6142 000024F8 48F7EA                  imul rdx
  6143 000024FB 488907                  mov [rdi], rax
  6144 000024FE 488916                  mov [rsi], rdx
  6145 00002501 9C                      pushf
  6146 00002502 415B                    pop r11
  6147 00002504 8B01                    mov eax, [rcx]
  6148 00002506 252AF7FFFF              and eax, ~(((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6149 0000250B 4181E3D5080000          and r11d, (((1 << 11) | (1 << 0)) | ((1 << 7) | (1 << 6) | (1 << 4) | (1 << 2)))
  6150 00002512 4409D8                  or eax, r11d
  6151 00002515 8901                    mov [rcx], eax
  6152 00002517 31C0                    xor eax, eax
  6153 00002519 C3                      ret
  6154                                 [global iemAImpl_imul_u64_EndProc:function hidden]
  6155                                 iemAImpl_imul_u64_EndProc:
  6156                                 [size iemAImpl_imul_u64 iemAImpl_imul_u64_EndProc - iemAImpl_imul_u64]
  6157                                 [size iemAImpl_imul_u64_EndProc 0]
  6158 0000251A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6159                                 
  6160                                 %line 1275+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6161                                 
  6162                                 
  6163                                 [section .text]
  6164                                 
  6165                                 
  6166                                 
  6167                                 iemAImpl_negate_T0_T1_u32:
  6168 0000251E 6A00                    push 0
  6169 00002520 6A00                    push 0
  6170 00002522 870424                  xchg eax, [rsp]
  6171 00002525 44875C2408              xchg r11d, [rsp + 8]
  6172 0000252A 2B0424                  sub eax, [rsp]
  6173 0000252D 441B5C2408              sbb r11d, [rsp + 8]
  6174 00002532 4883C410                add rsp, 8*2
  6175 00002536 C3                      ret
  6176                                 
  6177                                 %line 1292+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6178                                 
  6179                                 
  6180                                 
  6181                                 iemAImpl_negate_T0_T1_u64:
  6182 00002537 6A00                    push 0
  6183 00002539 6A00                    push 0
  6184 0000253B 48870424                xchg rax, [rsp]
  6185 0000253F 4C875C2408              xchg r11, [rsp + 8]
  6186 00002544 482B0424                sub rax, [rsp]
  6187 00002548 4C1B5C2408              sbb r11, [rsp + 8]
  6188 0000254D 4883C410                add rsp, 8*2
  6189 00002551 C3                      ret
  6190                                 %line 1305+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6191                                 
  6192                                 
  6193                                 
  6194                                 
  6195                                 
  6196                                 
  6197                                 
  6198                                 
  6199                                 
  6200                                 
  6201                                 
  6202                                 
  6203                                 
  6204                                 
  6205                                 
  6206                                 
  6207                                 
  6208                                 
  6209                                 
  6210                                 
  6211                                 
  6212                                 
  6213                                 %line 1628+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6214                                 
  6215                                 [section .text]
  6216                                 %line 1629+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6217                                 [global iemAImpl_div_u8]
  6218                                 iemAImpl_div_u8:
  6219                                 
  6220                                 
  6221 00002552 4084F6                  test sil, sil
  6222 00002555 743A                    jz .div_zero
  6223                                 
  6224                                 
  6225                                 
  6226 00002557 40387701                cmp [rdi + 1], sil
  6227 0000255B 7334                    jae .div_overflow
  6228                                 
  6229                                 
  6230 0000255D 9C                      pushf
  6231 0000255E 8B02                    mov eax, [rdx]
  6232 00002560 8124242AF7FFFF          and dword [rsp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6233 00002567 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6234 0000256C 48090424                or [rsp], rax
  6235 00002570 9D                      popf
  6236                                 
  6237 00002571 668B07                  mov ax, [rdi]
  6238 00002574 40F6F6                  div sil
  6239 00002577 668907                  mov [rdi], ax
  6240 0000257A 9C                      pushf
  6241 0000257B 415B                    pop r11
  6242 0000257D 8B02                    mov eax, [rdx]
  6243 0000257F 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6244 00002584 4181E3D5080000          and r11d, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6245 0000258B 4409D8                  or eax, r11d
  6246 0000258E 8902                    mov [rdx], eax
  6247 00002590 31C0                    xor eax, eax
  6248                                 
  6249                                 .return:
  6250 00002592 C3                      ret
  6251                                 
  6252                                 .div_zero:
  6253                                 .div_overflow:
  6254 00002593 B8FFFFFFFF              mov eax, -1
  6255 00002598 EBF6                    jmp .return
  6256                                 [global iemAImpl_div_u8_EndProc:function hidden]
  6257                                 iemAImpl_div_u8_EndProc:
  6258                                 [size iemAImpl_div_u8 iemAImpl_div_u8_EndProc - iemAImpl_div_u8]
  6259                                 [size iemAImpl_div_u8_EndProc 0]
  6260 0000259A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6261                                 
  6262                                 [global iemAImpl_div_u16]
  6263                                 iemAImpl_div_u16:
  6264                                 
  6265                                 
  6266 0000259E 6685D2                  test dx, dx
  6267 000025A1 7443                    jz .div_zero
  6268                                 
  6269                                 
  6270                                 
  6271 000025A3 663916                  cmp [rsi], dx
  6272 000025A6 733E                    jae .div_overflow
  6273                                 
  6274                                 
  6275 000025A8 9C                      pushf
  6276 000025A9 8B01                    mov eax, [rcx]
  6277 000025AB 8124242AF7FFFF          and dword [rsp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6278 000025B2 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6279 000025B7 48090424                or [rsp], rax
  6280 000025BB 9D                      popf
  6281                                 
  6282 000025BC 4989D3                  mov r11, rdx
  6283 000025BF 668B07                  mov ax, [rdi]
  6284 000025C2 668B16                  mov dx, [rsi]
  6285 000025C5 6641F7F3                div r11w
  6286 000025C9 668907                  mov [rdi], ax
  6287 000025CC 668916                  mov [rsi], dx
  6288 000025CF 9C                      pushf
  6289 000025D0 415B                    pop r11
  6290 000025D2 8B01                    mov eax, [rcx]
  6291 000025D4 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6292 000025D9 4181E3D5080000          and r11d, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6293 000025E0 4409D8                  or eax, r11d
  6294 000025E3 8901                    mov [rcx], eax
  6295 000025E5 31C0                    xor eax, eax
  6296                                 
  6297                                 .return:
  6298 000025E7 C3                      ret
  6299                                 
  6300                                 .div_zero:
  6301                                 .div_overflow:
  6302 000025E8 B8FFFFFFFF              mov eax, -1
  6303 000025ED EBF6                    jmp .return
  6304                                 [global iemAImpl_div_u16_EndProc:function hidden]
  6305                                 iemAImpl_div_u16_EndProc:
  6306                                 [size iemAImpl_div_u16 iemAImpl_div_u16_EndProc - iemAImpl_div_u16]
  6307                                 [size iemAImpl_div_u16_EndProc 0]
  6308 000025EF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6309                                 
  6310                                 [global iemAImpl_div_u32]
  6311                                 iemAImpl_div_u32:
  6312                                 
  6313                                 
  6314 000025F3 85D2                    test edx, edx
  6315 000025F5 743F                    jz .div_zero
  6316                                 
  6317                                 
  6318                                 
  6319 000025F7 3916                    cmp [rsi], edx
  6320 000025F9 733B                    jae .div_overflow
  6321                                 
  6322                                 
  6323 000025FB 9C                      pushf
  6324 000025FC 8B01                    mov eax, [rcx]
  6325 000025FE 8124242AF7FFFF          and dword [rsp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6326 00002605 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6327 0000260A 48090424                or [rsp], rax
  6328 0000260E 9D                      popf
  6329                                 
  6330 0000260F 8B07                    mov eax, [rdi]
  6331 00002611 4989D3                  mov r11, rdx
  6332 00002614 8B07                    mov eax, [rdi]
  6333 00002616 8B16                    mov edx, [rsi]
  6334 00002618 41F7F3                  div r11d
  6335 0000261B 8907                    mov [rdi], eax
  6336 0000261D 8916                    mov [rsi], edx
  6337 0000261F 9C                      pushf
  6338 00002620 415B                    pop r11
  6339 00002622 8B01                    mov eax, [rcx]
  6340 00002624 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6341 00002629 4181E3D5080000          and r11d, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6342 00002630 4409D8                  or eax, r11d
  6343 00002633 8901                    mov [rcx], eax
  6344 00002635 31C0                    xor eax, eax
  6345                                 
  6346                                 .return:
  6347 00002637 C3                      ret
  6348                                 
  6349                                 .div_overflow:
  6350                                 .div_zero:
  6351 00002638 B8FFFFFFFF              mov eax, -1
  6352 0000263D EBF6                    jmp .return
  6353                                 [global iemAImpl_div_u32_EndProc:function hidden]
  6354                                 iemAImpl_div_u32_EndProc:
  6355                                 [size iemAImpl_div_u32 iemAImpl_div_u32_EndProc - iemAImpl_div_u32]
  6356                                 [size iemAImpl_div_u32_EndProc 0]
  6357 0000263F CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6358                                 
  6359                                 [global iemAImpl_div_u64]
  6360                                 iemAImpl_div_u64:
  6361                                 
  6362 00002643 4885D2                  test rdx, rdx
  6363 00002646 7445                    jz .div_zero
  6364 00002648 483916                  cmp [rsi], rdx
  6365 0000264B 7340                    jae .div_overflow
  6366                                 
  6367                                 
  6368 0000264D 9C                      pushf
  6369 0000264E 8B01                    mov eax, [rcx]
  6370 00002650 8124242AF7FFFF          and dword [rsp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6371 00002657 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6372 0000265C 48090424                or [rsp], rax
  6373 00002660 9D                      popf
  6374                                 
  6375 00002661 488B07                  mov rax, [rdi]
  6376 00002664 4989D3                  mov r11, rdx
  6377 00002667 488B07                  mov rax, [rdi]
  6378 0000266A 488B16                  mov rdx, [rsi]
  6379 0000266D 49F7F3                  div r11
  6380 00002670 488907                  mov [rdi], rax
  6381 00002673 488916                  mov [rsi], rdx
  6382 00002676 9C                      pushf
  6383 00002677 415B                    pop r11
  6384 00002679 8B01                    mov eax, [rcx]
  6385 0000267B 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6386 00002680 4181E3D5080000          and r11d, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6387 00002687 4409D8                  or eax, r11d
  6388 0000268A 8901                    mov [rcx], eax
  6389 0000268C 31C0                    xor eax, eax
  6390                                 
  6391                                 .return:
  6392 0000268E C3                      ret
  6393                                 
  6394                                 .div_overflow:
  6395                                 .div_zero:
  6396 0000268F B8FFFFFFFF              mov eax, -1
  6397 00002694 EBF6                    jmp .return
  6398                                 [global iemAImpl_div_u64_EndProc:function hidden]
  6399                                 iemAImpl_div_u64_EndProc:
  6400                                 [size iemAImpl_div_u64 iemAImpl_div_u64_EndProc - iemAImpl_div_u64]
  6401                                 [size iemAImpl_div_u64_EndProc 0]
  6402 00002696 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6403                                 
  6404                                 %line 1630+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6405                                 [section .text]
  6406                                 %line 1630+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6407                                 [global iemAImpl_idiv_u8]
  6408                                 iemAImpl_idiv_u8:
  6409                                 
  6410                                 
  6411 0000269A 4084F6                  test sil, sil
  6412 0000269D 7474                    jz .div_zero
  6413                                 
  6414                                 
  6415                                 
  6416 0000269F 668B07                  mov ax, [rdi]
  6417 000026A2 4989F3                  mov r11, rsi
  6418 000026A5 4084F6                  test sil, sil
  6419 000026A8 781C                    js .divisor_negative
  6420 000026AA 6685C0                  test ax, ax
  6421 000026AD 7922                    jns .both_positive
  6422 000026AF 66F7D8                  neg ax
  6423                                 .one_of_each:
  6424 000026B2 50                      push rax
  6425 000026B3 66C1E807                shr ax, 7
  6426 000026B7 4038F0                  cmp al, sil
  6427 000026BA 58                      pop rax
  6428 000026BB 721D                    jb .div_no_overflow
  6429 000026BD 7754                    ja .div_overflow
  6430 000026BF 247F                    and al, 0x7f
  6431 000026C1 4038F0                  cmp al, sil
  6432 000026C4 734D                    jae .div_overflow
  6433 000026C6 EB12                    jmp .div_no_overflow
  6434                                 
  6435                                 .divisor_negative:
  6436 000026C8 40F6DE                  neg sil
  6437 000026CB 6685C0                  test ax, ax
  6438 000026CE 79E0                    jns .one_of_each
  6439 000026D0 66F7D8                  neg ax
  6440                                 .both_positive:
  6441 000026D3 66C1E807                shr ax, 7
  6442 000026D7 4038F0                  cmp al, sil
  6443 000026DA 7337                    jae .div_overflow
  6444                                 .div_no_overflow:
  6445 000026DC 4C89DE                  mov rsi, r11
  6446                                 
  6447                                 
  6448 000026DF 9C                      pushf
  6449 000026E0 8B02                    mov eax, [rdx]
  6450 000026E2 8124242AF7FFFF          and dword [rsp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6451 000026E9 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6452 000026EE 48090424                or [rsp], rax
  6453 000026F2 9D                      popf
  6454                                 
  6455 000026F3 668B07                  mov ax, [rdi]
  6456 000026F6 40F6FE                  idiv sil
  6457 000026F9 668907                  mov [rdi], ax
  6458 000026FC 9C                      pushf
  6459 000026FD 415B                    pop r11
  6460 000026FF 8B02                    mov eax, [rdx]
  6461 00002701 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6462 00002706 4181E3D5080000          and r11d, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6463 0000270D 4409D8                  or eax, r11d
  6464 00002710 8902                    mov [rdx], eax
  6465 00002712 31C0                    xor eax, eax
  6466                                 
  6467                                 .return:
  6468 00002714 C3                      ret
  6469                                 
  6470                                 .div_zero:
  6471                                 .div_overflow:
  6472 00002715 B8FFFFFFFF              mov eax, -1
  6473 0000271A EBF6                    jmp .return
  6474                                 [global iemAImpl_idiv_u8_EndProc:function hidden]
  6475                                 iemAImpl_idiv_u8_EndProc:
  6476                                 [size iemAImpl_idiv_u8 iemAImpl_idiv_u8_EndProc - iemAImpl_idiv_u8]
  6477                                 [size iemAImpl_idiv_u8_EndProc 0]
  6478 0000271C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6479                                 
  6480                                 [global iemAImpl_idiv_u16]
  6481                                 iemAImpl_idiv_u16:
  6482                                 
  6483                                 
  6484 00002720 6685D2                  test dx, dx
  6485 00002723 0F847E000000            jz .div_zero
  6486                                 
  6487                                 
  6488                                 
  6489 00002729 668B06                  mov ax, [rsi]
  6490 0000272C C1E010                  shl eax, 16
  6491 0000272F 668B07                  mov ax, [rdi]
  6492 00002732 4989D3                  mov r11, rdx
  6493 00002735 664585DB                test r11w, r11w
  6494 00002739 781D                    js .divisor_negative
  6495 0000273B 85C0                    test eax, eax
  6496 0000273D 7923                    jns .both_positive
  6497 0000273F F7D8                    neg eax
  6498                                 .one_of_each:
  6499 00002741 50                      push rax
  6500 00002742 C1E80F                  shr eax, 15
  6501 00002745 664439D8                cmp ax, r11w
  6502 00002749 58                      pop rax
  6503 0000274A 721F                    jb .div_no_overflow
  6504 0000274C 775D                    ja .div_overflow
  6505 0000274E 6625FF7F                and ax, 0x7fff
  6506 00002752 664439D8                cmp ax, r11w
  6507 00002756 7353                    jae .div_overflow
  6508 00002758 EB11                    jmp .div_no_overflow
  6509                                 
  6510                                 .divisor_negative:
  6511 0000275A 6641F7DB                neg r11w
  6512 0000275E 85C0                    test eax, eax
  6513 00002760 79DD                    jns .one_of_each
  6514 00002762 F7D8                    neg eax
  6515                                 .both_positive:
  6516 00002764 C1E80F                  shr eax, 15
  6517 00002767 664439D8                cmp ax, r11w
  6518 0000276B 733E                    jae .div_overflow
  6519                                 .div_no_overflow:
  6520                                 
  6521                                 
  6522 0000276D 9C                      pushf
  6523 0000276E 8B01                    mov eax, [rcx]
  6524 00002770 8124242AF7FFFF          and dword [rsp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6525 00002777 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6526 0000277C 48090424                or [rsp], rax
  6527 00002780 9D                      popf
  6528                                 
  6529 00002781 4989D3                  mov r11, rdx
  6530 00002784 668B07                  mov ax, [rdi]
  6531 00002787 668B16                  mov dx, [rsi]
  6532 0000278A 6641F7FB                idiv r11w
  6533 0000278E 668907                  mov [rdi], ax
  6534 00002791 668916                  mov [rsi], dx
  6535 00002794 9C                      pushf
  6536 00002795 415B                    pop r11
  6537 00002797 8B01                    mov eax, [rcx]
  6538 00002799 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6539 0000279E 4181E3D5080000          and r11d, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6540 000027A5 4409D8                  or eax, r11d
  6541 000027A8 8901                    mov [rcx], eax
  6542 000027AA 31C0                    xor eax, eax
  6543                                 
  6544                                 .return:
  6545 000027AC C3                      ret
  6546                                 
  6547                                 .div_zero:
  6548                                 .div_overflow:
  6549 000027AD B8FFFFFFFF              mov eax, -1
  6550 000027B2 EBF6                    jmp .return
  6551                                 [global iemAImpl_idiv_u16_EndProc:function hidden]
  6552                                 iemAImpl_idiv_u16_EndProc:
  6553                                 [size iemAImpl_idiv_u16 iemAImpl_idiv_u16_EndProc - iemAImpl_idiv_u16]
  6554                                 [size iemAImpl_idiv_u16_EndProc 0]
  6555 000027B4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6556                                 
  6557                                 [global iemAImpl_idiv_u32]
  6558                                 iemAImpl_idiv_u32:
  6559                                 
  6560                                 
  6561 000027B8 85D2                    test edx, edx
  6562 000027BA 0F8484000000            jz .div_zero
  6563                                 
  6564                                 
  6565                                 
  6566 000027C0 52                      push rdx
  6567 000027C1 8B07                    mov eax, [rdi]
  6568 000027C3 448B1E                  mov r11d, [rsi]
  6569 000027C6 85D2                    test edx, edx
  6570 000027C8 7825                    js .divisor_negative
  6571 000027CA 4585DB                  test r11d, r11d
  6572 000027CD 792C                    jns .both_positive
  6573 000027CF E845FDFFFF              call iemAImpl_negate_T0_T1_u32
  6574                                 .one_of_each:
  6575 000027D4 50                      push rax
  6576 000027D5 41D1E3                  shl r11d, 1
  6577 000027D8 C1E81F                  shr eax, 31
  6578 000027DB 4109C3                  or r11d, eax
  6579 000027DE 4139D3                  cmp r11d, edx
  6580 000027E1 58                      pop rax
  6581 000027E2 7225                    jb .div_no_overflow
  6582 000027E4 7761                    ja .div_overflow
  6583 000027E6 25FFFFFF7F              and eax, 0x7fffffff
  6584 000027EB 39D0                    cmp eax, edx
  6585 000027ED 7358                    jae .div_overflow
  6586 000027EF EB18                    jmp .div_no_overflow
  6587                                 
  6588                                 .divisor_negative:
  6589 000027F1 F7DA                    neg edx
  6590 000027F3 4585DB                  test r11d, r11d
  6591 000027F6 79DA                    jns .one_of_each
  6592 000027F8 E81CFDFFFF              call iemAImpl_negate_T0_T1_u32
  6593                                 .both_positive:
  6594 000027FD 41D1E3                  shl r11d, 1
  6595 00002800 C1E81F                  shr eax, 31
  6596 00002803 4109C3                  or r11d, eax
  6597 00002806 4139D3                  cmp r11d, edx
  6598 00002809 733C                    jae .div_overflow
  6599                                 .div_no_overflow:
  6600 0000280B 5A                      pop rdx
  6601                                 
  6602                                 
  6603 0000280C 9C                      pushf
  6604 0000280D 8B01                    mov eax, [rcx]
  6605 0000280F 8124242AF7FFFF          and dword [rsp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6606 00002816 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6607 0000281B 48090424                or [rsp], rax
  6608 0000281F 9D                      popf
  6609                                 
  6610 00002820 8B07                    mov eax, [rdi]
  6611 00002822 4989D3                  mov r11, rdx
  6612 00002825 8B07                    mov eax, [rdi]
  6613 00002827 8B16                    mov edx, [rsi]
  6614 00002829 41F7FB                  idiv r11d
  6615 0000282C 8907                    mov [rdi], eax
  6616 0000282E 8916                    mov [rsi], edx
  6617 00002830 9C                      pushf
  6618 00002831 415B                    pop r11
  6619 00002833 8B01                    mov eax, [rcx]
  6620 00002835 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6621 0000283A 4181E3D5080000          and r11d, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6622 00002841 4409D8                  or eax, r11d
  6623 00002844 8901                    mov [rcx], eax
  6624 00002846 31C0                    xor eax, eax
  6625                                 
  6626                                 .return:
  6627 00002848 C3                      ret
  6628                                 
  6629                                 .div_overflow:
  6630 00002849 5A                      pop rdx
  6631                                 .div_zero:
  6632 0000284A B8FFFFFFFF              mov eax, -1
  6633 0000284F EBF5                    jmp .return
  6634                                 [global iemAImpl_idiv_u32_EndProc:function hidden]
  6635                                 iemAImpl_idiv_u32_EndProc:
  6636                                 [size iemAImpl_idiv_u32 iemAImpl_idiv_u32_EndProc - iemAImpl_idiv_u32]
  6637                                 [size iemAImpl_idiv_u32_EndProc 0]
  6638 00002851 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6639                                 
  6640                                 [global iemAImpl_idiv_u64]
  6641                                 iemAImpl_idiv_u64:
  6642                                 
  6643 00002855 4885D2                  test rdx, rdx
  6644 00002858 0F8497000000            jz .div_zero
  6645 0000285E 52                      push rdx
  6646 0000285F 488B07                  mov rax, [rdi]
  6647 00002862 4C8B1E                  mov r11, [rsi]
  6648 00002865 4885D2                  test rdx, rdx
  6649 00002868 782F                    js .divisor_negative
  6650 0000286A 4D85DB                  test r11, r11
  6651 0000286D 7937                    jns .both_positive
  6652 0000286F E8BEFCFFFF              call iemAImpl_negate_T0_T1_u64
  6653                                 .one_of_each:
  6654 00002874 50                      push rax
  6655 00002875 49D1E3                  shl r11, 1
  6656 00002878 48C1E83F                shr rax, 63
  6657 0000287C 4909C3                  or r11, rax
  6658 0000287F 4939D3                  cmp r11, rdx
  6659 00002882 58                      pop rax
  6660 00002883 7230                    jb .div_no_overflow
  6661 00002885 7771                    ja .div_overflow
  6662 00002887 49BBFFFFFFFFFFFFFF-     mov r11, 0x7fffffffffffffff
  6663 00002887 7F                 
  6664 00002891 4C21D8                  and rax, r11
  6665 00002894 4839D0                  cmp rax, rdx
  6666 00002897 735F                    jae .div_overflow
  6667 00002899 EB1A                    jmp .div_no_overflow
  6668                                 
  6669                                 .divisor_negative:
  6670 0000289B 48F7DA                  neg rdx
  6671 0000289E 4D85DB                  test r11, r11
  6672 000028A1 79CF                    jns .one_of_each
  6673 000028A3 E88AFCFFFF              call iemAImpl_negate_T0_T1_u64
  6674                                 .both_positive:
  6675 000028A8 49D1E3                  shl r11, 1
  6676 000028AB 48C1E83F                shr rax, 63
  6677 000028AF 4909C3                  or r11, rax
  6678 000028B2 4939D3                  cmp r11, rdx
  6679 000028B5 7341                    jae .div_overflow
  6680                                 .div_no_overflow:
  6681 000028B7 5A                      pop rdx
  6682                                 
  6683                                 
  6684 000028B8 9C                      pushf
  6685 000028B9 8B01                    mov eax, [rcx]
  6686 000028BB 8124242AF7FFFF          and dword [rsp], ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6687 000028C2 25D5080000              and eax, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6688 000028C7 48090424                or [rsp], rax
  6689 000028CB 9D                      popf
  6690                                 
  6691 000028CC 488B07                  mov rax, [rdi]
  6692 000028CF 4989D3                  mov r11, rdx
  6693 000028D2 488B07                  mov rax, [rdi]
  6694 000028D5 488B16                  mov rdx, [rsi]
  6695 000028D8 49F7FB                  idiv r11
  6696 000028DB 488907                  mov [rdi], rax
  6697 000028DE 488916                  mov [rsi], rdx
  6698 000028E1 9C                      pushf
  6699 000028E2 415B                    pop r11
  6700 000028E4 8B01                    mov eax, [rcx]
  6701 000028E6 252AF7FFFF              and eax, ~(0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6702 000028EB 4181E3D5080000          and r11d, (0 | ((1 << 11) | (1 << 7) | (1 << 6) | (1 << 4) | (1 << 2) | (1 << 0)))
  6703 000028F2 4409D8                  or eax, r11d
  6704 000028F5 8901                    mov [rcx], eax
  6705 000028F7 31C0                    xor eax, eax
  6706                                 
  6707                                 .return:
  6708 000028F9 C3                      ret
  6709                                 
  6710                                 .div_overflow:
  6711 000028FA 5A                      pop rdx
  6712                                 .div_zero:
  6713 000028FB B8FFFFFFFF              mov eax, -1
  6714 00002900 EBF5                    jmp .return
  6715                                 [global iemAImpl_idiv_u64_EndProc:function hidden]
  6716                                 iemAImpl_idiv_u64_EndProc:
  6717                                 [size iemAImpl_idiv_u64 iemAImpl_idiv_u64_EndProc - iemAImpl_idiv_u64]
  6718                                 [size iemAImpl_idiv_u64_EndProc 0]
  6719 00002902 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6720                                 
  6721                                 %line 1631+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6722                                 
  6723                                 
  6724                                 
  6725                                 
  6726                                 
  6727                                 
  6728                                 
  6729                                 
  6730                                 [global iemAImpl_bswap_u16]
  6731                                 %line 1639+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6732                                 iemAImpl_bswap_u16:
  6733                                 %line 1641+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6734 00002906 8B07                    mov eax, [rdi]
  6735 00002908 66                      db 66
  6736 00002909 0FC8                    bswap eax
  6737 0000290B 8907                    mov [rdi], eax
  6738 0000290D C3                      ret
  6739                                 [global iemAImpl_bswap_u16_EndProc:function hidden]
  6740                                 %line 1646+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6741                                 iemAImpl_bswap_u16_EndProc:
  6742                                 [size iemAImpl_bswap_u16 iemAImpl_bswap_u16_EndProc - iemAImpl_bswap_u16]
  6743                                 [size iemAImpl_bswap_u16_EndProc 0]
  6744 0000290E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6745                                 %line 1647+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6746                                 
  6747                                 [global iemAImpl_bswap_u32]
  6748                                 %line 1648+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6749                                 iemAImpl_bswap_u32:
  6750                                 %line 1650+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6751 00002912 8B07                    mov eax, [rdi]
  6752 00002914 0FC8                    bswap eax
  6753 00002916 8907                    mov [rdi], eax
  6754 00002918 C3                      ret
  6755                                 [global iemAImpl_bswap_u32_EndProc:function hidden]
  6756                                 %line 1654+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6757                                 iemAImpl_bswap_u32_EndProc:
  6758                                 [size iemAImpl_bswap_u32 iemAImpl_bswap_u32_EndProc - iemAImpl_bswap_u32]
  6759                                 [size iemAImpl_bswap_u32_EndProc 0]
  6760 00002919 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6761                                 %line 1655+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6762                                 
  6763                                 [global iemAImpl_bswap_u64]
  6764                                 %line 1656+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6765                                 iemAImpl_bswap_u64:
  6766                                 %line 1659+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6767 0000291D 488B07                  mov rax, [rdi]
  6768 00002920 480FC8                  bswap rax
  6769 00002923 488907                  mov [rdi], rax
  6770 00002926 C3                      ret
  6771                                 %line 1673+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6772                                 [global iemAImpl_bswap_u64_EndProc:function hidden]
  6773                                 %line 1673+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6774                                 iemAImpl_bswap_u64_EndProc:
  6775                                 [size iemAImpl_bswap_u64 iemAImpl_bswap_u64_EndProc - iemAImpl_bswap_u64]
  6776                                 [size iemAImpl_bswap_u64_EndProc 0]
  6777 00002927 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6778                                 %line 1674+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6779                                 
  6780                                 
  6781                                 
  6782                                 
  6783                                 
  6784                                 
  6785                                 
  6786                                 
  6787                                 
  6788                                 %line 1701+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6789                                 
  6790                                 
  6791                                 
  6792                                 
  6793                                 
  6794                                 [absolute 0]
  6795                                 %line 1706+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6796                                 IEMFPURESULT:
  6797                                 %line 1707+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6798                                  .r80Result resw 5
  6799                                  .FSW resw 1
  6800                                 IEMFPURESULT_size:
  6801                                 %line 1709+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6802                                 [section .text]
  6803                                 %line 1710+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6804                                 
  6805                                 
  6806                                 
  6807                                 
  6808                                 
  6809                                 [absolute 0]
  6810                                 %line 1715+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6811                                 IEMFPURESULTTWO:
  6812                                 %line 1716+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6813                                  .r80Result1 resw 5
  6814                                  .FSW resw 1
  6815                                  .r80Result2 resw 5
  6816                                 IEMFPURESULTTWO_size:
  6817                                 %line 1719+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6818                                 [section .text]
  6819                                 %line 1720+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6820                                 
  6821                                 
  6822                                 
  6823                                 
  6824                                 
  6825                                 
  6826                                 
  6827                                 
  6828                                 
  6829                                 
  6830                                 
  6831                                 
  6832                                 
  6833                                 
  6834                                 [global iemAImpl_fild_i16_to_r80]
  6835                                 %line 1734+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6836                                 iemAImpl_fild_i16_to_r80:
  6837                                 %line 1736+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6838 0000292B 4883EC20                sub rsp, 20
  6839                                 
  6840 0000292F DBE3                    fninit
  6841 00002931 D93424                  fnstenv [rsp]
  6842                                 %line 1739+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6843                                 
  6844                                 
  6845 00002934 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  6846 00002938 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  6847 0000293E 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  6848                                 
  6849                                 
  6850 00002942 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  6851 00002947 4981E300470000          and r11, 0x4700
  6852 0000294E 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  6853 00002954 482500380000            and rax, 0x3800
  6854 0000295A 4C09D8                  or rax, r11
  6855 0000295D 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  6856                                 
  6857 00002962 D92424                  fldenv [rsp]
  6858                                 %line 1740+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6859 00002965 DF02                    fild word [rdx]
  6860                                 
  6861 00002967 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  6862 0000296A DBE2                    fnclex
  6863 0000296C DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  6864                                 
  6865 0000296E DBE3                    fninit
  6866 00002970 4883C420                add rsp, 20
  6867 00002974 C3                      ret
  6868                                 [global iemAImpl_fild_i16_to_r80_EndProc:function hidden]
  6869                                 %line 1749+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6870                                 iemAImpl_fild_i16_to_r80_EndProc:
  6871                                 [size iemAImpl_fild_i16_to_r80 iemAImpl_fild_i16_to_r80_EndProc - iemAImpl_fild_i16_to_r80]
  6872                                 [size iemAImpl_fild_i16_to_r80_EndProc 0]
  6873 00002975 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6874                                 %line 1750+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6875                                 
  6876                                 
  6877                                 
  6878                                 
  6879                                 
  6880                                 
  6881                                 
  6882                                 
  6883                                 
  6884                                 
  6885                                 [global iemAImpl_fist_r80_to_i16]
  6886                                 %line 1760+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6887                                 iemAImpl_fist_r80_to_i16:
  6888                                 %line 1762+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6889 00002979 4883EC20                sub rsp, 20
  6890                                 
  6891 0000297D DBE3                    fninit
  6892 0000297F DB29                    fld tword [rcx]
  6893 00002981 D93424                  fnstenv [rsp]
  6894                                 %line 1766+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6895                                 
  6896                                 
  6897 00002984 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  6898 00002988 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  6899 0000298E 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  6900                                 
  6901                                 
  6902 00002992 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  6903 00002997 4981E300470000          and r11, 0x4700
  6904 0000299E 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  6905 000029A4 482500380000            and rax, 0x3800
  6906 000029AA 4C09D8                  or rax, r11
  6907 000029AD 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  6908                                 
  6909 000029B2 D92424                  fldenv [rsp]
  6910                                 %line 1767+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6911 000029B5 DF1A                    fistp word [rdx]
  6912                                 
  6913 000029B7 DD3E                    fnstsw word [rsi]
  6914                                 
  6915 000029B9 DBE3                    fninit
  6916 000029BB 4883C420                add rsp, 20
  6917 000029BF C3                      ret
  6918                                 [global iemAImpl_fist_r80_to_i16_EndProc:function hidden]
  6919                                 %line 1774+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6920                                 iemAImpl_fist_r80_to_i16_EndProc:
  6921                                 [size iemAImpl_fist_r80_to_i16 iemAImpl_fist_r80_to_i16_EndProc - iemAImpl_fist_r80_to_i16]
  6922                                 [size iemAImpl_fist_r80_to_i16_EndProc 0]
  6923 000029C0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6924                                 %line 1775+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6925                                 
  6926                                 
  6927                                 
  6928                                 
  6929                                 
  6930                                 
  6931                                 
  6932                                 
  6933                                 
  6934                                 
  6935                                 
  6936                                 [global iemAImpl_fistt_r80_to_i16]
  6937                                 %line 1786+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6938                                 iemAImpl_fistt_r80_to_i16:
  6939                                 %line 1788+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6940 000029C4 4883EC20                sub rsp, 20
  6941                                 
  6942 000029C8 DBE3                    fninit
  6943 000029CA DB29                    fld tword [rcx]
  6944 000029CC D93424                  fnstenv [rsp]
  6945                                 %line 1792+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6946                                 
  6947                                 
  6948 000029CF 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  6949 000029D3 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  6950 000029D9 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  6951                                 
  6952                                 
  6953 000029DD 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  6954 000029E2 4981E300470000          and r11, 0x4700
  6955 000029E9 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  6956 000029EF 482500380000            and rax, 0x3800
  6957 000029F5 4C09D8                  or rax, r11
  6958 000029F8 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  6959                                 
  6960 000029FD D92424                  fldenv [rsp]
  6961                                 %line 1793+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6962 00002A00 DB0A                    fisttp dword [rdx]
  6963                                 
  6964 00002A02 DD3E                    fnstsw word [rsi]
  6965                                 
  6966 00002A04 DBE3                    fninit
  6967 00002A06 4883C420                add rsp, 20
  6968 00002A0A C3                      ret
  6969                                 [global iemAImpl_fistt_r80_to_i16_EndProc:function hidden]
  6970                                 %line 1800+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6971                                 iemAImpl_fistt_r80_to_i16_EndProc:
  6972                                 [size iemAImpl_fistt_r80_to_i16 iemAImpl_fistt_r80_to_i16_EndProc - iemAImpl_fistt_r80_to_i16]
  6973                                 [size iemAImpl_fistt_r80_to_i16_EndProc 0]
  6974 00002A0B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  6975                                 %line 1801+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6976                                 
  6977                                 
  6978                                 
  6979                                 
  6980                                 
  6981                                 
  6982                                 
  6983                                 
  6984                                 
  6985                                 
  6986                                 
  6987                                 
  6988                                 %line 1832+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6989                                 
  6990                                 [global iemAImpl_fiadd_r80_by_i16]
  6991                                 %line 1833+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  6992                                 iemAImpl_fiadd_r80_by_i16:
  6993 00002A0F 4883EC20                sub rsp, 20
  6994                                 
  6995 00002A13 DBE3                    fninit
  6996 00002A15 DB2A                    fld tword [rdx]
  6997 00002A17 D93424                  fnstenv [rsp]
  6998                                 
  6999                                 
  7000 00002A1A 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7001 00002A1E 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7002 00002A24 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7003                                 
  7004                                 
  7005 00002A28 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7006 00002A2D 4981E300470000          and r11, 0x4700
  7007 00002A34 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7008 00002A3A 482500380000            and rax, 0x3800
  7009 00002A40 4C09D8                  or rax, r11
  7010 00002A43 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7011                                 
  7012 00002A48 D92424                  fldenv [rsp]
  7013 00002A4B DE01                    fiadd word [rcx]
  7014                                 
  7015 00002A4D DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7016 00002A50 DBE2                    fnclex
  7017 00002A52 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7018                                 
  7019 00002A54 DBE3                    fninit
  7020 00002A56 4883C420                add rsp, 20
  7021 00002A5A C3                      ret
  7022                                 [global iemAImpl_fiadd_r80_by_i16_EndProc:function hidden]
  7023                                 iemAImpl_fiadd_r80_by_i16_EndProc:
  7024                                 [size iemAImpl_fiadd_r80_by_i16 iemAImpl_fiadd_r80_by_i16_EndProc - iemAImpl_fiadd_r80_by_i16]
  7025                                 [size iemAImpl_fiadd_r80_by_i16_EndProc 0]
  7026 00002A5B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7027                                 %line 1834+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7028                                 [global iemAImpl_fimul_r80_by_i16]
  7029                                 %line 1834+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7030                                 iemAImpl_fimul_r80_by_i16:
  7031 00002A5F 4883EC20                sub rsp, 20
  7032                                 
  7033 00002A63 DBE3                    fninit
  7034 00002A65 DB2A                    fld tword [rdx]
  7035 00002A67 D93424                  fnstenv [rsp]
  7036                                 
  7037                                 
  7038 00002A6A 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7039 00002A6E 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7040 00002A74 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7041                                 
  7042                                 
  7043 00002A78 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7044 00002A7D 4981E300470000          and r11, 0x4700
  7045 00002A84 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7046 00002A8A 482500380000            and rax, 0x3800
  7047 00002A90 4C09D8                  or rax, r11
  7048 00002A93 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7049                                 
  7050 00002A98 D92424                  fldenv [rsp]
  7051 00002A9B DE09                    fimul word [rcx]
  7052                                 
  7053 00002A9D DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7054 00002AA0 DBE2                    fnclex
  7055 00002AA2 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7056                                 
  7057 00002AA4 DBE3                    fninit
  7058 00002AA6 4883C420                add rsp, 20
  7059 00002AAA C3                      ret
  7060                                 [global iemAImpl_fimul_r80_by_i16_EndProc:function hidden]
  7061                                 iemAImpl_fimul_r80_by_i16_EndProc:
  7062                                 [size iemAImpl_fimul_r80_by_i16 iemAImpl_fimul_r80_by_i16_EndProc - iemAImpl_fimul_r80_by_i16]
  7063                                 [size iemAImpl_fimul_r80_by_i16_EndProc 0]
  7064 00002AAB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7065                                 %line 1835+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7066                                 [global iemAImpl_fisub_r80_by_i16]
  7067                                 %line 1835+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7068                                 iemAImpl_fisub_r80_by_i16:
  7069 00002AAF 4883EC20                sub rsp, 20
  7070                                 
  7071 00002AB3 DBE3                    fninit
  7072 00002AB5 DB2A                    fld tword [rdx]
  7073 00002AB7 D93424                  fnstenv [rsp]
  7074                                 
  7075                                 
  7076 00002ABA 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7077 00002ABE 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7078 00002AC4 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7079                                 
  7080                                 
  7081 00002AC8 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7082 00002ACD 4981E300470000          and r11, 0x4700
  7083 00002AD4 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7084 00002ADA 482500380000            and rax, 0x3800
  7085 00002AE0 4C09D8                  or rax, r11
  7086 00002AE3 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7087                                 
  7088 00002AE8 D92424                  fldenv [rsp]
  7089 00002AEB DE21                    fisub word [rcx]
  7090                                 
  7091 00002AED DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7092 00002AF0 DBE2                    fnclex
  7093 00002AF2 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7094                                 
  7095 00002AF4 DBE3                    fninit
  7096 00002AF6 4883C420                add rsp, 20
  7097 00002AFA C3                      ret
  7098                                 [global iemAImpl_fisub_r80_by_i16_EndProc:function hidden]
  7099                                 iemAImpl_fisub_r80_by_i16_EndProc:
  7100                                 [size iemAImpl_fisub_r80_by_i16 iemAImpl_fisub_r80_by_i16_EndProc - iemAImpl_fisub_r80_by_i16]
  7101                                 [size iemAImpl_fisub_r80_by_i16_EndProc 0]
  7102 00002AFB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7103                                 %line 1836+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7104                                 [global iemAImpl_fisubr_r80_by_i16]
  7105                                 %line 1836+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7106                                 iemAImpl_fisubr_r80_by_i16:
  7107 00002AFF 4883EC20                sub rsp, 20
  7108                                 
  7109 00002B03 DBE3                    fninit
  7110 00002B05 DB2A                    fld tword [rdx]
  7111 00002B07 D93424                  fnstenv [rsp]
  7112                                 
  7113                                 
  7114 00002B0A 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7115 00002B0E 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7116 00002B14 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7117                                 
  7118                                 
  7119 00002B18 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7120 00002B1D 4981E300470000          and r11, 0x4700
  7121 00002B24 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7122 00002B2A 482500380000            and rax, 0x3800
  7123 00002B30 4C09D8                  or rax, r11
  7124 00002B33 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7125                                 
  7126 00002B38 D92424                  fldenv [rsp]
  7127 00002B3B DE29                    fisubr word [rcx]
  7128                                 
  7129 00002B3D DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7130 00002B40 DBE2                    fnclex
  7131 00002B42 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7132                                 
  7133 00002B44 DBE3                    fninit
  7134 00002B46 4883C420                add rsp, 20
  7135 00002B4A C3                      ret
  7136                                 [global iemAImpl_fisubr_r80_by_i16_EndProc:function hidden]
  7137                                 iemAImpl_fisubr_r80_by_i16_EndProc:
  7138                                 [size iemAImpl_fisubr_r80_by_i16 iemAImpl_fisubr_r80_by_i16_EndProc - iemAImpl_fisubr_r80_by_i16]
  7139                                 [size iemAImpl_fisubr_r80_by_i16_EndProc 0]
  7140 00002B4B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7141                                 %line 1837+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7142                                 [global iemAImpl_fidiv_r80_by_i16]
  7143                                 %line 1837+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7144                                 iemAImpl_fidiv_r80_by_i16:
  7145 00002B4F 4883EC20                sub rsp, 20
  7146                                 
  7147 00002B53 DBE3                    fninit
  7148 00002B55 DB2A                    fld tword [rdx]
  7149 00002B57 D93424                  fnstenv [rsp]
  7150                                 
  7151                                 
  7152 00002B5A 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7153 00002B5E 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7154 00002B64 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7155                                 
  7156                                 
  7157 00002B68 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7158 00002B6D 4981E300470000          and r11, 0x4700
  7159 00002B74 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7160 00002B7A 482500380000            and rax, 0x3800
  7161 00002B80 4C09D8                  or rax, r11
  7162 00002B83 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7163                                 
  7164 00002B88 D92424                  fldenv [rsp]
  7165 00002B8B DE31                    fidiv word [rcx]
  7166                                 
  7167 00002B8D DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7168 00002B90 DBE2                    fnclex
  7169 00002B92 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7170                                 
  7171 00002B94 DBE3                    fninit
  7172 00002B96 4883C420                add rsp, 20
  7173 00002B9A C3                      ret
  7174                                 [global iemAImpl_fidiv_r80_by_i16_EndProc:function hidden]
  7175                                 iemAImpl_fidiv_r80_by_i16_EndProc:
  7176                                 [size iemAImpl_fidiv_r80_by_i16 iemAImpl_fidiv_r80_by_i16_EndProc - iemAImpl_fidiv_r80_by_i16]
  7177                                 [size iemAImpl_fidiv_r80_by_i16_EndProc 0]
  7178 00002B9B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7179                                 %line 1838+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7180                                 [global iemAImpl_fidivr_r80_by_i16]
  7181                                 %line 1838+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7182                                 iemAImpl_fidivr_r80_by_i16:
  7183 00002B9F 4883EC20                sub rsp, 20
  7184                                 
  7185 00002BA3 DBE3                    fninit
  7186 00002BA5 DB2A                    fld tword [rdx]
  7187 00002BA7 D93424                  fnstenv [rsp]
  7188                                 
  7189                                 
  7190 00002BAA 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7191 00002BAE 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7192 00002BB4 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7193                                 
  7194                                 
  7195 00002BB8 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7196 00002BBD 4981E300470000          and r11, 0x4700
  7197 00002BC4 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7198 00002BCA 482500380000            and rax, 0x3800
  7199 00002BD0 4C09D8                  or rax, r11
  7200 00002BD3 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7201                                 
  7202 00002BD8 D92424                  fldenv [rsp]
  7203 00002BDB DE39                    fidivr word [rcx]
  7204                                 
  7205 00002BDD DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7206 00002BE0 DBE2                    fnclex
  7207 00002BE2 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7208                                 
  7209 00002BE4 DBE3                    fninit
  7210 00002BE6 4883C420                add rsp, 20
  7211 00002BEA C3                      ret
  7212                                 [global iemAImpl_fidivr_r80_by_i16_EndProc:function hidden]
  7213                                 iemAImpl_fidivr_r80_by_i16_EndProc:
  7214                                 [size iemAImpl_fidivr_r80_by_i16 iemAImpl_fidivr_r80_by_i16_EndProc - iemAImpl_fidivr_r80_by_i16]
  7215                                 [size iemAImpl_fidivr_r80_by_i16_EndProc 0]
  7216 00002BEB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7217                                 %line 1839+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7218                                 
  7219                                 
  7220                                 
  7221                                 
  7222                                 
  7223                                 
  7224                                 
  7225                                 
  7226                                 
  7227                                 
  7228                                 
  7229                                 
  7230                                 
  7231                                 %line 1869+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7232                                 
  7233                                 [global iemAImpl_ficom_r80_by_i16]
  7234                                 %line 1870+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7235                                 iemAImpl_ficom_r80_by_i16:
  7236 00002BEF 4883EC20                sub rsp, 20
  7237                                 
  7238 00002BF3 DBE3                    fninit
  7239 00002BF5 DB2A                    fld tword [rdx]
  7240 00002BF7 D93424                  fnstenv [rsp]
  7241                                 
  7242                                 
  7243 00002BFA 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7244 00002BFE 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7245 00002C04 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7246                                 
  7247                                 
  7248 00002C08 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7249 00002C0D 4981E300470000          and r11, 0x4700
  7250 00002C14 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7251 00002C1A 482500380000            and rax, 0x3800
  7252 00002C20 4C09D8                  or rax, r11
  7253 00002C23 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7254                                 
  7255 00002C28 D92424                  fldenv [rsp]
  7256 00002C2B DE11                    ficom word [rcx]
  7257                                 
  7258 00002C2D DD3E                    fnstsw word [rsi]
  7259                                 
  7260 00002C2F DBE3                    fninit
  7261 00002C31 4883C420                add rsp, 20
  7262 00002C35 C3                      ret
  7263                                 [global iemAImpl_ficom_r80_by_i16_EndProc:function hidden]
  7264                                 iemAImpl_ficom_r80_by_i16_EndProc:
  7265                                 [size iemAImpl_ficom_r80_by_i16 iemAImpl_ficom_r80_by_i16_EndProc - iemAImpl_ficom_r80_by_i16]
  7266                                 [size iemAImpl_ficom_r80_by_i16_EndProc 0]
  7267 00002C36 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7268                                 %line 1871+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7269                                 
  7270                                 
  7271                                 
  7272                                 
  7273                                 
  7274                                 
  7275                                 
  7276                                 
  7277                                 
  7278                                 
  7279                                 
  7280                                 
  7281                                 
  7282                                 
  7283                                 
  7284                                 [global iemAImpl_fild_i32_to_r80]
  7285                                 %line 1886+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7286                                 iemAImpl_fild_i32_to_r80:
  7287                                 %line 1888+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7288 00002C3A 4883EC20                sub rsp, 20
  7289                                 
  7290 00002C3E DBE3                    fninit
  7291 00002C40 D93424                  fnstenv [rsp]
  7292                                 %line 1891+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7293                                 
  7294                                 
  7295 00002C43 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7296 00002C47 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7297 00002C4D 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7298                                 
  7299                                 
  7300 00002C51 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7301 00002C56 4981E300470000          and r11, 0x4700
  7302 00002C5D 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7303 00002C63 482500380000            and rax, 0x3800
  7304 00002C69 4C09D8                  or rax, r11
  7305 00002C6C 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7306                                 
  7307 00002C71 D92424                  fldenv [rsp]
  7308                                 %line 1892+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7309 00002C74 DB02                    fild dword [rdx]
  7310                                 
  7311 00002C76 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7312 00002C79 DBE2                    fnclex
  7313 00002C7B DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7314                                 
  7315 00002C7D DBE3                    fninit
  7316 00002C7F 4883C420                add rsp, 20
  7317 00002C83 C3                      ret
  7318                                 [global iemAImpl_fild_i32_to_r80_EndProc:function hidden]
  7319                                 %line 1901+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7320                                 iemAImpl_fild_i32_to_r80_EndProc:
  7321                                 [size iemAImpl_fild_i32_to_r80 iemAImpl_fild_i32_to_r80_EndProc - iemAImpl_fild_i32_to_r80]
  7322                                 [size iemAImpl_fild_i32_to_r80_EndProc 0]
  7323 00002C84 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7324                                 %line 1902+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7325                                 
  7326                                 
  7327                                 
  7328                                 
  7329                                 
  7330                                 
  7331                                 
  7332                                 
  7333                                 
  7334                                 
  7335                                 [global iemAImpl_fist_r80_to_i32]
  7336                                 %line 1912+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7337                                 iemAImpl_fist_r80_to_i32:
  7338                                 %line 1914+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7339 00002C88 4883EC20                sub rsp, 20
  7340                                 
  7341 00002C8C DBE3                    fninit
  7342 00002C8E DB29                    fld tword [rcx]
  7343 00002C90 D93424                  fnstenv [rsp]
  7344                                 %line 1918+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7345                                 
  7346                                 
  7347 00002C93 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7348 00002C97 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7349 00002C9D 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7350                                 
  7351                                 
  7352 00002CA1 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7353 00002CA6 4981E300470000          and r11, 0x4700
  7354 00002CAD 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7355 00002CB3 482500380000            and rax, 0x3800
  7356 00002CB9 4C09D8                  or rax, r11
  7357 00002CBC 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7358                                 
  7359 00002CC1 D92424                  fldenv [rsp]
  7360                                 %line 1919+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7361 00002CC4 DB1A                    fistp dword [rdx]
  7362                                 
  7363 00002CC6 DD3E                    fnstsw word [rsi]
  7364                                 
  7365 00002CC8 DBE3                    fninit
  7366 00002CCA 4883C420                add rsp, 20
  7367 00002CCE C3                      ret
  7368                                 [global iemAImpl_fist_r80_to_i32_EndProc:function hidden]
  7369                                 %line 1926+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7370                                 iemAImpl_fist_r80_to_i32_EndProc:
  7371                                 [size iemAImpl_fist_r80_to_i32 iemAImpl_fist_r80_to_i32_EndProc - iemAImpl_fist_r80_to_i32]
  7372                                 [size iemAImpl_fist_r80_to_i32_EndProc 0]
  7373 00002CCF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7374                                 %line 1927+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7375                                 
  7376                                 
  7377                                 
  7378                                 
  7379                                 
  7380                                 
  7381                                 
  7382                                 
  7383                                 
  7384                                 
  7385                                 
  7386                                 [global iemAImpl_fistt_r80_to_i32]
  7387                                 %line 1938+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7388                                 iemAImpl_fistt_r80_to_i32:
  7389                                 %line 1940+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7390 00002CD3 4883EC20                sub rsp, 20
  7391                                 
  7392 00002CD7 DBE3                    fninit
  7393 00002CD9 DB29                    fld tword [rcx]
  7394 00002CDB D93424                  fnstenv [rsp]
  7395                                 %line 1944+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7396                                 
  7397                                 
  7398 00002CDE 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7399 00002CE2 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7400 00002CE8 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7401                                 
  7402                                 
  7403 00002CEC 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7404 00002CF1 4981E300470000          and r11, 0x4700
  7405 00002CF8 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7406 00002CFE 482500380000            and rax, 0x3800
  7407 00002D04 4C09D8                  or rax, r11
  7408 00002D07 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7409                                 
  7410 00002D0C D92424                  fldenv [rsp]
  7411                                 %line 1945+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7412 00002D0F DB0A                    fisttp dword [rdx]
  7413                                 
  7414 00002D11 DD3E                    fnstsw word [rsi]
  7415                                 
  7416 00002D13 DBE3                    fninit
  7417 00002D15 4883C420                add rsp, 20
  7418 00002D19 C3                      ret
  7419                                 [global iemAImpl_fistt_r80_to_i32_EndProc:function hidden]
  7420                                 %line 1952+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7421                                 iemAImpl_fistt_r80_to_i32_EndProc:
  7422                                 [size iemAImpl_fistt_r80_to_i32 iemAImpl_fistt_r80_to_i32_EndProc - iemAImpl_fistt_r80_to_i32]
  7423                                 [size iemAImpl_fistt_r80_to_i32_EndProc 0]
  7424 00002D1A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7425                                 %line 1953+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7426                                 
  7427                                 
  7428                                 
  7429                                 
  7430                                 
  7431                                 
  7432                                 
  7433                                 
  7434                                 
  7435                                 
  7436                                 
  7437                                 
  7438                                 %line 1984+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7439                                 
  7440                                 [global iemAImpl_fiadd_r80_by_i32]
  7441                                 %line 1985+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7442                                 iemAImpl_fiadd_r80_by_i32:
  7443 00002D1E 4883EC20                sub rsp, 20
  7444                                 
  7445 00002D22 DBE3                    fninit
  7446 00002D24 DB2A                    fld tword [rdx]
  7447 00002D26 D93424                  fnstenv [rsp]
  7448                                 
  7449                                 
  7450 00002D29 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7451 00002D2D 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7452 00002D33 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7453                                 
  7454                                 
  7455 00002D37 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7456 00002D3C 4981E300470000          and r11, 0x4700
  7457 00002D43 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7458 00002D49 482500380000            and rax, 0x3800
  7459 00002D4F 4C09D8                  or rax, r11
  7460 00002D52 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7461                                 
  7462 00002D57 D92424                  fldenv [rsp]
  7463 00002D5A DA01                    fiadd dword [rcx]
  7464                                 
  7465 00002D5C DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7466 00002D5F DBE2                    fnclex
  7467 00002D61 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7468                                 
  7469 00002D63 DBE3                    fninit
  7470 00002D65 4883C420                add rsp, 20
  7471 00002D69 C3                      ret
  7472                                 [global iemAImpl_fiadd_r80_by_i32_EndProc:function hidden]
  7473                                 iemAImpl_fiadd_r80_by_i32_EndProc:
  7474                                 [size iemAImpl_fiadd_r80_by_i32 iemAImpl_fiadd_r80_by_i32_EndProc - iemAImpl_fiadd_r80_by_i32]
  7475                                 [size iemAImpl_fiadd_r80_by_i32_EndProc 0]
  7476 00002D6A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7477                                 %line 1986+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7478                                 [global iemAImpl_fimul_r80_by_i32]
  7479                                 %line 1986+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7480                                 iemAImpl_fimul_r80_by_i32:
  7481 00002D6E 4883EC20                sub rsp, 20
  7482                                 
  7483 00002D72 DBE3                    fninit
  7484 00002D74 DB2A                    fld tword [rdx]
  7485 00002D76 D93424                  fnstenv [rsp]
  7486                                 
  7487                                 
  7488 00002D79 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7489 00002D7D 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7490 00002D83 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7491                                 
  7492                                 
  7493 00002D87 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7494 00002D8C 4981E300470000          and r11, 0x4700
  7495 00002D93 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7496 00002D99 482500380000            and rax, 0x3800
  7497 00002D9F 4C09D8                  or rax, r11
  7498 00002DA2 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7499                                 
  7500 00002DA7 D92424                  fldenv [rsp]
  7501 00002DAA DA09                    fimul dword [rcx]
  7502                                 
  7503 00002DAC DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7504 00002DAF DBE2                    fnclex
  7505 00002DB1 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7506                                 
  7507 00002DB3 DBE3                    fninit
  7508 00002DB5 4883C420                add rsp, 20
  7509 00002DB9 C3                      ret
  7510                                 [global iemAImpl_fimul_r80_by_i32_EndProc:function hidden]
  7511                                 iemAImpl_fimul_r80_by_i32_EndProc:
  7512                                 [size iemAImpl_fimul_r80_by_i32 iemAImpl_fimul_r80_by_i32_EndProc - iemAImpl_fimul_r80_by_i32]
  7513                                 [size iemAImpl_fimul_r80_by_i32_EndProc 0]
  7514 00002DBA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7515                                 %line 1987+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7516                                 [global iemAImpl_fisub_r80_by_i32]
  7517                                 %line 1987+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7518                                 iemAImpl_fisub_r80_by_i32:
  7519 00002DBE 4883EC20                sub rsp, 20
  7520                                 
  7521 00002DC2 DBE3                    fninit
  7522 00002DC4 DB2A                    fld tword [rdx]
  7523 00002DC6 D93424                  fnstenv [rsp]
  7524                                 
  7525                                 
  7526 00002DC9 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7527 00002DCD 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7528 00002DD3 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7529                                 
  7530                                 
  7531 00002DD7 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7532 00002DDC 4981E300470000          and r11, 0x4700
  7533 00002DE3 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7534 00002DE9 482500380000            and rax, 0x3800
  7535 00002DEF 4C09D8                  or rax, r11
  7536 00002DF2 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7537                                 
  7538 00002DF7 D92424                  fldenv [rsp]
  7539 00002DFA DA21                    fisub dword [rcx]
  7540                                 
  7541 00002DFC DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7542 00002DFF DBE2                    fnclex
  7543 00002E01 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7544                                 
  7545 00002E03 DBE3                    fninit
  7546 00002E05 4883C420                add rsp, 20
  7547 00002E09 C3                      ret
  7548                                 [global iemAImpl_fisub_r80_by_i32_EndProc:function hidden]
  7549                                 iemAImpl_fisub_r80_by_i32_EndProc:
  7550                                 [size iemAImpl_fisub_r80_by_i32 iemAImpl_fisub_r80_by_i32_EndProc - iemAImpl_fisub_r80_by_i32]
  7551                                 [size iemAImpl_fisub_r80_by_i32_EndProc 0]
  7552 00002E0A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7553                                 %line 1988+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7554                                 [global iemAImpl_fisubr_r80_by_i32]
  7555                                 %line 1988+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7556                                 iemAImpl_fisubr_r80_by_i32:
  7557 00002E0E 4883EC20                sub rsp, 20
  7558                                 
  7559 00002E12 DBE3                    fninit
  7560 00002E14 DB2A                    fld tword [rdx]
  7561 00002E16 D93424                  fnstenv [rsp]
  7562                                 
  7563                                 
  7564 00002E19 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7565 00002E1D 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7566 00002E23 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7567                                 
  7568                                 
  7569 00002E27 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7570 00002E2C 4981E300470000          and r11, 0x4700
  7571 00002E33 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7572 00002E39 482500380000            and rax, 0x3800
  7573 00002E3F 4C09D8                  or rax, r11
  7574 00002E42 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7575                                 
  7576 00002E47 D92424                  fldenv [rsp]
  7577 00002E4A DA29                    fisubr dword [rcx]
  7578                                 
  7579 00002E4C DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7580 00002E4F DBE2                    fnclex
  7581 00002E51 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7582                                 
  7583 00002E53 DBE3                    fninit
  7584 00002E55 4883C420                add rsp, 20
  7585 00002E59 C3                      ret
  7586                                 [global iemAImpl_fisubr_r80_by_i32_EndProc:function hidden]
  7587                                 iemAImpl_fisubr_r80_by_i32_EndProc:
  7588                                 [size iemAImpl_fisubr_r80_by_i32 iemAImpl_fisubr_r80_by_i32_EndProc - iemAImpl_fisubr_r80_by_i32]
  7589                                 [size iemAImpl_fisubr_r80_by_i32_EndProc 0]
  7590 00002E5A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7591                                 %line 1989+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7592                                 [global iemAImpl_fidiv_r80_by_i32]
  7593                                 %line 1989+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7594                                 iemAImpl_fidiv_r80_by_i32:
  7595 00002E5E 4883EC20                sub rsp, 20
  7596                                 
  7597 00002E62 DBE3                    fninit
  7598 00002E64 DB2A                    fld tword [rdx]
  7599 00002E66 D93424                  fnstenv [rsp]
  7600                                 
  7601                                 
  7602 00002E69 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7603 00002E6D 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7604 00002E73 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7605                                 
  7606                                 
  7607 00002E77 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7608 00002E7C 4981E300470000          and r11, 0x4700
  7609 00002E83 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7610 00002E89 482500380000            and rax, 0x3800
  7611 00002E8F 4C09D8                  or rax, r11
  7612 00002E92 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7613                                 
  7614 00002E97 D92424                  fldenv [rsp]
  7615 00002E9A DA31                    fidiv dword [rcx]
  7616                                 
  7617 00002E9C DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7618 00002E9F DBE2                    fnclex
  7619 00002EA1 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7620                                 
  7621 00002EA3 DBE3                    fninit
  7622 00002EA5 4883C420                add rsp, 20
  7623 00002EA9 C3                      ret
  7624                                 [global iemAImpl_fidiv_r80_by_i32_EndProc:function hidden]
  7625                                 iemAImpl_fidiv_r80_by_i32_EndProc:
  7626                                 [size iemAImpl_fidiv_r80_by_i32 iemAImpl_fidiv_r80_by_i32_EndProc - iemAImpl_fidiv_r80_by_i32]
  7627                                 [size iemAImpl_fidiv_r80_by_i32_EndProc 0]
  7628 00002EAA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7629                                 %line 1990+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7630                                 [global iemAImpl_fidivr_r80_by_i32]
  7631                                 %line 1990+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7632                                 iemAImpl_fidivr_r80_by_i32:
  7633 00002EAE 4883EC20                sub rsp, 20
  7634                                 
  7635 00002EB2 DBE3                    fninit
  7636 00002EB4 DB2A                    fld tword [rdx]
  7637 00002EB6 D93424                  fnstenv [rsp]
  7638                                 
  7639                                 
  7640 00002EB9 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7641 00002EBD 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7642 00002EC3 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7643                                 
  7644                                 
  7645 00002EC7 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7646 00002ECC 4981E300470000          and r11, 0x4700
  7647 00002ED3 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7648 00002ED9 482500380000            and rax, 0x3800
  7649 00002EDF 4C09D8                  or rax, r11
  7650 00002EE2 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7651                                 
  7652 00002EE7 D92424                  fldenv [rsp]
  7653 00002EEA DA39                    fidivr dword [rcx]
  7654                                 
  7655 00002EEC DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7656 00002EEF DBE2                    fnclex
  7657 00002EF1 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7658                                 
  7659 00002EF3 DBE3                    fninit
  7660 00002EF5 4883C420                add rsp, 20
  7661 00002EF9 C3                      ret
  7662                                 [global iemAImpl_fidivr_r80_by_i32_EndProc:function hidden]
  7663                                 iemAImpl_fidivr_r80_by_i32_EndProc:
  7664                                 [size iemAImpl_fidivr_r80_by_i32 iemAImpl_fidivr_r80_by_i32_EndProc - iemAImpl_fidivr_r80_by_i32]
  7665                                 [size iemAImpl_fidivr_r80_by_i32_EndProc 0]
  7666 00002EFA CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7667                                 %line 1991+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7668                                 
  7669                                 
  7670                                 
  7671                                 
  7672                                 
  7673                                 
  7674                                 
  7675                                 
  7676                                 
  7677                                 
  7678                                 
  7679                                 
  7680                                 
  7681                                 %line 2021+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7682                                 
  7683                                 [global iemAImpl_ficom_r80_by_i32]
  7684                                 %line 2022+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7685                                 iemAImpl_ficom_r80_by_i32:
  7686 00002EFE 4883EC20                sub rsp, 20
  7687                                 
  7688 00002F02 DBE3                    fninit
  7689 00002F04 DB2A                    fld tword [rdx]
  7690 00002F06 D93424                  fnstenv [rsp]
  7691                                 
  7692                                 
  7693 00002F09 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7694 00002F0D 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7695 00002F13 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7696                                 
  7697                                 
  7698 00002F17 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7699 00002F1C 4981E300470000          and r11, 0x4700
  7700 00002F23 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7701 00002F29 482500380000            and rax, 0x3800
  7702 00002F2F 4C09D8                  or rax, r11
  7703 00002F32 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7704                                 
  7705 00002F37 D92424                  fldenv [rsp]
  7706 00002F3A DA11                    ficom dword [rcx]
  7707                                 
  7708 00002F3C DD3E                    fnstsw word [rsi]
  7709                                 
  7710 00002F3E DBE3                    fninit
  7711 00002F40 4883C420                add rsp, 20
  7712 00002F44 C3                      ret
  7713                                 [global iemAImpl_ficom_r80_by_i32_EndProc:function hidden]
  7714                                 iemAImpl_ficom_r80_by_i32_EndProc:
  7715                                 [size iemAImpl_ficom_r80_by_i32 iemAImpl_ficom_r80_by_i32_EndProc - iemAImpl_ficom_r80_by_i32]
  7716                                 [size iemAImpl_ficom_r80_by_i32_EndProc 0]
  7717 00002F45 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7718                                 %line 2023+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7719                                 
  7720                                 
  7721                                 
  7722                                 
  7723                                 
  7724                                 
  7725                                 
  7726                                 
  7727                                 
  7728                                 
  7729                                 
  7730                                 
  7731                                 
  7732                                 
  7733                                 
  7734                                 [global iemAImpl_fild_i64_to_r80]
  7735                                 %line 2038+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7736                                 iemAImpl_fild_i64_to_r80:
  7737                                 %line 2040+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7738 00002F49 4883EC20                sub rsp, 20
  7739                                 
  7740 00002F4D DBE3                    fninit
  7741 00002F4F D93424                  fnstenv [rsp]
  7742                                 %line 2043+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7743                                 
  7744                                 
  7745 00002F52 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7746 00002F56 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7747 00002F5C 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7748                                 
  7749                                 
  7750 00002F60 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7751 00002F65 4981E300470000          and r11, 0x4700
  7752 00002F6C 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7753 00002F72 482500380000            and rax, 0x3800
  7754 00002F78 4C09D8                  or rax, r11
  7755 00002F7B 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7756                                 
  7757 00002F80 D92424                  fldenv [rsp]
  7758                                 %line 2044+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7759 00002F83 DF2A                    fild qword [rdx]
  7760                                 
  7761 00002F85 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7762 00002F88 DBE2                    fnclex
  7763 00002F8A DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7764                                 
  7765 00002F8C DBE3                    fninit
  7766 00002F8E 4883C420                add rsp, 20
  7767 00002F92 C3                      ret
  7768                                 [global iemAImpl_fild_i64_to_r80_EndProc:function hidden]
  7769                                 %line 2053+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7770                                 iemAImpl_fild_i64_to_r80_EndProc:
  7771                                 [size iemAImpl_fild_i64_to_r80 iemAImpl_fild_i64_to_r80_EndProc - iemAImpl_fild_i64_to_r80]
  7772                                 [size iemAImpl_fild_i64_to_r80_EndProc 0]
  7773 00002F93 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7774                                 %line 2054+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7775                                 
  7776                                 
  7777                                 
  7778                                 
  7779                                 
  7780                                 
  7781                                 
  7782                                 
  7783                                 
  7784                                 
  7785                                 [global iemAImpl_fist_r80_to_i64]
  7786                                 %line 2064+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7787                                 iemAImpl_fist_r80_to_i64:
  7788                                 %line 2066+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7789 00002F97 4883EC20                sub rsp, 20
  7790                                 
  7791 00002F9B DBE3                    fninit
  7792 00002F9D DB29                    fld tword [rcx]
  7793 00002F9F D93424                  fnstenv [rsp]
  7794                                 %line 2070+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7795                                 
  7796                                 
  7797 00002FA2 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7798 00002FA6 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7799 00002FAC 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7800                                 
  7801                                 
  7802 00002FB0 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7803 00002FB5 4981E300470000          and r11, 0x4700
  7804 00002FBC 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7805 00002FC2 482500380000            and rax, 0x3800
  7806 00002FC8 4C09D8                  or rax, r11
  7807 00002FCB 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7808                                 
  7809 00002FD0 D92424                  fldenv [rsp]
  7810                                 %line 2071+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7811 00002FD3 DF3A                    fistp qword [rdx]
  7812                                 
  7813 00002FD5 DD3E                    fnstsw word [rsi]
  7814                                 
  7815 00002FD7 DBE3                    fninit
  7816 00002FD9 4883C420                add rsp, 20
  7817 00002FDD C3                      ret
  7818                                 [global iemAImpl_fist_r80_to_i64_EndProc:function hidden]
  7819                                 %line 2078+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7820                                 iemAImpl_fist_r80_to_i64_EndProc:
  7821                                 [size iemAImpl_fist_r80_to_i64 iemAImpl_fist_r80_to_i64_EndProc - iemAImpl_fist_r80_to_i64]
  7822                                 [size iemAImpl_fist_r80_to_i64_EndProc 0]
  7823 00002FDE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7824                                 %line 2079+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7825                                 
  7826                                 
  7827                                 
  7828                                 
  7829                                 
  7830                                 
  7831                                 
  7832                                 
  7833                                 
  7834                                 
  7835                                 
  7836                                 [global iemAImpl_fistt_r80_to_i64]
  7837                                 %line 2090+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7838                                 iemAImpl_fistt_r80_to_i64:
  7839                                 %line 2092+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7840 00002FE2 4883EC20                sub rsp, 20
  7841                                 
  7842 00002FE6 DBE3                    fninit
  7843 00002FE8 DB29                    fld tword [rcx]
  7844 00002FEA D93424                  fnstenv [rsp]
  7845                                 %line 2096+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7846                                 
  7847                                 
  7848 00002FED 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7849 00002FF1 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7850 00002FF7 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7851                                 
  7852                                 
  7853 00002FFB 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7854 00003000 4981E300470000          and r11, 0x4700
  7855 00003007 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7856 0000300D 482500380000            and rax, 0x3800
  7857 00003013 4C09D8                  or rax, r11
  7858 00003016 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7859                                 
  7860 0000301B D92424                  fldenv [rsp]
  7861                                 %line 2097+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7862 0000301E DD0A                    fisttp qword [rdx]
  7863                                 
  7864 00003020 DD3E                    fnstsw word [rsi]
  7865                                 
  7866 00003022 DBE3                    fninit
  7867 00003024 4883C420                add rsp, 20
  7868 00003028 C3                      ret
  7869                                 [global iemAImpl_fistt_r80_to_i64_EndProc:function hidden]
  7870                                 %line 2104+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7871                                 iemAImpl_fistt_r80_to_i64_EndProc:
  7872                                 [size iemAImpl_fistt_r80_to_i64 iemAImpl_fistt_r80_to_i64_EndProc - iemAImpl_fistt_r80_to_i64]
  7873                                 [size iemAImpl_fistt_r80_to_i64_EndProc 0]
  7874 00003029 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7875                                 %line 2105+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7876                                 
  7877                                 
  7878                                 
  7879                                 
  7880                                 
  7881                                 
  7882                                 
  7883                                 
  7884                                 
  7885                                 
  7886                                 
  7887                                 
  7888                                 
  7889                                 
  7890                                 [global iemAImpl_fld_r32_to_r80]
  7891                                 %line 2119+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7892                                 iemAImpl_fld_r32_to_r80:
  7893                                 %line 2121+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7894 0000302D 4883EC20                sub rsp, 20
  7895                                 
  7896 00003031 DBE3                    fninit
  7897 00003033 D93424                  fnstenv [rsp]
  7898                                 %line 2124+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7899                                 
  7900                                 
  7901 00003036 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7902 0000303A 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7903 00003040 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7904                                 
  7905                                 
  7906 00003044 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7907 00003049 4981E300470000          and r11, 0x4700
  7908 00003050 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7909 00003056 482500380000            and rax, 0x3800
  7910 0000305C 4C09D8                  or rax, r11
  7911 0000305F 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7912                                 
  7913 00003064 D92424                  fldenv [rsp]
  7914                                 %line 2125+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7915 00003067 D902                    fld dword [rdx]
  7916                                 
  7917 00003069 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  7918 0000306C DBE2                    fnclex
  7919 0000306E DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  7920                                 
  7921 00003070 DBE3                    fninit
  7922 00003072 4883C420                add rsp, 20
  7923 00003076 C3                      ret
  7924                                 [global iemAImpl_fld_r32_to_r80_EndProc:function hidden]
  7925                                 %line 2134+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7926                                 iemAImpl_fld_r32_to_r80_EndProc:
  7927                                 [size iemAImpl_fld_r32_to_r80 iemAImpl_fld_r32_to_r80_EndProc - iemAImpl_fld_r32_to_r80]
  7928                                 [size iemAImpl_fld_r32_to_r80_EndProc 0]
  7929 00003077 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7930                                 %line 2135+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7931                                 
  7932                                 
  7933                                 
  7934                                 
  7935                                 
  7936                                 
  7937                                 
  7938                                 
  7939                                 
  7940                                 
  7941                                 [global iemAImpl_fst_r80_to_r32]
  7942                                 %line 2145+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7943                                 iemAImpl_fst_r80_to_r32:
  7944                                 %line 2147+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7945 0000307B 4883EC20                sub rsp, 20
  7946                                 
  7947 0000307F DBE3                    fninit
  7948 00003081 DB29                    fld tword [rcx]
  7949 00003083 D93424                  fnstenv [rsp]
  7950                                 %line 2151+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7951                                 
  7952                                 
  7953 00003086 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  7954 0000308A 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  7955 00003090 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  7956                                 
  7957                                 
  7958 00003094 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  7959 00003099 4981E300470000          and r11, 0x4700
  7960 000030A0 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  7961 000030A6 482500380000            and rax, 0x3800
  7962 000030AC 4C09D8                  or rax, r11
  7963 000030AF 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  7964                                 
  7965 000030B4 D92424                  fldenv [rsp]
  7966                                 %line 2152+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7967 000030B7 D912                    fst dword [rdx]
  7968                                 
  7969 000030B9 DD3E                    fnstsw word [rsi]
  7970                                 
  7971 000030BB DBE3                    fninit
  7972 000030BD 4883C420                add rsp, 20
  7973 000030C1 C3                      ret
  7974                                 [global iemAImpl_fst_r80_to_r32_EndProc:function hidden]
  7975                                 %line 2159+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7976                                 iemAImpl_fst_r80_to_r32_EndProc:
  7977                                 [size iemAImpl_fst_r80_to_r32 iemAImpl_fst_r80_to_r32_EndProc - iemAImpl_fst_r80_to_r32]
  7978                                 [size iemAImpl_fst_r80_to_r32_EndProc 0]
  7979 000030C2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  7980                                 %line 2160+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7981                                 
  7982                                 
  7983                                 
  7984                                 
  7985                                 
  7986                                 
  7987                                 
  7988                                 
  7989                                 
  7990                                 
  7991                                 
  7992                                 
  7993                                 %line 2191+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7994                                 
  7995                                 [global iemAImpl_fadd_r80_by_r32]
  7996                                 %line 2192+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  7997                                 iemAImpl_fadd_r80_by_r32:
  7998 000030C6 4883EC20                sub rsp, 20
  7999                                 
  8000 000030CA DBE3                    fninit
  8001 000030CC DB2A                    fld tword [rdx]
  8002 000030CE D93424                  fnstenv [rsp]
  8003                                 
  8004                                 
  8005 000030D1 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8006 000030D5 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8007 000030DB 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8008                                 
  8009                                 
  8010 000030DF 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8011 000030E4 4981E300470000          and r11, 0x4700
  8012 000030EB 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8013 000030F1 482500380000            and rax, 0x3800
  8014 000030F7 4C09D8                  or rax, r11
  8015 000030FA 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8016                                 
  8017 000030FF D92424                  fldenv [rsp]
  8018 00003102 D801                    fadd dword [rcx]
  8019                                 
  8020 00003104 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8021 00003107 DBE2                    fnclex
  8022 00003109 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8023                                 
  8024 0000310B DBE3                    fninit
  8025 0000310D 4883C420                add rsp, 20
  8026 00003111 C3                      ret
  8027                                 [global iemAImpl_fadd_r80_by_r32_EndProc:function hidden]
  8028                                 iemAImpl_fadd_r80_by_r32_EndProc:
  8029                                 [size iemAImpl_fadd_r80_by_r32 iemAImpl_fadd_r80_by_r32_EndProc - iemAImpl_fadd_r80_by_r32]
  8030                                 [size iemAImpl_fadd_r80_by_r32_EndProc 0]
  8031 00003112 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8032                                 %line 2193+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8033                                 [global iemAImpl_fmul_r80_by_r32]
  8034                                 %line 2193+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8035                                 iemAImpl_fmul_r80_by_r32:
  8036 00003116 4883EC20                sub rsp, 20
  8037                                 
  8038 0000311A DBE3                    fninit
  8039 0000311C DB2A                    fld tword [rdx]
  8040 0000311E D93424                  fnstenv [rsp]
  8041                                 
  8042                                 
  8043 00003121 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8044 00003125 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8045 0000312B 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8046                                 
  8047                                 
  8048 0000312F 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8049 00003134 4981E300470000          and r11, 0x4700
  8050 0000313B 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8051 00003141 482500380000            and rax, 0x3800
  8052 00003147 4C09D8                  or rax, r11
  8053 0000314A 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8054                                 
  8055 0000314F D92424                  fldenv [rsp]
  8056 00003152 D809                    fmul dword [rcx]
  8057                                 
  8058 00003154 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8059 00003157 DBE2                    fnclex
  8060 00003159 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8061                                 
  8062 0000315B DBE3                    fninit
  8063 0000315D 4883C420                add rsp, 20
  8064 00003161 C3                      ret
  8065                                 [global iemAImpl_fmul_r80_by_r32_EndProc:function hidden]
  8066                                 iemAImpl_fmul_r80_by_r32_EndProc:
  8067                                 [size iemAImpl_fmul_r80_by_r32 iemAImpl_fmul_r80_by_r32_EndProc - iemAImpl_fmul_r80_by_r32]
  8068                                 [size iemAImpl_fmul_r80_by_r32_EndProc 0]
  8069 00003162 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8070                                 %line 2194+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8071                                 [global iemAImpl_fsub_r80_by_r32]
  8072                                 %line 2194+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8073                                 iemAImpl_fsub_r80_by_r32:
  8074 00003166 4883EC20                sub rsp, 20
  8075                                 
  8076 0000316A DBE3                    fninit
  8077 0000316C DB2A                    fld tword [rdx]
  8078 0000316E D93424                  fnstenv [rsp]
  8079                                 
  8080                                 
  8081 00003171 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8082 00003175 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8083 0000317B 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8084                                 
  8085                                 
  8086 0000317F 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8087 00003184 4981E300470000          and r11, 0x4700
  8088 0000318B 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8089 00003191 482500380000            and rax, 0x3800
  8090 00003197 4C09D8                  or rax, r11
  8091 0000319A 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8092                                 
  8093 0000319F D92424                  fldenv [rsp]
  8094 000031A2 D821                    fsub dword [rcx]
  8095                                 
  8096 000031A4 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8097 000031A7 DBE2                    fnclex
  8098 000031A9 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8099                                 
  8100 000031AB DBE3                    fninit
  8101 000031AD 4883C420                add rsp, 20
  8102 000031B1 C3                      ret
  8103                                 [global iemAImpl_fsub_r80_by_r32_EndProc:function hidden]
  8104                                 iemAImpl_fsub_r80_by_r32_EndProc:
  8105                                 [size iemAImpl_fsub_r80_by_r32 iemAImpl_fsub_r80_by_r32_EndProc - iemAImpl_fsub_r80_by_r32]
  8106                                 [size iemAImpl_fsub_r80_by_r32_EndProc 0]
  8107 000031B2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8108                                 %line 2195+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8109                                 [global iemAImpl_fsubr_r80_by_r32]
  8110                                 %line 2195+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8111                                 iemAImpl_fsubr_r80_by_r32:
  8112 000031B6 4883EC20                sub rsp, 20
  8113                                 
  8114 000031BA DBE3                    fninit
  8115 000031BC DB2A                    fld tword [rdx]
  8116 000031BE D93424                  fnstenv [rsp]
  8117                                 
  8118                                 
  8119 000031C1 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8120 000031C5 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8121 000031CB 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8122                                 
  8123                                 
  8124 000031CF 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8125 000031D4 4981E300470000          and r11, 0x4700
  8126 000031DB 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8127 000031E1 482500380000            and rax, 0x3800
  8128 000031E7 4C09D8                  or rax, r11
  8129 000031EA 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8130                                 
  8131 000031EF D92424                  fldenv [rsp]
  8132 000031F2 D829                    fsubr dword [rcx]
  8133                                 
  8134 000031F4 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8135 000031F7 DBE2                    fnclex
  8136 000031F9 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8137                                 
  8138 000031FB DBE3                    fninit
  8139 000031FD 4883C420                add rsp, 20
  8140 00003201 C3                      ret
  8141                                 [global iemAImpl_fsubr_r80_by_r32_EndProc:function hidden]
  8142                                 iemAImpl_fsubr_r80_by_r32_EndProc:
  8143                                 [size iemAImpl_fsubr_r80_by_r32 iemAImpl_fsubr_r80_by_r32_EndProc - iemAImpl_fsubr_r80_by_r32]
  8144                                 [size iemAImpl_fsubr_r80_by_r32_EndProc 0]
  8145 00003202 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8146                                 %line 2196+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8147                                 [global iemAImpl_fdiv_r80_by_r32]
  8148                                 %line 2196+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8149                                 iemAImpl_fdiv_r80_by_r32:
  8150 00003206 4883EC20                sub rsp, 20
  8151                                 
  8152 0000320A DBE3                    fninit
  8153 0000320C DB2A                    fld tword [rdx]
  8154 0000320E D93424                  fnstenv [rsp]
  8155                                 
  8156                                 
  8157 00003211 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8158 00003215 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8159 0000321B 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8160                                 
  8161                                 
  8162 0000321F 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8163 00003224 4981E300470000          and r11, 0x4700
  8164 0000322B 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8165 00003231 482500380000            and rax, 0x3800
  8166 00003237 4C09D8                  or rax, r11
  8167 0000323A 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8168                                 
  8169 0000323F D92424                  fldenv [rsp]
  8170 00003242 D831                    fdiv dword [rcx]
  8171                                 
  8172 00003244 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8173 00003247 DBE2                    fnclex
  8174 00003249 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8175                                 
  8176 0000324B DBE3                    fninit
  8177 0000324D 4883C420                add rsp, 20
  8178 00003251 C3                      ret
  8179                                 [global iemAImpl_fdiv_r80_by_r32_EndProc:function hidden]
  8180                                 iemAImpl_fdiv_r80_by_r32_EndProc:
  8181                                 [size iemAImpl_fdiv_r80_by_r32 iemAImpl_fdiv_r80_by_r32_EndProc - iemAImpl_fdiv_r80_by_r32]
  8182                                 [size iemAImpl_fdiv_r80_by_r32_EndProc 0]
  8183 00003252 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8184                                 %line 2197+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8185                                 [global iemAImpl_fdivr_r80_by_r32]
  8186                                 %line 2197+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8187                                 iemAImpl_fdivr_r80_by_r32:
  8188 00003256 4883EC20                sub rsp, 20
  8189                                 
  8190 0000325A DBE3                    fninit
  8191 0000325C DB2A                    fld tword [rdx]
  8192 0000325E D93424                  fnstenv [rsp]
  8193                                 
  8194                                 
  8195 00003261 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8196 00003265 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8197 0000326B 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8198                                 
  8199                                 
  8200 0000326F 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8201 00003274 4981E300470000          and r11, 0x4700
  8202 0000327B 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8203 00003281 482500380000            and rax, 0x3800
  8204 00003287 4C09D8                  or rax, r11
  8205 0000328A 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8206                                 
  8207 0000328F D92424                  fldenv [rsp]
  8208 00003292 D839                    fdivr dword [rcx]
  8209                                 
  8210 00003294 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8211 00003297 DBE2                    fnclex
  8212 00003299 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8213                                 
  8214 0000329B DBE3                    fninit
  8215 0000329D 4883C420                add rsp, 20
  8216 000032A1 C3                      ret
  8217                                 [global iemAImpl_fdivr_r80_by_r32_EndProc:function hidden]
  8218                                 iemAImpl_fdivr_r80_by_r32_EndProc:
  8219                                 [size iemAImpl_fdivr_r80_by_r32 iemAImpl_fdivr_r80_by_r32_EndProc - iemAImpl_fdivr_r80_by_r32]
  8220                                 [size iemAImpl_fdivr_r80_by_r32_EndProc 0]
  8221 000032A2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8222                                 %line 2198+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8223                                 
  8224                                 
  8225                                 
  8226                                 
  8227                                 
  8228                                 
  8229                                 
  8230                                 
  8231                                 
  8232                                 
  8233                                 
  8234                                 
  8235                                 
  8236                                 %line 2228+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8237                                 
  8238                                 [global iemAImpl_fcom_r80_by_r32]
  8239                                 %line 2229+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8240                                 iemAImpl_fcom_r80_by_r32:
  8241 000032A6 4883EC20                sub rsp, 20
  8242                                 
  8243 000032AA DBE3                    fninit
  8244 000032AC DB2A                    fld tword [rdx]
  8245 000032AE D93424                  fnstenv [rsp]
  8246                                 
  8247                                 
  8248 000032B1 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8249 000032B5 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8250 000032BB 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8251                                 
  8252                                 
  8253 000032BF 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8254 000032C4 4981E300470000          and r11, 0x4700
  8255 000032CB 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8256 000032D1 482500380000            and rax, 0x3800
  8257 000032D7 4C09D8                  or rax, r11
  8258 000032DA 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8259                                 
  8260 000032DF D92424                  fldenv [rsp]
  8261 000032E2 D811                    fcom dword [rcx]
  8262                                 
  8263 000032E4 DD3E                    fnstsw word [rsi]
  8264                                 
  8265 000032E6 DBE3                    fninit
  8266 000032E8 4883C420                add rsp, 20
  8267 000032EC C3                      ret
  8268                                 [global iemAImpl_fcom_r80_by_r32_EndProc:function hidden]
  8269                                 iemAImpl_fcom_r80_by_r32_EndProc:
  8270                                 [size iemAImpl_fcom_r80_by_r32 iemAImpl_fcom_r80_by_r32_EndProc - iemAImpl_fcom_r80_by_r32]
  8271                                 [size iemAImpl_fcom_r80_by_r32_EndProc 0]
  8272 000032ED CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8273                                 %line 2230+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8274                                 
  8275                                 
  8276                                 
  8277                                 
  8278                                 
  8279                                 
  8280                                 
  8281                                 
  8282                                 
  8283                                 
  8284                                 
  8285                                 
  8286                                 
  8287                                 
  8288                                 [global iemAImpl_fld_r64_to_r80]
  8289                                 %line 2244+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8290                                 iemAImpl_fld_r64_to_r80:
  8291                                 %line 2246+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8292 000032F1 4883EC20                sub rsp, 20
  8293                                 
  8294 000032F5 D93424                  fnstenv [rsp]
  8295                                 %line 2248+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8296                                 
  8297                                 
  8298 000032F8 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8299 000032FC 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8300 00003302 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8301                                 
  8302                                 
  8303 00003306 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8304 0000330B 4981E300470000          and r11, 0x4700
  8305 00003312 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8306 00003318 482500380000            and rax, 0x3800
  8307 0000331E 4C09D8                  or rax, r11
  8308 00003321 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8309                                 
  8310 00003326 D92424                  fldenv [rsp]
  8311                                 %line 2249+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8312 00003329 DD02                    fld qword [rdx]
  8313                                 
  8314 0000332B DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8315 0000332E DBE2                    fnclex
  8316 00003330 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8317                                 
  8318 00003332 DBE3                    fninit
  8319 00003334 4883C420                add rsp, 20
  8320 00003338 C3                      ret
  8321                                 [global iemAImpl_fld_r64_to_r80_EndProc:function hidden]
  8322                                 %line 2258+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8323                                 iemAImpl_fld_r64_to_r80_EndProc:
  8324                                 [size iemAImpl_fld_r64_to_r80 iemAImpl_fld_r64_to_r80_EndProc - iemAImpl_fld_r64_to_r80]
  8325                                 [size iemAImpl_fld_r64_to_r80_EndProc 0]
  8326 00003339 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8327                                 %line 2259+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8328                                 
  8329                                 
  8330                                 
  8331                                 
  8332                                 
  8333                                 
  8334                                 
  8335                                 
  8336                                 
  8337                                 
  8338                                 [global iemAImpl_fst_r80_to_r64]
  8339                                 %line 2269+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8340                                 iemAImpl_fst_r80_to_r64:
  8341                                 %line 2271+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8342 0000333D 4883EC20                sub rsp, 20
  8343                                 
  8344 00003341 DBE3                    fninit
  8345 00003343 DB29                    fld tword [rcx]
  8346 00003345 D93424                  fnstenv [rsp]
  8347                                 %line 2275+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8348                                 
  8349                                 
  8350 00003348 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8351 0000334C 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8352 00003352 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8353                                 
  8354                                 
  8355 00003356 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8356 0000335B 4981E300470000          and r11, 0x4700
  8357 00003362 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8358 00003368 482500380000            and rax, 0x3800
  8359 0000336E 4C09D8                  or rax, r11
  8360 00003371 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8361                                 
  8362 00003376 D92424                  fldenv [rsp]
  8363                                 %line 2276+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8364 00003379 DD12                    fst qword [rdx]
  8365                                 
  8366 0000337B DD3E                    fnstsw word [rsi]
  8367                                 
  8368 0000337D DBE3                    fninit
  8369 0000337F 4883C420                add rsp, 20
  8370 00003383 C3                      ret
  8371                                 [global iemAImpl_fst_r80_to_r64_EndProc:function hidden]
  8372                                 %line 2283+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8373                                 iemAImpl_fst_r80_to_r64_EndProc:
  8374                                 [size iemAImpl_fst_r80_to_r64 iemAImpl_fst_r80_to_r64_EndProc - iemAImpl_fst_r80_to_r64]
  8375                                 [size iemAImpl_fst_r80_to_r64_EndProc 0]
  8376 00003384 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8377                                 %line 2284+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8378                                 
  8379                                 
  8380                                 
  8381                                 
  8382                                 
  8383                                 
  8384                                 
  8385                                 
  8386                                 
  8387                                 
  8388                                 
  8389                                 
  8390                                 %line 2315+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8391                                 
  8392                                 [global iemAImpl_fadd_r80_by_r64]
  8393                                 %line 2316+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8394                                 iemAImpl_fadd_r80_by_r64:
  8395 00003388 4883EC20                sub rsp, 20
  8396                                 
  8397 0000338C DBE3                    fninit
  8398 0000338E DB2A                    fld tword [rdx]
  8399 00003390 D93424                  fnstenv [rsp]
  8400                                 
  8401                                 
  8402 00003393 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8403 00003397 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8404 0000339D 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8405                                 
  8406                                 
  8407 000033A1 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8408 000033A6 4981E300470000          and r11, 0x4700
  8409 000033AD 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8410 000033B3 482500380000            and rax, 0x3800
  8411 000033B9 4C09D8                  or rax, r11
  8412 000033BC 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8413                                 
  8414 000033C1 D92424                  fldenv [rsp]
  8415 000033C4 DC01                    fadd qword [rcx]
  8416                                 
  8417 000033C6 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8418 000033C9 DBE2                    fnclex
  8419 000033CB DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8420                                 
  8421 000033CD DBE3                    fninit
  8422 000033CF 4883C420                add rsp, 20
  8423 000033D3 C3                      ret
  8424                                 [global iemAImpl_fadd_r80_by_r64_EndProc:function hidden]
  8425                                 iemAImpl_fadd_r80_by_r64_EndProc:
  8426                                 [size iemAImpl_fadd_r80_by_r64 iemAImpl_fadd_r80_by_r64_EndProc - iemAImpl_fadd_r80_by_r64]
  8427                                 [size iemAImpl_fadd_r80_by_r64_EndProc 0]
  8428 000033D4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8429                                 %line 2317+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8430                                 [global iemAImpl_fmul_r80_by_r64]
  8431                                 %line 2317+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8432                                 iemAImpl_fmul_r80_by_r64:
  8433 000033D8 4883EC20                sub rsp, 20
  8434                                 
  8435 000033DC DBE3                    fninit
  8436 000033DE DB2A                    fld tword [rdx]
  8437 000033E0 D93424                  fnstenv [rsp]
  8438                                 
  8439                                 
  8440 000033E3 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8441 000033E7 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8442 000033ED 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8443                                 
  8444                                 
  8445 000033F1 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8446 000033F6 4981E300470000          and r11, 0x4700
  8447 000033FD 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8448 00003403 482500380000            and rax, 0x3800
  8449 00003409 4C09D8                  or rax, r11
  8450 0000340C 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8451                                 
  8452 00003411 D92424                  fldenv [rsp]
  8453 00003414 DC09                    fmul qword [rcx]
  8454                                 
  8455 00003416 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8456 00003419 DBE2                    fnclex
  8457 0000341B DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8458                                 
  8459 0000341D DBE3                    fninit
  8460 0000341F 4883C420                add rsp, 20
  8461 00003423 C3                      ret
  8462                                 [global iemAImpl_fmul_r80_by_r64_EndProc:function hidden]
  8463                                 iemAImpl_fmul_r80_by_r64_EndProc:
  8464                                 [size iemAImpl_fmul_r80_by_r64 iemAImpl_fmul_r80_by_r64_EndProc - iemAImpl_fmul_r80_by_r64]
  8465                                 [size iemAImpl_fmul_r80_by_r64_EndProc 0]
  8466 00003424 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8467                                 %line 2318+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8468                                 [global iemAImpl_fsub_r80_by_r64]
  8469                                 %line 2318+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8470                                 iemAImpl_fsub_r80_by_r64:
  8471 00003428 4883EC20                sub rsp, 20
  8472                                 
  8473 0000342C DBE3                    fninit
  8474 0000342E DB2A                    fld tword [rdx]
  8475 00003430 D93424                  fnstenv [rsp]
  8476                                 
  8477                                 
  8478 00003433 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8479 00003437 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8480 0000343D 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8481                                 
  8482                                 
  8483 00003441 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8484 00003446 4981E300470000          and r11, 0x4700
  8485 0000344D 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8486 00003453 482500380000            and rax, 0x3800
  8487 00003459 4C09D8                  or rax, r11
  8488 0000345C 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8489                                 
  8490 00003461 D92424                  fldenv [rsp]
  8491 00003464 DC21                    fsub qword [rcx]
  8492                                 
  8493 00003466 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8494 00003469 DBE2                    fnclex
  8495 0000346B DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8496                                 
  8497 0000346D DBE3                    fninit
  8498 0000346F 4883C420                add rsp, 20
  8499 00003473 C3                      ret
  8500                                 [global iemAImpl_fsub_r80_by_r64_EndProc:function hidden]
  8501                                 iemAImpl_fsub_r80_by_r64_EndProc:
  8502                                 [size iemAImpl_fsub_r80_by_r64 iemAImpl_fsub_r80_by_r64_EndProc - iemAImpl_fsub_r80_by_r64]
  8503                                 [size iemAImpl_fsub_r80_by_r64_EndProc 0]
  8504 00003474 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8505                                 %line 2319+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8506                                 [global iemAImpl_fsubr_r80_by_r64]
  8507                                 %line 2319+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8508                                 iemAImpl_fsubr_r80_by_r64:
  8509 00003478 4883EC20                sub rsp, 20
  8510                                 
  8511 0000347C DBE3                    fninit
  8512 0000347E DB2A                    fld tword [rdx]
  8513 00003480 D93424                  fnstenv [rsp]
  8514                                 
  8515                                 
  8516 00003483 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8517 00003487 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8518 0000348D 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8519                                 
  8520                                 
  8521 00003491 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8522 00003496 4981E300470000          and r11, 0x4700
  8523 0000349D 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8524 000034A3 482500380000            and rax, 0x3800
  8525 000034A9 4C09D8                  or rax, r11
  8526 000034AC 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8527                                 
  8528 000034B1 D92424                  fldenv [rsp]
  8529 000034B4 DC29                    fsubr qword [rcx]
  8530                                 
  8531 000034B6 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8532 000034B9 DBE2                    fnclex
  8533 000034BB DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8534                                 
  8535 000034BD DBE3                    fninit
  8536 000034BF 4883C420                add rsp, 20
  8537 000034C3 C3                      ret
  8538                                 [global iemAImpl_fsubr_r80_by_r64_EndProc:function hidden]
  8539                                 iemAImpl_fsubr_r80_by_r64_EndProc:
  8540                                 [size iemAImpl_fsubr_r80_by_r64 iemAImpl_fsubr_r80_by_r64_EndProc - iemAImpl_fsubr_r80_by_r64]
  8541                                 [size iemAImpl_fsubr_r80_by_r64_EndProc 0]
  8542 000034C4 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8543                                 %line 2320+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8544                                 [global iemAImpl_fdiv_r80_by_r64]
  8545                                 %line 2320+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8546                                 iemAImpl_fdiv_r80_by_r64:
  8547 000034C8 4883EC20                sub rsp, 20
  8548                                 
  8549 000034CC DBE3                    fninit
  8550 000034CE DB2A                    fld tword [rdx]
  8551 000034D0 D93424                  fnstenv [rsp]
  8552                                 
  8553                                 
  8554 000034D3 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8555 000034D7 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8556 000034DD 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8557                                 
  8558                                 
  8559 000034E1 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8560 000034E6 4981E300470000          and r11, 0x4700
  8561 000034ED 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8562 000034F3 482500380000            and rax, 0x3800
  8563 000034F9 4C09D8                  or rax, r11
  8564 000034FC 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8565                                 
  8566 00003501 D92424                  fldenv [rsp]
  8567 00003504 DC31                    fdiv qword [rcx]
  8568                                 
  8569 00003506 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8570 00003509 DBE2                    fnclex
  8571 0000350B DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8572                                 
  8573 0000350D DBE3                    fninit
  8574 0000350F 4883C420                add rsp, 20
  8575 00003513 C3                      ret
  8576                                 [global iemAImpl_fdiv_r80_by_r64_EndProc:function hidden]
  8577                                 iemAImpl_fdiv_r80_by_r64_EndProc:
  8578                                 [size iemAImpl_fdiv_r80_by_r64 iemAImpl_fdiv_r80_by_r64_EndProc - iemAImpl_fdiv_r80_by_r64]
  8579                                 [size iemAImpl_fdiv_r80_by_r64_EndProc 0]
  8580 00003514 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8581                                 %line 2321+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8582                                 [global iemAImpl_fdivr_r80_by_r64]
  8583                                 %line 2321+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8584                                 iemAImpl_fdivr_r80_by_r64:
  8585 00003518 4883EC20                sub rsp, 20
  8586                                 
  8587 0000351C DBE3                    fninit
  8588 0000351E DB2A                    fld tword [rdx]
  8589 00003520 D93424                  fnstenv [rsp]
  8590                                 
  8591                                 
  8592 00003523 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8593 00003527 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8594 0000352D 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8595                                 
  8596                                 
  8597 00003531 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8598 00003536 4981E300470000          and r11, 0x4700
  8599 0000353D 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8600 00003543 482500380000            and rax, 0x3800
  8601 00003549 4C09D8                  or rax, r11
  8602 0000354C 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8603                                 
  8604 00003551 D92424                  fldenv [rsp]
  8605 00003554 DC39                    fdivr qword [rcx]
  8606                                 
  8607 00003556 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8608 00003559 DBE2                    fnclex
  8609 0000355B DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8610                                 
  8611 0000355D DBE3                    fninit
  8612 0000355F 4883C420                add rsp, 20
  8613 00003563 C3                      ret
  8614                                 [global iemAImpl_fdivr_r80_by_r64_EndProc:function hidden]
  8615                                 iemAImpl_fdivr_r80_by_r64_EndProc:
  8616                                 [size iemAImpl_fdivr_r80_by_r64 iemAImpl_fdivr_r80_by_r64_EndProc - iemAImpl_fdivr_r80_by_r64]
  8617                                 [size iemAImpl_fdivr_r80_by_r64_EndProc 0]
  8618 00003564 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8619                                 %line 2322+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8620                                 
  8621                                 
  8622                                 
  8623                                 
  8624                                 
  8625                                 
  8626                                 
  8627                                 
  8628                                 
  8629                                 
  8630                                 
  8631                                 
  8632                                 %line 2351+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8633                                 
  8634                                 [global iemAImpl_fcom_r80_by_r64]
  8635                                 %line 2352+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8636                                 iemAImpl_fcom_r80_by_r64:
  8637 00003568 4883EC20                sub rsp, 20
  8638                                 
  8639 0000356C DBE3                    fninit
  8640 0000356E DB2A                    fld tword [rdx]
  8641 00003570 D93424                  fnstenv [rsp]
  8642                                 
  8643                                 
  8644 00003573 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8645 00003577 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8646 0000357D 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8647                                 
  8648                                 
  8649 00003581 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8650 00003586 4981E300470000          and r11, 0x4700
  8651 0000358D 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8652 00003593 482500380000            and rax, 0x3800
  8653 00003599 4C09D8                  or rax, r11
  8654 0000359C 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8655                                 
  8656 000035A1 D92424                  fldenv [rsp]
  8657 000035A4 DC11                    fcom qword [rcx]
  8658                                 
  8659 000035A6 DD3E                    fnstsw word [rsi]
  8660                                 
  8661 000035A8 DBE3                    fninit
  8662 000035AA 4883C420                add rsp, 20
  8663 000035AE C3                      ret
  8664                                 [global iemAImpl_fcom_r80_by_r64_EndProc:function hidden]
  8665                                 iemAImpl_fcom_r80_by_r64_EndProc:
  8666                                 [size iemAImpl_fcom_r80_by_r64 iemAImpl_fcom_r80_by_r64_EndProc - iemAImpl_fcom_r80_by_r64]
  8667                                 [size iemAImpl_fcom_r80_by_r64_EndProc 0]
  8668 000035AF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8669                                 %line 2353+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8670                                 
  8671                                 
  8672                                 
  8673                                 
  8674                                 
  8675                                 
  8676                                 
  8677                                 
  8678                                 
  8679                                 
  8680                                 
  8681                                 
  8682                                 
  8683                                 
  8684                                 [global iemAImpl_fld_r80_from_r80]
  8685                                 %line 2367+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8686                                 iemAImpl_fld_r80_from_r80:
  8687                                 %line 2369+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8688 000035B3 4883EC20                sub rsp, 20
  8689                                 
  8690 000035B7 DBE3                    fninit
  8691 000035B9 D93424                  fnstenv [rsp]
  8692                                 %line 2372+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8693                                 
  8694                                 
  8695 000035BC 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8696 000035C0 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8697 000035C6 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8698                                 
  8699                                 
  8700 000035CA 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8701 000035CF 4981E300470000          and r11, 0x4700
  8702 000035D6 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8703 000035DC 482500380000            and rax, 0x3800
  8704 000035E2 4C09D8                  or rax, r11
  8705 000035E5 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8706                                 
  8707 000035EA D92424                  fldenv [rsp]
  8708                                 %line 2373+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8709 000035ED DB2A                    fld tword [rdx]
  8710                                 
  8711 000035EF DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8712 000035F2 DBE2                    fnclex
  8713 000035F4 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8714                                 
  8715 000035F6 DBE3                    fninit
  8716 000035F8 4883C420                add rsp, 20
  8717 000035FC C3                      ret
  8718                                 [global iemAImpl_fld_r80_from_r80_EndProc:function hidden]
  8719                                 %line 2382+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8720                                 iemAImpl_fld_r80_from_r80_EndProc:
  8721                                 [size iemAImpl_fld_r80_from_r80 iemAImpl_fld_r80_from_r80_EndProc - iemAImpl_fld_r80_from_r80]
  8722                                 [size iemAImpl_fld_r80_from_r80_EndProc 0]
  8723 000035FD CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8724                                 %line 2383+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8725                                 
  8726                                 
  8727                                 
  8728                                 
  8729                                 
  8730                                 
  8731                                 
  8732                                 
  8733                                 
  8734                                 
  8735                                 [global iemAImpl_fst_r80_to_r80]
  8736                                 %line 2393+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8737                                 iemAImpl_fst_r80_to_r80:
  8738                                 %line 2395+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8739 00003601 4883EC20                sub rsp, 20
  8740                                 
  8741 00003605 DBE3                    fninit
  8742 00003607 DB29                    fld tword [rcx]
  8743 00003609 D93424                  fnstenv [rsp]
  8744                                 %line 2399+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8745                                 
  8746                                 
  8747 0000360C 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8748 00003610 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8749 00003616 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8750                                 
  8751                                 
  8752 0000361A 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8753 0000361F 4981E300470000          and r11, 0x4700
  8754 00003626 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8755 0000362C 482500380000            and rax, 0x3800
  8756 00003632 4C09D8                  or rax, r11
  8757 00003635 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8758                                 
  8759 0000363A D92424                  fldenv [rsp]
  8760                                 %line 2400+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8761 0000363D DB3A                    fstp tword [rdx]
  8762                                 
  8763 0000363F DD3E                    fnstsw word [rsi]
  8764                                 
  8765 00003641 DBE3                    fninit
  8766 00003643 4883C420                add rsp, 20
  8767 00003647 C3                      ret
  8768                                 [global iemAImpl_fst_r80_to_r80_EndProc:function hidden]
  8769                                 %line 2407+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8770                                 iemAImpl_fst_r80_to_r80_EndProc:
  8771                                 [size iemAImpl_fst_r80_to_r80 iemAImpl_fst_r80_to_r80_EndProc - iemAImpl_fst_r80_to_r80]
  8772                                 [size iemAImpl_fst_r80_to_r80_EndProc 0]
  8773 00003648 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8774                                 %line 2408+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8775                                 
  8776                                 
  8777                                 
  8778                                 
  8779                                 
  8780                                 
  8781                                 
  8782                                 
  8783                                 
  8784                                 
  8785                                 
  8786                                 
  8787                                 %line 2440+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8788                                 
  8789                                 [global iemAImpl_fadd_r80_by_r80]
  8790                                 %line 2441+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8791                                 iemAImpl_fadd_r80_by_r80:
  8792 0000364C 4883EC20                sub rsp, 20
  8793                                 
  8794 00003650 DBE3                    fninit
  8795 00003652 DB29                    fld tword [rcx]
  8796 00003654 DB2A                    fld tword [rdx]
  8797 00003656 D93424                  fnstenv [rsp]
  8798                                 
  8799                                 
  8800 00003659 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8801 0000365D 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8802 00003663 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8803                                 
  8804                                 
  8805 00003667 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8806 0000366C 4981E300470000          and r11, 0x4700
  8807 00003673 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8808 00003679 482500380000            and rax, 0x3800
  8809 0000367F 4C09D8                  or rax, r11
  8810 00003682 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8811                                 
  8812 00003687 D92424                  fldenv [rsp]
  8813 0000368A D8C1                    fadd st0, st1
  8814                                 
  8815 0000368C DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8816 0000368F DBE2                    fnclex
  8817 00003691 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8818                                 
  8819 00003693 DBE3                    fninit
  8820 00003695 4883C420                add rsp, 20
  8821 00003699 C3                      ret
  8822                                 [global iemAImpl_fadd_r80_by_r80_EndProc:function hidden]
  8823                                 iemAImpl_fadd_r80_by_r80_EndProc:
  8824                                 [size iemAImpl_fadd_r80_by_r80 iemAImpl_fadd_r80_by_r80_EndProc - iemAImpl_fadd_r80_by_r80]
  8825                                 [size iemAImpl_fadd_r80_by_r80_EndProc 0]
  8826 0000369A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8827                                 %line 2442+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8828                                 [global iemAImpl_fmul_r80_by_r80]
  8829                                 %line 2442+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8830                                 iemAImpl_fmul_r80_by_r80:
  8831 0000369E 4883EC20                sub rsp, 20
  8832                                 
  8833 000036A2 DBE3                    fninit
  8834 000036A4 DB29                    fld tword [rcx]
  8835 000036A6 DB2A                    fld tword [rdx]
  8836 000036A8 D93424                  fnstenv [rsp]
  8837                                 
  8838                                 
  8839 000036AB 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8840 000036AF 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8841 000036B5 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8842                                 
  8843                                 
  8844 000036B9 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8845 000036BE 4981E300470000          and r11, 0x4700
  8846 000036C5 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8847 000036CB 482500380000            and rax, 0x3800
  8848 000036D1 4C09D8                  or rax, r11
  8849 000036D4 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8850                                 
  8851 000036D9 D92424                  fldenv [rsp]
  8852 000036DC D8C9                    fmul st0, st1
  8853                                 
  8854 000036DE DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8855 000036E1 DBE2                    fnclex
  8856 000036E3 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8857                                 
  8858 000036E5 DBE3                    fninit
  8859 000036E7 4883C420                add rsp, 20
  8860 000036EB C3                      ret
  8861                                 [global iemAImpl_fmul_r80_by_r80_EndProc:function hidden]
  8862                                 iemAImpl_fmul_r80_by_r80_EndProc:
  8863                                 [size iemAImpl_fmul_r80_by_r80 iemAImpl_fmul_r80_by_r80_EndProc - iemAImpl_fmul_r80_by_r80]
  8864                                 [size iemAImpl_fmul_r80_by_r80_EndProc 0]
  8865 000036EC CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8866                                 %line 2443+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8867                                 [global iemAImpl_fsub_r80_by_r80]
  8868                                 %line 2443+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8869                                 iemAImpl_fsub_r80_by_r80:
  8870 000036F0 4883EC20                sub rsp, 20
  8871                                 
  8872 000036F4 DBE3                    fninit
  8873 000036F6 DB29                    fld tword [rcx]
  8874 000036F8 DB2A                    fld tword [rdx]
  8875 000036FA D93424                  fnstenv [rsp]
  8876                                 
  8877                                 
  8878 000036FD 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8879 00003701 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8880 00003707 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8881                                 
  8882                                 
  8883 0000370B 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8884 00003710 4981E300470000          and r11, 0x4700
  8885 00003717 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8886 0000371D 482500380000            and rax, 0x3800
  8887 00003723 4C09D8                  or rax, r11
  8888 00003726 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8889                                 
  8890 0000372B D92424                  fldenv [rsp]
  8891 0000372E D8E1                    fsub st0, st1
  8892                                 
  8893 00003730 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8894 00003733 DBE2                    fnclex
  8895 00003735 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8896                                 
  8897 00003737 DBE3                    fninit
  8898 00003739 4883C420                add rsp, 20
  8899 0000373D C3                      ret
  8900                                 [global iemAImpl_fsub_r80_by_r80_EndProc:function hidden]
  8901                                 iemAImpl_fsub_r80_by_r80_EndProc:
  8902                                 [size iemAImpl_fsub_r80_by_r80 iemAImpl_fsub_r80_by_r80_EndProc - iemAImpl_fsub_r80_by_r80]
  8903                                 [size iemAImpl_fsub_r80_by_r80_EndProc 0]
  8904 0000373E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8905                                 %line 2444+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8906                                 [global iemAImpl_fsubr_r80_by_r80]
  8907                                 %line 2444+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8908                                 iemAImpl_fsubr_r80_by_r80:
  8909 00003742 4883EC20                sub rsp, 20
  8910                                 
  8911 00003746 DBE3                    fninit
  8912 00003748 DB29                    fld tword [rcx]
  8913 0000374A DB2A                    fld tword [rdx]
  8914 0000374C D93424                  fnstenv [rsp]
  8915                                 
  8916                                 
  8917 0000374F 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8918 00003753 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8919 00003759 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8920                                 
  8921                                 
  8922 0000375D 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8923 00003762 4981E300470000          and r11, 0x4700
  8924 00003769 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8925 0000376F 482500380000            and rax, 0x3800
  8926 00003775 4C09D8                  or rax, r11
  8927 00003778 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8928                                 
  8929 0000377D D92424                  fldenv [rsp]
  8930 00003780 D8E9                    fsubr st0, st1
  8931                                 
  8932 00003782 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8933 00003785 DBE2                    fnclex
  8934 00003787 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8935                                 
  8936 00003789 DBE3                    fninit
  8937 0000378B 4883C420                add rsp, 20
  8938 0000378F C3                      ret
  8939                                 [global iemAImpl_fsubr_r80_by_r80_EndProc:function hidden]
  8940                                 iemAImpl_fsubr_r80_by_r80_EndProc:
  8941                                 [size iemAImpl_fsubr_r80_by_r80 iemAImpl_fsubr_r80_by_r80_EndProc - iemAImpl_fsubr_r80_by_r80]
  8942                                 [size iemAImpl_fsubr_r80_by_r80_EndProc 0]
  8943 00003790 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8944                                 %line 2445+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8945                                 [global iemAImpl_fdiv_r80_by_r80]
  8946                                 %line 2445+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8947                                 iemAImpl_fdiv_r80_by_r80:
  8948 00003794 4883EC20                sub rsp, 20
  8949                                 
  8950 00003798 DBE3                    fninit
  8951 0000379A DB29                    fld tword [rcx]
  8952 0000379C DB2A                    fld tword [rdx]
  8953 0000379E D93424                  fnstenv [rsp]
  8954                                 
  8955                                 
  8956 000037A1 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8957 000037A5 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8958 000037AB 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8959                                 
  8960                                 
  8961 000037AF 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  8962 000037B4 4981E300470000          and r11, 0x4700
  8963 000037BB 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  8964 000037C1 482500380000            and rax, 0x3800
  8965 000037C7 4C09D8                  or rax, r11
  8966 000037CA 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  8967                                 
  8968 000037CF D92424                  fldenv [rsp]
  8969 000037D2 D8F1                    fdiv st0, st1
  8970                                 
  8971 000037D4 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  8972 000037D7 DBE2                    fnclex
  8973 000037D9 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  8974                                 
  8975 000037DB DBE3                    fninit
  8976 000037DD 4883C420                add rsp, 20
  8977 000037E1 C3                      ret
  8978                                 [global iemAImpl_fdiv_r80_by_r80_EndProc:function hidden]
  8979                                 iemAImpl_fdiv_r80_by_r80_EndProc:
  8980                                 [size iemAImpl_fdiv_r80_by_r80 iemAImpl_fdiv_r80_by_r80_EndProc - iemAImpl_fdiv_r80_by_r80]
  8981                                 [size iemAImpl_fdiv_r80_by_r80_EndProc 0]
  8982 000037E2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  8983                                 %line 2446+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8984                                 [global iemAImpl_fdivr_r80_by_r80]
  8985                                 %line 2446+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  8986                                 iemAImpl_fdivr_r80_by_r80:
  8987 000037E6 4883EC20                sub rsp, 20
  8988                                 
  8989 000037EA DBE3                    fninit
  8990 000037EC DB29                    fld tword [rcx]
  8991 000037EE DB2A                    fld tword [rdx]
  8992 000037F0 D93424                  fnstenv [rsp]
  8993                                 
  8994                                 
  8995 000037F3 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  8996 000037F7 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  8997 000037FD 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  8998                                 
  8999                                 
  9000 00003801 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9001 00003806 4981E300470000          and r11, 0x4700
  9002 0000380D 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9003 00003813 482500380000            and rax, 0x3800
  9004 00003819 4C09D8                  or rax, r11
  9005 0000381C 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9006                                 
  9007 00003821 D92424                  fldenv [rsp]
  9008 00003824 D8F9                    fdivr st0, st1
  9009                                 
  9010 00003826 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9011 00003829 DBE2                    fnclex
  9012 0000382B DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9013                                 
  9014 0000382D DBE3                    fninit
  9015 0000382F 4883C420                add rsp, 20
  9016 00003833 C3                      ret
  9017                                 [global iemAImpl_fdivr_r80_by_r80_EndProc:function hidden]
  9018                                 iemAImpl_fdivr_r80_by_r80_EndProc:
  9019                                 [size iemAImpl_fdivr_r80_by_r80 iemAImpl_fdivr_r80_by_r80_EndProc - iemAImpl_fdivr_r80_by_r80]
  9020                                 [size iemAImpl_fdivr_r80_by_r80_EndProc 0]
  9021 00003834 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9022                                 %line 2447+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9023                                 [global iemAImpl_fprem_r80_by_r80]
  9024                                 %line 2447+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9025                                 iemAImpl_fprem_r80_by_r80:
  9026 00003838 4883EC20                sub rsp, 20
  9027                                 
  9028 0000383C DBE3                    fninit
  9029 0000383E DB29                    fld tword [rcx]
  9030 00003840 DB2A                    fld tword [rdx]
  9031 00003842 D93424                  fnstenv [rsp]
  9032                                 
  9033                                 
  9034 00003845 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9035 00003849 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9036 0000384F 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9037                                 
  9038                                 
  9039 00003853 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9040 00003858 4981E300470000          and r11, 0x4700
  9041 0000385F 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9042 00003865 482500380000            and rax, 0x3800
  9043 0000386B 4C09D8                  or rax, r11
  9044 0000386E 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9045                                 
  9046 00003873 D92424                  fldenv [rsp]
  9047 00003876 D9F8                    fprem 
  9048                                 
  9049 00003878 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9050 0000387B DBE2                    fnclex
  9051 0000387D DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9052                                 
  9053 0000387F DBE3                    fninit
  9054 00003881 4883C420                add rsp, 20
  9055 00003885 C3                      ret
  9056                                 [global iemAImpl_fprem_r80_by_r80_EndProc:function hidden]
  9057                                 iemAImpl_fprem_r80_by_r80_EndProc:
  9058                                 [size iemAImpl_fprem_r80_by_r80 iemAImpl_fprem_r80_by_r80_EndProc - iemAImpl_fprem_r80_by_r80]
  9059                                 [size iemAImpl_fprem_r80_by_r80_EndProc 0]
  9060 00003886 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9061                                 %line 2448+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9062                                 [global iemAImpl_fprem1_r80_by_r80]
  9063                                 %line 2448+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9064                                 iemAImpl_fprem1_r80_by_r80:
  9065 0000388A 4883EC20                sub rsp, 20
  9066                                 
  9067 0000388E DBE3                    fninit
  9068 00003890 DB29                    fld tword [rcx]
  9069 00003892 DB2A                    fld tword [rdx]
  9070 00003894 D93424                  fnstenv [rsp]
  9071                                 
  9072                                 
  9073 00003897 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9074 0000389B 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9075 000038A1 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9076                                 
  9077                                 
  9078 000038A5 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9079 000038AA 4981E300470000          and r11, 0x4700
  9080 000038B1 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9081 000038B7 482500380000            and rax, 0x3800
  9082 000038BD 4C09D8                  or rax, r11
  9083 000038C0 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9084                                 
  9085 000038C5 D92424                  fldenv [rsp]
  9086 000038C8 D9F5                    fprem1 
  9087                                 
  9088 000038CA DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9089 000038CD DBE2                    fnclex
  9090 000038CF DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9091                                 
  9092 000038D1 DBE3                    fninit
  9093 000038D3 4883C420                add rsp, 20
  9094 000038D7 C3                      ret
  9095                                 [global iemAImpl_fprem1_r80_by_r80_EndProc:function hidden]
  9096                                 iemAImpl_fprem1_r80_by_r80_EndProc:
  9097                                 [size iemAImpl_fprem1_r80_by_r80 iemAImpl_fprem1_r80_by_r80_EndProc - iemAImpl_fprem1_r80_by_r80]
  9098                                 [size iemAImpl_fprem1_r80_by_r80_EndProc 0]
  9099 000038D8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9100                                 %line 2449+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9101                                 [global iemAImpl_fscale_r80_by_r80]
  9102                                 %line 2449+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9103                                 iemAImpl_fscale_r80_by_r80:
  9104 000038DC 4883EC20                sub rsp, 20
  9105                                 
  9106 000038E0 DBE3                    fninit
  9107 000038E2 DB29                    fld tword [rcx]
  9108 000038E4 DB2A                    fld tword [rdx]
  9109 000038E6 D93424                  fnstenv [rsp]
  9110                                 
  9111                                 
  9112 000038E9 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9113 000038ED 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9114 000038F3 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9115                                 
  9116                                 
  9117 000038F7 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9118 000038FC 4981E300470000          and r11, 0x4700
  9119 00003903 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9120 00003909 482500380000            and rax, 0x3800
  9121 0000390F 4C09D8                  or rax, r11
  9122 00003912 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9123                                 
  9124 00003917 D92424                  fldenv [rsp]
  9125 0000391A D9FD                    fscale 
  9126                                 
  9127 0000391C DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9128 0000391F DBE2                    fnclex
  9129 00003921 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9130                                 
  9131 00003923 DBE3                    fninit
  9132 00003925 4883C420                add rsp, 20
  9133 00003929 C3                      ret
  9134                                 [global iemAImpl_fscale_r80_by_r80_EndProc:function hidden]
  9135                                 iemAImpl_fscale_r80_by_r80_EndProc:
  9136                                 [size iemAImpl_fscale_r80_by_r80 iemAImpl_fscale_r80_by_r80_EndProc - iemAImpl_fscale_r80_by_r80]
  9137                                 [size iemAImpl_fscale_r80_by_r80_EndProc 0]
  9138 0000392A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9139                                 %line 2450+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9140                                 
  9141                                 
  9142                                 
  9143                                 
  9144                                 
  9145                                 
  9146                                 
  9147                                 
  9148                                 
  9149                                 
  9150                                 
  9151                                 
  9152                                 
  9153                                 %line 2483+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9154                                 
  9155                                 [global iemAImpl_fpatan_r80_by_r80]
  9156                                 %line 2484+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9157                                 iemAImpl_fpatan_r80_by_r80:
  9158 0000392E 4883EC20                sub rsp, 20
  9159                                 
  9160 00003932 DBE3                    fninit
  9161 00003934 DB2A                    fld tword [rdx]
  9162 00003936 DB29                    fld tword [rcx]
  9163 00003938 D93424                  fnstenv [rsp]
  9164                                 
  9165                                 
  9166 0000393B 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9167 0000393F 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9168 00003945 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9169                                 
  9170                                 
  9171 00003949 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9172 0000394E 4981E300470000          and r11, 0x4700
  9173 00003955 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9174 0000395B 482500380000            and rax, 0x3800
  9175 00003961 4C09D8                  or rax, r11
  9176 00003964 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9177                                 
  9178 00003969 D92424                  fldenv [rsp]
  9179 0000396C D9F3                    fpatan
  9180                                 
  9181 0000396E DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9182 00003971 DBE2                    fnclex
  9183 00003973 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9184                                 
  9185 00003975 DBE3                    fninit
  9186 00003977 4883C420                add rsp, 20
  9187 0000397B C3                      ret
  9188                                 [global iemAImpl_fpatan_r80_by_r80_EndProc:function hidden]
  9189                                 iemAImpl_fpatan_r80_by_r80_EndProc:
  9190                                 [size iemAImpl_fpatan_r80_by_r80 iemAImpl_fpatan_r80_by_r80_EndProc - iemAImpl_fpatan_r80_by_r80]
  9191                                 [size iemAImpl_fpatan_r80_by_r80_EndProc 0]
  9192 0000397C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9193                                 %line 2485+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9194                                 [global iemAImpl_fyl2xp1_r80_by_r80]
  9195                                 %line 2485+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9196                                 iemAImpl_fyl2xp1_r80_by_r80:
  9197 00003980 4883EC20                sub rsp, 20
  9198                                 
  9199 00003984 DBE3                    fninit
  9200 00003986 DB2A                    fld tword [rdx]
  9201 00003988 DB29                    fld tword [rcx]
  9202 0000398A D93424                  fnstenv [rsp]
  9203                                 
  9204                                 
  9205 0000398D 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9206 00003991 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9207 00003997 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9208                                 
  9209                                 
  9210 0000399B 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9211 000039A0 4981E300470000          and r11, 0x4700
  9212 000039A7 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9213 000039AD 482500380000            and rax, 0x3800
  9214 000039B3 4C09D8                  or rax, r11
  9215 000039B6 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9216                                 
  9217 000039BB D92424                  fldenv [rsp]
  9218 000039BE D9F9                    fyl2xp1
  9219                                 
  9220 000039C0 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9221 000039C3 DBE2                    fnclex
  9222 000039C5 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9223                                 
  9224 000039C7 DBE3                    fninit
  9225 000039C9 4883C420                add rsp, 20
  9226 000039CD C3                      ret
  9227                                 [global iemAImpl_fyl2xp1_r80_by_r80_EndProc:function hidden]
  9228                                 iemAImpl_fyl2xp1_r80_by_r80_EndProc:
  9229                                 [size iemAImpl_fyl2xp1_r80_by_r80 iemAImpl_fyl2xp1_r80_by_r80_EndProc - iemAImpl_fyl2xp1_r80_by_r80]
  9230                                 [size iemAImpl_fyl2xp1_r80_by_r80_EndProc 0]
  9231 000039CE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9232                                 %line 2486+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9233                                 
  9234                                 
  9235                                 
  9236                                 
  9237                                 
  9238                                 
  9239                                 
  9240                                 
  9241                                 
  9242                                 
  9243                                 
  9244                                 
  9245                                 
  9246                                 %line 2517+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9247                                 
  9248                                 [global iemAImpl_fcom_r80_by_r80]
  9249                                 %line 2518+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9250                                 iemAImpl_fcom_r80_by_r80:
  9251 000039D2 4883EC20                sub rsp, 20
  9252                                 
  9253 000039D6 DBE3                    fninit
  9254 000039D8 DB29                    fld tword [rcx]
  9255 000039DA DB2A                    fld tword [rdx]
  9256 000039DC D93424                  fnstenv [rsp]
  9257                                 
  9258                                 
  9259 000039DF 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9260 000039E3 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9261 000039E9 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9262                                 
  9263                                 
  9264 000039ED 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9265 000039F2 4981E300470000          and r11, 0x4700
  9266 000039F9 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9267 000039FF 482500380000            and rax, 0x3800
  9268 00003A05 4C09D8                  or rax, r11
  9269 00003A08 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9270                                 
  9271 00003A0D D92424                  fldenv [rsp]
  9272 00003A10 D8D1                    fcom st0, st1
  9273                                 
  9274 00003A12 DD3E                    fnstsw word [rsi]
  9275                                 
  9276 00003A14 DBE3                    fninit
  9277 00003A16 4883C420                add rsp, 20
  9278 00003A1A C3                      ret
  9279                                 [global iemAImpl_fcom_r80_by_r80_EndProc:function hidden]
  9280                                 iemAImpl_fcom_r80_by_r80_EndProc:
  9281                                 [size iemAImpl_fcom_r80_by_r80 iemAImpl_fcom_r80_by_r80_EndProc - iemAImpl_fcom_r80_by_r80]
  9282                                 [size iemAImpl_fcom_r80_by_r80_EndProc 0]
  9283 00003A1B CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9284                                 %line 2519+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9285                                 [global iemAImpl_fucom_r80_by_r80]
  9286                                 %line 2519+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9287                                 iemAImpl_fucom_r80_by_r80:
  9288 00003A1F 4883EC20                sub rsp, 20
  9289                                 
  9290 00003A23 DBE3                    fninit
  9291 00003A25 DB29                    fld tword [rcx]
  9292 00003A27 DB2A                    fld tword [rdx]
  9293 00003A29 D93424                  fnstenv [rsp]
  9294                                 
  9295                                 
  9296 00003A2C 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9297 00003A30 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9298 00003A36 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9299                                 
  9300                                 
  9301 00003A3A 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9302 00003A3F 4981E300470000          and r11, 0x4700
  9303 00003A46 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9304 00003A4C 482500380000            and rax, 0x3800
  9305 00003A52 4C09D8                  or rax, r11
  9306 00003A55 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9307                                 
  9308 00003A5A D92424                  fldenv [rsp]
  9309 00003A5D DDE1                    fucom st0, st1
  9310                                 
  9311 00003A5F DD3E                    fnstsw word [rsi]
  9312                                 
  9313 00003A61 DBE3                    fninit
  9314 00003A63 4883C420                add rsp, 20
  9315 00003A67 C3                      ret
  9316                                 [global iemAImpl_fucom_r80_by_r80_EndProc:function hidden]
  9317                                 iemAImpl_fucom_r80_by_r80_EndProc:
  9318                                 [size iemAImpl_fucom_r80_by_r80 iemAImpl_fucom_r80_by_r80_EndProc - iemAImpl_fucom_r80_by_r80]
  9319                                 [size iemAImpl_fucom_r80_by_r80_EndProc 0]
  9320 00003A68 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9321                                 %line 2520+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9322                                 
  9323                                 
  9324                                 
  9325                                 
  9326                                 
  9327                                 
  9328                                 
  9329                                 
  9330                                 
  9331                                 
  9332                                 
  9333                                 
  9334                                 
  9335                                 
  9336                                 %line 2554+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9337                                 
  9338                                 [global iemAImpl_fcomi_r80_by_r80]
  9339                                 %line 2555+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9340                                 iemAImpl_fcomi_r80_by_r80:
  9341 00003A6C 4883EC20                sub rsp, 20
  9342                                 
  9343 00003A70 DBE3                    fninit
  9344 00003A72 DB29                    fld tword [rcx]
  9345 00003A74 DB2A                    fld tword [rdx]
  9346 00003A76 D93424                  fnstenv [rsp]
  9347                                 
  9348                                 
  9349 00003A79 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9350 00003A7D 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9351 00003A83 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9352                                 
  9353                                 
  9354 00003A87 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9355 00003A8C 4981E300470000          and r11, 0x4700
  9356 00003A93 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9357 00003A99 482500380000            and rax, 0x3800
  9358 00003A9F 4C09D8                  or rax, r11
  9359 00003AA2 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9360                                 
  9361 00003AA7 D92424                  fldenv [rsp]
  9362 00003AAA DBF1                    fcomi st1
  9363                                 
  9364 00003AAC DD3E                    fnstsw word [rsi]
  9365 00003AAE 9C                      pushf
  9366 00003AAF 58                      pop rax
  9367                                 
  9368 00003AB0 DBE3                    fninit
  9369 00003AB2 4883C420                add rsp, 20
  9370 00003AB6 C3                      ret
  9371                                 [global iemAImpl_fcomi_r80_by_r80_EndProc:function hidden]
  9372                                 iemAImpl_fcomi_r80_by_r80_EndProc:
  9373                                 [size iemAImpl_fcomi_r80_by_r80 iemAImpl_fcomi_r80_by_r80_EndProc - iemAImpl_fcomi_r80_by_r80]
  9374                                 [size iemAImpl_fcomi_r80_by_r80_EndProc 0]
  9375 00003AB7 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9376                                 %line 2556+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9377                                 [global iemAImpl_fucomi_r80_by_r80]
  9378                                 %line 2556+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9379                                 iemAImpl_fucomi_r80_by_r80:
  9380 00003ABB 4883EC20                sub rsp, 20
  9381                                 
  9382 00003ABF DBE3                    fninit
  9383 00003AC1 DB29                    fld tword [rcx]
  9384 00003AC3 DB2A                    fld tword [rdx]
  9385 00003AC5 D93424                  fnstenv [rsp]
  9386                                 
  9387                                 
  9388 00003AC8 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9389 00003ACC 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9390 00003AD2 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9391                                 
  9392                                 
  9393 00003AD6 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9394 00003ADB 4981E300470000          and r11, 0x4700
  9395 00003AE2 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9396 00003AE8 482500380000            and rax, 0x3800
  9397 00003AEE 4C09D8                  or rax, r11
  9398 00003AF1 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9399                                 
  9400 00003AF6 D92424                  fldenv [rsp]
  9401 00003AF9 DBE9                    fucomi st1
  9402                                 
  9403 00003AFB DD3E                    fnstsw word [rsi]
  9404 00003AFD 9C                      pushf
  9405 00003AFE 58                      pop rax
  9406                                 
  9407 00003AFF DBE3                    fninit
  9408 00003B01 4883C420                add rsp, 20
  9409 00003B05 C3                      ret
  9410                                 [global iemAImpl_fucomi_r80_by_r80_EndProc:function hidden]
  9411                                 iemAImpl_fucomi_r80_by_r80_EndProc:
  9412                                 [size iemAImpl_fucomi_r80_by_r80 iemAImpl_fucomi_r80_by_r80_EndProc - iemAImpl_fucomi_r80_by_r80]
  9413                                 [size iemAImpl_fucomi_r80_by_r80_EndProc 0]
  9414 00003B06 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9415                                 %line 2557+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9416                                 
  9417                                 
  9418                                 
  9419                                 
  9420                                 
  9421                                 
  9422                                 
  9423                                 
  9424                                 
  9425                                 
  9426                                 
  9427                                 %line 2587+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9428                                 
  9429                                 [global iemAImpl_fchs_r80]
  9430                                 %line 2588+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9431                                 iemAImpl_fchs_r80:
  9432 00003B0A 4883EC20                sub rsp, 20
  9433                                 
  9434 00003B0E DBE3                    fninit
  9435 00003B10 DB2A                    fld tword [rdx]
  9436 00003B12 D93424                  fnstenv [rsp]
  9437                                 
  9438                                 
  9439 00003B15 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9440 00003B19 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9441 00003B1F 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9442                                 
  9443                                 
  9444 00003B23 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9445 00003B28 4981E300470000          and r11, 0x4700
  9446 00003B2F 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9447 00003B35 482500380000            and rax, 0x3800
  9448 00003B3B 4C09D8                  or rax, r11
  9449 00003B3E 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9450                                 
  9451 00003B43 D92424                  fldenv [rsp]
  9452 00003B46 D9E0                    fchs
  9453                                 
  9454 00003B48 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9455 00003B4B DBE2                    fnclex
  9456 00003B4D DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9457                                 
  9458 00003B4F DBE3                    fninit
  9459 00003B51 4883C420                add rsp, 20
  9460 00003B55 C3                      ret
  9461                                 [global iemAImpl_fchs_r80_EndProc:function hidden]
  9462                                 iemAImpl_fchs_r80_EndProc:
  9463                                 [size iemAImpl_fchs_r80 iemAImpl_fchs_r80_EndProc - iemAImpl_fchs_r80]
  9464                                 [size iemAImpl_fchs_r80_EndProc 0]
  9465 00003B56 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9466                                 %line 2589+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9467                                 [global iemAImpl_fabs_r80]
  9468                                 %line 2589+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9469                                 iemAImpl_fabs_r80:
  9470 00003B5A 4883EC20                sub rsp, 20
  9471                                 
  9472 00003B5E DBE3                    fninit
  9473 00003B60 DB2A                    fld tword [rdx]
  9474 00003B62 D93424                  fnstenv [rsp]
  9475                                 
  9476                                 
  9477 00003B65 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9478 00003B69 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9479 00003B6F 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9480                                 
  9481                                 
  9482 00003B73 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9483 00003B78 4981E300470000          and r11, 0x4700
  9484 00003B7F 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9485 00003B85 482500380000            and rax, 0x3800
  9486 00003B8B 4C09D8                  or rax, r11
  9487 00003B8E 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9488                                 
  9489 00003B93 D92424                  fldenv [rsp]
  9490 00003B96 D9E1                    fabs
  9491                                 
  9492 00003B98 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9493 00003B9B DBE2                    fnclex
  9494 00003B9D DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9495                                 
  9496 00003B9F DBE3                    fninit
  9497 00003BA1 4883C420                add rsp, 20
  9498 00003BA5 C3                      ret
  9499                                 [global iemAImpl_fabs_r80_EndProc:function hidden]
  9500                                 iemAImpl_fabs_r80_EndProc:
  9501                                 [size iemAImpl_fabs_r80 iemAImpl_fabs_r80_EndProc - iemAImpl_fabs_r80]
  9502                                 [size iemAImpl_fabs_r80_EndProc 0]
  9503 00003BA6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9504                                 %line 2590+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9505                                 [global iemAImpl_f2xm1_r80]
  9506                                 %line 2590+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9507                                 iemAImpl_f2xm1_r80:
  9508 00003BAA 4883EC20                sub rsp, 20
  9509                                 
  9510 00003BAE DBE3                    fninit
  9511 00003BB0 DB2A                    fld tword [rdx]
  9512 00003BB2 D93424                  fnstenv [rsp]
  9513                                 
  9514                                 
  9515 00003BB5 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9516 00003BB9 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9517 00003BBF 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9518                                 
  9519                                 
  9520 00003BC3 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9521 00003BC8 4981E300470000          and r11, 0x4700
  9522 00003BCF 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9523 00003BD5 482500380000            and rax, 0x3800
  9524 00003BDB 4C09D8                  or rax, r11
  9525 00003BDE 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9526                                 
  9527 00003BE3 D92424                  fldenv [rsp]
  9528 00003BE6 D9F0                    f2xm1
  9529                                 
  9530 00003BE8 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9531 00003BEB DBE2                    fnclex
  9532 00003BED DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9533                                 
  9534 00003BEF DBE3                    fninit
  9535 00003BF1 4883C420                add rsp, 20
  9536 00003BF5 C3                      ret
  9537                                 [global iemAImpl_f2xm1_r80_EndProc:function hidden]
  9538                                 iemAImpl_f2xm1_r80_EndProc:
  9539                                 [size iemAImpl_f2xm1_r80 iemAImpl_f2xm1_r80_EndProc - iemAImpl_f2xm1_r80]
  9540                                 [size iemAImpl_f2xm1_r80_EndProc 0]
  9541 00003BF6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9542                                 %line 2591+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9543                                 [global iemAImpl_fyl2x_r80]
  9544                                 %line 2591+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9545                                 iemAImpl_fyl2x_r80:
  9546 00003BFA 4883EC20                sub rsp, 20
  9547                                 
  9548 00003BFE DBE3                    fninit
  9549 00003C00 DB2A                    fld tword [rdx]
  9550 00003C02 D93424                  fnstenv [rsp]
  9551                                 
  9552                                 
  9553 00003C05 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9554 00003C09 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9555 00003C0F 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9556                                 
  9557                                 
  9558 00003C13 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9559 00003C18 4981E300470000          and r11, 0x4700
  9560 00003C1F 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9561 00003C25 482500380000            and rax, 0x3800
  9562 00003C2B 4C09D8                  or rax, r11
  9563 00003C2E 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9564                                 
  9565 00003C33 D92424                  fldenv [rsp]
  9566 00003C36 D9F1                    fyl2x
  9567                                 
  9568 00003C38 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9569 00003C3B DBE2                    fnclex
  9570 00003C3D DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9571                                 
  9572 00003C3F DBE3                    fninit
  9573 00003C41 4883C420                add rsp, 20
  9574 00003C45 C3                      ret
  9575                                 [global iemAImpl_fyl2x_r80_EndProc:function hidden]
  9576                                 iemAImpl_fyl2x_r80_EndProc:
  9577                                 [size iemAImpl_fyl2x_r80 iemAImpl_fyl2x_r80_EndProc - iemAImpl_fyl2x_r80]
  9578                                 [size iemAImpl_fyl2x_r80_EndProc 0]
  9579 00003C46 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9580                                 %line 2592+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9581                                 [global iemAImpl_fsqrt_r80]
  9582                                 %line 2592+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9583                                 iemAImpl_fsqrt_r80:
  9584 00003C4A 4883EC20                sub rsp, 20
  9585                                 
  9586 00003C4E DBE3                    fninit
  9587 00003C50 DB2A                    fld tword [rdx]
  9588 00003C52 D93424                  fnstenv [rsp]
  9589                                 
  9590                                 
  9591 00003C55 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9592 00003C59 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9593 00003C5F 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9594                                 
  9595                                 
  9596 00003C63 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9597 00003C68 4981E300470000          and r11, 0x4700
  9598 00003C6F 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9599 00003C75 482500380000            and rax, 0x3800
  9600 00003C7B 4C09D8                  or rax, r11
  9601 00003C7E 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9602                                 
  9603 00003C83 D92424                  fldenv [rsp]
  9604 00003C86 D9FA                    fsqrt
  9605                                 
  9606 00003C88 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9607 00003C8B DBE2                    fnclex
  9608 00003C8D DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9609                                 
  9610 00003C8F DBE3                    fninit
  9611 00003C91 4883C420                add rsp, 20
  9612 00003C95 C3                      ret
  9613                                 [global iemAImpl_fsqrt_r80_EndProc:function hidden]
  9614                                 iemAImpl_fsqrt_r80_EndProc:
  9615                                 [size iemAImpl_fsqrt_r80 iemAImpl_fsqrt_r80_EndProc - iemAImpl_fsqrt_r80]
  9616                                 [size iemAImpl_fsqrt_r80_EndProc 0]
  9617 00003C96 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9618                                 %line 2593+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9619                                 [global iemAImpl_frndint_r80]
  9620                                 %line 2593+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9621                                 iemAImpl_frndint_r80:
  9622 00003C9A 4883EC20                sub rsp, 20
  9623                                 
  9624 00003C9E DBE3                    fninit
  9625 00003CA0 DB2A                    fld tword [rdx]
  9626 00003CA2 D93424                  fnstenv [rsp]
  9627                                 
  9628                                 
  9629 00003CA5 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9630 00003CA9 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9631 00003CAF 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9632                                 
  9633                                 
  9634 00003CB3 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9635 00003CB8 4981E300470000          and r11, 0x4700
  9636 00003CBF 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9637 00003CC5 482500380000            and rax, 0x3800
  9638 00003CCB 4C09D8                  or rax, r11
  9639 00003CCE 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9640                                 
  9641 00003CD3 D92424                  fldenv [rsp]
  9642 00003CD6 D9FC                    frndint
  9643                                 
  9644 00003CD8 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9645 00003CDB DBE2                    fnclex
  9646 00003CDD DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9647                                 
  9648 00003CDF DBE3                    fninit
  9649 00003CE1 4883C420                add rsp, 20
  9650 00003CE5 C3                      ret
  9651                                 [global iemAImpl_frndint_r80_EndProc:function hidden]
  9652                                 iemAImpl_frndint_r80_EndProc:
  9653                                 [size iemAImpl_frndint_r80 iemAImpl_frndint_r80_EndProc - iemAImpl_frndint_r80]
  9654                                 [size iemAImpl_frndint_r80_EndProc 0]
  9655 00003CE6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9656                                 %line 2594+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9657                                 [global iemAImpl_fsin_r80]
  9658                                 %line 2594+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9659                                 iemAImpl_fsin_r80:
  9660 00003CEA 4883EC20                sub rsp, 20
  9661                                 
  9662 00003CEE DBE3                    fninit
  9663 00003CF0 DB2A                    fld tword [rdx]
  9664 00003CF2 D93424                  fnstenv [rsp]
  9665                                 
  9666                                 
  9667 00003CF5 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9668 00003CF9 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9669 00003CFF 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9670                                 
  9671                                 
  9672 00003D03 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9673 00003D08 4981E300470000          and r11, 0x4700
  9674 00003D0F 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9675 00003D15 482500380000            and rax, 0x3800
  9676 00003D1B 4C09D8                  or rax, r11
  9677 00003D1E 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9678                                 
  9679 00003D23 D92424                  fldenv [rsp]
  9680 00003D26 D9FE                    fsin
  9681                                 
  9682 00003D28 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9683 00003D2B DBE2                    fnclex
  9684 00003D2D DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9685                                 
  9686 00003D2F DBE3                    fninit
  9687 00003D31 4883C420                add rsp, 20
  9688 00003D35 C3                      ret
  9689                                 [global iemAImpl_fsin_r80_EndProc:function hidden]
  9690                                 iemAImpl_fsin_r80_EndProc:
  9691                                 [size iemAImpl_fsin_r80 iemAImpl_fsin_r80_EndProc - iemAImpl_fsin_r80]
  9692                                 [size iemAImpl_fsin_r80_EndProc 0]
  9693 00003D36 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9694                                 %line 2595+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9695                                 [global iemAImpl_fcos_r80]
  9696                                 %line 2595+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9697                                 iemAImpl_fcos_r80:
  9698 00003D3A 4883EC20                sub rsp, 20
  9699                                 
  9700 00003D3E DBE3                    fninit
  9701 00003D40 DB2A                    fld tword [rdx]
  9702 00003D42 D93424                  fnstenv [rsp]
  9703                                 
  9704                                 
  9705 00003D45 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9706 00003D49 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9707 00003D4F 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9708                                 
  9709                                 
  9710 00003D53 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9711 00003D58 4981E300470000          and r11, 0x4700
  9712 00003D5F 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9713 00003D65 482500380000            and rax, 0x3800
  9714 00003D6B 4C09D8                  or rax, r11
  9715 00003D6E 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9716                                 
  9717 00003D73 D92424                  fldenv [rsp]
  9718 00003D76 D9FF                    fcos
  9719                                 
  9720 00003D78 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9721 00003D7B DBE2                    fnclex
  9722 00003D7D DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9723                                 
  9724 00003D7F DBE3                    fninit
  9725 00003D81 4883C420                add rsp, 20
  9726 00003D85 C3                      ret
  9727                                 [global iemAImpl_fcos_r80_EndProc:function hidden]
  9728                                 iemAImpl_fcos_r80_EndProc:
  9729                                 [size iemAImpl_fcos_r80 iemAImpl_fcos_r80_EndProc - iemAImpl_fcos_r80]
  9730                                 [size iemAImpl_fcos_r80_EndProc 0]
  9731 00003D86 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9732                                 %line 2596+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9733                                 
  9734                                 
  9735                                 
  9736                                 
  9737                                 
  9738                                 
  9739                                 
  9740                                 
  9741                                 
  9742                                 
  9743                                 
  9744                                 
  9745                                 %line 2625+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9746                                 
  9747                                 [global iemAImpl_ftst_r80]
  9748                                 %line 2626+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9749                                 iemAImpl_ftst_r80:
  9750 00003D8A 4883EC20                sub rsp, 20
  9751                                 
  9752 00003D8E DBE3                    fninit
  9753 00003D90 DB2A                    fld tword [rdx]
  9754 00003D92 D93424                  fnstenv [rsp]
  9755                                 
  9756                                 
  9757 00003D95 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9758 00003D99 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9759 00003D9F 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9760                                 
  9761                                 
  9762 00003DA3 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9763 00003DA8 4981E300470000          and r11, 0x4700
  9764 00003DAF 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9765 00003DB5 482500380000            and rax, 0x3800
  9766 00003DBB 4C09D8                  or rax, r11
  9767 00003DBE 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9768                                 
  9769 00003DC3 D92424                  fldenv [rsp]
  9770 00003DC6 D9E4                    ftst
  9771                                 
  9772 00003DC8 DD3E                    fnstsw word [rsi]
  9773                                 
  9774 00003DCA DBE3                    fninit
  9775 00003DCC 4883C420                add rsp, 20
  9776 00003DD0 C3                      ret
  9777                                 [global iemAImpl_ftst_r80_EndProc:function hidden]
  9778                                 iemAImpl_ftst_r80_EndProc:
  9779                                 [size iemAImpl_ftst_r80 iemAImpl_ftst_r80_EndProc - iemAImpl_ftst_r80]
  9780                                 [size iemAImpl_ftst_r80_EndProc 0]
  9781 00003DD1 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9782                                 %line 2627+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9783                                 [global iemAImpl_fxam_r80]
  9784                                 %line 2627+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9785                                 iemAImpl_fxam_r80:
  9786 00003DD5 4883EC20                sub rsp, 20
  9787                                 
  9788 00003DD9 DBE3                    fninit
  9789 00003DDB DB2A                    fld tword [rdx]
  9790 00003DDD D93424                  fnstenv [rsp]
  9791                                 
  9792                                 
  9793 00003DE0 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9794 00003DE4 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9795 00003DEA 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9796                                 
  9797                                 
  9798 00003DEE 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9799 00003DF3 4981E300470000          and r11, 0x4700
  9800 00003DFA 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9801 00003E00 482500380000            and rax, 0x3800
  9802 00003E06 4C09D8                  or rax, r11
  9803 00003E09 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9804                                 
  9805 00003E0E D92424                  fldenv [rsp]
  9806 00003E11 D9E5                    fxam
  9807                                 
  9808 00003E13 DD3E                    fnstsw word [rsi]
  9809                                 
  9810 00003E15 DBE3                    fninit
  9811 00003E17 4883C420                add rsp, 20
  9812 00003E1B C3                      ret
  9813                                 [global iemAImpl_fxam_r80_EndProc:function hidden]
  9814                                 iemAImpl_fxam_r80_EndProc:
  9815                                 [size iemAImpl_fxam_r80 iemAImpl_fxam_r80_EndProc - iemAImpl_fxam_r80]
  9816                                 [size iemAImpl_fxam_r80_EndProc 0]
  9817 00003E1C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9818                                 %line 2628+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9819                                 
  9820                                 
  9821                                 
  9822                                 
  9823                                 
  9824                                 
  9825                                 
  9826                                 
  9827                                 
  9828                                 
  9829                                 
  9830                                 %line 2657+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9831                                 
  9832                                 [global iemAImpl_fld1]
  9833                                 %line 2658+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9834                                 iemAImpl_fld1:
  9835 00003E20 4883EC20                sub rsp, 20
  9836                                 
  9837 00003E24 DBE3                    fninit
  9838 00003E26 D93424                  fnstenv [rsp]
  9839                                 
  9840                                 
  9841 00003E29 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9842 00003E2D 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9843 00003E33 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9844                                 
  9845                                 
  9846 00003E37 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9847 00003E3C 4981E300470000          and r11, 0x4700
  9848 00003E43 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9849 00003E49 482500380000            and rax, 0x3800
  9850 00003E4F 4C09D8                  or rax, r11
  9851 00003E52 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9852                                 
  9853 00003E57 D92424                  fldenv [rsp]
  9854 00003E5A D9E8                    fld1
  9855                                 
  9856 00003E5C DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9857 00003E5F DBE2                    fnclex
  9858 00003E61 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9859                                 
  9860 00003E63 DBE3                    fninit
  9861 00003E65 4883C420                add rsp, 20
  9862 00003E69 C3                      ret
  9863                                 [global iemAImpl_fld1_EndProc:function hidden]
  9864                                 iemAImpl_fld1_EndProc:
  9865                                 [size iemAImpl_fld1 iemAImpl_fld1_EndProc - iemAImpl_fld1]
  9866                                 [size iemAImpl_fld1_EndProc 0]
  9867 00003E6A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9868                                 %line 2659+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9869                                 [global iemAImpl_fldl2t]
  9870                                 %line 2659+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9871                                 iemAImpl_fldl2t:
  9872 00003E6E 4883EC20                sub rsp, 20
  9873                                 
  9874 00003E72 DBE3                    fninit
  9875 00003E74 D93424                  fnstenv [rsp]
  9876                                 
  9877                                 
  9878 00003E77 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9879 00003E7B 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9880 00003E81 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9881                                 
  9882                                 
  9883 00003E85 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9884 00003E8A 4981E300470000          and r11, 0x4700
  9885 00003E91 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9886 00003E97 482500380000            and rax, 0x3800
  9887 00003E9D 4C09D8                  or rax, r11
  9888 00003EA0 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9889                                 
  9890 00003EA5 D92424                  fldenv [rsp]
  9891 00003EA8 D9E9                    fldl2t
  9892                                 
  9893 00003EAA DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9894 00003EAD DBE2                    fnclex
  9895 00003EAF DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9896                                 
  9897 00003EB1 DBE3                    fninit
  9898 00003EB3 4883C420                add rsp, 20
  9899 00003EB7 C3                      ret
  9900                                 [global iemAImpl_fldl2t_EndProc:function hidden]
  9901                                 iemAImpl_fldl2t_EndProc:
  9902                                 [size iemAImpl_fldl2t iemAImpl_fldl2t_EndProc - iemAImpl_fldl2t]
  9903                                 [size iemAImpl_fldl2t_EndProc 0]
  9904 00003EB8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9905                                 %line 2660+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9906                                 [global iemAImpl_fldl2e]
  9907                                 %line 2660+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9908                                 iemAImpl_fldl2e:
  9909 00003EBC 4883EC20                sub rsp, 20
  9910                                 
  9911 00003EC0 DBE3                    fninit
  9912 00003EC2 D93424                  fnstenv [rsp]
  9913                                 
  9914                                 
  9915 00003EC5 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9916 00003EC9 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9917 00003ECF 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9918                                 
  9919                                 
  9920 00003ED3 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9921 00003ED8 4981E300470000          and r11, 0x4700
  9922 00003EDF 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9923 00003EE5 482500380000            and rax, 0x3800
  9924 00003EEB 4C09D8                  or rax, r11
  9925 00003EEE 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9926                                 
  9927 00003EF3 D92424                  fldenv [rsp]
  9928 00003EF6 D9EA                    fldl2e
  9929                                 
  9930 00003EF8 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9931 00003EFB DBE2                    fnclex
  9932 00003EFD DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9933                                 
  9934 00003EFF DBE3                    fninit
  9935 00003F01 4883C420                add rsp, 20
  9936 00003F05 C3                      ret
  9937                                 [global iemAImpl_fldl2e_EndProc:function hidden]
  9938                                 iemAImpl_fldl2e_EndProc:
  9939                                 [size iemAImpl_fldl2e iemAImpl_fldl2e_EndProc - iemAImpl_fldl2e]
  9940                                 [size iemAImpl_fldl2e_EndProc 0]
  9941 00003F06 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9942                                 %line 2661+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9943                                 [global iemAImpl_fldpi]
  9944                                 %line 2661+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9945                                 iemAImpl_fldpi:
  9946 00003F0A 4883EC20                sub rsp, 20
  9947                                 
  9948 00003F0E DBE3                    fninit
  9949 00003F10 D93424                  fnstenv [rsp]
  9950                                 
  9951                                 
  9952 00003F13 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9953 00003F17 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9954 00003F1D 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9955                                 
  9956                                 
  9957 00003F21 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9958 00003F26 4981E300470000          and r11, 0x4700
  9959 00003F2D 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9960 00003F33 482500380000            and rax, 0x3800
  9961 00003F39 4C09D8                  or rax, r11
  9962 00003F3C 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
  9963                                 
  9964 00003F41 D92424                  fldenv [rsp]
  9965 00003F44 D9EB                    fldpi
  9966                                 
  9967 00003F46 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
  9968 00003F49 DBE2                    fnclex
  9969 00003F4B DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
  9970                                 
  9971 00003F4D DBE3                    fninit
  9972 00003F4F 4883C420                add rsp, 20
  9973 00003F53 C3                      ret
  9974                                 [global iemAImpl_fldpi_EndProc:function hidden]
  9975                                 iemAImpl_fldpi_EndProc:
  9976                                 [size iemAImpl_fldpi iemAImpl_fldpi_EndProc - iemAImpl_fldpi]
  9977                                 [size iemAImpl_fldpi_EndProc 0]
  9978 00003F54 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
  9979                                 %line 2662+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9980                                 [global iemAImpl_fldlg2]
  9981                                 %line 2662+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
  9982                                 iemAImpl_fldlg2:
  9983 00003F58 4883EC20                sub rsp, 20
  9984                                 
  9985 00003F5C DBE3                    fninit
  9986 00003F5E D93424                  fnstenv [rsp]
  9987                                 
  9988                                 
  9989 00003F61 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
  9990 00003F65 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
  9991 00003F6B 66890424                mov [rsp + X86FSTENV32P.FCW], ax
  9992                                 
  9993                                 
  9994 00003F6F 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
  9995 00003F74 4981E300470000          and r11, 0x4700
  9996 00003F7B 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
  9997 00003F81 482500380000            and rax, 0x3800
  9998 00003F87 4C09D8                  or rax, r11
  9999 00003F8A 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
 10000                                 
 10001 00003F8F D92424                  fldenv [rsp]
 10002 00003F92 D9EC                    fldlg2
 10003                                 
 10004 00003F94 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
 10005 00003F97 DBE2                    fnclex
 10006 00003F99 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
 10007                                 
 10008 00003F9B DBE3                    fninit
 10009 00003F9D 4883C420                add rsp, 20
 10010 00003FA1 C3                      ret
 10011                                 [global iemAImpl_fldlg2_EndProc:function hidden]
 10012                                 iemAImpl_fldlg2_EndProc:
 10013                                 [size iemAImpl_fldlg2 iemAImpl_fldlg2_EndProc - iemAImpl_fldlg2]
 10014                                 [size iemAImpl_fldlg2_EndProc 0]
 10015 00003FA2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10016                                 %line 2663+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10017                                 [global iemAImpl_fldln2]
 10018                                 %line 2663+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10019                                 iemAImpl_fldln2:
 10020 00003FA6 4883EC20                sub rsp, 20
 10021                                 
 10022 00003FAA DBE3                    fninit
 10023 00003FAC D93424                  fnstenv [rsp]
 10024                                 
 10025                                 
 10026 00003FAF 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
 10027 00003FB3 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
 10028 00003FB9 66890424                mov [rsp + X86FSTENV32P.FCW], ax
 10029                                 
 10030                                 
 10031 00003FBD 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
 10032 00003FC2 4981E300470000          and r11, 0x4700
 10033 00003FC9 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
 10034 00003FCF 482500380000            and rax, 0x3800
 10035 00003FD5 4C09D8                  or rax, r11
 10036 00003FD8 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
 10037                                 
 10038 00003FDD D92424                  fldenv [rsp]
 10039 00003FE0 D9ED                    fldln2
 10040                                 
 10041 00003FE2 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
 10042 00003FE5 DBE2                    fnclex
 10043 00003FE7 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
 10044                                 
 10045 00003FE9 DBE3                    fninit
 10046 00003FEB 4883C420                add rsp, 20
 10047 00003FEF C3                      ret
 10048                                 [global iemAImpl_fldln2_EndProc:function hidden]
 10049                                 iemAImpl_fldln2_EndProc:
 10050                                 [size iemAImpl_fldln2 iemAImpl_fldln2_EndProc - iemAImpl_fldln2]
 10051                                 [size iemAImpl_fldln2_EndProc 0]
 10052 00003FF0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10053                                 %line 2664+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10054                                 [global iemAImpl_fldz]
 10055                                 %line 2664+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10056                                 iemAImpl_fldz:
 10057 00003FF4 4883EC20                sub rsp, 20
 10058                                 
 10059 00003FF8 DBE3                    fninit
 10060 00003FFA D93424                  fnstenv [rsp]
 10061                                 
 10062                                 
 10063 00003FFD 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
 10064 00004001 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
 10065 00004007 66890424                mov [rsp + X86FSTENV32P.FCW], ax
 10066                                 
 10067                                 
 10068 0000400B 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
 10069 00004010 4981E300470000          and r11, 0x4700
 10070 00004017 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
 10071 0000401D 482500380000            and rax, 0x3800
 10072 00004023 4C09D8                  or rax, r11
 10073 00004026 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
 10074                                 
 10075 0000402B D92424                  fldenv [rsp]
 10076 0000402E D9EE                    fldz
 10077                                 
 10078 00004030 DD7E0A                  fnstsw word [rsi + IEMFPURESULT.FSW]
 10079 00004033 DBE2                    fnclex
 10080 00004035 DB3E                    fstp tword [rsi + IEMFPURESULT.r80Result]
 10081                                 
 10082 00004037 DBE3                    fninit
 10083 00004039 4883C420                add rsp, 20
 10084 0000403D C3                      ret
 10085                                 [global iemAImpl_fldz_EndProc:function hidden]
 10086                                 iemAImpl_fldz_EndProc:
 10087                                 [size iemAImpl_fldz iemAImpl_fldz_EndProc - iemAImpl_fldz]
 10088                                 [size iemAImpl_fldz_EndProc 0]
 10089 0000403E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10090                                 %line 2665+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10091                                 
 10092                                 
 10093                                 
 10094                                 
 10095                                 
 10096                                 
 10097                                 
 10098                                 
 10099                                 
 10100                                 
 10101                                 
 10102                                 %line 2697+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10103                                 
 10104                                 [global iemAImpl_fptan_r80_r80]
 10105                                 %line 2698+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10106                                 iemAImpl_fptan_r80_r80:
 10107 00004042 4883EC20                sub rsp, 20
 10108                                 
 10109 00004046 DBE3                    fninit
 10110 00004048 DB2A                    fld tword [rdx]
 10111 0000404A D93424                  fnstenv [rsp]
 10112                                 
 10113                                 
 10114 0000404D 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
 10115 00004051 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
 10116 00004057 66890424                mov [rsp + X86FSTENV32P.FCW], ax
 10117                                 
 10118                                 
 10119 0000405B 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
 10120 00004060 4981E300470000          and r11, 0x4700
 10121 00004067 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
 10122 0000406D 482500380000            and rax, 0x3800
 10123 00004073 4C09D8                  or rax, r11
 10124 00004076 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
 10125                                 
 10126 0000407B D92424                  fldenv [rsp]
 10127 0000407E D9F2                    fptan
 10128                                 
 10129 00004080 DD7E0A                  fnstsw word [rsi + IEMFPURESULTTWO.FSW]
 10130 00004083 DBE2                    fnclex
 10131 00004085 DB7E0C                  fstp tword [rsi + IEMFPURESULTTWO.r80Result2]
 10132 00004088 DBE2                    fnclex
 10133 0000408A DB3E                    fstp tword [rsi + IEMFPURESULTTWO.r80Result1]
 10134                                 
 10135 0000408C DBE3                    fninit
 10136 0000408E 4883C420                add rsp, 20
 10137 00004092 C3                      ret
 10138                                 [global iemAImpl_fptan_r80_r80_EndProc:function hidden]
 10139                                 iemAImpl_fptan_r80_r80_EndProc:
 10140                                 [size iemAImpl_fptan_r80_r80 iemAImpl_fptan_r80_r80_EndProc - iemAImpl_fptan_r80_r80]
 10141                                 [size iemAImpl_fptan_r80_r80_EndProc 0]
 10142 00004093 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10143                                 %line 2699+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10144                                 [global iemAImpl_fxtract_r80_r80]
 10145                                 %line 2699+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10146                                 iemAImpl_fxtract_r80_r80:
 10147 00004097 4883EC20                sub rsp, 20
 10148                                 
 10149 0000409B DBE3                    fninit
 10150 0000409D DB2A                    fld tword [rdx]
 10151 0000409F D93424                  fnstenv [rsp]
 10152                                 
 10153                                 
 10154 000040A2 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
 10155 000040A6 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
 10156 000040AC 66890424                mov [rsp + X86FSTENV32P.FCW], ax
 10157                                 
 10158                                 
 10159 000040B0 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
 10160 000040B5 4981E300470000          and r11, 0x4700
 10161 000040BC 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
 10162 000040C2 482500380000            and rax, 0x3800
 10163 000040C8 4C09D8                  or rax, r11
 10164 000040CB 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
 10165                                 
 10166 000040D0 D92424                  fldenv [rsp]
 10167 000040D3 D9F4                    fxtract
 10168                                 
 10169 000040D5 DD7E0A                  fnstsw word [rsi + IEMFPURESULTTWO.FSW]
 10170 000040D8 DBE2                    fnclex
 10171 000040DA DB7E0C                  fstp tword [rsi + IEMFPURESULTTWO.r80Result2]
 10172 000040DD DBE2                    fnclex
 10173 000040DF DB3E                    fstp tword [rsi + IEMFPURESULTTWO.r80Result1]
 10174                                 
 10175 000040E1 DBE3                    fninit
 10176 000040E3 4883C420                add rsp, 20
 10177 000040E7 C3                      ret
 10178                                 [global iemAImpl_fxtract_r80_r80_EndProc:function hidden]
 10179                                 iemAImpl_fxtract_r80_r80_EndProc:
 10180                                 [size iemAImpl_fxtract_r80_r80 iemAImpl_fxtract_r80_r80_EndProc - iemAImpl_fxtract_r80_r80]
 10181                                 [size iemAImpl_fxtract_r80_r80_EndProc 0]
 10182 000040E8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10183                                 %line 2700+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10184                                 [global iemAImpl_fsincos_r80_r80]
 10185                                 %line 2700+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10186                                 iemAImpl_fsincos_r80_r80:
 10187 000040EC 4883EC20                sub rsp, 20
 10188                                 
 10189 000040F0 DBE3                    fninit
 10190 000040F2 DB2A                    fld tword [rdx]
 10191 000040F4 D93424                  fnstenv [rsp]
 10192                                 
 10193                                 
 10194 000040F7 480FB707                movzx rax, word [rdi + X86FXSTATE.FCW]
 10195 000040FB 48257F0F0000            and rax, 0x007f | 0x0300 | 0x0c00
 10196 00004101 66890424                mov [rsp + X86FSTENV32P.FCW], ax
 10197                                 
 10198                                 
 10199 00004105 4C0FB75F02              movzx r11, word [rdi + X86FXSTATE.FSW]
 10200 0000410A 4981E300470000          and r11, 0x4700
 10201 00004111 480FB7442404            movzx rax, word [rsp + X86FSTENV32P.FSW]
 10202 00004117 482500380000            and rax, 0x3800
 10203 0000411D 4C09D8                  or rax, r11
 10204 00004120 6689442404              mov [rsp + X86FSTENV32P.FSW], ax
 10205                                 
 10206 00004125 D92424                  fldenv [rsp]
 10207 00004128 D9FB                    fsincos
 10208                                 
 10209 0000412A DD7E0A                  fnstsw word [rsi + IEMFPURESULTTWO.FSW]
 10210 0000412D DBE2                    fnclex
 10211 0000412F DB7E0C                  fstp tword [rsi + IEMFPURESULTTWO.r80Result2]
 10212 00004132 DBE2                    fnclex
 10213 00004134 DB3E                    fstp tword [rsi + IEMFPURESULTTWO.r80Result1]
 10214                                 
 10215 00004136 DBE3                    fninit
 10216 00004138 4883C420                add rsp, 20
 10217 0000413C C3                      ret
 10218                                 [global iemAImpl_fsincos_r80_r80_EndProc:function hidden]
 10219                                 iemAImpl_fsincos_r80_r80_EndProc:
 10220                                 [size iemAImpl_fsincos_r80_r80 iemAImpl_fsincos_r80_r80_EndProc - iemAImpl_fsincos_r80_r80]
 10221                                 [size iemAImpl_fsincos_r80_r80_EndProc 0]
 10222 0000413D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10223                                 %line 2701+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10224                                 
 10225                                 
 10226                                 
 10227                                 
 10228                                 
 10229                                 
 10230                                 
 10231                                 %line 2712+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10232                                 
 10233                                 
 10234                                 %line 2718+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10235                                 
 10236                                 
 10237                                 
 10238                                 
 10239                                 
 10240                                 
 10241                                 
 10242                                 
 10243                                 
 10244                                 
 10245                                 
 10246                                 %line 2756+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10247                                 
 10248                                 [global iemAImpl_pxor_u64]
 10249                                 %line 2757+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10250                                 iemAImpl_pxor_u64:
 10251                                 
 10252 00004141 0F6F06                  movq mm0, [rsi]
 10253 00004144 0F6F0A                  movq mm1, [rdx]
 10254 00004147 0FEFC1                  pxor mm0, mm1
 10255 0000414A 0F7F06                  movq [rsi], mm0
 10256                                 
 10257 0000414D C3                      ret
 10258                                 [global iemAImpl_pxor_u64_EndProc:function hidden]
 10259                                 iemAImpl_pxor_u64_EndProc:
 10260                                 [size iemAImpl_pxor_u64 iemAImpl_pxor_u64_EndProc - iemAImpl_pxor_u64]
 10261                                 [size iemAImpl_pxor_u64_EndProc 0]
 10262 0000414E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10263                                 
 10264                                 [global iemAImpl_pxor_u128]
 10265                                 iemAImpl_pxor_u128:
 10266                                 
 10267 00004152 F30F6F06                movdqu xmm0, [rsi]
 10268 00004156 F30F6F0A                movdqu xmm1, [rdx]
 10269 0000415A 660FEFC1                pxor xmm0, xmm1
 10270 0000415E F30F7F06                movdqu [rsi], xmm0
 10271                                 
 10272 00004162 C3                      ret
 10273                                 [global iemAImpl_pxor_u128_EndProc:function hidden]
 10274                                 iemAImpl_pxor_u128_EndProc:
 10275                                 [size iemAImpl_pxor_u128 iemAImpl_pxor_u128_EndProc - iemAImpl_pxor_u128]
 10276                                 [size iemAImpl_pxor_u128_EndProc 0]
 10277 00004163 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10278                                 %line 2758+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10279                                 [global iemAImpl_pcmpeqb_u64]
 10280                                 %line 2758+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10281                                 iemAImpl_pcmpeqb_u64:
 10282                                 
 10283 00004167 0F6F06                  movq mm0, [rsi]
 10284 0000416A 0F6F0A                  movq mm1, [rdx]
 10285 0000416D 0F74C1                  pcmpeqb mm0, mm1
 10286 00004170 0F7F06                  movq [rsi], mm0
 10287                                 
 10288 00004173 C3                      ret
 10289                                 [global iemAImpl_pcmpeqb_u64_EndProc:function hidden]
 10290                                 iemAImpl_pcmpeqb_u64_EndProc:
 10291                                 [size iemAImpl_pcmpeqb_u64 iemAImpl_pcmpeqb_u64_EndProc - iemAImpl_pcmpeqb_u64]
 10292                                 [size iemAImpl_pcmpeqb_u64_EndProc 0]
 10293 00004174 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10294                                 
 10295                                 [global iemAImpl_pcmpeqb_u128]
 10296                                 iemAImpl_pcmpeqb_u128:
 10297                                 
 10298 00004178 F30F6F06                movdqu xmm0, [rsi]
 10299 0000417C F30F6F0A                movdqu xmm1, [rdx]
 10300 00004180 660F74C1                pcmpeqb xmm0, xmm1
 10301 00004184 F30F7F06                movdqu [rsi], xmm0
 10302                                 
 10303 00004188 C3                      ret
 10304                                 [global iemAImpl_pcmpeqb_u128_EndProc:function hidden]
 10305                                 iemAImpl_pcmpeqb_u128_EndProc:
 10306                                 [size iemAImpl_pcmpeqb_u128 iemAImpl_pcmpeqb_u128_EndProc - iemAImpl_pcmpeqb_u128]
 10307                                 [size iemAImpl_pcmpeqb_u128_EndProc 0]
 10308 00004189 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10309                                 %line 2759+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10310                                 [global iemAImpl_pcmpeqw_u64]
 10311                                 %line 2759+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10312                                 iemAImpl_pcmpeqw_u64:
 10313                                 
 10314 0000418D 0F6F06                  movq mm0, [rsi]
 10315 00004190 0F6F0A                  movq mm1, [rdx]
 10316 00004193 0F75C1                  pcmpeqw mm0, mm1
 10317 00004196 0F7F06                  movq [rsi], mm0
 10318                                 
 10319 00004199 C3                      ret
 10320                                 [global iemAImpl_pcmpeqw_u64_EndProc:function hidden]
 10321                                 iemAImpl_pcmpeqw_u64_EndProc:
 10322                                 [size iemAImpl_pcmpeqw_u64 iemAImpl_pcmpeqw_u64_EndProc - iemAImpl_pcmpeqw_u64]
 10323                                 [size iemAImpl_pcmpeqw_u64_EndProc 0]
 10324 0000419A CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10325                                 
 10326                                 [global iemAImpl_pcmpeqw_u128]
 10327                                 iemAImpl_pcmpeqw_u128:
 10328                                 
 10329 0000419E F30F6F06                movdqu xmm0, [rsi]
 10330 000041A2 F30F6F0A                movdqu xmm1, [rdx]
 10331 000041A6 660F75C1                pcmpeqw xmm0, xmm1
 10332 000041AA F30F7F06                movdqu [rsi], xmm0
 10333                                 
 10334 000041AE C3                      ret
 10335                                 [global iemAImpl_pcmpeqw_u128_EndProc:function hidden]
 10336                                 iemAImpl_pcmpeqw_u128_EndProc:
 10337                                 [size iemAImpl_pcmpeqw_u128 iemAImpl_pcmpeqw_u128_EndProc - iemAImpl_pcmpeqw_u128]
 10338                                 [size iemAImpl_pcmpeqw_u128_EndProc 0]
 10339 000041AF CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10340                                 %line 2760+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10341                                 [global iemAImpl_pcmpeqd_u64]
 10342                                 %line 2760+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10343                                 iemAImpl_pcmpeqd_u64:
 10344                                 
 10345 000041B3 0F6F06                  movq mm0, [rsi]
 10346 000041B6 0F6F0A                  movq mm1, [rdx]
 10347 000041B9 0F76C1                  pcmpeqd mm0, mm1
 10348 000041BC 0F7F06                  movq [rsi], mm0
 10349                                 
 10350 000041BF C3                      ret
 10351                                 [global iemAImpl_pcmpeqd_u64_EndProc:function hidden]
 10352                                 iemAImpl_pcmpeqd_u64_EndProc:
 10353                                 [size iemAImpl_pcmpeqd_u64 iemAImpl_pcmpeqd_u64_EndProc - iemAImpl_pcmpeqd_u64]
 10354                                 [size iemAImpl_pcmpeqd_u64_EndProc 0]
 10355 000041C0 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10356                                 
 10357                                 [global iemAImpl_pcmpeqd_u128]
 10358                                 iemAImpl_pcmpeqd_u128:
 10359                                 
 10360 000041C4 F30F6F06                movdqu xmm0, [rsi]
 10361 000041C8 F30F6F0A                movdqu xmm1, [rdx]
 10362 000041CC 660F76C1                pcmpeqd xmm0, xmm1
 10363 000041D0 F30F7F06                movdqu [rsi], xmm0
 10364                                 
 10365 000041D4 C3                      ret
 10366                                 [global iemAImpl_pcmpeqd_u128_EndProc:function hidden]
 10367                                 iemAImpl_pcmpeqd_u128_EndProc:
 10368                                 [size iemAImpl_pcmpeqd_u128 iemAImpl_pcmpeqd_u128_EndProc - iemAImpl_pcmpeqd_u128]
 10369                                 [size iemAImpl_pcmpeqd_u128_EndProc 0]
 10370 000041D5 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10371                                 %line 2761+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10372                                 
 10373                                 
 10374                                 
 10375                                 
 10376                                 
 10377                                 
 10378                                 
 10379                                 
 10380                                 
 10381                                 
 10382                                 
 10383                                 
 10384                                 %line 2802+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10385                                 
 10386                                 [global iemAImpl_punpcklbw_u64]
 10387                                 %line 2803+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10388                                 iemAImpl_punpcklbw_u64:
 10389                                 
 10390 000041D9 0F6F06                  movq mm0, [rsi]
 10391 000041DC 0F6E0A                  movd mm1, [rdx]
 10392 000041DF 0F60C1                  punpcklbw mm0, mm1
 10393 000041E2 0F7F06                  movq [rsi], mm0
 10394                                 
 10395 000041E5 C3                      ret
 10396                                 [global iemAImpl_punpcklbw_u64_EndProc:function hidden]
 10397                                 iemAImpl_punpcklbw_u64_EndProc:
 10398                                 [size iemAImpl_punpcklbw_u64 iemAImpl_punpcklbw_u64_EndProc - iemAImpl_punpcklbw_u64]
 10399                                 [size iemAImpl_punpcklbw_u64_EndProc 0]
 10400 000041E6 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10401                                 
 10402                                 [global iemAImpl_punpcklbw_u128]
 10403                                 iemAImpl_punpcklbw_u128:
 10404                                 
 10405 000041EA F30F6F06                movdqu xmm0, [rsi]
 10406 000041EE F30F7E0A                movq xmm1, [rdx]
 10407 000041F2 660F60C1                punpcklbw xmm0, xmm1
 10408 000041F6 F30F7F06                movdqu [rsi], xmm0
 10409                                 
 10410 000041FA C3                      ret
 10411                                 [global iemAImpl_punpcklbw_u128_EndProc:function hidden]
 10412                                 iemAImpl_punpcklbw_u128_EndProc:
 10413                                 [size iemAImpl_punpcklbw_u128 iemAImpl_punpcklbw_u128_EndProc - iemAImpl_punpcklbw_u128]
 10414                                 [size iemAImpl_punpcklbw_u128_EndProc 0]
 10415 000041FB CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10416                                 %line 2804+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10417                                 [global iemAImpl_punpcklwd_u64]
 10418                                 %line 2804+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10419                                 iemAImpl_punpcklwd_u64:
 10420                                 
 10421 000041FF 0F6F06                  movq mm0, [rsi]
 10422 00004202 0F6E0A                  movd mm1, [rdx]
 10423 00004205 0F61C1                  punpcklwd mm0, mm1
 10424 00004208 0F7F06                  movq [rsi], mm0
 10425                                 
 10426 0000420B C3                      ret
 10427                                 [global iemAImpl_punpcklwd_u64_EndProc:function hidden]
 10428                                 iemAImpl_punpcklwd_u64_EndProc:
 10429                                 [size iemAImpl_punpcklwd_u64 iemAImpl_punpcklwd_u64_EndProc - iemAImpl_punpcklwd_u64]
 10430                                 [size iemAImpl_punpcklwd_u64_EndProc 0]
 10431 0000420C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10432                                 
 10433                                 [global iemAImpl_punpcklwd_u128]
 10434                                 iemAImpl_punpcklwd_u128:
 10435                                 
 10436 00004210 F30F6F06                movdqu xmm0, [rsi]
 10437 00004214 F30F7E0A                movq xmm1, [rdx]
 10438 00004218 660F61C1                punpcklwd xmm0, xmm1
 10439 0000421C F30F7F06                movdqu [rsi], xmm0
 10440                                 
 10441 00004220 C3                      ret
 10442                                 [global iemAImpl_punpcklwd_u128_EndProc:function hidden]
 10443                                 iemAImpl_punpcklwd_u128_EndProc:
 10444                                 [size iemAImpl_punpcklwd_u128 iemAImpl_punpcklwd_u128_EndProc - iemAImpl_punpcklwd_u128]
 10445                                 [size iemAImpl_punpcklwd_u128_EndProc 0]
 10446 00004221 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10447                                 %line 2805+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10448                                 [global iemAImpl_punpckldq_u64]
 10449                                 %line 2805+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10450                                 iemAImpl_punpckldq_u64:
 10451                                 
 10452 00004225 0F6F06                  movq mm0, [rsi]
 10453 00004228 0F6E0A                  movd mm1, [rdx]
 10454 0000422B 0F62C1                  punpckldq mm0, mm1
 10455 0000422E 0F7F06                  movq [rsi], mm0
 10456                                 
 10457 00004231 C3                      ret
 10458                                 [global iemAImpl_punpckldq_u64_EndProc:function hidden]
 10459                                 iemAImpl_punpckldq_u64_EndProc:
 10460                                 [size iemAImpl_punpckldq_u64 iemAImpl_punpckldq_u64_EndProc - iemAImpl_punpckldq_u64]
 10461                                 [size iemAImpl_punpckldq_u64_EndProc 0]
 10462 00004232 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10463                                 
 10464                                 [global iemAImpl_punpckldq_u128]
 10465                                 iemAImpl_punpckldq_u128:
 10466                                 
 10467 00004236 F30F6F06                movdqu xmm0, [rsi]
 10468 0000423A F30F7E0A                movq xmm1, [rdx]
 10469 0000423E 660F62C1                punpckldq xmm0, xmm1
 10470 00004242 F30F7F06                movdqu [rsi], xmm0
 10471                                 
 10472 00004246 C3                      ret
 10473                                 [global iemAImpl_punpckldq_u128_EndProc:function hidden]
 10474                                 iemAImpl_punpckldq_u128_EndProc:
 10475                                 [size iemAImpl_punpckldq_u128 iemAImpl_punpckldq_u128_EndProc - iemAImpl_punpckldq_u128]
 10476                                 [size iemAImpl_punpckldq_u128_EndProc 0]
 10477 00004247 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10478                                 %line 2806+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10479                                 
 10480                                 %line 2806+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10481                                 [global iemAImpl_punpcklqdq_u128]
 10482                                 iemAImpl_punpcklqdq_u128:
 10483                                 
 10484 0000424B F30F6F06                movdqu xmm0, [rsi]
 10485 0000424F F30F7E0A                movq xmm1, [rdx]
 10486 00004253 660F6CC1                punpcklqdq xmm0, xmm1
 10487 00004257 F30F7F06                movdqu [rsi], xmm0
 10488                                 
 10489 0000425B C3                      ret
 10490                                 [global iemAImpl_punpcklqdq_u128_EndProc:function hidden]
 10491                                 iemAImpl_punpcklqdq_u128_EndProc:
 10492                                 [size iemAImpl_punpcklqdq_u128 iemAImpl_punpcklqdq_u128_EndProc - iemAImpl_punpcklqdq_u128]
 10493                                 [size iemAImpl_punpcklqdq_u128_EndProc 0]
 10494 0000425C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10495                                 %line 2807+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10496                                 
 10497                                 
 10498                                 
 10499                                 
 10500                                 
 10501                                 
 10502                                 
 10503                                 
 10504                                 
 10505                                 
 10506                                 
 10507                                 
 10508                                 
 10509                                 %line 2849+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10510                                 
 10511                                 [global iemAImpl_punpckhbw_u64]
 10512                                 %line 2850+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10513                                 iemAImpl_punpckhbw_u64:
 10514                                 
 10515 00004260 0F6F06                  movq mm0, [rsi]
 10516 00004263 0F6E0A                  movd mm1, [rdx]
 10517 00004266 0F68C1                  punpckhbw mm0, mm1
 10518 00004269 0F7F06                  movq [rsi], mm0
 10519                                 
 10520 0000426C C3                      ret
 10521                                 [global iemAImpl_punpckhbw_u64_EndProc:function hidden]
 10522                                 iemAImpl_punpckhbw_u64_EndProc:
 10523                                 [size iemAImpl_punpckhbw_u64 iemAImpl_punpckhbw_u64_EndProc - iemAImpl_punpckhbw_u64]
 10524                                 [size iemAImpl_punpckhbw_u64_EndProc 0]
 10525 0000426D CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10526                                 
 10527                                 [global iemAImpl_punpckhbw_u128]
 10528                                 iemAImpl_punpckhbw_u128:
 10529                                 
 10530 00004271 F30F6F06                movdqu xmm0, [rsi]
 10531 00004275 F30F7E0A                movq xmm1, [rdx]
 10532 00004279 660F68C1                punpckhbw xmm0, xmm1
 10533 0000427D F30F7F06                movdqu [rsi], xmm0
 10534                                 
 10535 00004281 C3                      ret
 10536                                 [global iemAImpl_punpckhbw_u128_EndProc:function hidden]
 10537                                 iemAImpl_punpckhbw_u128_EndProc:
 10538                                 [size iemAImpl_punpckhbw_u128 iemAImpl_punpckhbw_u128_EndProc - iemAImpl_punpckhbw_u128]
 10539                                 [size iemAImpl_punpckhbw_u128_EndProc 0]
 10540 00004282 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10541                                 %line 2851+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10542                                 [global iemAImpl_punpckhwd_u64]
 10543                                 %line 2851+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10544                                 iemAImpl_punpckhwd_u64:
 10545                                 
 10546 00004286 0F6F06                  movq mm0, [rsi]
 10547 00004289 0F6E0A                  movd mm1, [rdx]
 10548 0000428C 0F69C1                  punpckhwd mm0, mm1
 10549 0000428F 0F7F06                  movq [rsi], mm0
 10550                                 
 10551 00004292 C3                      ret
 10552                                 [global iemAImpl_punpckhwd_u64_EndProc:function hidden]
 10553                                 iemAImpl_punpckhwd_u64_EndProc:
 10554                                 [size iemAImpl_punpckhwd_u64 iemAImpl_punpckhwd_u64_EndProc - iemAImpl_punpckhwd_u64]
 10555                                 [size iemAImpl_punpckhwd_u64_EndProc 0]
 10556 00004293 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10557                                 
 10558                                 [global iemAImpl_punpckhwd_u128]
 10559                                 iemAImpl_punpckhwd_u128:
 10560                                 
 10561 00004297 F30F6F06                movdqu xmm0, [rsi]
 10562 0000429B F30F7E0A                movq xmm1, [rdx]
 10563 0000429F 660F69C1                punpckhwd xmm0, xmm1
 10564 000042A3 F30F7F06                movdqu [rsi], xmm0
 10565                                 
 10566 000042A7 C3                      ret
 10567                                 [global iemAImpl_punpckhwd_u128_EndProc:function hidden]
 10568                                 iemAImpl_punpckhwd_u128_EndProc:
 10569                                 [size iemAImpl_punpckhwd_u128 iemAImpl_punpckhwd_u128_EndProc - iemAImpl_punpckhwd_u128]
 10570                                 [size iemAImpl_punpckhwd_u128_EndProc 0]
 10571 000042A8 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10572                                 %line 2852+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10573                                 [global iemAImpl_punpckhdq_u64]
 10574                                 %line 2852+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10575                                 iemAImpl_punpckhdq_u64:
 10576                                 
 10577 000042AC 0F6F06                  movq mm0, [rsi]
 10578 000042AF 0F6E0A                  movd mm1, [rdx]
 10579 000042B2 0F6AC1                  punpckhdq mm0, mm1
 10580 000042B5 0F7F06                  movq [rsi], mm0
 10581                                 
 10582 000042B8 C3                      ret
 10583                                 [global iemAImpl_punpckhdq_u64_EndProc:function hidden]
 10584                                 iemAImpl_punpckhdq_u64_EndProc:
 10585                                 [size iemAImpl_punpckhdq_u64 iemAImpl_punpckhdq_u64_EndProc - iemAImpl_punpckhdq_u64]
 10586                                 [size iemAImpl_punpckhdq_u64_EndProc 0]
 10587 000042B9 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10588                                 
 10589                                 [global iemAImpl_punpckhdq_u128]
 10590                                 iemAImpl_punpckhdq_u128:
 10591                                 
 10592 000042BD F30F6F06                movdqu xmm0, [rsi]
 10593 000042C1 F30F7E0A                movq xmm1, [rdx]
 10594 000042C5 660F6AC1                punpckhdq xmm0, xmm1
 10595 000042C9 F30F7F06                movdqu [rsi], xmm0
 10596                                 
 10597 000042CD C3                      ret
 10598                                 [global iemAImpl_punpckhdq_u128_EndProc:function hidden]
 10599                                 iemAImpl_punpckhdq_u128_EndProc:
 10600                                 [size iemAImpl_punpckhdq_u128 iemAImpl_punpckhdq_u128_EndProc - iemAImpl_punpckhdq_u128]
 10601                                 [size iemAImpl_punpckhdq_u128_EndProc 0]
 10602 000042CE CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10603                                 %line 2853+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10604                                 
 10605                                 %line 2853+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10606                                 [global iemAImpl_punpckhqdq_u128]
 10607                                 iemAImpl_punpckhqdq_u128:
 10608                                 
 10609 000042D2 F30F6F06                movdqu xmm0, [rsi]
 10610 000042D6 F30F7E0A                movq xmm1, [rdx]
 10611 000042DA 660F6DC1                punpckhqdq xmm0, xmm1
 10612 000042DE F30F7F06                movdqu [rsi], xmm0
 10613                                 
 10614 000042E2 C3                      ret
 10615                                 [global iemAImpl_punpckhqdq_u128_EndProc:function hidden]
 10616                                 iemAImpl_punpckhqdq_u128_EndProc:
 10617                                 [size iemAImpl_punpckhqdq_u128 iemAImpl_punpckhqdq_u128_EndProc - iemAImpl_punpckhqdq_u128]
 10618                                 [size iemAImpl_punpckhqdq_u128_EndProc 0]
 10619 000042E3 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 10620                                 %line 2854+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10621                                 
 10622                                 
 10623                                 
 10624                                 
 10625                                 
 10626                                 
 10627                                 [global iemAImpl_pshufw]
 10628                                 %line 2860+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10629                                 iemAImpl_pshufw:
 10630                                 %line 2863+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10631                                 
 10632 000042E7 0F6F06                  movq mm0, [rsi]
 10633 000042EA 0F6F0A                  movq mm1, [rdx]
 10634 000042ED 488D0489                lea rax, [rcx + rcx*4]
 10635 000042F1 4C8D1D04000000          lea r11, [.imm0 wrt rip]
 10636 000042F8 4D8D1C03                lea r11, [r11 + rax]
 10637 000042FC 41FFD3                  call r11
 10638 000042FF 0F7F06                  movq [rsi], mm0
 10639                                 
 10640                                 %line 2873+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10641 00004302 C3                      ret
 10642                                 %line 2880+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10643                                 .imm0:
 10644                                 %line 2880+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 10645 00004303 0F70C100                pshufw mm0, mm1, 0
 10646 00004307 C3                      ret
 10647                                 .imm1:
 10648 00004308 0F70C101                pshufw mm0, mm1, 1
 10649 0000430C C3                      ret
 10650                                 .imm2:
 10651 0000430D 0F70C102                pshufw mm0, mm1, 2
 10652 00004311 C3                      ret
 10653                                 .imm3:
 10654 00004312 0F70C103                pshufw mm0, mm1, 3
 10655 00004316 C3                      ret
 10656                                 .imm4:
 10657 00004317 0F70C104                pshufw mm0, mm1, 4
 10658 0000431B C3                      ret
 10659                                 .imm5:
 10660 0000431C 0F70C105                pshufw mm0, mm1, 5
 10661 00004320 C3                      ret
 10662                                 .imm6:
 10663 00004321 0F70C106                pshufw mm0, mm1, 6
 10664 00004325 C3                      ret
 10665                                 .imm7:
 10666 00004326 0F70C107                pshufw mm0, mm1, 7
 10667 0000432A C3                      ret
 10668                                 .imm8:
 10669 0000432B 0F70C108                pshufw mm0, mm1, 8
 10670 0000432F C3                      ret
 10671                                 .imm9:
 10672 00004330 0F70C109                pshufw mm0, mm1, 9
 10673 00004334 C3                      ret
 10674                                 .imm10:
 10675 00004335 0F70C10A                pshufw mm0, mm1, 10
 10676 00004339 C3                      ret
 10677                                 .imm11:
 10678 0000433A 0F70C10B                pshufw mm0, mm1, 11
 10679 0000433E C3                      ret
 10680                                 .imm12:
 10681 0000433F 0F70C10C                pshufw mm0, mm1, 12
 10682 00004343 C3                      ret
 10683                                 .imm13:
 10684 00004344 0F70C10D                pshufw mm0, mm1, 13
 10685 00004348 C3                      ret
 10686                                 .imm14:
 10687 00004349 0F70C10E                pshufw mm0, mm1, 14
 10688 0000434D C3                      ret
 10689                                 .imm15:
 10690 0000434E 0F70C10F                pshufw mm0, mm1, 15
 10691 00004352 C3                      ret
 10692                                 .imm16:
 10693 00004353 0F70C110                pshufw mm0, mm1, 16
 10694 00004357 C3                      ret
 10695                                 .imm17:
 10696 00004358 0F70C111                pshufw mm0, mm1, 17
 10697 0000435C C3                      ret
 10698                                 .imm18:
 10699 0000435D 0F70C112                pshufw mm0, mm1, 18
 10700 00004361 C3                      ret
 10701                                 .imm19:
 10702 00004362 0F70C113                pshufw mm0, mm1, 19
 10703 00004366 C3                      ret
 10704                                 .imm20:
 10705 00004367 0F70C114                pshufw mm0, mm1, 20
 10706 0000436B C3                      ret
 10707                                 .imm21:
 10708 0000436C 0F70C115                pshufw mm0, mm1, 21
 10709 00004370 C3                      ret
 10710                                 .imm22:
 10711 00004371 0F70C116                pshufw mm0, mm1, 22
 10712 00004375 C3                      ret
 10713                                 .imm23:
 10714 00004376 0F70C117                pshufw mm0, mm1, 23
 10715 0000437A C3                      ret
 10716                                 .imm24:
 10717 0000437B 0F70C118                pshufw mm0, mm1, 24
 10718 0000437F C3                      ret
 10719                                 .imm25:
 10720 00004380 0F70C119                pshufw mm0, mm1, 25
 10721 00004384 C3                      ret
 10722                                 .imm26:
 10723 00004385 0F70C11A                pshufw mm0, mm1, 26
 10724 00004389 C3                      ret
 10725                                 .imm27:
 10726 0000438A 0F70C11B                pshufw mm0, mm1, 27
 10727 0000438E C3                      ret
 10728                                 .imm28:
 10729 0000438F 0F70C11C                pshufw mm0, mm1, 28
 10730 00004393 C3                      ret
 10731                                 .imm29:
 10732 00004394 0F70C11D                pshufw mm0, mm1, 29
 10733 00004398 C3                      ret
 10734                                 .imm30:
 10735 00004399 0F70C11E                pshufw mm0, mm1, 30
 10736 0000439D C3                      ret
 10737                                 .imm31:
 10738 0000439E 0F70C11F                pshufw mm0, mm1, 31
 10739 000043A2 C3                      ret
 10740                                 .imm32:
 10741 000043A3 0F70C120                pshufw mm0, mm1, 32
 10742 000043A7 C3                      ret
 10743                                 .imm33:
 10744 000043A8 0F70C121                pshufw mm0, mm1, 33
 10745 000043AC C3                      ret
 10746                                 .imm34:
 10747 000043AD 0F70C122                pshufw mm0, mm1, 34
 10748 000043B1 C3                      ret
 10749                                 .imm35:
 10750 000043B2 0F70C123                pshufw mm0, mm1, 35
 10751 000043B6 C3                      ret
 10752                                 .imm36:
 10753 000043B7 0F70C124                pshufw mm0, mm1, 36
 10754 000043BB C3                      ret
 10755                                 .imm37:
 10756 000043BC 0F70C125                pshufw mm0, mm1, 37
 10757 000043C0 C3                      ret
 10758                                 .imm38:
 10759 000043C1 0F70C126                pshufw mm0, mm1, 38
 10760 000043C5 C3                      ret
 10761                                 .imm39:
 10762 000043C6 0F70C127                pshufw mm0, mm1, 39
 10763 000043CA C3                      ret
 10764                                 .imm40:
 10765 000043CB 0F70C128                pshufw mm0, mm1, 40
 10766 000043CF C3                      ret
 10767                                 .imm41:
 10768 000043D0 0F70C129                pshufw mm0, mm1, 41
 10769 000043D4 C3                      ret
 10770                                 .imm42:
 10771 000043D5 0F70C12A                pshufw mm0, mm1, 42
 10772 000043D9 C3                      ret
 10773                                 .imm43:
 10774 000043DA 0F70C12B                pshufw mm0, mm1, 43
 10775 000043DE C3                      ret
 10776                                 .imm44:
 10777 000043DF 0F70C12C                pshufw mm0, mm1, 44
 10778 000043E3 C3                      ret
 10779                                 .imm45:
 10780 000043E4 0F70C12D                pshufw mm0, mm1, 45
 10781 000043E8 C3                      ret
 10782                                 .imm46:
 10783 000043E9 0F70C12E                pshufw mm0, mm1, 46
 10784 000043ED C3                      ret
 10785                                 .imm47:
 10786 000043EE 0F70C12F                pshufw mm0, mm1, 47
 10787 000043F2 C3                      ret
 10788                                 .imm48:
 10789 000043F3 0F70C130                pshufw mm0, mm1, 48
 10790 000043F7 C3                      ret
 10791                                 .imm49:
 10792 000043F8 0F70C131                pshufw mm0, mm1, 49
 10793 000043FC C3                      ret
 10794                                 .imm50:
 10795 000043FD 0F70C132                pshufw mm0, mm1, 50
 10796 00004401 C3                      ret
 10797                                 .imm51:
 10798 00004402 0F70C133                pshufw mm0, mm1, 51
 10799 00004406 C3                      ret
 10800                                 .imm52:
 10801 00004407 0F70C134                pshufw mm0, mm1, 52
 10802 0000440B C3                      ret
 10803                                 .imm53:
 10804 0000440C 0F70C135                pshufw mm0, mm1, 53
 10805 00004410 C3                      ret
 10806                                 .imm54:
 10807 00004411 0F70C136                pshufw mm0, mm1, 54
 10808 00004415 C3                      ret
 10809                                 .imm55:
 10810 00004416 0F70C137                pshufw mm0, mm1, 55
 10811 0000441A C3                      ret
 10812                                 .imm56:
 10813 0000441B 0F70C138                pshufw mm0, mm1, 56
 10814 0000441F C3                      ret
 10815                                 .imm57:
 10816 00004420 0F70C139                pshufw mm0, mm1, 57
 10817 00004424 C3                      ret
 10818                                 .imm58:
 10819 00004425 0F70C13A                pshufw mm0, mm1, 58
 10820 00004429 C3                      ret
 10821                                 .imm59:
 10822 0000442A 0F70C13B                pshufw mm0, mm1, 59
 10823 0000442E C3                      ret
 10824                                 .imm60:
 10825 0000442F 0F70C13C                pshufw mm0, mm1, 60
 10826 00004433 C3                      ret
 10827                                 .imm61:
 10828 00004434 0F70C13D                pshufw mm0, mm1, 61
 10829 00004438 C3                      ret
 10830                                 .imm62:
 10831 00004439 0F70C13E                pshufw mm0, mm1, 62
 10832 0000443D C3                      ret
 10833                                 .imm63:
 10834 0000443E 0F70C13F                pshufw mm0, mm1, 63
 10835 00004442 C3                      ret
 10836                                 .imm64:
 10837 00004443 0F70C140                pshufw mm0, mm1, 64
 10838 00004447 C3                      ret
 10839                                 .imm65:
 10840 00004448 0F70C141                pshufw mm0, mm1, 65
 10841 0000444C C3                      ret
 10842                                 .imm66:
 10843 0000444D 0F70C142                pshufw mm0, mm1, 66
 10844 00004451 C3                      ret
 10845                                 .imm67:
 10846 00004452 0F70C143                pshufw mm0, mm1, 67
 10847 00004456 C3                      ret
 10848                                 .imm68:
 10849 00004457 0F70C144                pshufw mm0, mm1, 68
 10850 0000445B C3                      ret
 10851                                 .imm69:
 10852 0000445C 0F70C145                pshufw mm0, mm1, 69
 10853 00004460 C3                      ret
 10854                                 .imm70:
 10855 00004461 0F70C146                pshufw mm0, mm1, 70
 10856 00004465 C3                      ret
 10857                                 .imm71:
 10858 00004466 0F70C147                pshufw mm0, mm1, 71
 10859 0000446A C3                      ret
 10860                                 .imm72:
 10861 0000446B 0F70C148                pshufw mm0, mm1, 72
 10862 0000446F C3                      ret
 10863                                 .imm73:
 10864 00004470 0F70C149                pshufw mm0, mm1, 73
 10865 00004474 C3                      ret
 10866                                 .imm74:
 10867 00004475 0F70C14A                pshufw mm0, mm1, 74
 10868 00004479 C3                      ret
 10869                                 .imm75:
 10870 0000447A 0F70C14B                pshufw mm0, mm1, 75
 10871 0000447E C3                      ret
 10872                                 .imm76:
 10873 0000447F 0F70C14C                pshufw mm0, mm1, 76
 10874 00004483 C3                      ret
 10875                                 .imm77:
 10876 00004484 0F70C14D                pshufw mm0, mm1, 77
 10877 00004488 C3                      ret
 10878                                 .imm78:
 10879 00004489 0F70C14E                pshufw mm0, mm1, 78
 10880 0000448D C3                      ret
 10881                                 .imm79:
 10882 0000448E 0F70C14F                pshufw mm0, mm1, 79
 10883 00004492 C3                      ret
 10884                                 .imm80:
 10885 00004493 0F70C150                pshufw mm0, mm1, 80
 10886 00004497 C3                      ret
 10887                                 .imm81:
 10888 00004498 0F70C151                pshufw mm0, mm1, 81
 10889 0000449C C3                      ret
 10890                                 .imm82:
 10891 0000449D 0F70C152                pshufw mm0, mm1, 82
 10892 000044A1 C3                      ret
 10893                                 .imm83:
 10894 000044A2 0F70C153                pshufw mm0, mm1, 83
 10895 000044A6 C3                      ret
 10896                                 .imm84:
 10897 000044A7 0F70C154                pshufw mm0, mm1, 84
 10898 000044AB C3                      ret
 10899                                 .imm85:
 10900 000044AC 0F70C155                pshufw mm0, mm1, 85
 10901 000044B0 C3                      ret
 10902                                 .imm86:
 10903 000044B1 0F70C156                pshufw mm0, mm1, 86
 10904 000044B5 C3                      ret
 10905                                 .imm87:
 10906 000044B6 0F70C157                pshufw mm0, mm1, 87
 10907 000044BA C3                      ret
 10908                                 .imm88:
 10909 000044BB 0F70C158                pshufw mm0, mm1, 88
 10910 000044BF C3                      ret
 10911                                 .imm89:
 10912 000044C0 0F70C159                pshufw mm0, mm1, 89
 10913 000044C4 C3                      ret
 10914                                 .imm90:
 10915 000044C5 0F70C15A                pshufw mm0, mm1, 90
 10916 000044C9 C3                      ret
 10917                                 .imm91:
 10918 000044CA 0F70C15B                pshufw mm0, mm1, 91
 10919 000044CE C3                      ret
 10920                                 .imm92:
 10921 000044CF 0F70C15C                pshufw mm0, mm1, 92
 10922 000044D3 C3                      ret
 10923                                 .imm93:
 10924 000044D4 0F70C15D                pshufw mm0, mm1, 93
 10925 000044D8 C3                      ret
 10926                                 .imm94:
 10927 000044D9 0F70C15E                pshufw mm0, mm1, 94
 10928 000044DD C3                      ret
 10929                                 .imm95:
 10930 000044DE 0F70C15F                pshufw mm0, mm1, 95
 10931 000044E2 C3                      ret
 10932                                 .imm96:
 10933 000044E3 0F70C160                pshufw mm0, mm1, 96
 10934 000044E7 C3                      ret
 10935                                 .imm97:
 10936 000044E8 0F70C161                pshufw mm0, mm1, 97
 10937 000044EC C3                      ret
 10938                                 .imm98:
 10939 000044ED 0F70C162                pshufw mm0, mm1, 98
 10940 000044F1 C3                      ret
 10941                                 .imm99:
 10942 000044F2 0F70C163                pshufw mm0, mm1, 99
 10943 000044F6 C3                      ret
 10944                                 .imm100:
 10945 000044F7 0F70C164                pshufw mm0, mm1, 100
 10946 000044FB C3                      ret
 10947                                 .imm101:
 10948 000044FC 0F70C165                pshufw mm0, mm1, 101
 10949 00004500 C3                      ret
 10950                                 .imm102:
 10951 00004501 0F70C166                pshufw mm0, mm1, 102
 10952 00004505 C3                      ret
 10953                                 .imm103:
 10954 00004506 0F70C167                pshufw mm0, mm1, 103
 10955 0000450A C3                      ret
 10956                                 .imm104:
 10957 0000450B 0F70C168                pshufw mm0, mm1, 104
 10958 0000450F C3                      ret
 10959                                 .imm105:
 10960 00004510 0F70C169                pshufw mm0, mm1, 105
 10961 00004514 C3                      ret
 10962                                 .imm106:
 10963 00004515 0F70C16A                pshufw mm0, mm1, 106
 10964 00004519 C3                      ret
 10965                                 .imm107:
 10966 0000451A 0F70C16B                pshufw mm0, mm1, 107
 10967 0000451E C3                      ret
 10968                                 .imm108:
 10969 0000451F 0F70C16C                pshufw mm0, mm1, 108
 10970 00004523 C3                      ret
 10971                                 .imm109:
 10972 00004524 0F70C16D                pshufw mm0, mm1, 109
 10973 00004528 C3                      ret
 10974                                 .imm110:
 10975 00004529 0F70C16E                pshufw mm0, mm1, 110
 10976 0000452D C3                      ret
 10977                                 .imm111:
 10978 0000452E 0F70C16F                pshufw mm0, mm1, 111
 10979 00004532 C3                      ret
 10980                                 .imm112:
 10981 00004533 0F70C170                pshufw mm0, mm1, 112
 10982 00004537 C3                      ret
 10983                                 .imm113:
 10984 00004538 0F70C171                pshufw mm0, mm1, 113
 10985 0000453C C3                      ret
 10986                                 .imm114:
 10987 0000453D 0F70C172                pshufw mm0, mm1, 114
 10988 00004541 C3                      ret
 10989                                 .imm115:
 10990 00004542 0F70C173                pshufw mm0, mm1, 115
 10991 00004546 C3                      ret
 10992                                 .imm116:
 10993 00004547 0F70C174                pshufw mm0, mm1, 116
 10994 0000454B C3                      ret
 10995                                 .imm117:
 10996 0000454C 0F70C175                pshufw mm0, mm1, 117
 10997 00004550 C3                      ret
 10998                                 .imm118:
 10999 00004551 0F70C176                pshufw mm0, mm1, 118
 11000 00004555 C3                      ret
 11001                                 .imm119:
 11002 00004556 0F70C177                pshufw mm0, mm1, 119
 11003 0000455A C3                      ret
 11004                                 .imm120:
 11005 0000455B 0F70C178                pshufw mm0, mm1, 120
 11006 0000455F C3                      ret
 11007                                 .imm121:
 11008 00004560 0F70C179                pshufw mm0, mm1, 121
 11009 00004564 C3                      ret
 11010                                 .imm122:
 11011 00004565 0F70C17A                pshufw mm0, mm1, 122
 11012 00004569 C3                      ret
 11013                                 .imm123:
 11014 0000456A 0F70C17B                pshufw mm0, mm1, 123
 11015 0000456E C3                      ret
 11016                                 .imm124:
 11017 0000456F 0F70C17C                pshufw mm0, mm1, 124
 11018 00004573 C3                      ret
 11019                                 .imm125:
 11020 00004574 0F70C17D                pshufw mm0, mm1, 125
 11021 00004578 C3                      ret
 11022                                 .imm126:
 11023 00004579 0F70C17E                pshufw mm0, mm1, 126
 11024 0000457D C3                      ret
 11025                                 .imm127:
 11026 0000457E 0F70C17F                pshufw mm0, mm1, 127
 11027 00004582 C3                      ret
 11028                                 .imm128:
 11029 00004583 0F70C180                pshufw mm0, mm1, 128
 11030 00004587 C3                      ret
 11031                                 .imm129:
 11032 00004588 0F70C181                pshufw mm0, mm1, 129
 11033 0000458C C3                      ret
 11034                                 .imm130:
 11035 0000458D 0F70C182                pshufw mm0, mm1, 130
 11036 00004591 C3                      ret
 11037                                 .imm131:
 11038 00004592 0F70C183                pshufw mm0, mm1, 131
 11039 00004596 C3                      ret
 11040                                 .imm132:
 11041 00004597 0F70C184                pshufw mm0, mm1, 132
 11042 0000459B C3                      ret
 11043                                 .imm133:
 11044 0000459C 0F70C185                pshufw mm0, mm1, 133
 11045 000045A0 C3                      ret
 11046                                 .imm134:
 11047 000045A1 0F70C186                pshufw mm0, mm1, 134
 11048 000045A5 C3                      ret
 11049                                 .imm135:
 11050 000045A6 0F70C187                pshufw mm0, mm1, 135
 11051 000045AA C3                      ret
 11052                                 .imm136:
 11053 000045AB 0F70C188                pshufw mm0, mm1, 136
 11054 000045AF C3                      ret
 11055                                 .imm137:
 11056 000045B0 0F70C189                pshufw mm0, mm1, 137
 11057 000045B4 C3                      ret
 11058                                 .imm138:
 11059 000045B5 0F70C18A                pshufw mm0, mm1, 138
 11060 000045B9 C3                      ret
 11061                                 .imm139:
 11062 000045BA 0F70C18B                pshufw mm0, mm1, 139
 11063 000045BE C3                      ret
 11064                                 .imm140:
 11065 000045BF 0F70C18C                pshufw mm0, mm1, 140
 11066 000045C3 C3                      ret
 11067                                 .imm141:
 11068 000045C4 0F70C18D                pshufw mm0, mm1, 141
 11069 000045C8 C3                      ret
 11070                                 .imm142:
 11071 000045C9 0F70C18E                pshufw mm0, mm1, 142
 11072 000045CD C3                      ret
 11073                                 .imm143:
 11074 000045CE 0F70C18F                pshufw mm0, mm1, 143
 11075 000045D2 C3                      ret
 11076                                 .imm144:
 11077 000045D3 0F70C190                pshufw mm0, mm1, 144
 11078 000045D7 C3                      ret
 11079                                 .imm145:
 11080 000045D8 0F70C191                pshufw mm0, mm1, 145
 11081 000045DC C3                      ret
 11082                                 .imm146:
 11083 000045DD 0F70C192                pshufw mm0, mm1, 146
 11084 000045E1 C3                      ret
 11085                                 .imm147:
 11086 000045E2 0F70C193                pshufw mm0, mm1, 147
 11087 000045E6 C3                      ret
 11088                                 .imm148:
 11089 000045E7 0F70C194                pshufw mm0, mm1, 148
 11090 000045EB C3                      ret
 11091                                 .imm149:
 11092 000045EC 0F70C195                pshufw mm0, mm1, 149
 11093 000045F0 C3                      ret
 11094                                 .imm150:
 11095 000045F1 0F70C196                pshufw mm0, mm1, 150
 11096 000045F5 C3                      ret
 11097                                 .imm151:
 11098 000045F6 0F70C197                pshufw mm0, mm1, 151
 11099 000045FA C3                      ret
 11100                                 .imm152:
 11101 000045FB 0F70C198                pshufw mm0, mm1, 152
 11102 000045FF C3                      ret
 11103                                 .imm153:
 11104 00004600 0F70C199                pshufw mm0, mm1, 153
 11105 00004604 C3                      ret
 11106                                 .imm154:
 11107 00004605 0F70C19A                pshufw mm0, mm1, 154
 11108 00004609 C3                      ret
 11109                                 .imm155:
 11110 0000460A 0F70C19B                pshufw mm0, mm1, 155
 11111 0000460E C3                      ret
 11112                                 .imm156:
 11113 0000460F 0F70C19C                pshufw mm0, mm1, 156
 11114 00004613 C3                      ret
 11115                                 .imm157:
 11116 00004614 0F70C19D                pshufw mm0, mm1, 157
 11117 00004618 C3                      ret
 11118                                 .imm158:
 11119 00004619 0F70C19E                pshufw mm0, mm1, 158
 11120 0000461D C3                      ret
 11121                                 .imm159:
 11122 0000461E 0F70C19F                pshufw mm0, mm1, 159
 11123 00004622 C3                      ret
 11124                                 .imm160:
 11125 00004623 0F70C1A0                pshufw mm0, mm1, 160
 11126 00004627 C3                      ret
 11127                                 .imm161:
 11128 00004628 0F70C1A1                pshufw mm0, mm1, 161
 11129 0000462C C3                      ret
 11130                                 .imm162:
 11131 0000462D 0F70C1A2                pshufw mm0, mm1, 162
 11132 00004631 C3                      ret
 11133                                 .imm163:
 11134 00004632 0F70C1A3                pshufw mm0, mm1, 163
 11135 00004636 C3                      ret
 11136                                 .imm164:
 11137 00004637 0F70C1A4                pshufw mm0, mm1, 164
 11138 0000463B C3                      ret
 11139                                 .imm165:
 11140 0000463C 0F70C1A5                pshufw mm0, mm1, 165
 11141 00004640 C3                      ret
 11142                                 .imm166:
 11143 00004641 0F70C1A6                pshufw mm0, mm1, 166
 11144 00004645 C3                      ret
 11145                                 .imm167:
 11146 00004646 0F70C1A7                pshufw mm0, mm1, 167
 11147 0000464A C3                      ret
 11148                                 .imm168:
 11149 0000464B 0F70C1A8                pshufw mm0, mm1, 168
 11150 0000464F C3                      ret
 11151                                 .imm169:
 11152 00004650 0F70C1A9                pshufw mm0, mm1, 169
 11153 00004654 C3                      ret
 11154                                 .imm170:
 11155 00004655 0F70C1AA                pshufw mm0, mm1, 170
 11156 00004659 C3                      ret
 11157                                 .imm171:
 11158 0000465A 0F70C1AB                pshufw mm0, mm1, 171
 11159 0000465E C3                      ret
 11160                                 .imm172:
 11161 0000465F 0F70C1AC                pshufw mm0, mm1, 172
 11162 00004663 C3                      ret
 11163                                 .imm173:
 11164 00004664 0F70C1AD                pshufw mm0, mm1, 173
 11165 00004668 C3                      ret
 11166                                 .imm174:
 11167 00004669 0F70C1AE                pshufw mm0, mm1, 174
 11168 0000466D C3                      ret
 11169                                 .imm175:
 11170 0000466E 0F70C1AF                pshufw mm0, mm1, 175
 11171 00004672 C3                      ret
 11172                                 .imm176:
 11173 00004673 0F70C1B0                pshufw mm0, mm1, 176
 11174 00004677 C3                      ret
 11175                                 .imm177:
 11176 00004678 0F70C1B1                pshufw mm0, mm1, 177
 11177 0000467C C3                      ret
 11178                                 .imm178:
 11179 0000467D 0F70C1B2                pshufw mm0, mm1, 178
 11180 00004681 C3                      ret
 11181                                 .imm179:
 11182 00004682 0F70C1B3                pshufw mm0, mm1, 179
 11183 00004686 C3                      ret
 11184                                 .imm180:
 11185 00004687 0F70C1B4                pshufw mm0, mm1, 180
 11186 0000468B C3                      ret
 11187                                 .imm181:
 11188 0000468C 0F70C1B5                pshufw mm0, mm1, 181
 11189 00004690 C3                      ret
 11190                                 .imm182:
 11191 00004691 0F70C1B6                pshufw mm0, mm1, 182
 11192 00004695 C3                      ret
 11193                                 .imm183:
 11194 00004696 0F70C1B7                pshufw mm0, mm1, 183
 11195 0000469A C3                      ret
 11196                                 .imm184:
 11197 0000469B 0F70C1B8                pshufw mm0, mm1, 184
 11198 0000469F C3                      ret
 11199                                 .imm185:
 11200 000046A0 0F70C1B9                pshufw mm0, mm1, 185
 11201 000046A4 C3                      ret
 11202                                 .imm186:
 11203 000046A5 0F70C1BA                pshufw mm0, mm1, 186
 11204 000046A9 C3                      ret
 11205                                 .imm187:
 11206 000046AA 0F70C1BB                pshufw mm0, mm1, 187
 11207 000046AE C3                      ret
 11208                                 .imm188:
 11209 000046AF 0F70C1BC                pshufw mm0, mm1, 188
 11210 000046B3 C3                      ret
 11211                                 .imm189:
 11212 000046B4 0F70C1BD                pshufw mm0, mm1, 189
 11213 000046B8 C3                      ret
 11214                                 .imm190:
 11215 000046B9 0F70C1BE                pshufw mm0, mm1, 190
 11216 000046BD C3                      ret
 11217                                 .imm191:
 11218 000046BE 0F70C1BF                pshufw mm0, mm1, 191
 11219 000046C2 C3                      ret
 11220                                 .imm192:
 11221 000046C3 0F70C1C0                pshufw mm0, mm1, 192
 11222 000046C7 C3                      ret
 11223                                 .imm193:
 11224 000046C8 0F70C1C1                pshufw mm0, mm1, 193
 11225 000046CC C3                      ret
 11226                                 .imm194:
 11227 000046CD 0F70C1C2                pshufw mm0, mm1, 194
 11228 000046D1 C3                      ret
 11229                                 .imm195:
 11230 000046D2 0F70C1C3                pshufw mm0, mm1, 195
 11231 000046D6 C3                      ret
 11232                                 .imm196:
 11233 000046D7 0F70C1C4                pshufw mm0, mm1, 196
 11234 000046DB C3                      ret
 11235                                 .imm197:
 11236 000046DC 0F70C1C5                pshufw mm0, mm1, 197
 11237 000046E0 C3                      ret
 11238                                 .imm198:
 11239 000046E1 0F70C1C6                pshufw mm0, mm1, 198
 11240 000046E5 C3                      ret
 11241                                 .imm199:
 11242 000046E6 0F70C1C7                pshufw mm0, mm1, 199
 11243 000046EA C3                      ret
 11244                                 .imm200:
 11245 000046EB 0F70C1C8                pshufw mm0, mm1, 200
 11246 000046EF C3                      ret
 11247                                 .imm201:
 11248 000046F0 0F70C1C9                pshufw mm0, mm1, 201
 11249 000046F4 C3                      ret
 11250                                 .imm202:
 11251 000046F5 0F70C1CA                pshufw mm0, mm1, 202
 11252 000046F9 C3                      ret
 11253                                 .imm203:
 11254 000046FA 0F70C1CB                pshufw mm0, mm1, 203
 11255 000046FE C3                      ret
 11256                                 .imm204:
 11257 000046FF 0F70C1CC                pshufw mm0, mm1, 204
 11258 00004703 C3                      ret
 11259                                 .imm205:
 11260 00004704 0F70C1CD                pshufw mm0, mm1, 205
 11261 00004708 C3                      ret
 11262                                 .imm206:
 11263 00004709 0F70C1CE                pshufw mm0, mm1, 206
 11264 0000470D C3                      ret
 11265                                 .imm207:
 11266 0000470E 0F70C1CF                pshufw mm0, mm1, 207
 11267 00004712 C3                      ret
 11268                                 .imm208:
 11269 00004713 0F70C1D0                pshufw mm0, mm1, 208
 11270 00004717 C3                      ret
 11271                                 .imm209:
 11272 00004718 0F70C1D1                pshufw mm0, mm1, 209
 11273 0000471C C3                      ret
 11274                                 .imm210:
 11275 0000471D 0F70C1D2                pshufw mm0, mm1, 210
 11276 00004721 C3                      ret
 11277                                 .imm211:
 11278 00004722 0F70C1D3                pshufw mm0, mm1, 211
 11279 00004726 C3                      ret
 11280                                 .imm212:
 11281 00004727 0F70C1D4                pshufw mm0, mm1, 212
 11282 0000472B C3                      ret
 11283                                 .imm213:
 11284 0000472C 0F70C1D5                pshufw mm0, mm1, 213
 11285 00004730 C3                      ret
 11286                                 .imm214:
 11287 00004731 0F70C1D6                pshufw mm0, mm1, 214
 11288 00004735 C3                      ret
 11289                                 .imm215:
 11290 00004736 0F70C1D7                pshufw mm0, mm1, 215
 11291 0000473A C3                      ret
 11292                                 .imm216:
 11293 0000473B 0F70C1D8                pshufw mm0, mm1, 216
 11294 0000473F C3                      ret
 11295                                 .imm217:
 11296 00004740 0F70C1D9                pshufw mm0, mm1, 217
 11297 00004744 C3                      ret
 11298                                 .imm218:
 11299 00004745 0F70C1DA                pshufw mm0, mm1, 218
 11300 00004749 C3                      ret
 11301                                 .imm219:
 11302 0000474A 0F70C1DB                pshufw mm0, mm1, 219
 11303 0000474E C3                      ret
 11304                                 .imm220:
 11305 0000474F 0F70C1DC                pshufw mm0, mm1, 220
 11306 00004753 C3                      ret
 11307                                 .imm221:
 11308 00004754 0F70C1DD                pshufw mm0, mm1, 221
 11309 00004758 C3                      ret
 11310                                 .imm222:
 11311 00004759 0F70C1DE                pshufw mm0, mm1, 222
 11312 0000475D C3                      ret
 11313                                 .imm223:
 11314 0000475E 0F70C1DF                pshufw mm0, mm1, 223
 11315 00004762 C3                      ret
 11316                                 .imm224:
 11317 00004763 0F70C1E0                pshufw mm0, mm1, 224
 11318 00004767 C3                      ret
 11319                                 .imm225:
 11320 00004768 0F70C1E1                pshufw mm0, mm1, 225
 11321 0000476C C3                      ret
 11322                                 .imm226:
 11323 0000476D 0F70C1E2                pshufw mm0, mm1, 226
 11324 00004771 C3                      ret
 11325                                 .imm227:
 11326 00004772 0F70C1E3                pshufw mm0, mm1, 227
 11327 00004776 C3                      ret
 11328                                 .imm228:
 11329 00004777 0F70C1E4                pshufw mm0, mm1, 228
 11330 0000477B C3                      ret
 11331                                 .imm229:
 11332 0000477C 0F70C1E5                pshufw mm0, mm1, 229
 11333 00004780 C3                      ret
 11334                                 .imm230:
 11335 00004781 0F70C1E6                pshufw mm0, mm1, 230
 11336 00004785 C3                      ret
 11337                                 .imm231:
 11338 00004786 0F70C1E7                pshufw mm0, mm1, 231
 11339 0000478A C3                      ret
 11340                                 .imm232:
 11341 0000478B 0F70C1E8                pshufw mm0, mm1, 232
 11342 0000478F C3                      ret
 11343                                 .imm233:
 11344 00004790 0F70C1E9                pshufw mm0, mm1, 233
 11345 00004794 C3                      ret
 11346                                 .imm234:
 11347 00004795 0F70C1EA                pshufw mm0, mm1, 234
 11348 00004799 C3                      ret
 11349                                 .imm235:
 11350 0000479A 0F70C1EB                pshufw mm0, mm1, 235
 11351 0000479E C3                      ret
 11352                                 .imm236:
 11353 0000479F 0F70C1EC                pshufw mm0, mm1, 236
 11354 000047A3 C3                      ret
 11355                                 .imm237:
 11356 000047A4 0F70C1ED                pshufw mm0, mm1, 237
 11357 000047A8 C3                      ret
 11358                                 .imm238:
 11359 000047A9 0F70C1EE                pshufw mm0, mm1, 238
 11360 000047AD C3                      ret
 11361                                 .imm239:
 11362 000047AE 0F70C1EF                pshufw mm0, mm1, 239
 11363 000047B2 C3                      ret
 11364                                 .imm240:
 11365 000047B3 0F70C1F0                pshufw mm0, mm1, 240
 11366 000047B7 C3                      ret
 11367                                 .imm241:
 11368 000047B8 0F70C1F1                pshufw mm0, mm1, 241
 11369 000047BC C3                      ret
 11370                                 .imm242:
 11371 000047BD 0F70C1F2                pshufw mm0, mm1, 242
 11372 000047C1 C3                      ret
 11373                                 .imm243:
 11374 000047C2 0F70C1F3                pshufw mm0, mm1, 243
 11375 000047C6 C3                      ret
 11376                                 .imm244:
 11377 000047C7 0F70C1F4                pshufw mm0, mm1, 244
 11378 000047CB C3                      ret
 11379                                 .imm245:
 11380 000047CC 0F70C1F5                pshufw mm0, mm1, 245
 11381 000047D0 C3                      ret
 11382                                 .imm246:
 11383 000047D1 0F70C1F6                pshufw mm0, mm1, 246
 11384 000047D5 C3                      ret
 11385                                 .imm247:
 11386 000047D6 0F70C1F7                pshufw mm0, mm1, 247
 11387 000047DA C3                      ret
 11388                                 .imm248:
 11389 000047DB 0F70C1F8                pshufw mm0, mm1, 248
 11390 000047DF C3                      ret
 11391                                 .imm249:
 11392 000047E0 0F70C1F9                pshufw mm0, mm1, 249
 11393 000047E4 C3                      ret
 11394                                 .imm250:
 11395 000047E5 0F70C1FA                pshufw mm0, mm1, 250
 11396 000047E9 C3                      ret
 11397                                 .imm251:
 11398 000047EA 0F70C1FB                pshufw mm0, mm1, 251
 11399 000047EE C3                      ret
 11400                                 .imm252:
 11401 000047EF 0F70C1FC                pshufw mm0, mm1, 252
 11402 000047F3 C3                      ret
 11403                                 .imm253:
 11404 000047F4 0F70C1FD                pshufw mm0, mm1, 253
 11405 000047F8 C3                      ret
 11406                                 .imm254:
 11407 000047F9 0F70C1FE                pshufw mm0, mm1, 254
 11408 000047FD C3                      ret
 11409                                 .imm255:
 11410 000047FE 0F70C1FF                pshufw mm0, mm1, 255
 11411 00004802 C3                      ret
 11412                                 %line 2881+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11413                                 .immEnd:
 11414 00004803 FFFF                   dw 0xfaff + (.immEnd - .imm0)
 11415 00004805 FFFF                   dw 0x104ff - (.immEnd - .imm0)
 11416                                 [global iemAImpl_pshufw_EndProc:function hidden]
 11417                                 %line 2884+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11418                                 iemAImpl_pshufw_EndProc:
 11419                                 [size iemAImpl_pshufw iemAImpl_pshufw_EndProc - iemAImpl_pshufw]
 11420                                 [size iemAImpl_pshufw_EndProc 0]
 11421 00004807 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 11422                                 %line 2885+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11423                                 
 11424                                 
 11425                                 %line 2914+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11426                                 
 11427                                 [global iemAImpl_pshufhw]
 11428                                 %line 2915+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 11429                                 iemAImpl_pshufhw:
 11430                                 
 11431 0000480B F30F6F06                movdqu xmm0, [rsi]
 11432 0000480F F30F6F0A                movdqu xmm1, [rdx]
 11433 00004813 4C8D1D09000000          lea r11, [.imm0 wrt rip]
 11434 0000481A 488D0449                lea rax, [rcx + rcx*2]
 11435 0000481E 4D8D1C43                lea r11, [r11 + rax*2]
 11436 00004822 41FFD3                  call r11
 11437 00004825 F30F7F06                movdqu [rsi], xmm0
 11438                                 
 11439 00004829 C3                      ret
 11440                                 .imm0:
 11441 0000482A F30F70C100              pshufhw xmm0, xmm1, 0
 11442 0000482F C3                      ret
 11443                                 .imm1:
 11444 00004830 F30F70C101              pshufhw xmm0, xmm1, 1
 11445 00004835 C3                      ret
 11446                                 .imm2:
 11447 00004836 F30F70C102              pshufhw xmm0, xmm1, 2
 11448 0000483B C3                      ret
 11449                                 .imm3:
 11450 0000483C F30F70C103              pshufhw xmm0, xmm1, 3
 11451 00004841 C3                      ret
 11452                                 .imm4:
 11453 00004842 F30F70C104              pshufhw xmm0, xmm1, 4
 11454 00004847 C3                      ret
 11455                                 .imm5:
 11456 00004848 F30F70C105              pshufhw xmm0, xmm1, 5
 11457 0000484D C3                      ret
 11458                                 .imm6:
 11459 0000484E F30F70C106              pshufhw xmm0, xmm1, 6
 11460 00004853 C3                      ret
 11461                                 .imm7:
 11462 00004854 F30F70C107              pshufhw xmm0, xmm1, 7
 11463 00004859 C3                      ret
 11464                                 .imm8:
 11465 0000485A F30F70C108              pshufhw xmm0, xmm1, 8
 11466 0000485F C3                      ret
 11467                                 .imm9:
 11468 00004860 F30F70C109              pshufhw xmm0, xmm1, 9
 11469 00004865 C3                      ret
 11470                                 .imm10:
 11471 00004866 F30F70C10A              pshufhw xmm0, xmm1, 10
 11472 0000486B C3                      ret
 11473                                 .imm11:
 11474 0000486C F30F70C10B              pshufhw xmm0, xmm1, 11
 11475 00004871 C3                      ret
 11476                                 .imm12:
 11477 00004872 F30F70C10C              pshufhw xmm0, xmm1, 12
 11478 00004877 C3                      ret
 11479                                 .imm13:
 11480 00004878 F30F70C10D              pshufhw xmm0, xmm1, 13
 11481 0000487D C3                      ret
 11482                                 .imm14:
 11483 0000487E F30F70C10E              pshufhw xmm0, xmm1, 14
 11484 00004883 C3                      ret
 11485                                 .imm15:
 11486 00004884 F30F70C10F              pshufhw xmm0, xmm1, 15
 11487 00004889 C3                      ret
 11488                                 .imm16:
 11489 0000488A F30F70C110              pshufhw xmm0, xmm1, 16
 11490 0000488F C3                      ret
 11491                                 .imm17:
 11492 00004890 F30F70C111              pshufhw xmm0, xmm1, 17
 11493 00004895 C3                      ret
 11494                                 .imm18:
 11495 00004896 F30F70C112              pshufhw xmm0, xmm1, 18
 11496 0000489B C3                      ret
 11497                                 .imm19:
 11498 0000489C F30F70C113              pshufhw xmm0, xmm1, 19
 11499 000048A1 C3                      ret
 11500                                 .imm20:
 11501 000048A2 F30F70C114              pshufhw xmm0, xmm1, 20
 11502 000048A7 C3                      ret
 11503                                 .imm21:
 11504 000048A8 F30F70C115              pshufhw xmm0, xmm1, 21
 11505 000048AD C3                      ret
 11506                                 .imm22:
 11507 000048AE F30F70C116              pshufhw xmm0, xmm1, 22
 11508 000048B3 C3                      ret
 11509                                 .imm23:
 11510 000048B4 F30F70C117              pshufhw xmm0, xmm1, 23
 11511 000048B9 C3                      ret
 11512                                 .imm24:
 11513 000048BA F30F70C118              pshufhw xmm0, xmm1, 24
 11514 000048BF C3                      ret
 11515                                 .imm25:
 11516 000048C0 F30F70C119              pshufhw xmm0, xmm1, 25
 11517 000048C5 C3                      ret
 11518                                 .imm26:
 11519 000048C6 F30F70C11A              pshufhw xmm0, xmm1, 26
 11520 000048CB C3                      ret
 11521                                 .imm27:
 11522 000048CC F30F70C11B              pshufhw xmm0, xmm1, 27
 11523 000048D1 C3                      ret
 11524                                 .imm28:
 11525 000048D2 F30F70C11C              pshufhw xmm0, xmm1, 28
 11526 000048D7 C3                      ret
 11527                                 .imm29:
 11528 000048D8 F30F70C11D              pshufhw xmm0, xmm1, 29
 11529 000048DD C3                      ret
 11530                                 .imm30:
 11531 000048DE F30F70C11E              pshufhw xmm0, xmm1, 30
 11532 000048E3 C3                      ret
 11533                                 .imm31:
 11534 000048E4 F30F70C11F              pshufhw xmm0, xmm1, 31
 11535 000048E9 C3                      ret
 11536                                 .imm32:
 11537 000048EA F30F70C120              pshufhw xmm0, xmm1, 32
 11538 000048EF C3                      ret
 11539                                 .imm33:
 11540 000048F0 F30F70C121              pshufhw xmm0, xmm1, 33
 11541 000048F5 C3                      ret
 11542                                 .imm34:
 11543 000048F6 F30F70C122              pshufhw xmm0, xmm1, 34
 11544 000048FB C3                      ret
 11545                                 .imm35:
 11546 000048FC F30F70C123              pshufhw xmm0, xmm1, 35
 11547 00004901 C3                      ret
 11548                                 .imm36:
 11549 00004902 F30F70C124              pshufhw xmm0, xmm1, 36
 11550 00004907 C3                      ret
 11551                                 .imm37:
 11552 00004908 F30F70C125              pshufhw xmm0, xmm1, 37
 11553 0000490D C3                      ret
 11554                                 .imm38:
 11555 0000490E F30F70C126              pshufhw xmm0, xmm1, 38
 11556 00004913 C3                      ret
 11557                                 .imm39:
 11558 00004914 F30F70C127              pshufhw xmm0, xmm1, 39
 11559 00004919 C3                      ret
 11560                                 .imm40:
 11561 0000491A F30F70C128              pshufhw xmm0, xmm1, 40
 11562 0000491F C3                      ret
 11563                                 .imm41:
 11564 00004920 F30F70C129              pshufhw xmm0, xmm1, 41
 11565 00004925 C3                      ret
 11566                                 .imm42:
 11567 00004926 F30F70C12A              pshufhw xmm0, xmm1, 42
 11568 0000492B C3                      ret
 11569                                 .imm43:
 11570 0000492C F30F70C12B              pshufhw xmm0, xmm1, 43
 11571 00004931 C3                      ret
 11572                                 .imm44:
 11573 00004932 F30F70C12C              pshufhw xmm0, xmm1, 44
 11574 00004937 C3                      ret
 11575                                 .imm45:
 11576 00004938 F30F70C12D              pshufhw xmm0, xmm1, 45
 11577 0000493D C3                      ret
 11578                                 .imm46:
 11579 0000493E F30F70C12E              pshufhw xmm0, xmm1, 46
 11580 00004943 C3                      ret
 11581                                 .imm47:
 11582 00004944 F30F70C12F              pshufhw xmm0, xmm1, 47
 11583 00004949 C3                      ret
 11584                                 .imm48:
 11585 0000494A F30F70C130              pshufhw xmm0, xmm1, 48
 11586 0000494F C3                      ret
 11587                                 .imm49:
 11588 00004950 F30F70C131              pshufhw xmm0, xmm1, 49
 11589 00004955 C3                      ret
 11590                                 .imm50:
 11591 00004956 F30F70C132              pshufhw xmm0, xmm1, 50
 11592 0000495B C3                      ret
 11593                                 .imm51:
 11594 0000495C F30F70C133              pshufhw xmm0, xmm1, 51
 11595 00004961 C3                      ret
 11596                                 .imm52:
 11597 00004962 F30F70C134              pshufhw xmm0, xmm1, 52
 11598 00004967 C3                      ret
 11599                                 .imm53:
 11600 00004968 F30F70C135              pshufhw xmm0, xmm1, 53
 11601 0000496D C3                      ret
 11602                                 .imm54:
 11603 0000496E F30F70C136              pshufhw xmm0, xmm1, 54
 11604 00004973 C3                      ret
 11605                                 .imm55:
 11606 00004974 F30F70C137              pshufhw xmm0, xmm1, 55
 11607 00004979 C3                      ret
 11608                                 .imm56:
 11609 0000497A F30F70C138              pshufhw xmm0, xmm1, 56
 11610 0000497F C3                      ret
 11611                                 .imm57:
 11612 00004980 F30F70C139              pshufhw xmm0, xmm1, 57
 11613 00004985 C3                      ret
 11614                                 .imm58:
 11615 00004986 F30F70C13A              pshufhw xmm0, xmm1, 58
 11616 0000498B C3                      ret
 11617                                 .imm59:
 11618 0000498C F30F70C13B              pshufhw xmm0, xmm1, 59
 11619 00004991 C3                      ret
 11620                                 .imm60:
 11621 00004992 F30F70C13C              pshufhw xmm0, xmm1, 60
 11622 00004997 C3                      ret
 11623                                 .imm61:
 11624 00004998 F30F70C13D              pshufhw xmm0, xmm1, 61
 11625 0000499D C3                      ret
 11626                                 .imm62:
 11627 0000499E F30F70C13E              pshufhw xmm0, xmm1, 62
 11628 000049A3 C3                      ret
 11629                                 .imm63:
 11630 000049A4 F30F70C13F              pshufhw xmm0, xmm1, 63
 11631 000049A9 C3                      ret
 11632                                 .imm64:
 11633 000049AA F30F70C140              pshufhw xmm0, xmm1, 64
 11634 000049AF C3                      ret
 11635                                 .imm65:
 11636 000049B0 F30F70C141              pshufhw xmm0, xmm1, 65
 11637 000049B5 C3                      ret
 11638                                 .imm66:
 11639 000049B6 F30F70C142              pshufhw xmm0, xmm1, 66
 11640 000049BB C3                      ret
 11641                                 .imm67:
 11642 000049BC F30F70C143              pshufhw xmm0, xmm1, 67
 11643 000049C1 C3                      ret
 11644                                 .imm68:
 11645 000049C2 F30F70C144              pshufhw xmm0, xmm1, 68
 11646 000049C7 C3                      ret
 11647                                 .imm69:
 11648 000049C8 F30F70C145              pshufhw xmm0, xmm1, 69
 11649 000049CD C3                      ret
 11650                                 .imm70:
 11651 000049CE F30F70C146              pshufhw xmm0, xmm1, 70
 11652 000049D3 C3                      ret
 11653                                 .imm71:
 11654 000049D4 F30F70C147              pshufhw xmm0, xmm1, 71
 11655 000049D9 C3                      ret
 11656                                 .imm72:
 11657 000049DA F30F70C148              pshufhw xmm0, xmm1, 72
 11658 000049DF C3                      ret
 11659                                 .imm73:
 11660 000049E0 F30F70C149              pshufhw xmm0, xmm1, 73
 11661 000049E5 C3                      ret
 11662                                 .imm74:
 11663 000049E6 F30F70C14A              pshufhw xmm0, xmm1, 74
 11664 000049EB C3                      ret
 11665                                 .imm75:
 11666 000049EC F30F70C14B              pshufhw xmm0, xmm1, 75
 11667 000049F1 C3                      ret
 11668                                 .imm76:
 11669 000049F2 F30F70C14C              pshufhw xmm0, xmm1, 76
 11670 000049F7 C3                      ret
 11671                                 .imm77:
 11672 000049F8 F30F70C14D              pshufhw xmm0, xmm1, 77
 11673 000049FD C3                      ret
 11674                                 .imm78:
 11675 000049FE F30F70C14E              pshufhw xmm0, xmm1, 78
 11676 00004A03 C3                      ret
 11677                                 .imm79:
 11678 00004A04 F30F70C14F              pshufhw xmm0, xmm1, 79
 11679 00004A09 C3                      ret
 11680                                 .imm80:
 11681 00004A0A F30F70C150              pshufhw xmm0, xmm1, 80
 11682 00004A0F C3                      ret
 11683                                 .imm81:
 11684 00004A10 F30F70C151              pshufhw xmm0, xmm1, 81
 11685 00004A15 C3                      ret
 11686                                 .imm82:
 11687 00004A16 F30F70C152              pshufhw xmm0, xmm1, 82
 11688 00004A1B C3                      ret
 11689                                 .imm83:
 11690 00004A1C F30F70C153              pshufhw xmm0, xmm1, 83
 11691 00004A21 C3                      ret
 11692                                 .imm84:
 11693 00004A22 F30F70C154              pshufhw xmm0, xmm1, 84
 11694 00004A27 C3                      ret
 11695                                 .imm85:
 11696 00004A28 F30F70C155              pshufhw xmm0, xmm1, 85
 11697 00004A2D C3                      ret
 11698                                 .imm86:
 11699 00004A2E F30F70C156              pshufhw xmm0, xmm1, 86
 11700 00004A33 C3                      ret
 11701                                 .imm87:
 11702 00004A34 F30F70C157              pshufhw xmm0, xmm1, 87
 11703 00004A39 C3                      ret
 11704                                 .imm88:
 11705 00004A3A F30F70C158              pshufhw xmm0, xmm1, 88
 11706 00004A3F C3                      ret
 11707                                 .imm89:
 11708 00004A40 F30F70C159              pshufhw xmm0, xmm1, 89
 11709 00004A45 C3                      ret
 11710                                 .imm90:
 11711 00004A46 F30F70C15A              pshufhw xmm0, xmm1, 90
 11712 00004A4B C3                      ret
 11713                                 .imm91:
 11714 00004A4C F30F70C15B              pshufhw xmm0, xmm1, 91
 11715 00004A51 C3                      ret
 11716                                 .imm92:
 11717 00004A52 F30F70C15C              pshufhw xmm0, xmm1, 92
 11718 00004A57 C3                      ret
 11719                                 .imm93:
 11720 00004A58 F30F70C15D              pshufhw xmm0, xmm1, 93
 11721 00004A5D C3                      ret
 11722                                 .imm94:
 11723 00004A5E F30F70C15E              pshufhw xmm0, xmm1, 94
 11724 00004A63 C3                      ret
 11725                                 .imm95:
 11726 00004A64 F30F70C15F              pshufhw xmm0, xmm1, 95
 11727 00004A69 C3                      ret
 11728                                 .imm96:
 11729 00004A6A F30F70C160              pshufhw xmm0, xmm1, 96
 11730 00004A6F C3                      ret
 11731                                 .imm97:
 11732 00004A70 F30F70C161              pshufhw xmm0, xmm1, 97
 11733 00004A75 C3                      ret
 11734                                 .imm98:
 11735 00004A76 F30F70C162              pshufhw xmm0, xmm1, 98
 11736 00004A7B C3                      ret
 11737                                 .imm99:
 11738 00004A7C F30F70C163              pshufhw xmm0, xmm1, 99
 11739 00004A81 C3                      ret
 11740                                 .imm100:
 11741 00004A82 F30F70C164              pshufhw xmm0, xmm1, 100
 11742 00004A87 C3                      ret
 11743                                 .imm101:
 11744 00004A88 F30F70C165              pshufhw xmm0, xmm1, 101
 11745 00004A8D C3                      ret
 11746                                 .imm102:
 11747 00004A8E F30F70C166              pshufhw xmm0, xmm1, 102
 11748 00004A93 C3                      ret
 11749                                 .imm103:
 11750 00004A94 F30F70C167              pshufhw xmm0, xmm1, 103
 11751 00004A99 C3                      ret
 11752                                 .imm104:
 11753 00004A9A F30F70C168              pshufhw xmm0, xmm1, 104
 11754 00004A9F C3                      ret
 11755                                 .imm105:
 11756 00004AA0 F30F70C169              pshufhw xmm0, xmm1, 105
 11757 00004AA5 C3                      ret
 11758                                 .imm106:
 11759 00004AA6 F30F70C16A              pshufhw xmm0, xmm1, 106
 11760 00004AAB C3                      ret
 11761                                 .imm107:
 11762 00004AAC F30F70C16B              pshufhw xmm0, xmm1, 107
 11763 00004AB1 C3                      ret
 11764                                 .imm108:
 11765 00004AB2 F30F70C16C              pshufhw xmm0, xmm1, 108
 11766 00004AB7 C3                      ret
 11767                                 .imm109:
 11768 00004AB8 F30F70C16D              pshufhw xmm0, xmm1, 109
 11769 00004ABD C3                      ret
 11770                                 .imm110:
 11771 00004ABE F30F70C16E              pshufhw xmm0, xmm1, 110
 11772 00004AC3 C3                      ret
 11773                                 .imm111:
 11774 00004AC4 F30F70C16F              pshufhw xmm0, xmm1, 111
 11775 00004AC9 C3                      ret
 11776                                 .imm112:
 11777 00004ACA F30F70C170              pshufhw xmm0, xmm1, 112
 11778 00004ACF C3                      ret
 11779                                 .imm113:
 11780 00004AD0 F30F70C171              pshufhw xmm0, xmm1, 113
 11781 00004AD5 C3                      ret
 11782                                 .imm114:
 11783 00004AD6 F30F70C172              pshufhw xmm0, xmm1, 114
 11784 00004ADB C3                      ret
 11785                                 .imm115:
 11786 00004ADC F30F70C173              pshufhw xmm0, xmm1, 115
 11787 00004AE1 C3                      ret
 11788                                 .imm116:
 11789 00004AE2 F30F70C174              pshufhw xmm0, xmm1, 116
 11790 00004AE7 C3                      ret
 11791                                 .imm117:
 11792 00004AE8 F30F70C175              pshufhw xmm0, xmm1, 117
 11793 00004AED C3                      ret
 11794                                 .imm118:
 11795 00004AEE F30F70C176              pshufhw xmm0, xmm1, 118
 11796 00004AF3 C3                      ret
 11797                                 .imm119:
 11798 00004AF4 F30F70C177              pshufhw xmm0, xmm1, 119
 11799 00004AF9 C3                      ret
 11800                                 .imm120:
 11801 00004AFA F30F70C178              pshufhw xmm0, xmm1, 120
 11802 00004AFF C3                      ret
 11803                                 .imm121:
 11804 00004B00 F30F70C179              pshufhw xmm0, xmm1, 121
 11805 00004B05 C3                      ret
 11806                                 .imm122:
 11807 00004B06 F30F70C17A              pshufhw xmm0, xmm1, 122
 11808 00004B0B C3                      ret
 11809                                 .imm123:
 11810 00004B0C F30F70C17B              pshufhw xmm0, xmm1, 123
 11811 00004B11 C3                      ret
 11812                                 .imm124:
 11813 00004B12 F30F70C17C              pshufhw xmm0, xmm1, 124
 11814 00004B17 C3                      ret
 11815                                 .imm125:
 11816 00004B18 F30F70C17D              pshufhw xmm0, xmm1, 125
 11817 00004B1D C3                      ret
 11818                                 .imm126:
 11819 00004B1E F30F70C17E              pshufhw xmm0, xmm1, 126
 11820 00004B23 C3                      ret
 11821                                 .imm127:
 11822 00004B24 F30F70C17F              pshufhw xmm0, xmm1, 127
 11823 00004B29 C3                      ret
 11824                                 .imm128:
 11825 00004B2A F30F70C180              pshufhw xmm0, xmm1, 128
 11826 00004B2F C3                      ret
 11827                                 .imm129:
 11828 00004B30 F30F70C181              pshufhw xmm0, xmm1, 129
 11829 00004B35 C3                      ret
 11830                                 .imm130:
 11831 00004B36 F30F70C182              pshufhw xmm0, xmm1, 130
 11832 00004B3B C3                      ret
 11833                                 .imm131:
 11834 00004B3C F30F70C183              pshufhw xmm0, xmm1, 131
 11835 00004B41 C3                      ret
 11836                                 .imm132:
 11837 00004B42 F30F70C184              pshufhw xmm0, xmm1, 132
 11838 00004B47 C3                      ret
 11839                                 .imm133:
 11840 00004B48 F30F70C185              pshufhw xmm0, xmm1, 133
 11841 00004B4D C3                      ret
 11842                                 .imm134:
 11843 00004B4E F30F70C186              pshufhw xmm0, xmm1, 134
 11844 00004B53 C3                      ret
 11845                                 .imm135:
 11846 00004B54 F30F70C187              pshufhw xmm0, xmm1, 135
 11847 00004B59 C3                      ret
 11848                                 .imm136:
 11849 00004B5A F30F70C188              pshufhw xmm0, xmm1, 136
 11850 00004B5F C3                      ret
 11851                                 .imm137:
 11852 00004B60 F30F70C189              pshufhw xmm0, xmm1, 137
 11853 00004B65 C3                      ret
 11854                                 .imm138:
 11855 00004B66 F30F70C18A              pshufhw xmm0, xmm1, 138
 11856 00004B6B C3                      ret
 11857                                 .imm139:
 11858 00004B6C F30F70C18B              pshufhw xmm0, xmm1, 139
 11859 00004B71 C3                      ret
 11860                                 .imm140:
 11861 00004B72 F30F70C18C              pshufhw xmm0, xmm1, 140
 11862 00004B77 C3                      ret
 11863                                 .imm141:
 11864 00004B78 F30F70C18D              pshufhw xmm0, xmm1, 141
 11865 00004B7D C3                      ret
 11866                                 .imm142:
 11867 00004B7E F30F70C18E              pshufhw xmm0, xmm1, 142
 11868 00004B83 C3                      ret
 11869                                 .imm143:
 11870 00004B84 F30F70C18F              pshufhw xmm0, xmm1, 143
 11871 00004B89 C3                      ret
 11872                                 .imm144:
 11873 00004B8A F30F70C190              pshufhw xmm0, xmm1, 144
 11874 00004B8F C3                      ret
 11875                                 .imm145:
 11876 00004B90 F30F70C191              pshufhw xmm0, xmm1, 145
 11877 00004B95 C3                      ret
 11878                                 .imm146:
 11879 00004B96 F30F70C192              pshufhw xmm0, xmm1, 146
 11880 00004B9B C3                      ret
 11881                                 .imm147:
 11882 00004B9C F30F70C193              pshufhw xmm0, xmm1, 147
 11883 00004BA1 C3                      ret
 11884                                 .imm148:
 11885 00004BA2 F30F70C194              pshufhw xmm0, xmm1, 148
 11886 00004BA7 C3                      ret
 11887                                 .imm149:
 11888 00004BA8 F30F70C195              pshufhw xmm0, xmm1, 149
 11889 00004BAD C3                      ret
 11890                                 .imm150:
 11891 00004BAE F30F70C196              pshufhw xmm0, xmm1, 150
 11892 00004BB3 C3                      ret
 11893                                 .imm151:
 11894 00004BB4 F30F70C197              pshufhw xmm0, xmm1, 151
 11895 00004BB9 C3                      ret
 11896                                 .imm152:
 11897 00004BBA F30F70C198              pshufhw xmm0, xmm1, 152
 11898 00004BBF C3                      ret
 11899                                 .imm153:
 11900 00004BC0 F30F70C199              pshufhw xmm0, xmm1, 153
 11901 00004BC5 C3                      ret
 11902                                 .imm154:
 11903 00004BC6 F30F70C19A              pshufhw xmm0, xmm1, 154
 11904 00004BCB C3                      ret
 11905                                 .imm155:
 11906 00004BCC F30F70C19B              pshufhw xmm0, xmm1, 155
 11907 00004BD1 C3                      ret
 11908                                 .imm156:
 11909 00004BD2 F30F70C19C              pshufhw xmm0, xmm1, 156
 11910 00004BD7 C3                      ret
 11911                                 .imm157:
 11912 00004BD8 F30F70C19D              pshufhw xmm0, xmm1, 157
 11913 00004BDD C3                      ret
 11914                                 .imm158:
 11915 00004BDE F30F70C19E              pshufhw xmm0, xmm1, 158
 11916 00004BE3 C3                      ret
 11917                                 .imm159:
 11918 00004BE4 F30F70C19F              pshufhw xmm0, xmm1, 159
 11919 00004BE9 C3                      ret
 11920                                 .imm160:
 11921 00004BEA F30F70C1A0              pshufhw xmm0, xmm1, 160
 11922 00004BEF C3                      ret
 11923                                 .imm161:
 11924 00004BF0 F30F70C1A1              pshufhw xmm0, xmm1, 161
 11925 00004BF5 C3                      ret
 11926                                 .imm162:
 11927 00004BF6 F30F70C1A2              pshufhw xmm0, xmm1, 162
 11928 00004BFB C3                      ret
 11929                                 .imm163:
 11930 00004BFC F30F70C1A3              pshufhw xmm0, xmm1, 163
 11931 00004C01 C3                      ret
 11932                                 .imm164:
 11933 00004C02 F30F70C1A4              pshufhw xmm0, xmm1, 164
 11934 00004C07 C3                      ret
 11935                                 .imm165:
 11936 00004C08 F30F70C1A5              pshufhw xmm0, xmm1, 165
 11937 00004C0D C3                      ret
 11938                                 .imm166:
 11939 00004C0E F30F70C1A6              pshufhw xmm0, xmm1, 166
 11940 00004C13 C3                      ret
 11941                                 .imm167:
 11942 00004C14 F30F70C1A7              pshufhw xmm0, xmm1, 167
 11943 00004C19 C3                      ret
 11944                                 .imm168:
 11945 00004C1A F30F70C1A8              pshufhw xmm0, xmm1, 168
 11946 00004C1F C3                      ret
 11947                                 .imm169:
 11948 00004C20 F30F70C1A9              pshufhw xmm0, xmm1, 169
 11949 00004C25 C3                      ret
 11950                                 .imm170:
 11951 00004C26 F30F70C1AA              pshufhw xmm0, xmm1, 170
 11952 00004C2B C3                      ret
 11953                                 .imm171:
 11954 00004C2C F30F70C1AB              pshufhw xmm0, xmm1, 171
 11955 00004C31 C3                      ret
 11956                                 .imm172:
 11957 00004C32 F30F70C1AC              pshufhw xmm0, xmm1, 172
 11958 00004C37 C3                      ret
 11959                                 .imm173:
 11960 00004C38 F30F70C1AD              pshufhw xmm0, xmm1, 173
 11961 00004C3D C3                      ret
 11962                                 .imm174:
 11963 00004C3E F30F70C1AE              pshufhw xmm0, xmm1, 174
 11964 00004C43 C3                      ret
 11965                                 .imm175:
 11966 00004C44 F30F70C1AF              pshufhw xmm0, xmm1, 175
 11967 00004C49 C3                      ret
 11968                                 .imm176:
 11969 00004C4A F30F70C1B0              pshufhw xmm0, xmm1, 176
 11970 00004C4F C3                      ret
 11971                                 .imm177:
 11972 00004C50 F30F70C1B1              pshufhw xmm0, xmm1, 177
 11973 00004C55 C3                      ret
 11974                                 .imm178:
 11975 00004C56 F30F70C1B2              pshufhw xmm0, xmm1, 178
 11976 00004C5B C3                      ret
 11977                                 .imm179:
 11978 00004C5C F30F70C1B3              pshufhw xmm0, xmm1, 179
 11979 00004C61 C3                      ret
 11980                                 .imm180:
 11981 00004C62 F30F70C1B4              pshufhw xmm0, xmm1, 180
 11982 00004C67 C3                      ret
 11983                                 .imm181:
 11984 00004C68 F30F70C1B5              pshufhw xmm0, xmm1, 181
 11985 00004C6D C3                      ret
 11986                                 .imm182:
 11987 00004C6E F30F70C1B6              pshufhw xmm0, xmm1, 182
 11988 00004C73 C3                      ret
 11989                                 .imm183:
 11990 00004C74 F30F70C1B7              pshufhw xmm0, xmm1, 183
 11991 00004C79 C3                      ret
 11992                                 .imm184:
 11993 00004C7A F30F70C1B8              pshufhw xmm0, xmm1, 184
 11994 00004C7F C3                      ret
 11995                                 .imm185:
 11996 00004C80 F30F70C1B9              pshufhw xmm0, xmm1, 185
 11997 00004C85 C3                      ret
 11998                                 .imm186:
 11999 00004C86 F30F70C1BA              pshufhw xmm0, xmm1, 186
 12000 00004C8B C3                      ret
 12001                                 .imm187:
 12002 00004C8C F30F70C1BB              pshufhw xmm0, xmm1, 187
 12003 00004C91 C3                      ret
 12004                                 .imm188:
 12005 00004C92 F30F70C1BC              pshufhw xmm0, xmm1, 188
 12006 00004C97 C3                      ret
 12007                                 .imm189:
 12008 00004C98 F30F70C1BD              pshufhw xmm0, xmm1, 189
 12009 00004C9D C3                      ret
 12010                                 .imm190:
 12011 00004C9E F30F70C1BE              pshufhw xmm0, xmm1, 190
 12012 00004CA3 C3                      ret
 12013                                 .imm191:
 12014 00004CA4 F30F70C1BF              pshufhw xmm0, xmm1, 191
 12015 00004CA9 C3                      ret
 12016                                 .imm192:
 12017 00004CAA F30F70C1C0              pshufhw xmm0, xmm1, 192
 12018 00004CAF C3                      ret
 12019                                 .imm193:
 12020 00004CB0 F30F70C1C1              pshufhw xmm0, xmm1, 193
 12021 00004CB5 C3                      ret
 12022                                 .imm194:
 12023 00004CB6 F30F70C1C2              pshufhw xmm0, xmm1, 194
 12024 00004CBB C3                      ret
 12025                                 .imm195:
 12026 00004CBC F30F70C1C3              pshufhw xmm0, xmm1, 195
 12027 00004CC1 C3                      ret
 12028                                 .imm196:
 12029 00004CC2 F30F70C1C4              pshufhw xmm0, xmm1, 196
 12030 00004CC7 C3                      ret
 12031                                 .imm197:
 12032 00004CC8 F30F70C1C5              pshufhw xmm0, xmm1, 197
 12033 00004CCD C3                      ret
 12034                                 .imm198:
 12035 00004CCE F30F70C1C6              pshufhw xmm0, xmm1, 198
 12036 00004CD3 C3                      ret
 12037                                 .imm199:
 12038 00004CD4 F30F70C1C7              pshufhw xmm0, xmm1, 199
 12039 00004CD9 C3                      ret
 12040                                 .imm200:
 12041 00004CDA F30F70C1C8              pshufhw xmm0, xmm1, 200
 12042 00004CDF C3                      ret
 12043                                 .imm201:
 12044 00004CE0 F30F70C1C9              pshufhw xmm0, xmm1, 201
 12045 00004CE5 C3                      ret
 12046                                 .imm202:
 12047 00004CE6 F30F70C1CA              pshufhw xmm0, xmm1, 202
 12048 00004CEB C3                      ret
 12049                                 .imm203:
 12050 00004CEC F30F70C1CB              pshufhw xmm0, xmm1, 203
 12051 00004CF1 C3                      ret
 12052                                 .imm204:
 12053 00004CF2 F30F70C1CC              pshufhw xmm0, xmm1, 204
 12054 00004CF7 C3                      ret
 12055                                 .imm205:
 12056 00004CF8 F30F70C1CD              pshufhw xmm0, xmm1, 205
 12057 00004CFD C3                      ret
 12058                                 .imm206:
 12059 00004CFE F30F70C1CE              pshufhw xmm0, xmm1, 206
 12060 00004D03 C3                      ret
 12061                                 .imm207:
 12062 00004D04 F30F70C1CF              pshufhw xmm0, xmm1, 207
 12063 00004D09 C3                      ret
 12064                                 .imm208:
 12065 00004D0A F30F70C1D0              pshufhw xmm0, xmm1, 208
 12066 00004D0F C3                      ret
 12067                                 .imm209:
 12068 00004D10 F30F70C1D1              pshufhw xmm0, xmm1, 209
 12069 00004D15 C3                      ret
 12070                                 .imm210:
 12071 00004D16 F30F70C1D2              pshufhw xmm0, xmm1, 210
 12072 00004D1B C3                      ret
 12073                                 .imm211:
 12074 00004D1C F30F70C1D3              pshufhw xmm0, xmm1, 211
 12075 00004D21 C3                      ret
 12076                                 .imm212:
 12077 00004D22 F30F70C1D4              pshufhw xmm0, xmm1, 212
 12078 00004D27 C3                      ret
 12079                                 .imm213:
 12080 00004D28 F30F70C1D5              pshufhw xmm0, xmm1, 213
 12081 00004D2D C3                      ret
 12082                                 .imm214:
 12083 00004D2E F30F70C1D6              pshufhw xmm0, xmm1, 214
 12084 00004D33 C3                      ret
 12085                                 .imm215:
 12086 00004D34 F30F70C1D7              pshufhw xmm0, xmm1, 215
 12087 00004D39 C3                      ret
 12088                                 .imm216:
 12089 00004D3A F30F70C1D8              pshufhw xmm0, xmm1, 216
 12090 00004D3F C3                      ret
 12091                                 .imm217:
 12092 00004D40 F30F70C1D9              pshufhw xmm0, xmm1, 217
 12093 00004D45 C3                      ret
 12094                                 .imm218:
 12095 00004D46 F30F70C1DA              pshufhw xmm0, xmm1, 218
 12096 00004D4B C3                      ret
 12097                                 .imm219:
 12098 00004D4C F30F70C1DB              pshufhw xmm0, xmm1, 219
 12099 00004D51 C3                      ret
 12100                                 .imm220:
 12101 00004D52 F30F70C1DC              pshufhw xmm0, xmm1, 220
 12102 00004D57 C3                      ret
 12103                                 .imm221:
 12104 00004D58 F30F70C1DD              pshufhw xmm0, xmm1, 221
 12105 00004D5D C3                      ret
 12106                                 .imm222:
 12107 00004D5E F30F70C1DE              pshufhw xmm0, xmm1, 222
 12108 00004D63 C3                      ret
 12109                                 .imm223:
 12110 00004D64 F30F70C1DF              pshufhw xmm0, xmm1, 223
 12111 00004D69 C3                      ret
 12112                                 .imm224:
 12113 00004D6A F30F70C1E0              pshufhw xmm0, xmm1, 224
 12114 00004D6F C3                      ret
 12115                                 .imm225:
 12116 00004D70 F30F70C1E1              pshufhw xmm0, xmm1, 225
 12117 00004D75 C3                      ret
 12118                                 .imm226:
 12119 00004D76 F30F70C1E2              pshufhw xmm0, xmm1, 226
 12120 00004D7B C3                      ret
 12121                                 .imm227:
 12122 00004D7C F30F70C1E3              pshufhw xmm0, xmm1, 227
 12123 00004D81 C3                      ret
 12124                                 .imm228:
 12125 00004D82 F30F70C1E4              pshufhw xmm0, xmm1, 228
 12126 00004D87 C3                      ret
 12127                                 .imm229:
 12128 00004D88 F30F70C1E5              pshufhw xmm0, xmm1, 229
 12129 00004D8D C3                      ret
 12130                                 .imm230:
 12131 00004D8E F30F70C1E6              pshufhw xmm0, xmm1, 230
 12132 00004D93 C3                      ret
 12133                                 .imm231:
 12134 00004D94 F30F70C1E7              pshufhw xmm0, xmm1, 231
 12135 00004D99 C3                      ret
 12136                                 .imm232:
 12137 00004D9A F30F70C1E8              pshufhw xmm0, xmm1, 232
 12138 00004D9F C3                      ret
 12139                                 .imm233:
 12140 00004DA0 F30F70C1E9              pshufhw xmm0, xmm1, 233
 12141 00004DA5 C3                      ret
 12142                                 .imm234:
 12143 00004DA6 F30F70C1EA              pshufhw xmm0, xmm1, 234
 12144 00004DAB C3                      ret
 12145                                 .imm235:
 12146 00004DAC F30F70C1EB              pshufhw xmm0, xmm1, 235
 12147 00004DB1 C3                      ret
 12148                                 .imm236:
 12149 00004DB2 F30F70C1EC              pshufhw xmm0, xmm1, 236
 12150 00004DB7 C3                      ret
 12151                                 .imm237:
 12152 00004DB8 F30F70C1ED              pshufhw xmm0, xmm1, 237
 12153 00004DBD C3                      ret
 12154                                 .imm238:
 12155 00004DBE F30F70C1EE              pshufhw xmm0, xmm1, 238
 12156 00004DC3 C3                      ret
 12157                                 .imm239:
 12158 00004DC4 F30F70C1EF              pshufhw xmm0, xmm1, 239
 12159 00004DC9 C3                      ret
 12160                                 .imm240:
 12161 00004DCA F30F70C1F0              pshufhw xmm0, xmm1, 240
 12162 00004DCF C3                      ret
 12163                                 .imm241:
 12164 00004DD0 F30F70C1F1              pshufhw xmm0, xmm1, 241
 12165 00004DD5 C3                      ret
 12166                                 .imm242:
 12167 00004DD6 F30F70C1F2              pshufhw xmm0, xmm1, 242
 12168 00004DDB C3                      ret
 12169                                 .imm243:
 12170 00004DDC F30F70C1F3              pshufhw xmm0, xmm1, 243
 12171 00004DE1 C3                      ret
 12172                                 .imm244:
 12173 00004DE2 F30F70C1F4              pshufhw xmm0, xmm1, 244
 12174 00004DE7 C3                      ret
 12175                                 .imm245:
 12176 00004DE8 F30F70C1F5              pshufhw xmm0, xmm1, 245
 12177 00004DED C3                      ret
 12178                                 .imm246:
 12179 00004DEE F30F70C1F6              pshufhw xmm0, xmm1, 246
 12180 00004DF3 C3                      ret
 12181                                 .imm247:
 12182 00004DF4 F30F70C1F7              pshufhw xmm0, xmm1, 247
 12183 00004DF9 C3                      ret
 12184                                 .imm248:
 12185 00004DFA F30F70C1F8              pshufhw xmm0, xmm1, 248
 12186 00004DFF C3                      ret
 12187                                 .imm249:
 12188 00004E00 F30F70C1F9              pshufhw xmm0, xmm1, 249
 12189 00004E05 C3                      ret
 12190                                 .imm250:
 12191 00004E06 F30F70C1FA              pshufhw xmm0, xmm1, 250
 12192 00004E0B C3                      ret
 12193                                 .imm251:
 12194 00004E0C F30F70C1FB              pshufhw xmm0, xmm1, 251
 12195 00004E11 C3                      ret
 12196                                 .imm252:
 12197 00004E12 F30F70C1FC              pshufhw xmm0, xmm1, 252
 12198 00004E17 C3                      ret
 12199                                 .imm253:
 12200 00004E18 F30F70C1FD              pshufhw xmm0, xmm1, 253
 12201 00004E1D C3                      ret
 12202                                 .imm254:
 12203 00004E1E F30F70C1FE              pshufhw xmm0, xmm1, 254
 12204 00004E23 C3                      ret
 12205                                 .imm255:
 12206 00004E24 F30F70C1FF              pshufhw xmm0, xmm1, 255
 12207 00004E29 C3                      ret
 12208                                 .immEnd:
 12209 00004E2A FFFF                   dw 0xf9ff + (.immEnd - .imm0)
 12210 00004E2C FFFF                   dw 0x105ff - (.immEnd - .imm0)
 12211                                 [global iemAImpl_pshufhw_EndProc:function hidden]
 12212                                 iemAImpl_pshufhw_EndProc:
 12213                                 [size iemAImpl_pshufhw iemAImpl_pshufhw_EndProc - iemAImpl_pshufhw]
 12214                                 [size iemAImpl_pshufhw_EndProc 0]
 12215 00004E2E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 12216                                 %line 2916+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 12217                                 [global iemAImpl_pshuflw]
 12218                                 %line 2916+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 12219                                 iemAImpl_pshuflw:
 12220                                 
 12221 00004E32 F30F6F06                movdqu xmm0, [rsi]
 12222 00004E36 F30F6F0A                movdqu xmm1, [rdx]
 12223 00004E3A 4C8D1D09000000          lea r11, [.imm0 wrt rip]
 12224 00004E41 488D0449                lea rax, [rcx + rcx*2]
 12225 00004E45 4D8D1C43                lea r11, [r11 + rax*2]
 12226 00004E49 41FFD3                  call r11
 12227 00004E4C F30F7F06                movdqu [rsi], xmm0
 12228                                 
 12229 00004E50 C3                      ret
 12230                                 .imm0:
 12231 00004E51 F20F70C100              pshuflw xmm0, xmm1, 0
 12232 00004E56 C3                      ret
 12233                                 .imm1:
 12234 00004E57 F20F70C101              pshuflw xmm0, xmm1, 1
 12235 00004E5C C3                      ret
 12236                                 .imm2:
 12237 00004E5D F20F70C102              pshuflw xmm0, xmm1, 2
 12238 00004E62 C3                      ret
 12239                                 .imm3:
 12240 00004E63 F20F70C103              pshuflw xmm0, xmm1, 3
 12241 00004E68 C3                      ret
 12242                                 .imm4:
 12243 00004E69 F20F70C104              pshuflw xmm0, xmm1, 4
 12244 00004E6E C3                      ret
 12245                                 .imm5:
 12246 00004E6F F20F70C105              pshuflw xmm0, xmm1, 5
 12247 00004E74 C3                      ret
 12248                                 .imm6:
 12249 00004E75 F20F70C106              pshuflw xmm0, xmm1, 6
 12250 00004E7A C3                      ret
 12251                                 .imm7:
 12252 00004E7B F20F70C107              pshuflw xmm0, xmm1, 7
 12253 00004E80 C3                      ret
 12254                                 .imm8:
 12255 00004E81 F20F70C108              pshuflw xmm0, xmm1, 8
 12256 00004E86 C3                      ret
 12257                                 .imm9:
 12258 00004E87 F20F70C109              pshuflw xmm0, xmm1, 9
 12259 00004E8C C3                      ret
 12260                                 .imm10:
 12261 00004E8D F20F70C10A              pshuflw xmm0, xmm1, 10
 12262 00004E92 C3                      ret
 12263                                 .imm11:
 12264 00004E93 F20F70C10B              pshuflw xmm0, xmm1, 11
 12265 00004E98 C3                      ret
 12266                                 .imm12:
 12267 00004E99 F20F70C10C              pshuflw xmm0, xmm1, 12
 12268 00004E9E C3                      ret
 12269                                 .imm13:
 12270 00004E9F F20F70C10D              pshuflw xmm0, xmm1, 13
 12271 00004EA4 C3                      ret
 12272                                 .imm14:
 12273 00004EA5 F20F70C10E              pshuflw xmm0, xmm1, 14
 12274 00004EAA C3                      ret
 12275                                 .imm15:
 12276 00004EAB F20F70C10F              pshuflw xmm0, xmm1, 15
 12277 00004EB0 C3                      ret
 12278                                 .imm16:
 12279 00004EB1 F20F70C110              pshuflw xmm0, xmm1, 16
 12280 00004EB6 C3                      ret
 12281                                 .imm17:
 12282 00004EB7 F20F70C111              pshuflw xmm0, xmm1, 17
 12283 00004EBC C3                      ret
 12284                                 .imm18:
 12285 00004EBD F20F70C112              pshuflw xmm0, xmm1, 18
 12286 00004EC2 C3                      ret
 12287                                 .imm19:
 12288 00004EC3 F20F70C113              pshuflw xmm0, xmm1, 19
 12289 00004EC8 C3                      ret
 12290                                 .imm20:
 12291 00004EC9 F20F70C114              pshuflw xmm0, xmm1, 20
 12292 00004ECE C3                      ret
 12293                                 .imm21:
 12294 00004ECF F20F70C115              pshuflw xmm0, xmm1, 21
 12295 00004ED4 C3                      ret
 12296                                 .imm22:
 12297 00004ED5 F20F70C116              pshuflw xmm0, xmm1, 22
 12298 00004EDA C3                      ret
 12299                                 .imm23:
 12300 00004EDB F20F70C117              pshuflw xmm0, xmm1, 23
 12301 00004EE0 C3                      ret
 12302                                 .imm24:
 12303 00004EE1 F20F70C118              pshuflw xmm0, xmm1, 24
 12304 00004EE6 C3                      ret
 12305                                 .imm25:
 12306 00004EE7 F20F70C119              pshuflw xmm0, xmm1, 25
 12307 00004EEC C3                      ret
 12308                                 .imm26:
 12309 00004EED F20F70C11A              pshuflw xmm0, xmm1, 26
 12310 00004EF2 C3                      ret
 12311                                 .imm27:
 12312 00004EF3 F20F70C11B              pshuflw xmm0, xmm1, 27
 12313 00004EF8 C3                      ret
 12314                                 .imm28:
 12315 00004EF9 F20F70C11C              pshuflw xmm0, xmm1, 28
 12316 00004EFE C3                      ret
 12317                                 .imm29:
 12318 00004EFF F20F70C11D              pshuflw xmm0, xmm1, 29
 12319 00004F04 C3                      ret
 12320                                 .imm30:
 12321 00004F05 F20F70C11E              pshuflw xmm0, xmm1, 30
 12322 00004F0A C3                      ret
 12323                                 .imm31:
 12324 00004F0B F20F70C11F              pshuflw xmm0, xmm1, 31
 12325 00004F10 C3                      ret
 12326                                 .imm32:
 12327 00004F11 F20F70C120              pshuflw xmm0, xmm1, 32
 12328 00004F16 C3                      ret
 12329                                 .imm33:
 12330 00004F17 F20F70C121              pshuflw xmm0, xmm1, 33
 12331 00004F1C C3                      ret
 12332                                 .imm34:
 12333 00004F1D F20F70C122              pshuflw xmm0, xmm1, 34
 12334 00004F22 C3                      ret
 12335                                 .imm35:
 12336 00004F23 F20F70C123              pshuflw xmm0, xmm1, 35
 12337 00004F28 C3                      ret
 12338                                 .imm36:
 12339 00004F29 F20F70C124              pshuflw xmm0, xmm1, 36
 12340 00004F2E C3                      ret
 12341                                 .imm37:
 12342 00004F2F F20F70C125              pshuflw xmm0, xmm1, 37
 12343 00004F34 C3                      ret
 12344                                 .imm38:
 12345 00004F35 F20F70C126              pshuflw xmm0, xmm1, 38
 12346 00004F3A C3                      ret
 12347                                 .imm39:
 12348 00004F3B F20F70C127              pshuflw xmm0, xmm1, 39
 12349 00004F40 C3                      ret
 12350                                 .imm40:
 12351 00004F41 F20F70C128              pshuflw xmm0, xmm1, 40
 12352 00004F46 C3                      ret
 12353                                 .imm41:
 12354 00004F47 F20F70C129              pshuflw xmm0, xmm1, 41
 12355 00004F4C C3                      ret
 12356                                 .imm42:
 12357 00004F4D F20F70C12A              pshuflw xmm0, xmm1, 42
 12358 00004F52 C3                      ret
 12359                                 .imm43:
 12360 00004F53 F20F70C12B              pshuflw xmm0, xmm1, 43
 12361 00004F58 C3                      ret
 12362                                 .imm44:
 12363 00004F59 F20F70C12C              pshuflw xmm0, xmm1, 44
 12364 00004F5E C3                      ret
 12365                                 .imm45:
 12366 00004F5F F20F70C12D              pshuflw xmm0, xmm1, 45
 12367 00004F64 C3                      ret
 12368                                 .imm46:
 12369 00004F65 F20F70C12E              pshuflw xmm0, xmm1, 46
 12370 00004F6A C3                      ret
 12371                                 .imm47:
 12372 00004F6B F20F70C12F              pshuflw xmm0, xmm1, 47
 12373 00004F70 C3                      ret
 12374                                 .imm48:
 12375 00004F71 F20F70C130              pshuflw xmm0, xmm1, 48
 12376 00004F76 C3                      ret
 12377                                 .imm49:
 12378 00004F77 F20F70C131              pshuflw xmm0, xmm1, 49
 12379 00004F7C C3                      ret
 12380                                 .imm50:
 12381 00004F7D F20F70C132              pshuflw xmm0, xmm1, 50
 12382 00004F82 C3                      ret
 12383                                 .imm51:
 12384 00004F83 F20F70C133              pshuflw xmm0, xmm1, 51
 12385 00004F88 C3                      ret
 12386                                 .imm52:
 12387 00004F89 F20F70C134              pshuflw xmm0, xmm1, 52
 12388 00004F8E C3                      ret
 12389                                 .imm53:
 12390 00004F8F F20F70C135              pshuflw xmm0, xmm1, 53
 12391 00004F94 C3                      ret
 12392                                 .imm54:
 12393 00004F95 F20F70C136              pshuflw xmm0, xmm1, 54
 12394 00004F9A C3                      ret
 12395                                 .imm55:
 12396 00004F9B F20F70C137              pshuflw xmm0, xmm1, 55
 12397 00004FA0 C3                      ret
 12398                                 .imm56:
 12399 00004FA1 F20F70C138              pshuflw xmm0, xmm1, 56
 12400 00004FA6 C3                      ret
 12401                                 .imm57:
 12402 00004FA7 F20F70C139              pshuflw xmm0, xmm1, 57
 12403 00004FAC C3                      ret
 12404                                 .imm58:
 12405 00004FAD F20F70C13A              pshuflw xmm0, xmm1, 58
 12406 00004FB2 C3                      ret
 12407                                 .imm59:
 12408 00004FB3 F20F70C13B              pshuflw xmm0, xmm1, 59
 12409 00004FB8 C3                      ret
 12410                                 .imm60:
 12411 00004FB9 F20F70C13C              pshuflw xmm0, xmm1, 60
 12412 00004FBE C3                      ret
 12413                                 .imm61:
 12414 00004FBF F20F70C13D              pshuflw xmm0, xmm1, 61
 12415 00004FC4 C3                      ret
 12416                                 .imm62:
 12417 00004FC5 F20F70C13E              pshuflw xmm0, xmm1, 62
 12418 00004FCA C3                      ret
 12419                                 .imm63:
 12420 00004FCB F20F70C13F              pshuflw xmm0, xmm1, 63
 12421 00004FD0 C3                      ret
 12422                                 .imm64:
 12423 00004FD1 F20F70C140              pshuflw xmm0, xmm1, 64
 12424 00004FD6 C3                      ret
 12425                                 .imm65:
 12426 00004FD7 F20F70C141              pshuflw xmm0, xmm1, 65
 12427 00004FDC C3                      ret
 12428                                 .imm66:
 12429 00004FDD F20F70C142              pshuflw xmm0, xmm1, 66
 12430 00004FE2 C3                      ret
 12431                                 .imm67:
 12432 00004FE3 F20F70C143              pshuflw xmm0, xmm1, 67
 12433 00004FE8 C3                      ret
 12434                                 .imm68:
 12435 00004FE9 F20F70C144              pshuflw xmm0, xmm1, 68
 12436 00004FEE C3                      ret
 12437                                 .imm69:
 12438 00004FEF F20F70C145              pshuflw xmm0, xmm1, 69
 12439 00004FF4 C3                      ret
 12440                                 .imm70:
 12441 00004FF5 F20F70C146              pshuflw xmm0, xmm1, 70
 12442 00004FFA C3                      ret
 12443                                 .imm71:
 12444 00004FFB F20F70C147              pshuflw xmm0, xmm1, 71
 12445 00005000 C3                      ret
 12446                                 .imm72:
 12447 00005001 F20F70C148              pshuflw xmm0, xmm1, 72
 12448 00005006 C3                      ret
 12449                                 .imm73:
 12450 00005007 F20F70C149              pshuflw xmm0, xmm1, 73
 12451 0000500C C3                      ret
 12452                                 .imm74:
 12453 0000500D F20F70C14A              pshuflw xmm0, xmm1, 74
 12454 00005012 C3                      ret
 12455                                 .imm75:
 12456 00005013 F20F70C14B              pshuflw xmm0, xmm1, 75
 12457 00005018 C3                      ret
 12458                                 .imm76:
 12459 00005019 F20F70C14C              pshuflw xmm0, xmm1, 76
 12460 0000501E C3                      ret
 12461                                 .imm77:
 12462 0000501F F20F70C14D              pshuflw xmm0, xmm1, 77
 12463 00005024 C3                      ret
 12464                                 .imm78:
 12465 00005025 F20F70C14E              pshuflw xmm0, xmm1, 78
 12466 0000502A C3                      ret
 12467                                 .imm79:
 12468 0000502B F20F70C14F              pshuflw xmm0, xmm1, 79
 12469 00005030 C3                      ret
 12470                                 .imm80:
 12471 00005031 F20F70C150              pshuflw xmm0, xmm1, 80
 12472 00005036 C3                      ret
 12473                                 .imm81:
 12474 00005037 F20F70C151              pshuflw xmm0, xmm1, 81
 12475 0000503C C3                      ret
 12476                                 .imm82:
 12477 0000503D F20F70C152              pshuflw xmm0, xmm1, 82
 12478 00005042 C3                      ret
 12479                                 .imm83:
 12480 00005043 F20F70C153              pshuflw xmm0, xmm1, 83
 12481 00005048 C3                      ret
 12482                                 .imm84:
 12483 00005049 F20F70C154              pshuflw xmm0, xmm1, 84
 12484 0000504E C3                      ret
 12485                                 .imm85:
 12486 0000504F F20F70C155              pshuflw xmm0, xmm1, 85
 12487 00005054 C3                      ret
 12488                                 .imm86:
 12489 00005055 F20F70C156              pshuflw xmm0, xmm1, 86
 12490 0000505A C3                      ret
 12491                                 .imm87:
 12492 0000505B F20F70C157              pshuflw xmm0, xmm1, 87
 12493 00005060 C3                      ret
 12494                                 .imm88:
 12495 00005061 F20F70C158              pshuflw xmm0, xmm1, 88
 12496 00005066 C3                      ret
 12497                                 .imm89:
 12498 00005067 F20F70C159              pshuflw xmm0, xmm1, 89
 12499 0000506C C3                      ret
 12500                                 .imm90:
 12501 0000506D F20F70C15A              pshuflw xmm0, xmm1, 90
 12502 00005072 C3                      ret
 12503                                 .imm91:
 12504 00005073 F20F70C15B              pshuflw xmm0, xmm1, 91
 12505 00005078 C3                      ret
 12506                                 .imm92:
 12507 00005079 F20F70C15C              pshuflw xmm0, xmm1, 92
 12508 0000507E C3                      ret
 12509                                 .imm93:
 12510 0000507F F20F70C15D              pshuflw xmm0, xmm1, 93
 12511 00005084 C3                      ret
 12512                                 .imm94:
 12513 00005085 F20F70C15E              pshuflw xmm0, xmm1, 94
 12514 0000508A C3                      ret
 12515                                 .imm95:
 12516 0000508B F20F70C15F              pshuflw xmm0, xmm1, 95
 12517 00005090 C3                      ret
 12518                                 .imm96:
 12519 00005091 F20F70C160              pshuflw xmm0, xmm1, 96
 12520 00005096 C3                      ret
 12521                                 .imm97:
 12522 00005097 F20F70C161              pshuflw xmm0, xmm1, 97
 12523 0000509C C3                      ret
 12524                                 .imm98:
 12525 0000509D F20F70C162              pshuflw xmm0, xmm1, 98
 12526 000050A2 C3                      ret
 12527                                 .imm99:
 12528 000050A3 F20F70C163              pshuflw xmm0, xmm1, 99
 12529 000050A8 C3                      ret
 12530                                 .imm100:
 12531 000050A9 F20F70C164              pshuflw xmm0, xmm1, 100
 12532 000050AE C3                      ret
 12533                                 .imm101:
 12534 000050AF F20F70C165              pshuflw xmm0, xmm1, 101
 12535 000050B4 C3                      ret
 12536                                 .imm102:
 12537 000050B5 F20F70C166              pshuflw xmm0, xmm1, 102
 12538 000050BA C3                      ret
 12539                                 .imm103:
 12540 000050BB F20F70C167              pshuflw xmm0, xmm1, 103
 12541 000050C0 C3                      ret
 12542                                 .imm104:
 12543 000050C1 F20F70C168              pshuflw xmm0, xmm1, 104
 12544 000050C6 C3                      ret
 12545                                 .imm105:
 12546 000050C7 F20F70C169              pshuflw xmm0, xmm1, 105
 12547 000050CC C3                      ret
 12548                                 .imm106:
 12549 000050CD F20F70C16A              pshuflw xmm0, xmm1, 106
 12550 000050D2 C3                      ret
 12551                                 .imm107:
 12552 000050D3 F20F70C16B              pshuflw xmm0, xmm1, 107
 12553 000050D8 C3                      ret
 12554                                 .imm108:
 12555 000050D9 F20F70C16C              pshuflw xmm0, xmm1, 108
 12556 000050DE C3                      ret
 12557                                 .imm109:
 12558 000050DF F20F70C16D              pshuflw xmm0, xmm1, 109
 12559 000050E4 C3                      ret
 12560                                 .imm110:
 12561 000050E5 F20F70C16E              pshuflw xmm0, xmm1, 110
 12562 000050EA C3                      ret
 12563                                 .imm111:
 12564 000050EB F20F70C16F              pshuflw xmm0, xmm1, 111
 12565 000050F0 C3                      ret
 12566                                 .imm112:
 12567 000050F1 F20F70C170              pshuflw xmm0, xmm1, 112
 12568 000050F6 C3                      ret
 12569                                 .imm113:
 12570 000050F7 F20F70C171              pshuflw xmm0, xmm1, 113
 12571 000050FC C3                      ret
 12572                                 .imm114:
 12573 000050FD F20F70C172              pshuflw xmm0, xmm1, 114
 12574 00005102 C3                      ret
 12575                                 .imm115:
 12576 00005103 F20F70C173              pshuflw xmm0, xmm1, 115
 12577 00005108 C3                      ret
 12578                                 .imm116:
 12579 00005109 F20F70C174              pshuflw xmm0, xmm1, 116
 12580 0000510E C3                      ret
 12581                                 .imm117:
 12582 0000510F F20F70C175              pshuflw xmm0, xmm1, 117
 12583 00005114 C3                      ret
 12584                                 .imm118:
 12585 00005115 F20F70C176              pshuflw xmm0, xmm1, 118
 12586 0000511A C3                      ret
 12587                                 .imm119:
 12588 0000511B F20F70C177              pshuflw xmm0, xmm1, 119
 12589 00005120 C3                      ret
 12590                                 .imm120:
 12591 00005121 F20F70C178              pshuflw xmm0, xmm1, 120
 12592 00005126 C3                      ret
 12593                                 .imm121:
 12594 00005127 F20F70C179              pshuflw xmm0, xmm1, 121
 12595 0000512C C3                      ret
 12596                                 .imm122:
 12597 0000512D F20F70C17A              pshuflw xmm0, xmm1, 122
 12598 00005132 C3                      ret
 12599                                 .imm123:
 12600 00005133 F20F70C17B              pshuflw xmm0, xmm1, 123
 12601 00005138 C3                      ret
 12602                                 .imm124:
 12603 00005139 F20F70C17C              pshuflw xmm0, xmm1, 124
 12604 0000513E C3                      ret
 12605                                 .imm125:
 12606 0000513F F20F70C17D              pshuflw xmm0, xmm1, 125
 12607 00005144 C3                      ret
 12608                                 .imm126:
 12609 00005145 F20F70C17E              pshuflw xmm0, xmm1, 126
 12610 0000514A C3                      ret
 12611                                 .imm127:
 12612 0000514B F20F70C17F              pshuflw xmm0, xmm1, 127
 12613 00005150 C3                      ret
 12614                                 .imm128:
 12615 00005151 F20F70C180              pshuflw xmm0, xmm1, 128
 12616 00005156 C3                      ret
 12617                                 .imm129:
 12618 00005157 F20F70C181              pshuflw xmm0, xmm1, 129
 12619 0000515C C3                      ret
 12620                                 .imm130:
 12621 0000515D F20F70C182              pshuflw xmm0, xmm1, 130
 12622 00005162 C3                      ret
 12623                                 .imm131:
 12624 00005163 F20F70C183              pshuflw xmm0, xmm1, 131
 12625 00005168 C3                      ret
 12626                                 .imm132:
 12627 00005169 F20F70C184              pshuflw xmm0, xmm1, 132
 12628 0000516E C3                      ret
 12629                                 .imm133:
 12630 0000516F F20F70C185              pshuflw xmm0, xmm1, 133
 12631 00005174 C3                      ret
 12632                                 .imm134:
 12633 00005175 F20F70C186              pshuflw xmm0, xmm1, 134
 12634 0000517A C3                      ret
 12635                                 .imm135:
 12636 0000517B F20F70C187              pshuflw xmm0, xmm1, 135
 12637 00005180 C3                      ret
 12638                                 .imm136:
 12639 00005181 F20F70C188              pshuflw xmm0, xmm1, 136
 12640 00005186 C3                      ret
 12641                                 .imm137:
 12642 00005187 F20F70C189              pshuflw xmm0, xmm1, 137
 12643 0000518C C3                      ret
 12644                                 .imm138:
 12645 0000518D F20F70C18A              pshuflw xmm0, xmm1, 138
 12646 00005192 C3                      ret
 12647                                 .imm139:
 12648 00005193 F20F70C18B              pshuflw xmm0, xmm1, 139
 12649 00005198 C3                      ret
 12650                                 .imm140:
 12651 00005199 F20F70C18C              pshuflw xmm0, xmm1, 140
 12652 0000519E C3                      ret
 12653                                 .imm141:
 12654 0000519F F20F70C18D              pshuflw xmm0, xmm1, 141
 12655 000051A4 C3                      ret
 12656                                 .imm142:
 12657 000051A5 F20F70C18E              pshuflw xmm0, xmm1, 142
 12658 000051AA C3                      ret
 12659                                 .imm143:
 12660 000051AB F20F70C18F              pshuflw xmm0, xmm1, 143
 12661 000051B0 C3                      ret
 12662                                 .imm144:
 12663 000051B1 F20F70C190              pshuflw xmm0, xmm1, 144
 12664 000051B6 C3                      ret
 12665                                 .imm145:
 12666 000051B7 F20F70C191              pshuflw xmm0, xmm1, 145
 12667 000051BC C3                      ret
 12668                                 .imm146:
 12669 000051BD F20F70C192              pshuflw xmm0, xmm1, 146
 12670 000051C2 C3                      ret
 12671                                 .imm147:
 12672 000051C3 F20F70C193              pshuflw xmm0, xmm1, 147
 12673 000051C8 C3                      ret
 12674                                 .imm148:
 12675 000051C9 F20F70C194              pshuflw xmm0, xmm1, 148
 12676 000051CE C3                      ret
 12677                                 .imm149:
 12678 000051CF F20F70C195              pshuflw xmm0, xmm1, 149
 12679 000051D4 C3                      ret
 12680                                 .imm150:
 12681 000051D5 F20F70C196              pshuflw xmm0, xmm1, 150
 12682 000051DA C3                      ret
 12683                                 .imm151:
 12684 000051DB F20F70C197              pshuflw xmm0, xmm1, 151
 12685 000051E0 C3                      ret
 12686                                 .imm152:
 12687 000051E1 F20F70C198              pshuflw xmm0, xmm1, 152
 12688 000051E6 C3                      ret
 12689                                 .imm153:
 12690 000051E7 F20F70C199              pshuflw xmm0, xmm1, 153
 12691 000051EC C3                      ret
 12692                                 .imm154:
 12693 000051ED F20F70C19A              pshuflw xmm0, xmm1, 154
 12694 000051F2 C3                      ret
 12695                                 .imm155:
 12696 000051F3 F20F70C19B              pshuflw xmm0, xmm1, 155
 12697 000051F8 C3                      ret
 12698                                 .imm156:
 12699 000051F9 F20F70C19C              pshuflw xmm0, xmm1, 156
 12700 000051FE C3                      ret
 12701                                 .imm157:
 12702 000051FF F20F70C19D              pshuflw xmm0, xmm1, 157
 12703 00005204 C3                      ret
 12704                                 .imm158:
 12705 00005205 F20F70C19E              pshuflw xmm0, xmm1, 158
 12706 0000520A C3                      ret
 12707                                 .imm159:
 12708 0000520B F20F70C19F              pshuflw xmm0, xmm1, 159
 12709 00005210 C3                      ret
 12710                                 .imm160:
 12711 00005211 F20F70C1A0              pshuflw xmm0, xmm1, 160
 12712 00005216 C3                      ret
 12713                                 .imm161:
 12714 00005217 F20F70C1A1              pshuflw xmm0, xmm1, 161
 12715 0000521C C3                      ret
 12716                                 .imm162:
 12717 0000521D F20F70C1A2              pshuflw xmm0, xmm1, 162
 12718 00005222 C3                      ret
 12719                                 .imm163:
 12720 00005223 F20F70C1A3              pshuflw xmm0, xmm1, 163
 12721 00005228 C3                      ret
 12722                                 .imm164:
 12723 00005229 F20F70C1A4              pshuflw xmm0, xmm1, 164
 12724 0000522E C3                      ret
 12725                                 .imm165:
 12726 0000522F F20F70C1A5              pshuflw xmm0, xmm1, 165
 12727 00005234 C3                      ret
 12728                                 .imm166:
 12729 00005235 F20F70C1A6              pshuflw xmm0, xmm1, 166
 12730 0000523A C3                      ret
 12731                                 .imm167:
 12732 0000523B F20F70C1A7              pshuflw xmm0, xmm1, 167
 12733 00005240 C3                      ret
 12734                                 .imm168:
 12735 00005241 F20F70C1A8              pshuflw xmm0, xmm1, 168
 12736 00005246 C3                      ret
 12737                                 .imm169:
 12738 00005247 F20F70C1A9              pshuflw xmm0, xmm1, 169
 12739 0000524C C3                      ret
 12740                                 .imm170:
 12741 0000524D F20F70C1AA              pshuflw xmm0, xmm1, 170
 12742 00005252 C3                      ret
 12743                                 .imm171:
 12744 00005253 F20F70C1AB              pshuflw xmm0, xmm1, 171
 12745 00005258 C3                      ret
 12746                                 .imm172:
 12747 00005259 F20F70C1AC              pshuflw xmm0, xmm1, 172
 12748 0000525E C3                      ret
 12749                                 .imm173:
 12750 0000525F F20F70C1AD              pshuflw xmm0, xmm1, 173
 12751 00005264 C3                      ret
 12752                                 .imm174:
 12753 00005265 F20F70C1AE              pshuflw xmm0, xmm1, 174
 12754 0000526A C3                      ret
 12755                                 .imm175:
 12756 0000526B F20F70C1AF              pshuflw xmm0, xmm1, 175
 12757 00005270 C3                      ret
 12758                                 .imm176:
 12759 00005271 F20F70C1B0              pshuflw xmm0, xmm1, 176
 12760 00005276 C3                      ret
 12761                                 .imm177:
 12762 00005277 F20F70C1B1              pshuflw xmm0, xmm1, 177
 12763 0000527C C3                      ret
 12764                                 .imm178:
 12765 0000527D F20F70C1B2              pshuflw xmm0, xmm1, 178
 12766 00005282 C3                      ret
 12767                                 .imm179:
 12768 00005283 F20F70C1B3              pshuflw xmm0, xmm1, 179
 12769 00005288 C3                      ret
 12770                                 .imm180:
 12771 00005289 F20F70C1B4              pshuflw xmm0, xmm1, 180
 12772 0000528E C3                      ret
 12773                                 .imm181:
 12774 0000528F F20F70C1B5              pshuflw xmm0, xmm1, 181
 12775 00005294 C3                      ret
 12776                                 .imm182:
 12777 00005295 F20F70C1B6              pshuflw xmm0, xmm1, 182
 12778 0000529A C3                      ret
 12779                                 .imm183:
 12780 0000529B F20F70C1B7              pshuflw xmm0, xmm1, 183
 12781 000052A0 C3                      ret
 12782                                 .imm184:
 12783 000052A1 F20F70C1B8              pshuflw xmm0, xmm1, 184
 12784 000052A6 C3                      ret
 12785                                 .imm185:
 12786 000052A7 F20F70C1B9              pshuflw xmm0, xmm1, 185
 12787 000052AC C3                      ret
 12788                                 .imm186:
 12789 000052AD F20F70C1BA              pshuflw xmm0, xmm1, 186
 12790 000052B2 C3                      ret
 12791                                 .imm187:
 12792 000052B3 F20F70C1BB              pshuflw xmm0, xmm1, 187
 12793 000052B8 C3                      ret
 12794                                 .imm188:
 12795 000052B9 F20F70C1BC              pshuflw xmm0, xmm1, 188
 12796 000052BE C3                      ret
 12797                                 .imm189:
 12798 000052BF F20F70C1BD              pshuflw xmm0, xmm1, 189
 12799 000052C4 C3                      ret
 12800                                 .imm190:
 12801 000052C5 F20F70C1BE              pshuflw xmm0, xmm1, 190
 12802 000052CA C3                      ret
 12803                                 .imm191:
 12804 000052CB F20F70C1BF              pshuflw xmm0, xmm1, 191
 12805 000052D0 C3                      ret
 12806                                 .imm192:
 12807 000052D1 F20F70C1C0              pshuflw xmm0, xmm1, 192
 12808 000052D6 C3                      ret
 12809                                 .imm193:
 12810 000052D7 F20F70C1C1              pshuflw xmm0, xmm1, 193
 12811 000052DC C3                      ret
 12812                                 .imm194:
 12813 000052DD F20F70C1C2              pshuflw xmm0, xmm1, 194
 12814 000052E2 C3                      ret
 12815                                 .imm195:
 12816 000052E3 F20F70C1C3              pshuflw xmm0, xmm1, 195
 12817 000052E8 C3                      ret
 12818                                 .imm196:
 12819 000052E9 F20F70C1C4              pshuflw xmm0, xmm1, 196
 12820 000052EE C3                      ret
 12821                                 .imm197:
 12822 000052EF F20F70C1C5              pshuflw xmm0, xmm1, 197
 12823 000052F4 C3                      ret
 12824                                 .imm198:
 12825 000052F5 F20F70C1C6              pshuflw xmm0, xmm1, 198
 12826 000052FA C3                      ret
 12827                                 .imm199:
 12828 000052FB F20F70C1C7              pshuflw xmm0, xmm1, 199
 12829 00005300 C3                      ret
 12830                                 .imm200:
 12831 00005301 F20F70C1C8              pshuflw xmm0, xmm1, 200
 12832 00005306 C3                      ret
 12833                                 .imm201:
 12834 00005307 F20F70C1C9              pshuflw xmm0, xmm1, 201
 12835 0000530C C3                      ret
 12836                                 .imm202:
 12837 0000530D F20F70C1CA              pshuflw xmm0, xmm1, 202
 12838 00005312 C3                      ret
 12839                                 .imm203:
 12840 00005313 F20F70C1CB              pshuflw xmm0, xmm1, 203
 12841 00005318 C3                      ret
 12842                                 .imm204:
 12843 00005319 F20F70C1CC              pshuflw xmm0, xmm1, 204
 12844 0000531E C3                      ret
 12845                                 .imm205:
 12846 0000531F F20F70C1CD              pshuflw xmm0, xmm1, 205
 12847 00005324 C3                      ret
 12848                                 .imm206:
 12849 00005325 F20F70C1CE              pshuflw xmm0, xmm1, 206
 12850 0000532A C3                      ret
 12851                                 .imm207:
 12852 0000532B F20F70C1CF              pshuflw xmm0, xmm1, 207
 12853 00005330 C3                      ret
 12854                                 .imm208:
 12855 00005331 F20F70C1D0              pshuflw xmm0, xmm1, 208
 12856 00005336 C3                      ret
 12857                                 .imm209:
 12858 00005337 F20F70C1D1              pshuflw xmm0, xmm1, 209
 12859 0000533C C3                      ret
 12860                                 .imm210:
 12861 0000533D F20F70C1D2              pshuflw xmm0, xmm1, 210
 12862 00005342 C3                      ret
 12863                                 .imm211:
 12864 00005343 F20F70C1D3              pshuflw xmm0, xmm1, 211
 12865 00005348 C3                      ret
 12866                                 .imm212:
 12867 00005349 F20F70C1D4              pshuflw xmm0, xmm1, 212
 12868 0000534E C3                      ret
 12869                                 .imm213:
 12870 0000534F F20F70C1D5              pshuflw xmm0, xmm1, 213
 12871 00005354 C3                      ret
 12872                                 .imm214:
 12873 00005355 F20F70C1D6              pshuflw xmm0, xmm1, 214
 12874 0000535A C3                      ret
 12875                                 .imm215:
 12876 0000535B F20F70C1D7              pshuflw xmm0, xmm1, 215
 12877 00005360 C3                      ret
 12878                                 .imm216:
 12879 00005361 F20F70C1D8              pshuflw xmm0, xmm1, 216
 12880 00005366 C3                      ret
 12881                                 .imm217:
 12882 00005367 F20F70C1D9              pshuflw xmm0, xmm1, 217
 12883 0000536C C3                      ret
 12884                                 .imm218:
 12885 0000536D F20F70C1DA              pshuflw xmm0, xmm1, 218
 12886 00005372 C3                      ret
 12887                                 .imm219:
 12888 00005373 F20F70C1DB              pshuflw xmm0, xmm1, 219
 12889 00005378 C3                      ret
 12890                                 .imm220:
 12891 00005379 F20F70C1DC              pshuflw xmm0, xmm1, 220
 12892 0000537E C3                      ret
 12893                                 .imm221:
 12894 0000537F F20F70C1DD              pshuflw xmm0, xmm1, 221
 12895 00005384 C3                      ret
 12896                                 .imm222:
 12897 00005385 F20F70C1DE              pshuflw xmm0, xmm1, 222
 12898 0000538A C3                      ret
 12899                                 .imm223:
 12900 0000538B F20F70C1DF              pshuflw xmm0, xmm1, 223
 12901 00005390 C3                      ret
 12902                                 .imm224:
 12903 00005391 F20F70C1E0              pshuflw xmm0, xmm1, 224
 12904 00005396 C3                      ret
 12905                                 .imm225:
 12906 00005397 F20F70C1E1              pshuflw xmm0, xmm1, 225
 12907 0000539C C3                      ret
 12908                                 .imm226:
 12909 0000539D F20F70C1E2              pshuflw xmm0, xmm1, 226
 12910 000053A2 C3                      ret
 12911                                 .imm227:
 12912 000053A3 F20F70C1E3              pshuflw xmm0, xmm1, 227
 12913 000053A8 C3                      ret
 12914                                 .imm228:
 12915 000053A9 F20F70C1E4              pshuflw xmm0, xmm1, 228
 12916 000053AE C3                      ret
 12917                                 .imm229:
 12918 000053AF F20F70C1E5              pshuflw xmm0, xmm1, 229
 12919 000053B4 C3                      ret
 12920                                 .imm230:
 12921 000053B5 F20F70C1E6              pshuflw xmm0, xmm1, 230
 12922 000053BA C3                      ret
 12923                                 .imm231:
 12924 000053BB F20F70C1E7              pshuflw xmm0, xmm1, 231
 12925 000053C0 C3                      ret
 12926                                 .imm232:
 12927 000053C1 F20F70C1E8              pshuflw xmm0, xmm1, 232
 12928 000053C6 C3                      ret
 12929                                 .imm233:
 12930 000053C7 F20F70C1E9              pshuflw xmm0, xmm1, 233
 12931 000053CC C3                      ret
 12932                                 .imm234:
 12933 000053CD F20F70C1EA              pshuflw xmm0, xmm1, 234
 12934 000053D2 C3                      ret
 12935                                 .imm235:
 12936 000053D3 F20F70C1EB              pshuflw xmm0, xmm1, 235
 12937 000053D8 C3                      ret
 12938                                 .imm236:
 12939 000053D9 F20F70C1EC              pshuflw xmm0, xmm1, 236
 12940 000053DE C3                      ret
 12941                                 .imm237:
 12942 000053DF F20F70C1ED              pshuflw xmm0, xmm1, 237
 12943 000053E4 C3                      ret
 12944                                 .imm238:
 12945 000053E5 F20F70C1EE              pshuflw xmm0, xmm1, 238
 12946 000053EA C3                      ret
 12947                                 .imm239:
 12948 000053EB F20F70C1EF              pshuflw xmm0, xmm1, 239
 12949 000053F0 C3                      ret
 12950                                 .imm240:
 12951 000053F1 F20F70C1F0              pshuflw xmm0, xmm1, 240
 12952 000053F6 C3                      ret
 12953                                 .imm241:
 12954 000053F7 F20F70C1F1              pshuflw xmm0, xmm1, 241
 12955 000053FC C3                      ret
 12956                                 .imm242:
 12957 000053FD F20F70C1F2              pshuflw xmm0, xmm1, 242
 12958 00005402 C3                      ret
 12959                                 .imm243:
 12960 00005403 F20F70C1F3              pshuflw xmm0, xmm1, 243
 12961 00005408 C3                      ret
 12962                                 .imm244:
 12963 00005409 F20F70C1F4              pshuflw xmm0, xmm1, 244
 12964 0000540E C3                      ret
 12965                                 .imm245:
 12966 0000540F F20F70C1F5              pshuflw xmm0, xmm1, 245
 12967 00005414 C3                      ret
 12968                                 .imm246:
 12969 00005415 F20F70C1F6              pshuflw xmm0, xmm1, 246
 12970 0000541A C3                      ret
 12971                                 .imm247:
 12972 0000541B F20F70C1F7              pshuflw xmm0, xmm1, 247
 12973 00005420 C3                      ret
 12974                                 .imm248:
 12975 00005421 F20F70C1F8              pshuflw xmm0, xmm1, 248
 12976 00005426 C3                      ret
 12977                                 .imm249:
 12978 00005427 F20F70C1F9              pshuflw xmm0, xmm1, 249
 12979 0000542C C3                      ret
 12980                                 .imm250:
 12981 0000542D F20F70C1FA              pshuflw xmm0, xmm1, 250
 12982 00005432 C3                      ret
 12983                                 .imm251:
 12984 00005433 F20F70C1FB              pshuflw xmm0, xmm1, 251
 12985 00005438 C3                      ret
 12986                                 .imm252:
 12987 00005439 F20F70C1FC              pshuflw xmm0, xmm1, 252
 12988 0000543E C3                      ret
 12989                                 .imm253:
 12990 0000543F F20F70C1FD              pshuflw xmm0, xmm1, 253
 12991 00005444 C3                      ret
 12992                                 .imm254:
 12993 00005445 F20F70C1FE              pshuflw xmm0, xmm1, 254
 12994 0000544A C3                      ret
 12995                                 .imm255:
 12996 0000544B F20F70C1FF              pshuflw xmm0, xmm1, 255
 12997 00005450 C3                      ret
 12998                                 .immEnd:
 12999 00005451 FFFF                   dw 0xf9ff + (.immEnd - .imm0)
 13000 00005453 FFFF                   dw 0x105ff - (.immEnd - .imm0)
 13001                                 [global iemAImpl_pshuflw_EndProc:function hidden]
 13002                                 iemAImpl_pshuflw_EndProc:
 13003                                 [size iemAImpl_pshuflw iemAImpl_pshuflw_EndProc - iemAImpl_pshuflw]
 13004                                 [size iemAImpl_pshuflw_EndProc 0]
 13005 00005455 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 13006                                 %line 2917+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13007                                 [global iemAImpl_pshufd]
 13008                                 %line 2917+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13009                                 iemAImpl_pshufd:
 13010                                 
 13011 00005459 F30F6F06                movdqu xmm0, [rsi]
 13012 0000545D F30F6F0A                movdqu xmm1, [rdx]
 13013 00005461 4C8D1D09000000          lea r11, [.imm0 wrt rip]
 13014 00005468 488D0449                lea rax, [rcx + rcx*2]
 13015 0000546C 4D8D1C43                lea r11, [r11 + rax*2]
 13016 00005470 41FFD3                  call r11
 13017 00005473 F30F7F06                movdqu [rsi], xmm0
 13018                                 
 13019 00005477 C3                      ret
 13020                                 .imm0:
 13021 00005478 660F70C100              pshufd xmm0, xmm1, 0
 13022 0000547D C3                      ret
 13023                                 .imm1:
 13024 0000547E 660F70C101              pshufd xmm0, xmm1, 1
 13025 00005483 C3                      ret
 13026                                 .imm2:
 13027 00005484 660F70C102              pshufd xmm0, xmm1, 2
 13028 00005489 C3                      ret
 13029                                 .imm3:
 13030 0000548A 660F70C103              pshufd xmm0, xmm1, 3
 13031 0000548F C3                      ret
 13032                                 .imm4:
 13033 00005490 660F70C104              pshufd xmm0, xmm1, 4
 13034 00005495 C3                      ret
 13035                                 .imm5:
 13036 00005496 660F70C105              pshufd xmm0, xmm1, 5
 13037 0000549B C3                      ret
 13038                                 .imm6:
 13039 0000549C 660F70C106              pshufd xmm0, xmm1, 6
 13040 000054A1 C3                      ret
 13041                                 .imm7:
 13042 000054A2 660F70C107              pshufd xmm0, xmm1, 7
 13043 000054A7 C3                      ret
 13044                                 .imm8:
 13045 000054A8 660F70C108              pshufd xmm0, xmm1, 8
 13046 000054AD C3                      ret
 13047                                 .imm9:
 13048 000054AE 660F70C109              pshufd xmm0, xmm1, 9
 13049 000054B3 C3                      ret
 13050                                 .imm10:
 13051 000054B4 660F70C10A              pshufd xmm0, xmm1, 10
 13052 000054B9 C3                      ret
 13053                                 .imm11:
 13054 000054BA 660F70C10B              pshufd xmm0, xmm1, 11
 13055 000054BF C3                      ret
 13056                                 .imm12:
 13057 000054C0 660F70C10C              pshufd xmm0, xmm1, 12
 13058 000054C5 C3                      ret
 13059                                 .imm13:
 13060 000054C6 660F70C10D              pshufd xmm0, xmm1, 13
 13061 000054CB C3                      ret
 13062                                 .imm14:
 13063 000054CC 660F70C10E              pshufd xmm0, xmm1, 14
 13064 000054D1 C3                      ret
 13065                                 .imm15:
 13066 000054D2 660F70C10F              pshufd xmm0, xmm1, 15
 13067 000054D7 C3                      ret
 13068                                 .imm16:
 13069 000054D8 660F70C110              pshufd xmm0, xmm1, 16
 13070 000054DD C3                      ret
 13071                                 .imm17:
 13072 000054DE 660F70C111              pshufd xmm0, xmm1, 17
 13073 000054E3 C3                      ret
 13074                                 .imm18:
 13075 000054E4 660F70C112              pshufd xmm0, xmm1, 18
 13076 000054E9 C3                      ret
 13077                                 .imm19:
 13078 000054EA 660F70C113              pshufd xmm0, xmm1, 19
 13079 000054EF C3                      ret
 13080                                 .imm20:
 13081 000054F0 660F70C114              pshufd xmm0, xmm1, 20
 13082 000054F5 C3                      ret
 13083                                 .imm21:
 13084 000054F6 660F70C115              pshufd xmm0, xmm1, 21
 13085 000054FB C3                      ret
 13086                                 .imm22:
 13087 000054FC 660F70C116              pshufd xmm0, xmm1, 22
 13088 00005501 C3                      ret
 13089                                 .imm23:
 13090 00005502 660F70C117              pshufd xmm0, xmm1, 23
 13091 00005507 C3                      ret
 13092                                 .imm24:
 13093 00005508 660F70C118              pshufd xmm0, xmm1, 24
 13094 0000550D C3                      ret
 13095                                 .imm25:
 13096 0000550E 660F70C119              pshufd xmm0, xmm1, 25
 13097 00005513 C3                      ret
 13098                                 .imm26:
 13099 00005514 660F70C11A              pshufd xmm0, xmm1, 26
 13100 00005519 C3                      ret
 13101                                 .imm27:
 13102 0000551A 660F70C11B              pshufd xmm0, xmm1, 27
 13103 0000551F C3                      ret
 13104                                 .imm28:
 13105 00005520 660F70C11C              pshufd xmm0, xmm1, 28
 13106 00005525 C3                      ret
 13107                                 .imm29:
 13108 00005526 660F70C11D              pshufd xmm0, xmm1, 29
 13109 0000552B C3                      ret
 13110                                 .imm30:
 13111 0000552C 660F70C11E              pshufd xmm0, xmm1, 30
 13112 00005531 C3                      ret
 13113                                 .imm31:
 13114 00005532 660F70C11F              pshufd xmm0, xmm1, 31
 13115 00005537 C3                      ret
 13116                                 .imm32:
 13117 00005538 660F70C120              pshufd xmm0, xmm1, 32
 13118 0000553D C3                      ret
 13119                                 .imm33:
 13120 0000553E 660F70C121              pshufd xmm0, xmm1, 33
 13121 00005543 C3                      ret
 13122                                 .imm34:
 13123 00005544 660F70C122              pshufd xmm0, xmm1, 34
 13124 00005549 C3                      ret
 13125                                 .imm35:
 13126 0000554A 660F70C123              pshufd xmm0, xmm1, 35
 13127 0000554F C3                      ret
 13128                                 .imm36:
 13129 00005550 660F70C124              pshufd xmm0, xmm1, 36
 13130 00005555 C3                      ret
 13131                                 .imm37:
 13132 00005556 660F70C125              pshufd xmm0, xmm1, 37
 13133 0000555B C3                      ret
 13134                                 .imm38:
 13135 0000555C 660F70C126              pshufd xmm0, xmm1, 38
 13136 00005561 C3                      ret
 13137                                 .imm39:
 13138 00005562 660F70C127              pshufd xmm0, xmm1, 39
 13139 00005567 C3                      ret
 13140                                 .imm40:
 13141 00005568 660F70C128              pshufd xmm0, xmm1, 40
 13142 0000556D C3                      ret
 13143                                 .imm41:
 13144 0000556E 660F70C129              pshufd xmm0, xmm1, 41
 13145 00005573 C3                      ret
 13146                                 .imm42:
 13147 00005574 660F70C12A              pshufd xmm0, xmm1, 42
 13148 00005579 C3                      ret
 13149                                 .imm43:
 13150 0000557A 660F70C12B              pshufd xmm0, xmm1, 43
 13151 0000557F C3                      ret
 13152                                 .imm44:
 13153 00005580 660F70C12C              pshufd xmm0, xmm1, 44
 13154 00005585 C3                      ret
 13155                                 .imm45:
 13156 00005586 660F70C12D              pshufd xmm0, xmm1, 45
 13157 0000558B C3                      ret
 13158                                 .imm46:
 13159 0000558C 660F70C12E              pshufd xmm0, xmm1, 46
 13160 00005591 C3                      ret
 13161                                 .imm47:
 13162 00005592 660F70C12F              pshufd xmm0, xmm1, 47
 13163 00005597 C3                      ret
 13164                                 .imm48:
 13165 00005598 660F70C130              pshufd xmm0, xmm1, 48
 13166 0000559D C3                      ret
 13167                                 .imm49:
 13168 0000559E 660F70C131              pshufd xmm0, xmm1, 49
 13169 000055A3 C3                      ret
 13170                                 .imm50:
 13171 000055A4 660F70C132              pshufd xmm0, xmm1, 50
 13172 000055A9 C3                      ret
 13173                                 .imm51:
 13174 000055AA 660F70C133              pshufd xmm0, xmm1, 51
 13175 000055AF C3                      ret
 13176                                 .imm52:
 13177 000055B0 660F70C134              pshufd xmm0, xmm1, 52
 13178 000055B5 C3                      ret
 13179                                 .imm53:
 13180 000055B6 660F70C135              pshufd xmm0, xmm1, 53
 13181 000055BB C3                      ret
 13182                                 .imm54:
 13183 000055BC 660F70C136              pshufd xmm0, xmm1, 54
 13184 000055C1 C3                      ret
 13185                                 .imm55:
 13186 000055C2 660F70C137              pshufd xmm0, xmm1, 55
 13187 000055C7 C3                      ret
 13188                                 .imm56:
 13189 000055C8 660F70C138              pshufd xmm0, xmm1, 56
 13190 000055CD C3                      ret
 13191                                 .imm57:
 13192 000055CE 660F70C139              pshufd xmm0, xmm1, 57
 13193 000055D3 C3                      ret
 13194                                 .imm58:
 13195 000055D4 660F70C13A              pshufd xmm0, xmm1, 58
 13196 000055D9 C3                      ret
 13197                                 .imm59:
 13198 000055DA 660F70C13B              pshufd xmm0, xmm1, 59
 13199 000055DF C3                      ret
 13200                                 .imm60:
 13201 000055E0 660F70C13C              pshufd xmm0, xmm1, 60
 13202 000055E5 C3                      ret
 13203                                 .imm61:
 13204 000055E6 660F70C13D              pshufd xmm0, xmm1, 61
 13205 000055EB C3                      ret
 13206                                 .imm62:
 13207 000055EC 660F70C13E              pshufd xmm0, xmm1, 62
 13208 000055F1 C3                      ret
 13209                                 .imm63:
 13210 000055F2 660F70C13F              pshufd xmm0, xmm1, 63
 13211 000055F7 C3                      ret
 13212                                 .imm64:
 13213 000055F8 660F70C140              pshufd xmm0, xmm1, 64
 13214 000055FD C3                      ret
 13215                                 .imm65:
 13216 000055FE 660F70C141              pshufd xmm0, xmm1, 65
 13217 00005603 C3                      ret
 13218                                 .imm66:
 13219 00005604 660F70C142              pshufd xmm0, xmm1, 66
 13220 00005609 C3                      ret
 13221                                 .imm67:
 13222 0000560A 660F70C143              pshufd xmm0, xmm1, 67
 13223 0000560F C3                      ret
 13224                                 .imm68:
 13225 00005610 660F70C144              pshufd xmm0, xmm1, 68
 13226 00005615 C3                      ret
 13227                                 .imm69:
 13228 00005616 660F70C145              pshufd xmm0, xmm1, 69
 13229 0000561B C3                      ret
 13230                                 .imm70:
 13231 0000561C 660F70C146              pshufd xmm0, xmm1, 70
 13232 00005621 C3                      ret
 13233                                 .imm71:
 13234 00005622 660F70C147              pshufd xmm0, xmm1, 71
 13235 00005627 C3                      ret
 13236                                 .imm72:
 13237 00005628 660F70C148              pshufd xmm0, xmm1, 72
 13238 0000562D C3                      ret
 13239                                 .imm73:
 13240 0000562E 660F70C149              pshufd xmm0, xmm1, 73
 13241 00005633 C3                      ret
 13242                                 .imm74:
 13243 00005634 660F70C14A              pshufd xmm0, xmm1, 74
 13244 00005639 C3                      ret
 13245                                 .imm75:
 13246 0000563A 660F70C14B              pshufd xmm0, xmm1, 75
 13247 0000563F C3                      ret
 13248                                 .imm76:
 13249 00005640 660F70C14C              pshufd xmm0, xmm1, 76
 13250 00005645 C3                      ret
 13251                                 .imm77:
 13252 00005646 660F70C14D              pshufd xmm0, xmm1, 77
 13253 0000564B C3                      ret
 13254                                 .imm78:
 13255 0000564C 660F70C14E              pshufd xmm0, xmm1, 78
 13256 00005651 C3                      ret
 13257                                 .imm79:
 13258 00005652 660F70C14F              pshufd xmm0, xmm1, 79
 13259 00005657 C3                      ret
 13260                                 .imm80:
 13261 00005658 660F70C150              pshufd xmm0, xmm1, 80
 13262 0000565D C3                      ret
 13263                                 .imm81:
 13264 0000565E 660F70C151              pshufd xmm0, xmm1, 81
 13265 00005663 C3                      ret
 13266                                 .imm82:
 13267 00005664 660F70C152              pshufd xmm0, xmm1, 82
 13268 00005669 C3                      ret
 13269                                 .imm83:
 13270 0000566A 660F70C153              pshufd xmm0, xmm1, 83
 13271 0000566F C3                      ret
 13272                                 .imm84:
 13273 00005670 660F70C154              pshufd xmm0, xmm1, 84
 13274 00005675 C3                      ret
 13275                                 .imm85:
 13276 00005676 660F70C155              pshufd xmm0, xmm1, 85
 13277 0000567B C3                      ret
 13278                                 .imm86:
 13279 0000567C 660F70C156              pshufd xmm0, xmm1, 86
 13280 00005681 C3                      ret
 13281                                 .imm87:
 13282 00005682 660F70C157              pshufd xmm0, xmm1, 87
 13283 00005687 C3                      ret
 13284                                 .imm88:
 13285 00005688 660F70C158              pshufd xmm0, xmm1, 88
 13286 0000568D C3                      ret
 13287                                 .imm89:
 13288 0000568E 660F70C159              pshufd xmm0, xmm1, 89
 13289 00005693 C3                      ret
 13290                                 .imm90:
 13291 00005694 660F70C15A              pshufd xmm0, xmm1, 90
 13292 00005699 C3                      ret
 13293                                 .imm91:
 13294 0000569A 660F70C15B              pshufd xmm0, xmm1, 91
 13295 0000569F C3                      ret
 13296                                 .imm92:
 13297 000056A0 660F70C15C              pshufd xmm0, xmm1, 92
 13298 000056A5 C3                      ret
 13299                                 .imm93:
 13300 000056A6 660F70C15D              pshufd xmm0, xmm1, 93
 13301 000056AB C3                      ret
 13302                                 .imm94:
 13303 000056AC 660F70C15E              pshufd xmm0, xmm1, 94
 13304 000056B1 C3                      ret
 13305                                 .imm95:
 13306 000056B2 660F70C15F              pshufd xmm0, xmm1, 95
 13307 000056B7 C3                      ret
 13308                                 .imm96:
 13309 000056B8 660F70C160              pshufd xmm0, xmm1, 96
 13310 000056BD C3                      ret
 13311                                 .imm97:
 13312 000056BE 660F70C161              pshufd xmm0, xmm1, 97
 13313 000056C3 C3                      ret
 13314                                 .imm98:
 13315 000056C4 660F70C162              pshufd xmm0, xmm1, 98
 13316 000056C9 C3                      ret
 13317                                 .imm99:
 13318 000056CA 660F70C163              pshufd xmm0, xmm1, 99
 13319 000056CF C3                      ret
 13320                                 .imm100:
 13321 000056D0 660F70C164              pshufd xmm0, xmm1, 100
 13322 000056D5 C3                      ret
 13323                                 .imm101:
 13324 000056D6 660F70C165              pshufd xmm0, xmm1, 101
 13325 000056DB C3                      ret
 13326                                 .imm102:
 13327 000056DC 660F70C166              pshufd xmm0, xmm1, 102
 13328 000056E1 C3                      ret
 13329                                 .imm103:
 13330 000056E2 660F70C167              pshufd xmm0, xmm1, 103
 13331 000056E7 C3                      ret
 13332                                 .imm104:
 13333 000056E8 660F70C168              pshufd xmm0, xmm1, 104
 13334 000056ED C3                      ret
 13335                                 .imm105:
 13336 000056EE 660F70C169              pshufd xmm0, xmm1, 105
 13337 000056F3 C3                      ret
 13338                                 .imm106:
 13339 000056F4 660F70C16A              pshufd xmm0, xmm1, 106
 13340 000056F9 C3                      ret
 13341                                 .imm107:
 13342 000056FA 660F70C16B              pshufd xmm0, xmm1, 107
 13343 000056FF C3                      ret
 13344                                 .imm108:
 13345 00005700 660F70C16C              pshufd xmm0, xmm1, 108
 13346 00005705 C3                      ret
 13347                                 .imm109:
 13348 00005706 660F70C16D              pshufd xmm0, xmm1, 109
 13349 0000570B C3                      ret
 13350                                 .imm110:
 13351 0000570C 660F70C16E              pshufd xmm0, xmm1, 110
 13352 00005711 C3                      ret
 13353                                 .imm111:
 13354 00005712 660F70C16F              pshufd xmm0, xmm1, 111
 13355 00005717 C3                      ret
 13356                                 .imm112:
 13357 00005718 660F70C170              pshufd xmm0, xmm1, 112
 13358 0000571D C3                      ret
 13359                                 .imm113:
 13360 0000571E 660F70C171              pshufd xmm0, xmm1, 113
 13361 00005723 C3                      ret
 13362                                 .imm114:
 13363 00005724 660F70C172              pshufd xmm0, xmm1, 114
 13364 00005729 C3                      ret
 13365                                 .imm115:
 13366 0000572A 660F70C173              pshufd xmm0, xmm1, 115
 13367 0000572F C3                      ret
 13368                                 .imm116:
 13369 00005730 660F70C174              pshufd xmm0, xmm1, 116
 13370 00005735 C3                      ret
 13371                                 .imm117:
 13372 00005736 660F70C175              pshufd xmm0, xmm1, 117
 13373 0000573B C3                      ret
 13374                                 .imm118:
 13375 0000573C 660F70C176              pshufd xmm0, xmm1, 118
 13376 00005741 C3                      ret
 13377                                 .imm119:
 13378 00005742 660F70C177              pshufd xmm0, xmm1, 119
 13379 00005747 C3                      ret
 13380                                 .imm120:
 13381 00005748 660F70C178              pshufd xmm0, xmm1, 120
 13382 0000574D C3                      ret
 13383                                 .imm121:
 13384 0000574E 660F70C179              pshufd xmm0, xmm1, 121
 13385 00005753 C3                      ret
 13386                                 .imm122:
 13387 00005754 660F70C17A              pshufd xmm0, xmm1, 122
 13388 00005759 C3                      ret
 13389                                 .imm123:
 13390 0000575A 660F70C17B              pshufd xmm0, xmm1, 123
 13391 0000575F C3                      ret
 13392                                 .imm124:
 13393 00005760 660F70C17C              pshufd xmm0, xmm1, 124
 13394 00005765 C3                      ret
 13395                                 .imm125:
 13396 00005766 660F70C17D              pshufd xmm0, xmm1, 125
 13397 0000576B C3                      ret
 13398                                 .imm126:
 13399 0000576C 660F70C17E              pshufd xmm0, xmm1, 126
 13400 00005771 C3                      ret
 13401                                 .imm127:
 13402 00005772 660F70C17F              pshufd xmm0, xmm1, 127
 13403 00005777 C3                      ret
 13404                                 .imm128:
 13405 00005778 660F70C180              pshufd xmm0, xmm1, 128
 13406 0000577D C3                      ret
 13407                                 .imm129:
 13408 0000577E 660F70C181              pshufd xmm0, xmm1, 129
 13409 00005783 C3                      ret
 13410                                 .imm130:
 13411 00005784 660F70C182              pshufd xmm0, xmm1, 130
 13412 00005789 C3                      ret
 13413                                 .imm131:
 13414 0000578A 660F70C183              pshufd xmm0, xmm1, 131
 13415 0000578F C3                      ret
 13416                                 .imm132:
 13417 00005790 660F70C184              pshufd xmm0, xmm1, 132
 13418 00005795 C3                      ret
 13419                                 .imm133:
 13420 00005796 660F70C185              pshufd xmm0, xmm1, 133
 13421 0000579B C3                      ret
 13422                                 .imm134:
 13423 0000579C 660F70C186              pshufd xmm0, xmm1, 134
 13424 000057A1 C3                      ret
 13425                                 .imm135:
 13426 000057A2 660F70C187              pshufd xmm0, xmm1, 135
 13427 000057A7 C3                      ret
 13428                                 .imm136:
 13429 000057A8 660F70C188              pshufd xmm0, xmm1, 136
 13430 000057AD C3                      ret
 13431                                 .imm137:
 13432 000057AE 660F70C189              pshufd xmm0, xmm1, 137
 13433 000057B3 C3                      ret
 13434                                 .imm138:
 13435 000057B4 660F70C18A              pshufd xmm0, xmm1, 138
 13436 000057B9 C3                      ret
 13437                                 .imm139:
 13438 000057BA 660F70C18B              pshufd xmm0, xmm1, 139
 13439 000057BF C3                      ret
 13440                                 .imm140:
 13441 000057C0 660F70C18C              pshufd xmm0, xmm1, 140
 13442 000057C5 C3                      ret
 13443                                 .imm141:
 13444 000057C6 660F70C18D              pshufd xmm0, xmm1, 141
 13445 000057CB C3                      ret
 13446                                 .imm142:
 13447 000057CC 660F70C18E              pshufd xmm0, xmm1, 142
 13448 000057D1 C3                      ret
 13449                                 .imm143:
 13450 000057D2 660F70C18F              pshufd xmm0, xmm1, 143
 13451 000057D7 C3                      ret
 13452                                 .imm144:
 13453 000057D8 660F70C190              pshufd xmm0, xmm1, 144
 13454 000057DD C3                      ret
 13455                                 .imm145:
 13456 000057DE 660F70C191              pshufd xmm0, xmm1, 145
 13457 000057E3 C3                      ret
 13458                                 .imm146:
 13459 000057E4 660F70C192              pshufd xmm0, xmm1, 146
 13460 000057E9 C3                      ret
 13461                                 .imm147:
 13462 000057EA 660F70C193              pshufd xmm0, xmm1, 147
 13463 000057EF C3                      ret
 13464                                 .imm148:
 13465 000057F0 660F70C194              pshufd xmm0, xmm1, 148
 13466 000057F5 C3                      ret
 13467                                 .imm149:
 13468 000057F6 660F70C195              pshufd xmm0, xmm1, 149
 13469 000057FB C3                      ret
 13470                                 .imm150:
 13471 000057FC 660F70C196              pshufd xmm0, xmm1, 150
 13472 00005801 C3                      ret
 13473                                 .imm151:
 13474 00005802 660F70C197              pshufd xmm0, xmm1, 151
 13475 00005807 C3                      ret
 13476                                 .imm152:
 13477 00005808 660F70C198              pshufd xmm0, xmm1, 152
 13478 0000580D C3                      ret
 13479                                 .imm153:
 13480 0000580E 660F70C199              pshufd xmm0, xmm1, 153
 13481 00005813 C3                      ret
 13482                                 .imm154:
 13483 00005814 660F70C19A              pshufd xmm0, xmm1, 154
 13484 00005819 C3                      ret
 13485                                 .imm155:
 13486 0000581A 660F70C19B              pshufd xmm0, xmm1, 155
 13487 0000581F C3                      ret
 13488                                 .imm156:
 13489 00005820 660F70C19C              pshufd xmm0, xmm1, 156
 13490 00005825 C3                      ret
 13491                                 .imm157:
 13492 00005826 660F70C19D              pshufd xmm0, xmm1, 157
 13493 0000582B C3                      ret
 13494                                 .imm158:
 13495 0000582C 660F70C19E              pshufd xmm0, xmm1, 158
 13496 00005831 C3                      ret
 13497                                 .imm159:
 13498 00005832 660F70C19F              pshufd xmm0, xmm1, 159
 13499 00005837 C3                      ret
 13500                                 .imm160:
 13501 00005838 660F70C1A0              pshufd xmm0, xmm1, 160
 13502 0000583D C3                      ret
 13503                                 .imm161:
 13504 0000583E 660F70C1A1              pshufd xmm0, xmm1, 161
 13505 00005843 C3                      ret
 13506                                 .imm162:
 13507 00005844 660F70C1A2              pshufd xmm0, xmm1, 162
 13508 00005849 C3                      ret
 13509                                 .imm163:
 13510 0000584A 660F70C1A3              pshufd xmm0, xmm1, 163
 13511 0000584F C3                      ret
 13512                                 .imm164:
 13513 00005850 660F70C1A4              pshufd xmm0, xmm1, 164
 13514 00005855 C3                      ret
 13515                                 .imm165:
 13516 00005856 660F70C1A5              pshufd xmm0, xmm1, 165
 13517 0000585B C3                      ret
 13518                                 .imm166:
 13519 0000585C 660F70C1A6              pshufd xmm0, xmm1, 166
 13520 00005861 C3                      ret
 13521                                 .imm167:
 13522 00005862 660F70C1A7              pshufd xmm0, xmm1, 167
 13523 00005867 C3                      ret
 13524                                 .imm168:
 13525 00005868 660F70C1A8              pshufd xmm0, xmm1, 168
 13526 0000586D C3                      ret
 13527                                 .imm169:
 13528 0000586E 660F70C1A9              pshufd xmm0, xmm1, 169
 13529 00005873 C3                      ret
 13530                                 .imm170:
 13531 00005874 660F70C1AA              pshufd xmm0, xmm1, 170
 13532 00005879 C3                      ret
 13533                                 .imm171:
 13534 0000587A 660F70C1AB              pshufd xmm0, xmm1, 171
 13535 0000587F C3                      ret
 13536                                 .imm172:
 13537 00005880 660F70C1AC              pshufd xmm0, xmm1, 172
 13538 00005885 C3                      ret
 13539                                 .imm173:
 13540 00005886 660F70C1AD              pshufd xmm0, xmm1, 173
 13541 0000588B C3                      ret
 13542                                 .imm174:
 13543 0000588C 660F70C1AE              pshufd xmm0, xmm1, 174
 13544 00005891 C3                      ret
 13545                                 .imm175:
 13546 00005892 660F70C1AF              pshufd xmm0, xmm1, 175
 13547 00005897 C3                      ret
 13548                                 .imm176:
 13549 00005898 660F70C1B0              pshufd xmm0, xmm1, 176
 13550 0000589D C3                      ret
 13551                                 .imm177:
 13552 0000589E 660F70C1B1              pshufd xmm0, xmm1, 177
 13553 000058A3 C3                      ret
 13554                                 .imm178:
 13555 000058A4 660F70C1B2              pshufd xmm0, xmm1, 178
 13556 000058A9 C3                      ret
 13557                                 .imm179:
 13558 000058AA 660F70C1B3              pshufd xmm0, xmm1, 179
 13559 000058AF C3                      ret
 13560                                 .imm180:
 13561 000058B0 660F70C1B4              pshufd xmm0, xmm1, 180
 13562 000058B5 C3                      ret
 13563                                 .imm181:
 13564 000058B6 660F70C1B5              pshufd xmm0, xmm1, 181
 13565 000058BB C3                      ret
 13566                                 .imm182:
 13567 000058BC 660F70C1B6              pshufd xmm0, xmm1, 182
 13568 000058C1 C3                      ret
 13569                                 .imm183:
 13570 000058C2 660F70C1B7              pshufd xmm0, xmm1, 183
 13571 000058C7 C3                      ret
 13572                                 .imm184:
 13573 000058C8 660F70C1B8              pshufd xmm0, xmm1, 184
 13574 000058CD C3                      ret
 13575                                 .imm185:
 13576 000058CE 660F70C1B9              pshufd xmm0, xmm1, 185
 13577 000058D3 C3                      ret
 13578                                 .imm186:
 13579 000058D4 660F70C1BA              pshufd xmm0, xmm1, 186
 13580 000058D9 C3                      ret
 13581                                 .imm187:
 13582 000058DA 660F70C1BB              pshufd xmm0, xmm1, 187
 13583 000058DF C3                      ret
 13584                                 .imm188:
 13585 000058E0 660F70C1BC              pshufd xmm0, xmm1, 188
 13586 000058E5 C3                      ret
 13587                                 .imm189:
 13588 000058E6 660F70C1BD              pshufd xmm0, xmm1, 189
 13589 000058EB C3                      ret
 13590                                 .imm190:
 13591 000058EC 660F70C1BE              pshufd xmm0, xmm1, 190
 13592 000058F1 C3                      ret
 13593                                 .imm191:
 13594 000058F2 660F70C1BF              pshufd xmm0, xmm1, 191
 13595 000058F7 C3                      ret
 13596                                 .imm192:
 13597 000058F8 660F70C1C0              pshufd xmm0, xmm1, 192
 13598 000058FD C3                      ret
 13599                                 .imm193:
 13600 000058FE 660F70C1C1              pshufd xmm0, xmm1, 193
 13601 00005903 C3                      ret
 13602                                 .imm194:
 13603 00005904 660F70C1C2              pshufd xmm0, xmm1, 194
 13604 00005909 C3                      ret
 13605                                 .imm195:
 13606 0000590A 660F70C1C3              pshufd xmm0, xmm1, 195
 13607 0000590F C3                      ret
 13608                                 .imm196:
 13609 00005910 660F70C1C4              pshufd xmm0, xmm1, 196
 13610 00005915 C3                      ret
 13611                                 .imm197:
 13612 00005916 660F70C1C5              pshufd xmm0, xmm1, 197
 13613 0000591B C3                      ret
 13614                                 .imm198:
 13615 0000591C 660F70C1C6              pshufd xmm0, xmm1, 198
 13616 00005921 C3                      ret
 13617                                 .imm199:
 13618 00005922 660F70C1C7              pshufd xmm0, xmm1, 199
 13619 00005927 C3                      ret
 13620                                 .imm200:
 13621 00005928 660F70C1C8              pshufd xmm0, xmm1, 200
 13622 0000592D C3                      ret
 13623                                 .imm201:
 13624 0000592E 660F70C1C9              pshufd xmm0, xmm1, 201
 13625 00005933 C3                      ret
 13626                                 .imm202:
 13627 00005934 660F70C1CA              pshufd xmm0, xmm1, 202
 13628 00005939 C3                      ret
 13629                                 .imm203:
 13630 0000593A 660F70C1CB              pshufd xmm0, xmm1, 203
 13631 0000593F C3                      ret
 13632                                 .imm204:
 13633 00005940 660F70C1CC              pshufd xmm0, xmm1, 204
 13634 00005945 C3                      ret
 13635                                 .imm205:
 13636 00005946 660F70C1CD              pshufd xmm0, xmm1, 205
 13637 0000594B C3                      ret
 13638                                 .imm206:
 13639 0000594C 660F70C1CE              pshufd xmm0, xmm1, 206
 13640 00005951 C3                      ret
 13641                                 .imm207:
 13642 00005952 660F70C1CF              pshufd xmm0, xmm1, 207
 13643 00005957 C3                      ret
 13644                                 .imm208:
 13645 00005958 660F70C1D0              pshufd xmm0, xmm1, 208
 13646 0000595D C3                      ret
 13647                                 .imm209:
 13648 0000595E 660F70C1D1              pshufd xmm0, xmm1, 209
 13649 00005963 C3                      ret
 13650                                 .imm210:
 13651 00005964 660F70C1D2              pshufd xmm0, xmm1, 210
 13652 00005969 C3                      ret
 13653                                 .imm211:
 13654 0000596A 660F70C1D3              pshufd xmm0, xmm1, 211
 13655 0000596F C3                      ret
 13656                                 .imm212:
 13657 00005970 660F70C1D4              pshufd xmm0, xmm1, 212
 13658 00005975 C3                      ret
 13659                                 .imm213:
 13660 00005976 660F70C1D5              pshufd xmm0, xmm1, 213
 13661 0000597B C3                      ret
 13662                                 .imm214:
 13663 0000597C 660F70C1D6              pshufd xmm0, xmm1, 214
 13664 00005981 C3                      ret
 13665                                 .imm215:
 13666 00005982 660F70C1D7              pshufd xmm0, xmm1, 215
 13667 00005987 C3                      ret
 13668                                 .imm216:
 13669 00005988 660F70C1D8              pshufd xmm0, xmm1, 216
 13670 0000598D C3                      ret
 13671                                 .imm217:
 13672 0000598E 660F70C1D9              pshufd xmm0, xmm1, 217
 13673 00005993 C3                      ret
 13674                                 .imm218:
 13675 00005994 660F70C1DA              pshufd xmm0, xmm1, 218
 13676 00005999 C3                      ret
 13677                                 .imm219:
 13678 0000599A 660F70C1DB              pshufd xmm0, xmm1, 219
 13679 0000599F C3                      ret
 13680                                 .imm220:
 13681 000059A0 660F70C1DC              pshufd xmm0, xmm1, 220
 13682 000059A5 C3                      ret
 13683                                 .imm221:
 13684 000059A6 660F70C1DD              pshufd xmm0, xmm1, 221
 13685 000059AB C3                      ret
 13686                                 .imm222:
 13687 000059AC 660F70C1DE              pshufd xmm0, xmm1, 222
 13688 000059B1 C3                      ret
 13689                                 .imm223:
 13690 000059B2 660F70C1DF              pshufd xmm0, xmm1, 223
 13691 000059B7 C3                      ret
 13692                                 .imm224:
 13693 000059B8 660F70C1E0              pshufd xmm0, xmm1, 224
 13694 000059BD C3                      ret
 13695                                 .imm225:
 13696 000059BE 660F70C1E1              pshufd xmm0, xmm1, 225
 13697 000059C3 C3                      ret
 13698                                 .imm226:
 13699 000059C4 660F70C1E2              pshufd xmm0, xmm1, 226
 13700 000059C9 C3                      ret
 13701                                 .imm227:
 13702 000059CA 660F70C1E3              pshufd xmm0, xmm1, 227
 13703 000059CF C3                      ret
 13704                                 .imm228:
 13705 000059D0 660F70C1E4              pshufd xmm0, xmm1, 228
 13706 000059D5 C3                      ret
 13707                                 .imm229:
 13708 000059D6 660F70C1E5              pshufd xmm0, xmm1, 229
 13709 000059DB C3                      ret
 13710                                 .imm230:
 13711 000059DC 660F70C1E6              pshufd xmm0, xmm1, 230
 13712 000059E1 C3                      ret
 13713                                 .imm231:
 13714 000059E2 660F70C1E7              pshufd xmm0, xmm1, 231
 13715 000059E7 C3                      ret
 13716                                 .imm232:
 13717 000059E8 660F70C1E8              pshufd xmm0, xmm1, 232
 13718 000059ED C3                      ret
 13719                                 .imm233:
 13720 000059EE 660F70C1E9              pshufd xmm0, xmm1, 233
 13721 000059F3 C3                      ret
 13722                                 .imm234:
 13723 000059F4 660F70C1EA              pshufd xmm0, xmm1, 234
 13724 000059F9 C3                      ret
 13725                                 .imm235:
 13726 000059FA 660F70C1EB              pshufd xmm0, xmm1, 235
 13727 000059FF C3                      ret
 13728                                 .imm236:
 13729 00005A00 660F70C1EC              pshufd xmm0, xmm1, 236
 13730 00005A05 C3                      ret
 13731                                 .imm237:
 13732 00005A06 660F70C1ED              pshufd xmm0, xmm1, 237
 13733 00005A0B C3                      ret
 13734                                 .imm238:
 13735 00005A0C 660F70C1EE              pshufd xmm0, xmm1, 238
 13736 00005A11 C3                      ret
 13737                                 .imm239:
 13738 00005A12 660F70C1EF              pshufd xmm0, xmm1, 239
 13739 00005A17 C3                      ret
 13740                                 .imm240:
 13741 00005A18 660F70C1F0              pshufd xmm0, xmm1, 240
 13742 00005A1D C3                      ret
 13743                                 .imm241:
 13744 00005A1E 660F70C1F1              pshufd xmm0, xmm1, 241
 13745 00005A23 C3                      ret
 13746                                 .imm242:
 13747 00005A24 660F70C1F2              pshufd xmm0, xmm1, 242
 13748 00005A29 C3                      ret
 13749                                 .imm243:
 13750 00005A2A 660F70C1F3              pshufd xmm0, xmm1, 243
 13751 00005A2F C3                      ret
 13752                                 .imm244:
 13753 00005A30 660F70C1F4              pshufd xmm0, xmm1, 244
 13754 00005A35 C3                      ret
 13755                                 .imm245:
 13756 00005A36 660F70C1F5              pshufd xmm0, xmm1, 245
 13757 00005A3B C3                      ret
 13758                                 .imm246:
 13759 00005A3C 660F70C1F6              pshufd xmm0, xmm1, 246
 13760 00005A41 C3                      ret
 13761                                 .imm247:
 13762 00005A42 660F70C1F7              pshufd xmm0, xmm1, 247
 13763 00005A47 C3                      ret
 13764                                 .imm248:
 13765 00005A48 660F70C1F8              pshufd xmm0, xmm1, 248
 13766 00005A4D C3                      ret
 13767                                 .imm249:
 13768 00005A4E 660F70C1F9              pshufd xmm0, xmm1, 249
 13769 00005A53 C3                      ret
 13770                                 .imm250:
 13771 00005A54 660F70C1FA              pshufd xmm0, xmm1, 250
 13772 00005A59 C3                      ret
 13773                                 .imm251:
 13774 00005A5A 660F70C1FB              pshufd xmm0, xmm1, 251
 13775 00005A5F C3                      ret
 13776                                 .imm252:
 13777 00005A60 660F70C1FC              pshufd xmm0, xmm1, 252
 13778 00005A65 C3                      ret
 13779                                 .imm253:
 13780 00005A66 660F70C1FD              pshufd xmm0, xmm1, 253
 13781 00005A6B C3                      ret
 13782                                 .imm254:
 13783 00005A6C 660F70C1FE              pshufd xmm0, xmm1, 254
 13784 00005A71 C3                      ret
 13785                                 .imm255:
 13786 00005A72 660F70C1FF              pshufd xmm0, xmm1, 255
 13787 00005A77 C3                      ret
 13788                                 .immEnd:
 13789 00005A78 FFFF                   dw 0xf9ff + (.immEnd - .imm0)
 13790 00005A7A FFFF                   dw 0x105ff - (.immEnd - .imm0)
 13791                                 [global iemAImpl_pshufd_EndProc:function hidden]
 13792                                 iemAImpl_pshufd_EndProc:
 13793                                 [size iemAImpl_pshufd iemAImpl_pshufd_EndProc - iemAImpl_pshufd]
 13794                                 [size iemAImpl_pshufd_EndProc 0]
 13795 00005A7C CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 13796                                 %line 2918+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13797                                 
 13798                                 
 13799                                 
 13800                                 
 13801                                 
 13802                                 
 13803                                 [global iemAImpl_pmovmskb_u64]
 13804                                 %line 2924+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13805                                 iemAImpl_pmovmskb_u64:
 13806                                 %line 2927+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13807                                 
 13808 00005A80 488B06                  mov rax, [rsi]
 13809 00005A83 0F6F0A                  movq mm1, [rdx]
 13810 00005A86 480FD7C1                pmovmskb rax, mm1
 13811 00005A8A 488906                  mov [rsi], rax
 13812                                 %line 2936+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13813 00005A8D C3                      ret
 13814                                 [global iemAImpl_pmovmskb_u64_EndProc:function hidden]
 13815                                 %line 2937+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13816                                 iemAImpl_pmovmskb_u64_EndProc:
 13817                                 [size iemAImpl_pmovmskb_u64 iemAImpl_pmovmskb_u64_EndProc - iemAImpl_pmovmskb_u64]
 13818                                 [size iemAImpl_pmovmskb_u64_EndProc 0]
 13819 00005A8E CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 13820                                 %line 2938+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13821                                 
 13822                                 [global iemAImpl_pmovmskb_u128]
 13823                                 %line 2939+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13824                                 iemAImpl_pmovmskb_u128:
 13825                                 %line 2942+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13826                                 
 13827 00005A92 488B06                  mov rax, [rsi]
 13828 00005A95 F30F6F0A                movdqu xmm1, [rdx]
 13829 00005A99 66480FD7C1              pmovmskb rax, xmm1
 13830 00005A9E 488906                  mov [rsi], rax
 13831                                 %line 2951+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13832 00005AA1 C3                      ret
 13833                                 [global iemAImpl_pmovmskb_u128_EndProc:function hidden]
 13834                                 %line 2952+0 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13835                                 iemAImpl_pmovmskb_u128_EndProc:
 13836                                 [size iemAImpl_pmovmskb_u128 iemAImpl_pmovmskb_u128_EndProc - iemAImpl_pmovmskb_u128]
 13837                                 [size iemAImpl_pmovmskb_u128_EndProc 0]
 13838 00005AA2 CCCCCCCC                db 0xCC, 0xCC, 0xCC, 0xCC
 13839                                 %line 2953+1 /home/se170/VirtualBox-4.3.28/src/VBox/VMM/VMMAll/IEMAllAImpl.asm
 13840                                 
