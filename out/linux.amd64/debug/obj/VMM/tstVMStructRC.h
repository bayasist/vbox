    CHECK_SIZE(CFGM, 8);
    CHECK_SIZE(X86CPUIDFEATECX, 4);
    CHECK_SIZE(CPUM, 648);
    CHECK_OFF(CPUM, 0, offCPUMCPU0);
    CHECK_OFF(CPUM, 4, fHostUseFlags);
    CHECK_OFF(CPUM, 8, CPUFeatures);
    CHECK_OFF(CPUM, 16, CPUFeaturesExt);
    CHECK_OFF(CPUM, 16, CPUFeaturesExt);
    CHECK_OFF(CPUM, 24, CR4);
    CHECK_OFF(CPUM, 32, u8PortableCpuIdLevel);
    CHECK_OFF(CPUM, 33, fPendingRestore);
    CHECK_OFF(CPUM, 40, aGuestCpuIdStd);
    CHECK_OFF(CPUM, 136, aGuestCpuIdExt);
    CHECK_OFF(CPUM, 296, aGuestCpuIdCentaur);
    CHECK_OFF(CPUM, 360, aGuestCpuIdHyper);
    CHECK_OFF(CPUM, 424, GuestCpuIdDef);
    CHECK_SIZE(CPUMCPU, 3584);
    CHECK_OFF(CPUMCPU, 0, Hyper);
    CHECK_OFF(CPUMCPU, 1088, Host);
    CHECK_OFF(CPUMCPU, 1920, Guest);
    CHECK_OFF(CPUMCPU, 3008, GuestMsrs);
    CHECK_OFF(CPUMCPU, 3520, fUseFlags);
    CHECK_OFF(CPUMCPU, 3524, fChanged);
    CHECK_OFF(CPUMCPU, 3528, offCPUM);
    CHECK_OFF(CPUMCPU, 3532, u32RetCode);
    CHECK_OFF(CPUMCPU, 3536, pvApicBase);
    CHECK_OFF(CPUMCPU, 3544, fApicDisVectors);
    CHECK_OFF(CPUMCPU, 3548, fX2Apic);
    CHECK_OFF(CPUMCPU, 3549, fRawEntered);
    CHECK_OFF(CPUMCPU, 3550, fRemEntered);
    CHECK_SIZE(CPUMHOSTCTX, 832);
    CHECK_OFF(CPUMHOSTCTX, 0, fpu);
    CHECK_OFF(CPUMHOSTCTX, 512, rbx);
    CHECK_OFF(CPUMHOSTCTX, 520, rdi);
    CHECK_OFF(CPUMHOSTCTX, 528, rsi);
    CHECK_OFF(CPUMHOSTCTX, 536, rbp);
    CHECK_OFF(CPUMHOSTCTX, 544, rsp);
    CHECK_OFF(CPUMHOSTCTX, 552, r10);
    CHECK_OFF(CPUMHOSTCTX, 560, r11);
    CHECK_OFF(CPUMHOSTCTX, 568, r12);
    CHECK_OFF(CPUMHOSTCTX, 576, r13);
    CHECK_OFF(CPUMHOSTCTX, 584, r14);
    CHECK_OFF(CPUMHOSTCTX, 592, r15);
    CHECK_OFF(CPUMHOSTCTX, 600, rflags);
    CHECK_OFF(CPUMHOSTCTX, 608, ss);
    CHECK_OFF(CPUMHOSTCTX, 612, gs);
    CHECK_OFF(CPUMHOSTCTX, 616, fs);
    CHECK_OFF(CPUMHOSTCTX, 620, es);
    CHECK_OFF(CPUMHOSTCTX, 624, ds);
    CHECK_OFF(CPUMHOSTCTX, 628, cs);
    CHECK_OFF(CPUMHOSTCTX, 632, cr0);
    CHECK_OFF(CPUMHOSTCTX, 640, cr3);
    CHECK_OFF(CPUMHOSTCTX, 648, cr4);
    CHECK_OFF(CPUMHOSTCTX, 656, cr8);
    CHECK_OFF(CPUMHOSTCTX, 664, dr0);
    CHECK_OFF(CPUMHOSTCTX, 672, dr1);
    CHECK_OFF(CPUMHOSTCTX, 680, dr2);
    CHECK_OFF(CPUMHOSTCTX, 688, dr3);
    CHECK_OFF(CPUMHOSTCTX, 696, dr6);
    CHECK_OFF(CPUMHOSTCTX, 704, dr7);
    CHECK_OFF(CPUMHOSTCTX, 712, gdtr);
    CHECK_OFF(CPUMHOSTCTX, 724, idtr);
    CHECK_OFF(CPUMHOSTCTX, 736, ldtr);
    CHECK_OFF(CPUMHOSTCTX, 740, tr);
    CHECK_OFF(CPUMHOSTCTX, 744, SysEnter);
    CHECK_OFF(CPUMHOSTCTX, 768, FSbase);
    CHECK_OFF(CPUMHOSTCTX, 776, GSbase);
    CHECK_OFF(CPUMHOSTCTX, 784, efer);
    CHECK_SIZE(CPUMCTX, 1088);
    CHECK_OFF(CPUMCTX, 0, fpu);
    CHECK_OFF(CPUMCTX, 568, rdi);
    CHECK_OFF(CPUMCTX, 560, rsi);
    CHECK_OFF(CPUMCTX, 552, rbp);
    CHECK_OFF(CPUMCTX, 512, rax);
    CHECK_OFF(CPUMCTX, 536, rbx);
    CHECK_OFF(CPUMCTX, 528, rdx);
    CHECK_OFF(CPUMCTX, 520, rcx);
    CHECK_OFF(CPUMCTX, 544, rsp);
    CHECK_OFF(CPUMCTX, 640, es);
    CHECK_OFF(CPUMCTX, 640, es.Sel);
    CHECK_OFF(CPUMCTX, 644, es.ValidSel);
    CHECK_OFF(CPUMCTX, 646, es.fFlags);
    CHECK_OFF(CPUMCTX, 648, es.u64Base);
    CHECK_OFF(CPUMCTX, 656, es.u32Limit);
    CHECK_OFF(CPUMCTX, 660, es.Attr);
    CHECK_OFF(CPUMCTX, 664, cs);
    CHECK_OFF(CPUMCTX, 688, ss);
    CHECK_OFF(CPUMCTX, 712, ds);
    CHECK_OFF(CPUMCTX, 736, fs);
    CHECK_OFF(CPUMCTX, 760, gs);
    CHECK_OFF(CPUMCTX, 792, rflags);
    CHECK_OFF(CPUMCTX, 784, rip);
    CHECK_OFF(CPUMCTX, 576, r8);
    CHECK_OFF(CPUMCTX, 584, r9);
    CHECK_OFF(CPUMCTX, 592, r10);
    CHECK_OFF(CPUMCTX, 600, r11);
    CHECK_OFF(CPUMCTX, 608, r12);
    CHECK_OFF(CPUMCTX, 616, r13);
    CHECK_OFF(CPUMCTX, 624, r14);
    CHECK_OFF(CPUMCTX, 632, r15);
    CHECK_OFF(CPUMCTX, 800, cr0);
    CHECK_OFF(CPUMCTX, 808, cr2);
    CHECK_OFF(CPUMCTX, 816, cr3);
    CHECK_OFF(CPUMCTX, 824, cr4);
    CHECK_OFF(CPUMCTX, 832, dr);
    CHECK_OFF(CPUMCTX, 902, gdtr);
    CHECK_OFF(CPUMCTX, 918, idtr);
    CHECK_OFF(CPUMCTX, 928, ldtr);
    CHECK_OFF(CPUMCTX, 952, tr);
    CHECK_OFF(CPUMCTX, 976, SysEnter);
    CHECK_OFF(CPUMCTX, 1000, msrEFER);
    CHECK_OFF(CPUMCTX, 1008, msrSTAR);
    CHECK_OFF(CPUMCTX, 1016, msrPAT);
    CHECK_OFF(CPUMCTX, 1024, msrLSTAR);
    CHECK_OFF(CPUMCTX, 1032, msrCSTAR);
    CHECK_OFF(CPUMCTX, 1040, msrSFMASK);
    CHECK_OFF(CPUMCTX, 1048, msrKERNELGSBASE);
    CHECK_OFF(CPUMCTX, 1056, msrApicBase);
    CHECK_OFF(CPUMCTX, 928, ldtr);
    CHECK_OFF(CPUMCTX, 952, tr);
    CHECK_OFF(CPUMCTX, 952, tr.Sel);
    CHECK_OFF(CPUMCTX, 956, tr.ValidSel);
    CHECK_OFF(CPUMCTX, 958, tr.fFlags);
    CHECK_OFF(CPUMCTX, 960, tr.u64Base);
    CHECK_OFF(CPUMCTX, 968, tr.u32Limit);
    CHECK_OFF(CPUMCTX, 972, tr.Attr);
    CHECK_SIZE(CPUMCTXMSRS, 512);
    CHECK_SIZE(CPUMCTXCORE, 288);
    CHECK_SIZE(STAMRATIOU32, 8);
    CHECK_SIZE(AVLOHCPHYSNODECORE, 24);
    CHECK_SIZE(AVLOGCPHYSNODECORE, 24);
    CHECK_SIZE(AVLROGCPHYSNODECORE, 32);
    CHECK_SIZE(AVLOGCPTRNODECORE, 24);
    CHECK_SIZE(AVLROGCPTRNODECORE, 32);
    CHECK_SIZE(AVLOIOPORTNODECORE, 12);
    CHECK_SIZE(AVLROIOPORTNODECORE, 16);
    CHECK_SIZE(DBGF, 2104);
    CHECK_OFF(DBGF, 0, offVM);
    CHECK_OFF(DBGF, 4, fAttached);
    CHECK_OFF(DBGF, 5, fStoppedInHyper);
    CHECK_OFF(DBGF, 8, PingPong);
    CHECK_OFF(DBGF, 32, DbgEvent);
    CHECK_OFF(DBGF, 72, enmVMMCmd);
    CHECK_OFF(DBGF, 76, VMMCmdData);
    CHECK_OFF(DBGF, 80, cHwBreakpoints);
    CHECK_OFF(DBGF, 84, cBreakpoints);
    CHECK_OFF(DBGF, 88, aHwBreakpoints);
    CHECK_OFF(DBGF, 312, aBreakpoints);
    CHECK_SIZE(DBGFEVENT, 40);
    CHECK_SIZE(DBGFCPU, 16);
    CHECK_OFF(DBGFCPU, 4, iActiveBp);
    CHECK_OFF(DBGFCPU, 8, fSingleSteppingRaw);
    CHECK_SIZE(EM, 16);
    CHECK_OFF(EM, 0, offVM);
    CHECK_OFF(EMCPU, 32, pCtx);
    CHECK_OFF(EMCPU, 0, enmState);
    CHECK_OFF(EMCPU, 8, fForceRAW);
    CHECK_OFF(EMCPU, 128, u.achPaddingFatalLongJump);
    CHECK_OFF(EMCPU, 384, DisState);
    CHECK_OFF(EMCPU, 568, StatForcedActions);
    CHECK_OFF(EMCPU, 1240, StatTotalClis);
    CHECK_OFF(EMCPU, 1208, pStatsR3);
    CHECK_OFF(EMCPU, 1216, pStatsR0);
    CHECK_OFF(EMCPU, 1224, pStatsRC);
    CHECK_OFF(EMCPU, 1232, pCliStatTree);
    CHECK_SIZE(IEMCPU, 1856);
    CHECK_OFF(IEMCPU, 8, pCtxR0);
    CHECK_OFF(IEMCPU, 0, pCtxR3);
    CHECK_OFF(IEMCPU, 16, pCtxRC);
    CHECK_OFF(IEMCPU, 24, offVM);
    CHECK_OFF(IEMCPU, 20, offVMCpu);
    CHECK_OFF(IEMCPU, 40, enmCpuMode);
    CHECK_OFF(IEMCPU, 96, fPrefixes);
    CHECK_OFF(IEMCPU, 106, abOpcode);
    CHECK_OFF(IEMCPU, 126, cActiveMappings);
    CHECK_OFF(IEMCPU, 127, iNextMapping);
    CHECK_OFF(IEMCPU, 128, aMemMappings);
    CHECK_OFF(IEMCPU, 144, aMemMappings[1]);
    CHECK_OFF(IEMCPU, 296, aBounceBuffers);
    CHECK_OFF(IEMCPU, 808, aBounceBuffers[1]);
    CHECK_OFF(IEMCPU, 224, aMemBbMappings);
    CHECK_OFF(IEMCPU, 248, aMemBbMappings[1]);
    CHECK_SIZE(IOM, 744);
    CHECK_OFF(IOM, 4, pTreesRC);
    CHECK_OFF(IOM, 8, pTreesR3);
    CHECK_OFF(IOM, 16, pTreesR0);
    CHECK_SIZE(IOMCPU, 304);
    CHECK_OFF(IOMCPU, 0, DisState);
    CHECK_OFF(IOMCPU, 216, pMMIORangeLastR3);
    CHECK_OFF(IOMCPU, 224, pMMIOStatsLastR3);
    CHECK_OFF(IOMCPU, 264, pMMIORangeLastR0);
    CHECK_OFF(IOMCPU, 272, pMMIOStatsLastR0);
    CHECK_OFF(IOMCPU, 296, pMMIORangeLastRC);
    CHECK_OFF(IOMCPU, 300, pMMIOStatsLastRC);
    CHECK_OFF(IOMCPU, 232, pRangeLastReadR0);
    CHECK_OFF(IOMCPU, 280, pRangeLastReadRC);
    CHECK_SIZE(IOMMMIORANGE, 160);
    CHECK_OFF(IOMMMIORANGE, 32, GCPhys);
    CHECK_OFF(IOMMMIORANGE, 40, cb);
    CHECK_OFF(IOMMMIORANGE, 44, cRefs);
    CHECK_OFF(IOMMMIORANGE, 88, fFlags);
    CHECK_OFF(IOMMMIORANGE, 152, pszDesc);
    CHECK_OFF(IOMMMIORANGE, 112, pvUserR3);
    CHECK_OFF(IOMMMIORANGE, 120, pDevInsR3);
    CHECK_OFF(IOMMMIORANGE, 128, pfnWriteCallbackR3);
    CHECK_OFF(IOMMMIORANGE, 136, pfnReadCallbackR3);
    CHECK_OFF(IOMMMIORANGE, 144, pfnFillCallbackR3);
    CHECK_OFF(IOMMMIORANGE, 48, pvUserR0);
    CHECK_OFF(IOMMMIORANGE, 56, pDevInsR0);
    CHECK_OFF(IOMMMIORANGE, 64, pfnWriteCallbackR0);
    CHECK_OFF(IOMMMIORANGE, 72, pfnReadCallbackR0);
    CHECK_OFF(IOMMMIORANGE, 80, pfnFillCallbackR0);
    CHECK_OFF(IOMMMIORANGE, 92, pvUserRC);
    CHECK_OFF(IOMMMIORANGE, 96, pDevInsRC);
    CHECK_OFF(IOMMMIORANGE, 100, pfnWriteCallbackRC);
    CHECK_OFF(IOMMMIORANGE, 104, pfnReadCallbackRC);
    CHECK_OFF(IOMMMIORANGE, 108, pfnFillCallbackRC);
    CHECK_SIZE(IOMMMIOSTATS, 176);
    CHECK_OFF(IOMMMIOSTATS, 24, Accesses);
    CHECK_OFF(IOMMMIOSTATS, 168, WriteRZToR3);
    CHECK_SIZE(IOMIOPORTRANGER0, 80);
    CHECK_OFF(IOMIOPORTRANGER0, 20, Port);
    CHECK_OFF(IOMIOPORTRANGER0, 22, cPorts);
    CHECK_OFF(IOMIOPORTRANGER0, 24, pvUser);
    CHECK_OFF(IOMIOPORTRANGER0, 32, pDevIns);
    CHECK_OFF(IOMIOPORTRANGER0, 72, pszDesc);
    CHECK_SIZE(IOMIOPORTRANGERC, 56);
    CHECK_OFF(IOMIOPORTRANGERC, 16, Port);
    CHECK_OFF(IOMIOPORTRANGERC, 18, cPorts);
    CHECK_OFF(IOMIOPORTRANGERC, 20, pvUser);
    CHECK_OFF(IOMIOPORTRANGERC, 24, pDevIns);
    CHECK_OFF(IOMIOPORTRANGERC, 48, pszDesc);
    CHECK_SIZE(IOMIOPORTSTATS, 192);
    CHECK_OFF(IOMIOPORTSTATS, 16, InR3);
    CHECK_SIZE(IOMTREES, 24);
    CHECK_OFF(IOMTREES, 0, IOPortTreeR3);
    CHECK_OFF(IOMTREES, 4, IOPortTreeR0);
    CHECK_OFF(IOMTREES, 8, IOPortTreeRC);
    CHECK_OFF(IOMTREES, 12, MMIOTree);
    CHECK_OFF(IOMTREES, 16, IOPortStatTree);
    CHECK_OFF(IOMTREES, 20, MmioStatTree);
    CHECK_SIZE(MM, 136);
    CHECK_OFF(MM, 0, offVM);
    CHECK_OFF(MM, 16, offHyperNextStatic);
    CHECK_OFF(MM, 20, cbHyperArea);
    CHECK_OFF(MM, 4, fDoneMMR3InitPaging);
    CHECK_OFF(MM, 5, fPGMInitialized);
    CHECK_OFF(MM, 12, offLookupHyper);
    CHECK_OFF(MM, 32, pHyperHeapRC);
    CHECK_OFF(MM, 64, pHyperHeapR3);
    CHECK_OFF(MM, 40, pHyperHeapR0);
    CHECK_OFF(MM, 72, pPagePoolR3);
    CHECK_OFF(MM, 80, pPagePoolLowR3);
    CHECK_OFF(MM, 48, pPagePoolR0);
    CHECK_OFF(MM, 56, pPagePoolLowR0);
    CHECK_OFF(MM, 88, pvDummyPage);
    CHECK_OFF(MM, 96, HCPhysDummyPage);
    CHECK_OFF(MM, 104, cbRamBase);
    CHECK_OFF(MM, 112, cBasePages);
    CHECK_OFF(MM, 120, cHandyPages);
    CHECK_OFF(MM, 124, cShadowPages);
    CHECK_OFF(MM, 128, cFixedPages);
    CHECK_SIZE(MMHYPERSTAT, 80);
    CHECK_SIZE(MMHYPERCHUNK, 16);
    CHECK_SIZE(MMHYPERCHUNKFREE, 28);
    CHECK_SIZE(MMHYPERHEAP, 272);
    CHECK_OFF(MMHYPERHEAP, 0, u32Magic);
    CHECK_OFF(MMHYPERHEAP, 4, cbHeap);
    CHECK_OFF(MMHYPERHEAP, 200, pbHeapR3);
    CHECK_OFF(MMHYPERHEAP, 208, pVMR3);
    CHECK_OFF(MMHYPERHEAP, 216, pbHeapR0);
    CHECK_OFF(MMHYPERHEAP, 224, pVMR0);
    CHECK_OFF(MMHYPERHEAP, 232, pbHeapRC);
    CHECK_OFF(MMHYPERHEAP, 236, pVMRC);
    CHECK_OFF(MMHYPERHEAP, 240, cbFree);
    CHECK_OFF(MMHYPERHEAP, 244, offFreeHead);
    CHECK_OFF(MMHYPERHEAP, 248, offFreeTail);
    CHECK_OFF(MMHYPERHEAP, 252, offPageAligned);
    CHECK_OFF(MMHYPERHEAP, 256, HyperHeapStatTree);
    CHECK_SIZE(MMLOOKUPHYPER, 48);
    CHECK_OFF(MMLOOKUPHYPER, 0, offNext);
    CHECK_OFF(MMLOOKUPHYPER, 4, off);
    CHECK_OFF(MMLOOKUPHYPER, 8, cb);
    CHECK_OFF(MMLOOKUPHYPER, 12, enmType);
    CHECK_OFF(MMLOOKUPHYPER, 16, u.Locked.pvR3);
    CHECK_OFF(MMLOOKUPHYPER, 24, u.Locked.pvR0);
    CHECK_OFF(MMLOOKUPHYPER, 32, u.Locked.paHCPhysPages);
    CHECK_OFF(MMLOOKUPHYPER, 16, u.HCPhys.pvR3);
    CHECK_OFF(MMLOOKUPHYPER, 32, u.HCPhys.HCPhys);
    CHECK_OFF(MMLOOKUPHYPER, 16, u.GCPhys.GCPhys);
    CHECK_OFF(MMLOOKUPHYPER, 40, pszDesc);
    CHECK_SIZE(PDM, 1584);
    CHECK_OFF(PDM, 0, CritSect);
    CHECK_OFF(PDM, 192, NopCritSect);
    CHECK_OFF(PDM, 384, pDevs);
    CHECK_OFF(PDM, 392, pDevInstances);
    CHECK_OFF(PDM, 400, pUsbDevs);
    CHECK_OFF(PDM, 408, pUsbInstances);
    CHECK_OFF(PDM, 416, pDrvs);
    CHECK_OFF(PDM, 424, aPciBuses);
    CHECK_OFF(PDM, 424, aPciBuses[0].iBus);
    CHECK_OFF(PDM, 432, aPciBuses[0].pDevInsR3);
    CHECK_OFF(PDM, 440, aPciBuses[0].pfnSetIrqR3);
    CHECK_OFF(PDM, 448, aPciBuses[0].pfnRegisterR3);
    CHECK_OFF(PDM, 464, aPciBuses[0].pfnIORegionRegisterR3);
    CHECK_OFF(PDM, 480, aPciBuses[0].pfnFakePCIBIOSR3);
    CHECK_OFF(PDM, 488, aPciBuses[0].pDevInsR0);
    CHECK_OFF(PDM, 496, aPciBuses[0].pfnSetIrqR0);
    CHECK_OFF(PDM, 504, aPciBuses[0].pDevInsRC);
    CHECK_OFF(PDM, 508, aPciBuses[0].pfnSetIrqRC);
    CHECK_OFF(PDM, 1128, Pic);
    CHECK_OFF(PDM, 1128, Pic.pDevInsR3);
    CHECK_OFF(PDM, 1136, Pic.pfnSetIrqR3);
    CHECK_OFF(PDM, 1144, Pic.pfnGetInterruptR3);
    CHECK_OFF(PDM, 1152, Pic.pDevInsR0);
    CHECK_OFF(PDM, 1160, Pic.pfnSetIrqR0);
    CHECK_OFF(PDM, 1168, Pic.pfnGetInterruptR0);
    CHECK_OFF(PDM, 1176, Pic.pDevInsRC);
    CHECK_OFF(PDM, 1180, Pic.pfnSetIrqRC);
    CHECK_OFF(PDM, 1184, Pic.pfnGetInterruptRC);
    CHECK_OFF(PDM, 1192, Apic);
    CHECK_OFF(PDM, 1192, Apic.pDevInsR3);
    CHECK_OFF(PDM, 1200, Apic.pfnGetInterruptR3);
    CHECK_OFF(PDM, 1216, Apic.pfnSetBaseR3);
    CHECK_OFF(PDM, 1224, Apic.pfnGetBaseR3);
    CHECK_OFF(PDM, 1232, Apic.pfnSetTPRR3);
    CHECK_OFF(PDM, 1248, Apic.pfnWriteMSRR3);
    CHECK_OFF(PDM, 1256, Apic.pfnReadMSRR3);
    CHECK_OFF(PDM, 1240, Apic.pfnGetTPRR3);
    CHECK_OFF(PDM, 1264, Apic.pfnBusDeliverR3);
    CHECK_OFF(PDM, 1280, Apic.pDevInsR0);
    CHECK_OFF(PDM, 1288, Apic.pfnGetInterruptR0);
    CHECK_OFF(PDM, 1304, Apic.pfnSetBaseR0);
    CHECK_OFF(PDM, 1312, Apic.pfnGetBaseR0);
    CHECK_OFF(PDM, 1320, Apic.pfnSetTPRR0);
    CHECK_OFF(PDM, 1328, Apic.pfnGetTPRR0);
    CHECK_OFF(PDM, 1336, Apic.pfnWriteMSRR0);
    CHECK_OFF(PDM, 1344, Apic.pfnReadMSRR0);
    CHECK_OFF(PDM, 1352, Apic.pfnBusDeliverR0);
    CHECK_OFF(PDM, 1368, Apic.pDevInsRC);
    CHECK_OFF(PDM, 1372, Apic.pfnGetInterruptRC);
    CHECK_OFF(PDM, 1380, Apic.pfnSetBaseRC);
    CHECK_OFF(PDM, 1384, Apic.pfnGetBaseRC);
    CHECK_OFF(PDM, 1388, Apic.pfnSetTPRRC);
    CHECK_OFF(PDM, 1392, Apic.pfnGetTPRRC);
    CHECK_OFF(PDM, 1396, Apic.pfnWriteMSRRC);
    CHECK_OFF(PDM, 1400, Apic.pfnReadMSRRC);
    CHECK_OFF(PDM, 1404, Apic.pfnBusDeliverRC);
    CHECK_OFF(PDM, 1416, IoApic);
    CHECK_OFF(PDM, 1416, IoApic.pDevInsR3);
    CHECK_OFF(PDM, 1424, IoApic.pfnSetIrqR3);
    CHECK_OFF(PDM, 1440, IoApic.pDevInsR0);
    CHECK_OFF(PDM, 1448, IoApic.pfnSetIrqR0);
    CHECK_OFF(PDM, 1464, IoApic.pDevInsRC);
    CHECK_OFF(PDM, 1468, IoApic.pfnSetIrqRC);
    CHECK_OFF(PDM, 1480, pDmac);
    CHECK_OFF(PDM, 1488, pRtc);
    CHECK_OFF(PDM, 1496, pUsbHubs);
    CHECK_OFF(PDM, 1504, pDevHlpQueueR3);
    CHECK_OFF(PDM, 1512, pDevHlpQueueR0);
    CHECK_OFF(PDM, 1520, pDevHlpQueueRC);
    CHECK_OFF(PDMCPU, 0, cQueuedCritSectLeaves);
    CHECK_OFF(PDMCPU, 8, apQueuedCritSectLeaves);
    CHECK_OFF(PDMCPU, 72, cQueuedCritSectRwExclLeaves);
    CHECK_OFF(PDMCPU, 80, apQueuedCritSectRwExclLeaves);
    CHECK_OFF(PDMCPU, 144, cQueuedCritSectRwShrdLeaves);
    CHECK_OFF(PDMCPU, 152, apQueuedCritSectRwShrdLeaves);
    CHECK_OFF(PDM, 1528, pQueueFlushR0);
    CHECK_OFF(PDM, 1524, pQueueFlushRC);
    CHECK_OFF(PDM, 1576, StatQueuedCritSectLeaves);
    CHECK_SIZE(PDMDEVINSINT, 120);
    CHECK_OFF(PDMDEVINSINT, 0, pNextR3);
    CHECK_OFF(PDMDEVINSINT, 8, pPerDeviceNextR3);
    CHECK_OFF(PDMDEVINSINT, 16, pDevR3);
    CHECK_OFF(PDMDEVINSINT, 48, pVMR3);
    CHECK_OFF(PDMDEVINSINT, 72, pVMR0);
    CHECK_OFF(PDMDEVINSINT, 96, pVMRC);
    CHECK_OFF(PDMDEVINSINT, 24, pLunsR3);
    CHECK_OFF(PDMDEVINSINT, 32, pfnAsyncNotify);
    CHECK_OFF(PDMDEVINSINT, 40, pCfgHandle);
    CHECK_OFF(PDMDEVINSINT, 56, pPciDeviceR3);
    CHECK_OFF(PDMDEVINSINT, 80, pPciDeviceR0);
    CHECK_OFF(PDMDEVINSINT, 100, pPciDeviceRC);
    CHECK_OFF(PDMDEVINSINT, 64, pPciBusR3);
    CHECK_OFF(PDMDEVINSINT, 88, pPciBusR0);
    CHECK_OFF(PDMDEVINSINT, 104, pPciBusRC);
    CHECK_OFF(PDMDEVINSINT, 108, fIntFlags);
    CHECK_OFF(PDMDEVINS, 0, u32Version);
    CHECK_OFF(PDMDEVINS, 4, iInstance);
    CHECK_OFF(PDMDEVINS, 8, pHlpRC);
    CHECK_OFF(PDMDEVINS, 12, pvInstanceDataRC);
    CHECK_OFF(PDMDEVINS, 24, pHlpR0);
    CHECK_OFF(PDMDEVINS, 32, pvInstanceDataR0);
    CHECK_OFF(PDMDEVINS, 48, pHlpR3);
    CHECK_OFF(PDMDEVINS, 56, pvInstanceDataR3);
    CHECK_OFF(PDMDEVINS, 72, pReg);
    CHECK_OFF(PDMDEVINS, 80, pCfg);
    CHECK_OFF(PDMDEVINS, 88, IBase);
    CHECK_OFF(PDMDEVINS, 104, Internal);
    CHECK_OFF(PDMDEVINS, 256, achInstanceData);
    CHECK_SIZE(PDMDRVINSINT, 80);
    CHECK_OFF(PDMDRVINSINT, 0, pUp);
    CHECK_OFF(PDMDRVINSINT, 8, pDown);
    CHECK_OFF(PDMDRVINSINT, 16, pLun);
    CHECK_OFF(PDMDRVINSINT, 24, pDrv);
    CHECK_OFF(PDMDRVINSINT, 32, pVMR3);
    CHECK_OFF(PDMDRVINSINT, 40, pVMR0);
    CHECK_OFF(PDMDRVINSINT, 48, pVMRC);
    CHECK_OFF(PDMDRVINSINT, 52, fDetaching);
    CHECK_OFF(PDMDRVINSINT, 53, fVMSuspended);
    CHECK_OFF(PDMDRVINSINT, 54, fVMReset);
    CHECK_OFF(PDMDRVINSINT, 56, pfnAsyncNotify);
    CHECK_OFF(PDMDRVINSINT, 64, pCfgHandle);
    CHECK_OFF(PDMDRVINS, 0, u32Version);
    CHECK_OFF(PDMDRVINS, 4, iInstance);
    CHECK_OFF(PDMDRVINS, 8, pHlpRC);
    CHECK_OFF(PDMDRVINS, 12, pvInstanceDataRC);
    CHECK_OFF(PDMDRVINS, 16, pHlpR0);
    CHECK_OFF(PDMDRVINS, 24, pvInstanceDataR0);
    CHECK_OFF(PDMDRVINS, 32, pHlpR3);
    CHECK_OFF(PDMDRVINS, 40, pvInstanceDataR3);
    CHECK_OFF(PDMDRVINS, 48, pReg);
    CHECK_OFF(PDMDRVINS, 56, pCfg);
    CHECK_OFF(PDMDRVINS, 80, IBase);
    CHECK_OFF(PDMDRVINS, 96, Internal);
    CHECK_OFF(PDMDRVINS, 192, achInstanceData);
    CHECK_SIZE(PDMCRITSECTINT, 168);
    CHECK_OFF(PDMCRITSECTINT, 0, Core);
    CHECK_OFF(PDMCRITSECTINT, 48, pNext);
    CHECK_OFF(PDMCRITSECTINT, 56, pvKey);
    CHECK_OFF(PDMCRITSECTINT, 64, pVMR3);
    CHECK_OFF(PDMCRITSECTINT, 72, pVMR0);
    CHECK_OFF(PDMCRITSECTINT, 80, pVMRC);
    CHECK_OFF(PDMCRITSECTINT, 104, StatContentionRZLock);
    CHECK_OFF(PDMCRITSECTINT, 112, StatContentionRZUnlock);
    CHECK_OFF(PDMCRITSECTINT, 120, StatContentionR3);
    CHECK_OFF(PDMCRITSECTINT, 128, StatLocked);
    CHECK_SIZE(PDMCRITSECT, 192);
    CHECK_SIZE(PDMCRITSECTRWINT, 232);
    CHECK_OFF(PDMCRITSECTRWINT, 0, Core);
    CHECK_OFF(PDMCRITSECTRWINT, 64, pNext);
    CHECK_OFF(PDMCRITSECTRWINT, 72, pvKey);
    CHECK_OFF(PDMCRITSECTRWINT, 80, pVMR3);
    CHECK_OFF(PDMCRITSECTRWINT, 88, pVMR0);
    CHECK_OFF(PDMCRITSECTRWINT, 96, pVMRC);
    CHECK_OFF(PDMCRITSECTRWINT, 104, pszName);
    CHECK_OFF(PDMCRITSECTRWINT, 112, StatContentionRZEnterExcl);
    CHECK_OFF(PDMCRITSECTRWINT, 192, StatWriteLocked);
    CHECK_SIZE(PDMCRITSECTRW, 256);
    CHECK_SIZE(PDMQUEUE, 200);
    CHECK_OFF(PDMQUEUE, 0, pNext);
    CHECK_OFF(PDMQUEUE, 24, enmType);
    CHECK_OFF(PDMQUEUE, 8, u);
    CHECK_OFF(PDMQUEUE, 8, u.Dev.pfnCallback);
    CHECK_OFF(PDMQUEUE, 16, u.Dev.pDevIns);
    CHECK_OFF(PDMQUEUE, 8, u.Drv.pfnCallback);
    CHECK_OFF(PDMQUEUE, 16, u.Drv.pDrvIns);
    CHECK_OFF(PDMQUEUE, 8, u.Int.pfnCallback);
    CHECK_OFF(PDMQUEUE, 8, u.Ext.pfnCallback);
    CHECK_OFF(PDMQUEUE, 16, u.Ext.pvUser);
    CHECK_OFF(PDMQUEUE, 40, pVMR3);
    CHECK_OFF(PDMQUEUE, 56, pVMR0);
    CHECK_OFF(PDMQUEUE, 72, pVMRC);
    CHECK_OFF(PDMQUEUE, 28, cMilliesInterval);
    CHECK_OFF(PDMQUEUE, 32, pTimer);
    CHECK_OFF(PDMQUEUE, 80, cbItem);
    CHECK_OFF(PDMQUEUE, 84, cItems);
    CHECK_OFF(PDMQUEUE, 48, pPendingR3);
    CHECK_OFF(PDMQUEUE, 64, pPendingR0);
    CHECK_OFF(PDMQUEUE, 76, pPendingRC);
    CHECK_OFF(PDMQUEUE, 88, iFreeHead);
    CHECK_OFF(PDMQUEUE, 92, iFreeTail);
    CHECK_OFF(PDMQUEUE, 96, pszName);
    CHECK_OFF(PDMQUEUE, 104, StatAllocFailures);
    CHECK_OFF(PDMQUEUE, 112, StatInsert);
    CHECK_OFF(PDMQUEUE, 120, StatFlush);
    CHECK_OFF(PDMQUEUE, 128, StatFlushLeftovers);
    CHECK_OFF(PDMQUEUE, 176, aFreeItems);
    CHECK_OFF(PDMQUEUE, 200, aFreeItems[1]);
    CHECK_OFF(PDMQUEUE, 176, aFreeItems[0].pItemR3);
    CHECK_OFF(PDMQUEUE, 184, aFreeItems[0].pItemR0);
    CHECK_OFF(PDMQUEUE, 216, aFreeItems[1].pItemRC);
    CHECK_SIZE(PDMDEVHLPTASK, 56);
    CHECK_OFF(PDMDEVHLPTASK, 0, Core);
    CHECK_OFF(PDMDEVHLPTASK, 24, pDevInsR3);
    CHECK_OFF(PDMDEVHLPTASK, 32, enmOp);
    CHECK_OFF(PDMDEVHLPTASK, 40, u);
    CHECK_OFF(PDMDEVHLPTASK, 40, u.SetIRQ.iIrq);
    CHECK_OFF(PDMDEVHLPTASK, 44, u.SetIRQ.iLevel);
    CHECK_SIZE(PGM, 12744);
    CHECK_OFF(PGM, 0, offVM);
    CHECK_OFF(PGM, 8, fRamPreAlloc);
    CHECK_OFF(PGM, 528, paDynPageMap32BitPTEsGC);
    CHECK_OFF(PGM, 532, paDynPageMapPaePTEsGC);
    CHECK_OFF(PGM, 12, enmHostMode);
    CHECK_OFF(PGMCPU, 0, offVM);
    CHECK_OFF(PGMCPU, 4, offVCpu);
    CHECK_OFF(PGMCPU, 8, offPGM);
    CHECK_OFF(PGMCPU, 16, AutoSet);
    CHECK_OFF(PGMCPU, 1696, GCPhysA20Mask);
    CHECK_OFF(PGMCPU, 1704, fA20Enabled);
    CHECK_OFF(PGMCPU, 1708, fSyncFlags);
    CHECK_OFF(PGMCPU, 1712, enmShadowMode);
    CHECK_OFF(PGMCPU, 1716, enmGuestMode);
    CHECK_OFF(PGMCPU, 1720, GCPhysCR3);
    CHECK_OFF(PGM, 536, GCPtrCR3Mapping);
    CHECK_OFF(PGMCPU, 1728, pGst32BitPdR3);
    CHECK_OFF(PGMCPU, 1736, pGst32BitPdR0);
    CHECK_OFF(PGMCPU, 1744, pGst32BitPdRC);
    CHECK_OFF(PGMCPU, 1760, pGstPaePdptR3);
    CHECK_OFF(PGMCPU, 1768, pGstPaePdptR0);
    CHECK_OFF(PGMCPU, 1756, pGstPaePdptRC);
    CHECK_OFF(PGMCPU, 1776, apGstPaePDsR3);
    CHECK_OFF(PGMCPU, 1808, apGstPaePDsR0);
    CHECK_OFF(PGMCPU, 1840, apGstPaePDsRC);
    CHECK_OFF(PGMCPU, 1856, aGCPhysGstPaePDs);
    CHECK_OFF(PGMCPU, 1920, aGCPhysGstPaePDsMonitored);
    CHECK_OFF(PGMCPU, 2096, pShwPageCR3R3);
    CHECK_OFF(PGMCPU, 2104, pShwPageCR3R0);
    CHECK_OFF(PGMCPU, 2112, pShwPageCR3RC);
    CHECK_OFF(PGMCPU, 2120, pfnR3ShwRelocate);
    CHECK_OFF(PGMCPU, 2128, pfnR3ShwExit);
    CHECK_OFF(PGMCPU, 2136, pfnR3ShwGetPage);
    CHECK_OFF(PGMCPU, 2144, pfnR3ShwModifyPage);
    CHECK_OFF(PGMCPU, 2152, pfnRCShwGetPage);
    CHECK_OFF(PGMCPU, 2156, pfnRCShwModifyPage);
    CHECK_OFF(PGMCPU, 2176, pfnR3GstRelocate);
    CHECK_OFF(PGMCPU, 2184, pfnR3GstExit);
    CHECK_OFF(PGMCPU, 2304, pfnR3BthMapCR3);
    CHECK_OFF(PGMCPU, 2312, pfnR3BthUnmapCR3);
    CHECK_OFF(PGMCPU, 2192, pfnR3GstGetPage);
    CHECK_OFF(PGMCPU, 2200, pfnR3GstModifyPage);
    CHECK_OFF(PGMCPU, 2208, pfnR3GstGetPDE);
    CHECK_OFF(PGMCPU, 2216, pfnRCGstGetPage);
    CHECK_OFF(PGMCPU, 2220, pfnRCGstModifyPage);
    CHECK_OFF(PGMCPU, 2224, pfnRCGstGetPDE);
    CHECK_OFF(PGMCPU, 2256, pfnR3BthRelocate);
    CHECK_OFF(PGMCPU, 2272, pfnR3BthSyncCR3);
    CHECK_OFF(PGMCPU, 2264, pfnR3BthInvalidatePage);
    CHECK_OFF(PGMCPU, 2280, pfnR3BthPrefetchPage);
    CHECK_OFF(PGMCPU, 2288, pfnR3BthVerifyAccessSyncPage);
    CHECK_OFF(PGMCPU, 2296, pfnR3BthAssertCR3);
    CHECK_OFF(PGMCPU, 2384, pfnRCBthTrap0eHandler);
    CHECK_OFF(PGMCPU, 2388, pfnRCBthInvalidatePage);
    CHECK_OFF(PGMCPU, 2396, pfnRCBthPrefetchPage);
    CHECK_OFF(PGMCPU, 2400, pfnRCBthVerifyAccessSyncPage);
    CHECK_OFF(PGMCPU, 2404, pfnRCBthAssertCR3);
    CHECK_OFF(PGMCPU, 2320, pfnR0BthTrap0eHandler);
    CHECK_OFF(PGMCPU, 2328, pfnR0BthInvalidatePage);
    CHECK_OFF(PGMCPU, 2344, pfnR0BthPrefetchPage);
    CHECK_OFF(PGMCPU, 2352, pfnR0BthVerifyAccessSyncPage);
    CHECK_OFF(PGMCPU, 2360, pfnR0BthAssertCR3);
    CHECK_OFF(PGMCPU, 2416, DisState);
    CHECK_OFF(PGMCPU, 2616, cGuestModeChanges);
    CHECK_OFF(PGMCPU, 2640, pStatsR0);
    CHECK_OFF(PGMCPU, 2648, pStatTrap0eAttributionR0);
    CHECK_OFF(PGMCPU, 2632, pStatsRC);
    CHECK_OFF(PGMCPU, 2636, pStatTrap0eAttributionRC);
    CHECK_OFF(PGMCPU, 2656, pStatsR3);
    CHECK_OFF(PGM, 0, offVM);
    CHECK_OFF(PGM, 4, offVCpuPGM);
    CHECK_OFF(PGM, 8, fRamPreAlloc);
    CHECK_OFF(PGM, 528, paDynPageMap32BitPTEsGC);
    CHECK_OFF(PGM, 532, paDynPageMapPaePTEsGC);
    CHECK_OFF(PGM, 12, enmHostMode);
    CHECK_OFF(PGM, 48, GCPhys4MBPSEMask);
    CHECK_OFF(PGM, 128, pRamRangesXR3);
    CHECK_OFF(PGM, 336, pRamRangesXR0);
    CHECK_OFF(PGM, 496, pRamRangesXRC);
    CHECK_OFF(PGM, 176, pRomRangesR3);
    CHECK_OFF(PGM, 384, pRomRangesR0);
    CHECK_OFF(PGM, 520, pRomRangesRC);
    CHECK_OFF(PGM, 144, pTreesR3);
    CHECK_OFF(PGM, 352, pTreesR0);
    CHECK_OFF(PGM, 504, pTreesRC);
    CHECK_OFF(PGM, 168, pMappingsR3);
    CHECK_OFF(PGM, 516, pMappingsRC);
    CHECK_OFF(PGM, 376, pMappingsR0);
    CHECK_OFF(PGM, 21, fFinalizedMappings);
    CHECK_OFF(PGM, 22, fMappingsFixed);
    CHECK_OFF(PGM, 23, fMappingsFixedRestored);
    CHECK_OFF(PGM, 32, GCPtrMappingFixed);
    CHECK_OFF(PGM, 24, cbMappingFixed);
    CHECK_OFF(PGM, 544, pInterPD);
    CHECK_OFF(PGM, 552, apInterPTs);
    CHECK_OFF(PGM, 568, apInterPaePTs);
    CHECK_OFF(PGM, 584, apInterPaePDs);
    CHECK_OFF(PGM, 616, pInterPaePDPT);
    CHECK_OFF(PGM, 632, pInterPaePDPT64);
    CHECK_OFF(PGM, 624, pInterPaePML4);
    CHECK_OFF(PGM, 640, HCPhysInterPD);
    CHECK_OFF(PGM, 648, HCPhysInterPaePDPT);
    CHECK_OFF(PGM, 656, HCPhysInterPaePML4);
    CHECK_OFF(PGM, 664, pbDynPageMapBaseGC);
    CHECK_OFF(PGM, 668, pRCDynMap);
    CHECK_OFF(PGM, 672, pvR0DynMapUsed);
    CHECK_OFF(PGM, 48, GCPhys4MBPSEMask);
    CHECK_OFF(PGMCPU, 1696, GCPhysA20Mask);
    CHECK_OFF(PGMCPU, 1704, fA20Enabled);
    CHECK_OFF(PGMCPU, 1708, fSyncFlags);
    CHECK_OFF(PGM, 688, CritSectX);
    CHECK_OFF(PGM, 160, pPoolR3);
    CHECK_OFF(PGM, 368, pPoolR0);
    CHECK_OFF(PGM, 512, pPoolRC);
    CHECK_OFF(PGM, 16, fNoMorePhysWrites);
    CHECK_OFF(PGM, 880, ChunkR3Map);
    CHECK_OFF(PGM, 880, ChunkR3Map.pTree);
    CHECK_OFF(PGM, 888, ChunkR3Map.Tlb);
    CHECK_OFF(PGM, 1912, ChunkR3Map.c);
    CHECK_OFF(PGM, 1916, ChunkR3Map.cMax);
    CHECK_OFF(PGM, 1920, ChunkR3Map.iNow);
    CHECK_OFF(PGM, 1928, PhysTlbHC);
    CHECK_OFF(PGM, 1928, PhysTlbHC.aEntries[0]);
    CHECK_OFF(PGM, 1960, PhysTlbHC.aEntries[1]);
    CHECK_OFF(PGM, 1960, PhysTlbHC.aEntries[1].GCPhys);
    CHECK_OFF(PGM, 1976, PhysTlbHC.aEntries[1].pMap);
    CHECK_OFF(PGM, 1968, PhysTlbHC.aEntries[1].pPage);
    CHECK_OFF(PGM, 1984, PhysTlbHC.aEntries[1].pv);
    CHECK_OFF(PGM, 10120, HCPhysZeroPg);
    CHECK_OFF(PGM, 10128, pvZeroPgR3);
    CHECK_OFF(PGM, 10136, pvZeroPgR0);
    CHECK_OFF(PGM, 10144, pvZeroPgRC);
    CHECK_OFF(PGM, 10176, cHandyPages);
    CHECK_OFF(PGM, 10184, aHandyPages);
    CHECK_OFF(PGM, 10200, aHandyPages[1]);
    CHECK_OFF(PGM, 10200, aHandyPages[1].HCPhysGCPhys);
    CHECK_OFF(PGM, 10208, aHandyPages[1].idPage);
    CHECK_OFF(PGM, 10212, aHandyPages[1].idSharedPage);
    CHECK_OFF(PGM, 12596, cAllPages);
    CHECK_OFF(PGM, 12600, cPrivatePages);
    CHECK_OFF(PGM, 12604, cSharedPages);
    CHECK_OFF(PGM, 12612, cZeroPages);
    CHECK_OFF(PGM, 12616, cPureMmioPages);
    CHECK_OFF(PGM, 12620, cMonitoredPages);
    CHECK_OFF(PGM, 12624, cWrittenToPages);
    CHECK_OFF(PGM, 12628, cWriteLockedPages);
    CHECK_OFF(PGM, 12632, cReadLockedPages);
    CHECK_OFF(PGM, 12656, cRelocations);
    CHECK_OFF(PGMCPU, 2640, pStatsR0);
    CHECK_OFF(PGMCPU, 2632, pStatsRC);
    CHECK_OFF(PGMCPU, 2656, pStatsR3);
    CHECK_SIZE(PGMMAPPING, 208);
    CHECK_OFF(PGMMAPPING, 0, pNextR3);
    CHECK_OFF(PGMMAPPING, 16, pNextRC);
    CHECK_OFF(PGMMAPPING, 8, pNextR0);
    CHECK_OFF(PGMMAPPING, 24, GCPtr);
    CHECK_OFF(PGMMAPPING, 32, GCPtrLast);
    CHECK_OFF(PGMMAPPING, 40, cb);
    CHECK_OFF(PGMMAPPING, 48, pfnRelocate);
    CHECK_OFF(PGMMAPPING, 56, pvUser);
    CHECK_OFF(PGMMAPPING, 64, pszDesc);
    CHECK_OFF(PGMMAPPING, 140, cPTs);
    CHECK_OFF(PGMMAPPING, 208, aPTs[1].HCPhysPT);
    CHECK_OFF(PGMMAPPING, 232, aPTs[1].pPTR3);
    CHECK_OFF(PGMMAPPING, 256, aPTs[1].pPTR0);
    CHECK_OFF(PGMMAPPING, 248, aPTs[1].pPTRC);
    CHECK_OFF(PGMMAPPING, 216, aPTs[1].HCPhysPaePT0);
    CHECK_OFF(PGMMAPPING, 224, aPTs[1].HCPhysPaePT1);
    CHECK_OFF(PGMMAPPING, 240, aPTs[1].paPaePTsR3);
    CHECK_OFF(PGMMAPPING, 252, aPTs[1].paPaePTsRC);
    CHECK_OFF(PGMMAPPING, 264, aPTs[1].paPaePTsR0);
    CHECK_SIZE(PGMPHYSHANDLER, 128);
    CHECK_OFF(PGMPHYSHANDLER, 0, Core);
    CHECK_SIZE(((PPGMPHYSHANDLER)0)->Core, 32);
    CHECK_OFF(PGMPHYSHANDLER, 32, enmType);
    CHECK_OFF(PGMPHYSHANDLER, 36, cPages);
    CHECK_OFF(PGMPHYSHANDLER, 40, cAliasedPages);
    CHECK_OFF(PGMPHYSHANDLER, 44, cTmpOffPages);
    CHECK_OFF(PGMPHYSHANDLER, 48, pfnHandlerR3);
    CHECK_OFF(PGMPHYSHANDLER, 56, pvUserR3);
    CHECK_OFF(PGMPHYSHANDLER, 64, pfnHandlerR0);
    CHECK_OFF(PGMPHYSHANDLER, 72, pvUserR0);
    CHECK_OFF(PGMPHYSHANDLER, 80, pfnHandlerRC);
    CHECK_OFF(PGMPHYSHANDLER, 84, pvUserRC);
    CHECK_OFF(PGMPHYSHANDLER, 88, pszDesc);
    CHECK_SIZE(PGMPHYS2VIRTHANDLER, 40);
    CHECK_OFF(PGMPHYS2VIRTHANDLER, 0, Core);
    CHECK_OFF(PGMPHYS2VIRTHANDLER, 32, offVirtHandler);
    CHECK_SIZE(PGMVIRTHANDLER, 192);
    CHECK_OFF(PGMVIRTHANDLER, 0, Core);
    CHECK_OFF(PGMVIRTHANDLER, 44, enmType);
    CHECK_OFF(PGMVIRTHANDLER, 32, cb);
    CHECK_OFF(PGMVIRTHANDLER, 64, pfnHandlerR3);
    CHECK_OFF(PGMVIRTHANDLER, 48, pfnHandlerRC);
    CHECK_OFF(PGMVIRTHANDLER, 72, pszDesc);
    CHECK_OFF(PGMVIRTHANDLER, 40, cPages);
    CHECK_OFF(PGMVIRTHANDLER, 112, aPhysToVirt);
    CHECK_SIZE(PGMPAGE, 16);
    CHECK_OFF(PGMPAGE, 14, s.cReadLocksY);
    CHECK_OFF(PGMPAGE, 15, s.cWriteLocksY);
    CHECK_OFF(PGMPAGE, 12, s.u16TrackingY);
    CHECK_SIZE(PGMRAMRANGE, 144);
    CHECK_OFF(PGMRAMRANGE, 16, pNextR3);
    CHECK_OFF(PGMRAMRANGE, 24, pNextR0);
    CHECK_OFF(PGMRAMRANGE, 32, pNextRC);
    CHECK_OFF(PGMRAMRANGE, 0, GCPhys);
    CHECK_OFF(PGMRAMRANGE, 40, GCPhysLast);
    CHECK_OFF(PGMRAMRANGE, 8, cb);
    CHECK_OFF(PGMRAMRANGE, 36, fFlags);
    CHECK_OFF(PGMRAMRANGE, 48, pvR3);
    CHECK_OFF(PGMRAMRANGE, 64, pszDesc);
    CHECK_OFF(PGMRAMRANGE, 128, aPages);
    CHECK_OFF(PGMRAMRANGE, 144, aPages[1]);
    CHECK_SIZE(PGMROMPAGE, 40);
    CHECK_OFF(PGMROMPAGE, 0, Virgin);
    CHECK_OFF(PGMROMPAGE, 16, Shadow);
    CHECK_OFF(PGMROMPAGE, 32, enmProt);
    CHECK_SIZE(PGMROMRANGE, 120);
    CHECK_OFF(PGMROMRANGE, 0, pNextR3);
    CHECK_OFF(PGMROMRANGE, 8, pNextR0);
    CHECK_OFF(PGMROMRANGE, 16, pNextRC);
    CHECK_OFF(PGMROMRANGE, 24, GCPhys);
    CHECK_OFF(PGMROMRANGE, 32, GCPhysLast);
    CHECK_OFF(PGMROMRANGE, 40, cb);
    CHECK_OFF(PGMROMRANGE, 48, fFlags);
    CHECK_OFF(PGMROMRANGE, 60, cbOriginal);
    CHECK_OFF(PGMROMRANGE, 64, pvOriginal);
    CHECK_OFF(PGMROMRANGE, 72, pszDesc);
    CHECK_OFF(PGMROMRANGE, 80, aPages);
    CHECK_OFF(PGMROMRANGE, 120, aPages[1]);
    CHECK_SIZE(PGMMMIO2RANGE, 192);
    CHECK_OFF(PGMMMIO2RANGE, 0, pDevInsR3);
    CHECK_OFF(PGMMMIO2RANGE, 16, pNextR3);
    CHECK_OFF(PGMMMIO2RANGE, 24, fMapped);
    CHECK_OFF(PGMMMIO2RANGE, 25, fOverlapping);
    CHECK_OFF(PGMMMIO2RANGE, 26, iRegion);
    CHECK_OFF(PGMMMIO2RANGE, 48, RamRange);
    CHECK_SIZE(PGMTREES, 16);
    CHECK_OFF(PGMTREES, 0, PhysHandlers);
    CHECK_OFF(PGMTREES, 4, VirtHandlers);
    CHECK_OFF(PGMTREES, 8, PhysToVirtHandlers);
    CHECK_OFF(PGMTREES, 12, HyperVirtHandlers);
    CHECK_SIZE(PGMPOOLPAGE, 112);
    CHECK_OFF(PGMPOOLPAGE, 0, Core);
    CHECK_OFF(PGMPOOLPAGE, 32, GCPhys);
    CHECK_OFF(PGMPOOLPAGE, 24, pvPageR3);
    CHECK_OFF(PGMPOOLPAGE, 40, enmKind);
    CHECK_OFF(PGMPOOLPAGE, 41, enmAccess);
    CHECK_OFF(PGMPOOLPAGE, 44, idx);
    CHECK_OFF(PGMPOOLPAGE, 46, iNext);
    CHECK_OFF(PGMPOOLPAGE, 48, iUserHead);
    CHECK_OFF(PGMPOOLPAGE, 50, cPresent);
    CHECK_OFF(PGMPOOLPAGE, 52, iFirstPresent);
    CHECK_OFF(PGMPOOLPAGE, 54, cModifications);
    CHECK_OFF(PGMPOOLPAGE, 56, iModifiedNext);
    CHECK_OFF(PGMPOOLPAGE, 58, iModifiedPrev);
    CHECK_OFF(PGMPOOLPAGE, 60, iMonitoredNext);
    CHECK_OFF(PGMPOOLPAGE, 62, iMonitoredPrev);
    CHECK_OFF(PGMPOOLPAGE, 64, iAgeNext);
    CHECK_OFF(PGMPOOLPAGE, 66, iAgePrev);
    CHECK_OFF(PGMPOOLPAGE, 68, idxDirtyEntry);
    CHECK_OFF(PGMPOOLPAGE, 72, GCPtrLastAccessHandlerRip);
    CHECK_OFF(PGMPOOLPAGE, 80, GCPtrLastAccessHandlerFault);
    CHECK_OFF(PGMPOOLPAGE, 88, cLastAccessHandler);
    CHECK_OFF(PGMPOOLPAGE, 96, cLocked);
    CHECK_OFF(PGMPOOLPAGE, 104, GCPtrDirtyFault);
    CHECK_SIZE(PGMPOOL, 66984);
    CHECK_OFF(PGMPOOL, 0, pVMR3);
    CHECK_OFF(PGMPOOL, 8, pVMR0);
    CHECK_OFF(PGMPOOL, 16, pVMRC);
    CHECK_OFF(PGMPOOL, 20, cMaxPages);
    CHECK_OFF(PGMPOOL, 22, cCurPages);
    CHECK_OFF(PGMPOOL, 24, iFreeHead);
    CHECK_OFF(PGMPOOL, 26, u16Padding);
    CHECK_OFF(PGMPOOL, 65920, cUsedPages);
    CHECK_OFF(PGMPOOL, 65922, cUsedPagesHigh);
    CHECK_OFF(PGMPOOL, 65928, StatAlloc);
    CHECK_OFF(PGMPOOL, 65968, StatClearAll);
    CHECK_OFF(PGMPOOL, 66864, HCPhysTree);
    CHECK_OFF(PGMPOOL, 66872, aPages);
    CHECK_OFF(PGMPOOL, 66984, aPages[1]);
    CHECK_OFF(PGMPOOL, 66872, aPages[PGMPOOL_IDX_FIRST - 1]);
    CHECK_SIZE(PGMRCDYNMAP, 28);
    CHECK_OFF(PGMRCDYNMAP, 0, u32Magic);
    CHECK_OFF(PGMRCDYNMAP, 4, paPages);
    CHECK_OFF(PGMRCDYNMAP, 8, cPages);
    CHECK_OFF(PGMRCDYNMAP, 12, cLoad);
    CHECK_OFF(PGMRCDYNMAP, 16, cMaxLoad);
    CHECK_OFF(PGMRCDYNMAP, 20, cGuardPages);
    CHECK_OFF(PGMRCDYNMAP, 24, cUsers);
    CHECK_SIZE(PGMRCDYNMAPENTRY, 24);
    CHECK_OFF(PGMRCDYNMAPENTRY, 0, HCPhys);
    CHECK_OFF(PGMRCDYNMAPENTRY, 8, pvPage);
    CHECK_OFF(PGMRCDYNMAPENTRY, 12, cRefs);
    CHECK_OFF(PGMRCDYNMAPENTRY, 16, uPte.pLegacy);
    CHECK_OFF(PGMRCDYNMAPENTRY, 20, uPte.pPae);
    CHECK_OFF(PGMMAPSETENTRY, 0, pvPage);
    CHECK_OFF(PGMMAPSETENTRY, 8, iPage);
    CHECK_OFF(PGMMAPSETENTRY, 10, cRefs);
    CHECK_OFF(PGMMAPSETENTRY, 12, cInlinedRefs);
    CHECK_OFF(PGMMAPSETENTRY, 14, cUnrefs);
    CHECK_OFF(PGMMAPSETENTRY, 16, HCPhys);
    CHECK_SIZE(REM, 69696);
    CHECK_OFF(REM, 8, pCtx);
    CHECK_OFF(REM, 28, cCanExecuteRaw);
    CHECK_OFF(REM, 40, aGCPtrInvalidatedPages);
    CHECK_OFF(REM, 4008, idxPendingList);
    CHECK_OFF(REM, 424, aHandlerNotifications);
    CHECK_OFF(REM, 4012, idxFreeList);
    CHECK_OFF(REM, 4064, CritSectRegister);
    CHECK_OFF(REM, 4060, rc);
    CHECK_OFF(REM, 4256, StatsInQEMU);
    CHECK_OFF(REM, 4416, Env);
    CHECK_SIZE(REMHANDLERNOTIFICATION, 56);
    CHECK_OFF(REMHANDLERNOTIFICATION, 0, enmKind);
    CHECK_OFF(REMHANDLERNOTIFICATION, 8, u);
    CHECK_OFF(REMHANDLERNOTIFICATION, 8, u.PhysicalRegister.GCPhys);
    CHECK_OFF(REMHANDLERNOTIFICATION, 16, u.PhysicalRegister.cb);
    CHECK_OFF(REMHANDLERNOTIFICATION, 24, u.PhysicalRegister.enmType);
    CHECK_OFF(REMHANDLERNOTIFICATION, 28, u.PhysicalRegister.fHasHCHandler);
    CHECK_OFF(REMHANDLERNOTIFICATION, 8, u.PhysicalDeregister.GCPhys);
    CHECK_OFF(REMHANDLERNOTIFICATION, 16, u.PhysicalDeregister.cb);
    CHECK_OFF(REMHANDLERNOTIFICATION, 24, u.PhysicalDeregister.enmType);
    CHECK_OFF(REMHANDLERNOTIFICATION, 28, u.PhysicalDeregister.fHasHCHandler);
    CHECK_OFF(REMHANDLERNOTIFICATION, 29, u.PhysicalDeregister.fRestoreAsRAM);
    CHECK_OFF(REMHANDLERNOTIFICATION, 8, u.PhysicalModify.GCPhysOld);
    CHECK_OFF(REMHANDLERNOTIFICATION, 16, u.PhysicalModify.GCPhysNew);
    CHECK_OFF(REMHANDLERNOTIFICATION, 24, u.PhysicalModify.cb);
    CHECK_OFF(REMHANDLERNOTIFICATION, 32, u.PhysicalModify.enmType);
    CHECK_OFF(REMHANDLERNOTIFICATION, 36, u.PhysicalModify.fHasHCHandler);
    CHECK_OFF(REMHANDLERNOTIFICATION, 37, u.PhysicalModify.fRestoreAsRAM);
    CHECK_OFF(REMHANDLERNOTIFICATION, 48, idxSelf);
    CHECK_OFF(REMHANDLERNOTIFICATION, 52, idxNext);
    CHECK_SIZE(SELM, 712);
    CHECK_OFF(SELM, 0, offVM);
    CHECK_OFF(SELM, 4, aHyperSel[SELM_HYPER_SEL_CS]);
    CHECK_OFF(SELM, 6, aHyperSel[SELM_HYPER_SEL_DS]);
    CHECK_OFF(SELM, 8, aHyperSel[SELM_HYPER_SEL_CS64]);
    CHECK_OFF(SELM, 10, aHyperSel[SELM_HYPER_SEL_TSS]);
    CHECK_OFF(SELM, 12, aHyperSel[SELM_HYPER_SEL_TSS_TRAP08]);
    CHECK_OFF(SELM, 16, paGdtR3);
    CHECK_OFF(SELM, 24, paGdtRC);
    CHECK_OFF(SELM, 28, GuestGdtr);
    CHECK_OFF(SELM, 40, cbEffGuestGdtLimit);
    CHECK_OFF(SELM, 48, pvLdtR3);
    CHECK_OFF(SELM, 56, pvLdtRC);
    CHECK_OFF(SELM, 64, GCPtrGuestLdt);
    CHECK_OFF(SELM, 72, cbLdtLimit);
    CHECK_OFF(SELM, 76, offLdtHyper);
    CHECK_OFF(SELM, 80, Tss);
    CHECK_OFF(SELM, 216, TssTrap08);
    CHECK_OFF(SELM, 352, pvMonShwTssRC);
    CHECK_OFF(SELM, 360, GCPtrGuestTss);
    CHECK_OFF(SELM, 368, cbGuestTss);
    CHECK_OFF(SELM, 372, fGuestTss32Bit);
    CHECK_OFF(SELM, 376, cbMonitoredGuestTss);
    CHECK_OFF(SELM, 380, GCSelTss);
    CHECK_OFF(SELM, 384, fGDTRangeRegistered);
    CHECK_OFF(SELM, 392, StatUpdateFromCPUM);
    CHECK_OFF(SELM, 624, StatStaleToUnstaleSReg);
    CHECK_OFF(SELM, 704, StatLoadHidSelGstNoGood);
    CHECK_SIZE(TM, 2432);
    CHECK_OFF(TM, 0, offVM);
    CHECK_OFF(TM, 520, pvGIPR3);
    CHECK_OFF(TM, 516, pvGIPRC);
    CHECK_OFF(TMCPU, 4, fTSCTicking);
    CHECK_OFF(TM, 5, fTSCUseRealTSC);
    CHECK_OFF(TM, 7, fTSCTiedToExecution);
    CHECK_OFF(TMCPU, 8, offTSCRawSrc);
    CHECK_OFF(TMCPU, 16, u64TSC);
    CHECK_OFF(TM, 16, cTSCTicksPerSecond);
    CHECK_OFF(TM, 44, cVirtualTicking);
    CHECK_OFF(TM, 48, fVirtualWarpDrive);
    CHECK_OFF(TM, 49, fVirtualSyncTicking);
    CHECK_OFF(TM, 50, fVirtualSyncCatchUp);
    CHECK_OFF(TM, 52, u32VirtualWarpDrivePercentage);
    CHECK_OFF(TM, 56, u64VirtualOffset);
    CHECK_OFF(TM, 64, u64Virtual);
    CHECK_OFF(TM, 80, u64VirtualRawPrev);
    CHECK_OFF(TM, 88, VirtualGetRawDataR3);
    CHECK_OFF(TM, 88, VirtualGetRawDataR3.pu64Prev);
    CHECK_OFF(TM, 96, VirtualGetRawDataR3.pfnBad);
    CHECK_OFF(TM, 104, VirtualGetRawDataR3.pfnRediscover);
    CHECK_OFF(TM, 120, VirtualGetRawDataR3.c1nsSteps);
    CHECK_OFF(TM, 128, VirtualGetRawDataR3.cBadPrev);
    CHECK_OFF(TM, 124, VirtualGetRawDataR3.cExpired);
    CHECK_OFF(TM, 132, VirtualGetRawDataR3.cUpdateRaces);
    CHECK_OFF(TM, 136, VirtualGetRawDataR0);
    CHECK_OFF(TM, 136, VirtualGetRawDataR0.pu64Prev);
    CHECK_OFF(TM, 144, VirtualGetRawDataR0.pfnBad);
    CHECK_OFF(TM, 152, VirtualGetRawDataR0.pfnRediscover);
    CHECK_OFF(TM, 168, VirtualGetRawDataR0.c1nsSteps);
    CHECK_OFF(TM, 176, VirtualGetRawDataR0.cBadPrev);
    CHECK_OFF(TM, 172, VirtualGetRawDataR0.cExpired);
    CHECK_OFF(TM, 180, VirtualGetRawDataR0.cUpdateRaces);
    CHECK_OFF(TM, 184, VirtualGetRawDataRC);
    CHECK_OFF(TM, 184, VirtualGetRawDataRC.pu64Prev);
    CHECK_OFF(TM, 188, VirtualGetRawDataRC.pfnBad);
    CHECK_OFF(TM, 192, VirtualGetRawDataRC.pfnRediscover);
    CHECK_OFF(TM, 200, VirtualGetRawDataRC.c1nsSteps);
    CHECK_OFF(TM, 208, VirtualGetRawDataRC.cBadPrev);
    CHECK_OFF(TM, 204, VirtualGetRawDataRC.cExpired);
    CHECK_OFF(TM, 212, VirtualGetRawDataRC.cUpdateRaces);
    CHECK_OFF(TM, 216, pfnVirtualGetRawR3);
    CHECK_OFF(TM, 224, pfnVirtualGetRawR0);
    CHECK_OFF(TM, 232, pfnVirtualGetRawRC);
    CHECK_OFF(TM, 72, u64VirtualWarpDriveStart);
    CHECK_OFF(TM, 240, u64VirtualSync);
    CHECK_OFF(TM, 248, offVirtualSync);
    CHECK_OFF(TM, 256, offVirtualSyncGivenUp);
    CHECK_OFF(TM, 264, u64VirtualSyncCatchUpPrev);
    CHECK_OFF(TM, 272, u32VirtualSyncCatchUpPercentage);
    CHECK_OFF(TM, 276, u32VirtualSyncScheduleSlack);
    CHECK_OFF(TM, 280, u64VirtualSyncCatchUpStopThreshold);
    CHECK_OFF(TM, 288, u64VirtualSyncCatchUpGiveUpThreshold);
    CHECK_OFF(TM, 296, aVirtualSyncCatchUpPeriods);
    CHECK_OFF(TM, 296, aVirtualSyncCatchUpPeriods[0].u64Start);
    CHECK_OFF(TM, 304, aVirtualSyncCatchUpPeriods[0].u32Percentage);
    CHECK_OFF(TM, 312, aVirtualSyncCatchUpPeriods[1].u64Start);
    CHECK_OFF(TM, 320, aVirtualSyncCatchUpPeriods[1].u32Percentage);
    CHECK_OFF(TM, 544, pTimer);
    CHECK_OFF(TM, 552, u32TimerMillies);
    CHECK_OFF(TM, 528, pFree);
    CHECK_OFF(TM, 536, pCreated);
    CHECK_OFF(TM, 496, paTimerQueuesR3);
    CHECK_OFF(TM, 504, paTimerQueuesR0);
    CHECK_OFF(TM, 512, paTimerQueuesRC);
    CHECK_OFF(TM, 560, TimerCritSect);
    CHECK_OFF(TM, 752, VirtualSyncLock);
    CHECK_OFF(TM, 976, StatDoQueues);
    CHECK_OFF(TM, 2328, StatTimerCallbackSetFF);
    CHECK_SIZE(TMTIMER, 112);
    CHECK_OFF(TMTIMER, 0, u64Expire);
    CHECK_OFF(TMTIMER, 8, enmClock);
    CHECK_OFF(TMTIMER, 12, enmType);
    CHECK_OFF(TMTIMER, 16, u.Dev.pfnTimer);
    CHECK_OFF(TMTIMER, 24, u.Dev.pDevIns);
    CHECK_OFF(TMTIMER, 16, u.Drv.pfnTimer);
    CHECK_OFF(TMTIMER, 24, u.Drv.pDrvIns);
    CHECK_OFF(TMTIMER, 16, u.Internal.pfnTimer);
    CHECK_OFF(TMTIMER, 16, u.External.pfnTimer);
    CHECK_OFF(TMTIMER, 32, enmState);
    CHECK_OFF(TMTIMER, 36, offScheduleNext);
    CHECK_OFF(TMTIMER, 40, offNext);
    CHECK_OFF(TMTIMER, 44, offPrev);
    CHECK_OFF(TMTIMER, 56, pVMR0);
    CHECK_OFF(TMTIMER, 48, pVMR3);
    CHECK_OFF(TMTIMER, 64, pVMRC);
    CHECK_OFF(TMTIMER, 68, uHzHint);
    CHECK_OFF(TMTIMER, 72, pvUser);
    CHECK_OFF(TMTIMER, 80, pCritSect);
    CHECK_OFF(TMTIMER, 88, pBigNext);
    CHECK_OFF(TMTIMER, 96, pBigPrev);
    CHECK_OFF(TMTIMER, 104, pszDesc);
    CHECK_SIZE(TMTIMERQUEUE, 32);
    CHECK_OFF(TMTIMERQUEUE, 8, offActive);
    CHECK_OFF(TMTIMERQUEUE, 12, offSchedule);
    CHECK_OFF(TMTIMERQUEUE, 16, enmClock);
    CHECK_SIZE(TRPM, 5184);
    CHECK_SIZE(TRPMCPU, 72);
    CHECK_SIZE(VM, 131072);
    CHECK_SIZE(VMM, 1504);
    CHECK_OFF(VMM, 0, offVM);
    CHECK_OFF(VMM, 4, cbCoreCode);
    CHECK_OFF(VMM, 8, HCPhysCoreCode);
    CHECK_OFF(VMM, 16, pvCoreCodeR3);
    CHECK_OFF(VMM, 24, pvCoreCodeR0);
    CHECK_OFF(VMM, 32, pvCoreCodeRC);
    CHECK_OFF(VMM, 40, enmSwitcher);
    CHECK_OFF(VMM, 44, aoffSwitchers);
    CHECK_OFF(VMM, 48, aoffSwitchers[1]);
    CHECK_OFF(VMM, 112, pfnR0ToRawMode);
    CHECK_OFF(VMM, 108, pfnRCToHost);
    CHECK_OFF(VMM, 104, pfnCallTrampolineRC);
    CHECK_OFF(VMM, 96, pfnCPUMRCResumeGuest);
    CHECK_OFF(VMM, 100, pfnCPUMRCResumeGuestV86);
    CHECK_OFF(VMM, 124, pRCLoggerRC);
    CHECK_OFF(VMM, 128, pRCLoggerR3);
    CHECK_OFF(VMM, 120, cbRCLogger);
    CHECK_OFF(VMM, 152, fRCLoggerFlushingDisabled);
    CHECK_OFF(VMM, 158, fStackGuardsStationed);
    CHECK_OFF(VMM, 159, fUsePeriodicPreemptionTimers);
    CHECK_OFF(VMM, 160, pYieldTimer);
    CHECK_OFF(VMM, 168, cYieldResumeMillies);
    CHECK_OFF(VMM, 172, cYieldEveryMillies);
    CHECK_OFF(VMM, 184, pahEvtRendezvousEnterOrdered);
    CHECK_OFF(VMM, 192, hEvtRendezvousEnterOneByOne);
    CHECK_OFF(VMM, 200, hEvtMulRendezvousEnterAllAtOnce);
    CHECK_OFF(VMM, 208, hEvtMulRendezvousDone);
    CHECK_OFF(VMM, 216, hEvtRendezvousDoneCaller);
    CHECK_OFF(VMM, 224, pfnRendezvous);
    CHECK_OFF(VMM, 232, pvRendezvousUser);
    CHECK_OFF(VMM, 240, fRendezvousFlags);
    CHECK_OFF(VMM, 244, cRendezvousEmtsEntered);
    CHECK_OFF(VMM, 248, cRendezvousEmtsDone);
    CHECK_OFF(VMM, 252, cRendezvousEmtsReturned);
    CHECK_OFF(VMM, 256, i32RendezvousStatus);
    CHECK_OFF(VMM, 260, u32RendezvousLock);
    CHECK_OFF(VMM, 264, szRing0AssertMsg1);
    CHECK_OFF(VMM, 776, szRing0AssertMsg2);
    CHECK_OFF(VMM, 1032, StatRunRC);
    CHECK_OFF(VMM, 1496, StatRZCallPGMLock);
    CHECK_OFF(VMMCPU, 4, iLastGZRc);
    CHECK_OFF(VMMCPU, 8, pbEMTStackR3);
    CHECK_OFF(VMMCPU, 16, pbEMTStackRC);
    CHECK_OFF(VMMCPU, 20, pbEMTStackBottomRC);
    CHECK_OFF(VMMCPU, 32, pR0LoggerR0);
    CHECK_OFF(VMMCPU, 24, pR0LoggerR3);
    CHECK_OFF(VMMCPU, 316, cCallRing3Disabled);
    CHECK_OFF(VMMCPU, 320, enmCallRing3Operation);
    CHECK_OFF(VMMCPU, 324, rcCallRing3);
    CHECK_OFF(VMMCPU, 328, u64CallRing3Arg);
    CHECK_OFF(VMMCPU, 352, CallRing3JmpBufR0);
    CHECK_OFF(VMMCPU, 440, CallRing3JmpBufR0.SpCheck);
    CHECK_OFF(VMMCPU, 448, CallRing3JmpBufR0.SpResume);
    CHECK_SIZE(RTPINGPONG, 24);
    CHECK_SIZE(RTCRITSECT, 48);
    CHECK_OFF(RTCRITSECT, 0, u32Magic);
    CHECK_OFF(RTCRITSECT, 4, cLockers);
    CHECK_OFF(RTCRITSECT, 8, NativeThreadOwner);
    CHECK_OFF(RTCRITSECT, 16, cNestings);
    CHECK_OFF(RTCRITSECT, 20, fFlags);
    CHECK_OFF(RTCRITSECT, 24, EventSem);
    CHECK_OFF(RTCRITSECT, 32, pValidatorRec);
    CHECK_SIZE(CSAM, 1032);
    CHECK_OFF(CSAM, 0, offVM);
    CHECK_OFF(CSAM, 8, pPageTree);
    CHECK_OFF(CSAM, 16, aDangerousInstr);
    CHECK_OFF(CSAM, 20, aDangerousInstr[1]);
    CHECK_OFF(CSAM, 76, aDangerousInstr[CSAM_MAX_DANGR_INSTR - 1]);
    CHECK_OFF(CSAM, 80, cDangerousInstr);
    CHECK_OFF(CSAM, 84, iDangerousInstr);
    CHECK_OFF(CSAM, 88, pPDBitmapGC);
    CHECK_OFF(CSAM, 92, pPDHCBitmapGC);
    CHECK_OFF(CSAM, 96, pPDBitmapHC);
    CHECK_OFF(CSAM, 104, pPDGCBitmapHC);
    CHECK_OFF(CSAM, 112, savedstate);
    CHECK_OFF(CSAM, 112, savedstate.pSSM);
    CHECK_OFF(CSAM, 120, savedstate.cPageRecords);
    CHECK_OFF(CSAM, 124, savedstate.cPatchPageRecords);
    CHECK_OFF(CSAM, 128, cDirtyPages);
    CHECK_OFF(CSAM, 132, pvDirtyBasePage);
    CHECK_OFF(CSAM, 136, pvDirtyBasePage[1]);
    CHECK_OFF(CSAM, 256, pvDirtyBasePage[CSAM_MAX_DIRTY_PAGES - 1]);
    CHECK_OFF(CSAM, 260, pvDirtyFaultPage);
    CHECK_OFF(CSAM, 264, pvDirtyFaultPage[1]);
    CHECK_OFF(CSAM, 384, pvDirtyFaultPage[CSAM_MAX_DIRTY_PAGES - 1]);
    CHECK_OFF(CSAM, 520, pvCallInstruction);
    CHECK_OFF(CSAM, 584, iCallInstruction);
    CHECK_OFF(CSAM, 588, fScanningStarted);
    CHECK_OFF(CSAM, 589, fGatesChecked);
    CHECK_OFF(CSAM, 592, StatNrTraps);
    CHECK_OFF(CSAM, 600, StatNrPages);
    CHECK_SIZE(PATM, 680);
    CHECK_OFF(PATM, 0, offVM);
    CHECK_OFF(PATM, 4, pPatchMemGC);
    CHECK_OFF(PATM, 8, pPatchMemHC);
    CHECK_OFF(PATM, 16, cbPatchMem);
    CHECK_OFF(PATM, 20, offPatchMem);
    CHECK_OFF(PATM, 24, fOutOfMemory);
    CHECK_OFF(PATM, 28, deltaReloc);
    CHECK_OFF(PATM, 40, pGCStateGC);
    CHECK_OFF(PATM, 32, pGCStateHC);
    CHECK_OFF(PATM, 44, pGCStackGC);
    CHECK_OFF(PATM, 48, pGCStackHC);
    CHECK_OFF(PATM, 56, pCPUMCtxGC);
    CHECK_OFF(PATM, 60, pStatsGC);
    CHECK_OFF(PATM, 64, pStatsHC);
    CHECK_OFF(PATM, 72, uCurrentPatchIdx);
    CHECK_OFF(PATM, 76, ulCallDepth);
    CHECK_OFF(PATM, 80, cPageRecords);
    CHECK_OFF(PATM, 84, pPatchedInstrGCLowest);
    CHECK_OFF(PATM, 88, pPatchedInstrGCHighest);
    CHECK_OFF(PATM, 96, PatchLookupTreeHC);
    CHECK_OFF(PATM, 92, PatchLookupTreeGC);
    CHECK_OFF(PATM, 104, pfnHelperCallGC);
    CHECK_OFF(PATM, 108, pfnHelperRetGC);
    CHECK_OFF(PATM, 112, pfnHelperJumpGC);
    CHECK_OFF(PATM, 116, pfnHelperIretGC);
    CHECK_OFF(PATM, 120, pGlobalPatchRec);
    CHECK_OFF(PATM, 128, pfnSysEnterGC);
    CHECK_OFF(PATM, 132, pfnSysEnterPatchGC);
    CHECK_OFF(PATM, 136, uSysEnterPatchIdx);
    CHECK_OFF(PATM, 140, pvFaultMonitor);
    CHECK_OFF(PATM, 144, mmio);
    CHECK_OFF(PATM, 144, mmio.GCPhys);
    CHECK_OFF(PATM, 152, mmio.pCachedData);
    CHECK_OFF(PATM, 160, savedstate);
    CHECK_OFF(PATM, 160, savedstate.pSSM);
    CHECK_OFF(PATM, 168, savedstate.cPatches);
    CHECK_OFF(PATM, 184, StatNrOpcodeRead);
    CHECK_OFF(PATM, 672, StatU32FunctionMaxSlotsUsed);
    CHECK_SIZE(PATMGCSTATE, 68);
    CHECK_OFF(PATMGCSTATE, 0, uVMFlags);
    CHECK_OFF(PATMGCSTATE, 4, uPendingAction);
    CHECK_OFF(PATMGCSTATE, 8, uPatchCalls);
    CHECK_OFF(PATMGCSTATE, 12, uScratch);
    CHECK_OFF(PATMGCSTATE, 16, uIretEFlags);
    CHECK_OFF(PATMGCSTATE, 20, uIretCS);
    CHECK_OFF(PATMGCSTATE, 24, uIretEIP);
    CHECK_OFF(PATMGCSTATE, 28, Psp);
    CHECK_OFF(PATMGCSTATE, 32, fPIF);
    CHECK_OFF(PATMGCSTATE, 36, GCPtrInhibitInterrupts);
    CHECK_OFF(PATMGCSTATE, 48, Restore);
    CHECK_OFF(PATMGCSTATE, 48, Restore.uEAX);
    CHECK_OFF(PATMGCSTATE, 52, Restore.uECX);
    CHECK_OFF(PATMGCSTATE, 56, Restore.uEDI);
    CHECK_OFF(PATMGCSTATE, 60, Restore.eFlags);
    CHECK_OFF(PATMGCSTATE, 64, Restore.uFlags);
    CHECK_SIZE(PATMTREES, 16);
    CHECK_OFF(PATMTREES, 0, PatchTree);
    CHECK_OFF(PATMTREES, 4, PatchTreeByPatchAddr);
    CHECK_OFF(PATMTREES, 8, PatchTreeByPage);
    CHECK_SIZE(PATMPATCHREC, 232);
    CHECK_OFF(PATMPATCHREC, 0, Core);
    CHECK_OFF(PATMPATCHREC, 16, CoreOffset);
    CHECK_OFF(PATMPATCHREC, 32, patch);
    CHECK_SIZE(PATCHINFO, 200);
    CHECK_OFF(PATCHINFO, 0, uState);
    CHECK_OFF(PATCHINFO, 4, uOldState);
    CHECK_OFF(PATCHINFO, 8, uOpMode);
    CHECK_OFF(PATCHINFO, 16, unusedHC);
    CHECK_OFF(PATCHINFO, 12, pPrivInstrGC);
    CHECK_OFF(PATCHINFO, 24, aPrivInstr);
    CHECK_OFF(PATCHINFO, 25, aPrivInstr[1]);
    CHECK_OFF(PATCHINFO, 39, aPrivInstr[MAX_INSTR_SIZE - 1]);
    CHECK_OFF(PATCHINFO, 40, cbPrivInstr);
    CHECK_OFF(PATCHINFO, 44, opcode);
    CHECK_OFF(PATCHINFO, 48, cbPatchJump);
    CHECK_OFF(PATCHINFO, 52, pPatchJumpDestGC);
    CHECK_OFF(PATCHINFO, 56, pPatchBlockOffset);
    CHECK_OFF(PATCHINFO, 60, cbPatchBlockSize);
    CHECK_OFF(PATCHINFO, 64, uCurPatchOffset);
    CHECK_OFF(PATCHINFO, 72, flags);
    CHECK_OFF(PATCHINFO, 80, pInstrGCLowest);
    CHECK_OFF(PATCHINFO, 84, pInstrGCHighest);
    CHECK_OFF(PATCHINFO, 88, FixupTree);
    CHECK_OFF(PATCHINFO, 96, nrFixups);
    CHECK_OFF(PATCHINFO, 104, JumpTree);
    CHECK_OFF(PATCHINFO, 100, nrJumpRecs);
    CHECK_OFF(PATCHINFO, 112, Patch2GuestAddrTree);
    CHECK_OFF(PATCHINFO, 120, Guest2PatchAddrTree);
    CHECK_OFF(PATCHINFO, 128, nrPatch2GuestRecs);
    CHECK_OFF(PATCHINFO, 136, unused);
    CHECK_OFF(PATCHINFO, 136, unused.pPatchLocStartHC);
    CHECK_OFF(PATCHINFO, 144, unused.pPatchLocEndHC);
    CHECK_OFF(PATCHINFO, 152, unused.pGuestLoc);
    CHECK_OFF(PATCHINFO, 156, unused.opsize);
    CHECK_OFF(PATCHINFO, 160, pTempInfo);
    CHECK_OFF(PATCHINFO, 168, pTrampolinePatchesHead);
    CHECK_OFF(PATCHINFO, 176, cCodeWrites);
    CHECK_OFF(PATCHINFO, 180, cTraps);
    CHECK_OFF(PATCHINFO, 184, cInvalidWrites);
    CHECK_OFF(PATCHINFO, 188, uPatchIdx);
    CHECK_OFF(PATCHINFO, 192, bDirtyOpcode);
    CHECK_SIZE(PATMPATCHPAGE, 40);
    CHECK_OFF(PATMPATCHPAGE, 0, Core);
    CHECK_OFF(PATMPATCHPAGE, 16, pLowestAddrGC);
    CHECK_OFF(PATMPATCHPAGE, 20, pHighestAddrGC);
    CHECK_OFF(PATMPATCHPAGE, 24, cCount);
    CHECK_OFF(PATMPATCHPAGE, 28, cMaxPatches);
    CHECK_OFF(PATMPATCHPAGE, 32, papPatch);
    CHECK_SIZE(VM, 131072);
    CHECK_OFF(VM, 0, enmVMState);
    CHECK_OFF(VM, 4, fGlobalForcedActions);
    CHECK_OFF(VM, 8, paVMPagesR3);
    CHECK_OFF(VM, 16, pSession);
    CHECK_OFF(VM, 24, pUVM);
    CHECK_OFF(VM, 32, pVMR3);
    CHECK_OFF(VM, 40, pVMR0);
    CHECK_OFF(VM, 48, pVMRC);
    CHECK_OFF(VM, 52, hSelf);
    CHECK_OFF(VM, 56, cCpus);
    CHECK_OFF(VM, 60, uCpuExecutionCap);
    CHECK_OFF(VM, 64, cbSelf);
    CHECK_OFF(VM, 72, pfnVMMRCToHostAsm);
    CHECK_OFF(VM, 76, pfnVMMRCToHostAsmNoReturn);
    CHECK_OFF(VM, 80, fRecompileUser);
    CHECK_OFF(VM, 81, fRecompileSupervisor);
    CHECK_OFF(VM, 83, fPATMEnabled);
    CHECK_OFF(VM, 84, fCSAMEnabled);
    CHECK_OFF(VM, 85, fHMEnabled);
    CHECK_OFF(VM, 86, fHMEnabledFixed);
    CHECK_OFF(VM, 88, fFaultTolerantMaster);
    CHECK_OFF(VM, 89, fUseLargePages);
    CHECK_OFF(VM, 92, hTraceBufRC);
    CHECK_OFF(VM, 96, hTraceBufR3);
    CHECK_OFF(VM, 104, hTraceBufR0);
    CHECK_OFF(VM, 112, StatTotalQemuToGC);
    CHECK_OFF(VM, 152, StatTotalGCToQemu);
    CHECK_OFF(VM, 192, StatTotalInGC);
    CHECK_OFF(VM, 232, StatTotalInQemu);
    CHECK_OFF(VM, 272, StatSwitcherToGC);
    CHECK_OFF(VM, 312, StatSwitcherToHC);
    CHECK_OFF(VM, 352, StatSwitcherSaveRegs);
    CHECK_OFF(VM, 392, StatSwitcherSysEnter);
    CHECK_OFF(VM, 432, StatSwitcherDebug);
    CHECK_OFF(VM, 472, StatSwitcherCR0);
    CHECK_OFF(VM, 512, StatSwitcherCR4);
    CHECK_OFF(VM, 552, StatSwitcherJmpCR3);
    CHECK_OFF(VM, 592, StatSwitcherRstrRegs);
    CHECK_OFF(VM, 632, StatSwitcherLgdt);
    CHECK_OFF(VM, 672, StatSwitcherLidt);
    CHECK_OFF(VM, 712, StatSwitcherLldt);
    CHECK_OFF(VM, 752, StatSwitcherTSS);
    CHECK_OFF(VM, 832, cpum);
    CHECK_OFF(VM, 2368, vmm);
    CHECK_OFF(VM, 3968, pgm);
    CHECK_OFF(VM, 18240, hm);
    CHECK_OFF(VM, 23680, trpm);
    CHECK_OFF(VM, 28928, selm);
    CHECK_OFF(VM, 29696, mm);
    CHECK_OFF(VM, 29888, pdm);
    CHECK_OFF(VM, 31808, iom);
    CHECK_OFF(VM, 32704, patm);
    CHECK_OFF(VM, 33472, csam);
    CHECK_OFF(VM, 34560, em);
    CHECK_OFF(VM, 34816, tm);
    CHECK_OFF(VM, 37312, dbgf);
    CHECK_OFF(VM, 39680, ssm);
    CHECK_OFF(VM, 39808, ftm);
    CHECK_OFF(VM, 40320, rem);
    CHECK_OFF(VM, 110208, vm);
    CHECK_OFF(VM, 110232, cfgm);
    CHECK_OFF(VM, 110592, aCpus);
    CHECK_SIZE(VMCPU, 20480);
    CHECK_OFF(VMCPU, 0, fLocalForcedActions);
    CHECK_OFF(VMCPU, 4, enmState);
    CHECK_OFF(VMCPU, 8, pUVCpu);
    CHECK_OFF(VMCPU, 16, pVMR3);
    CHECK_OFF(VMCPU, 24, pVMR0);
    CHECK_OFF(VMCPU, 32, pVMRC);
    CHECK_OFF(VMCPU, 36, idCpu);
    CHECK_OFF(VMCPU, 40, hNativeThread);
    CHECK_OFF(VMCPU, 48, hNativeThreadR0);
    CHECK_OFF(VMCPU, 56, idHostCpu);
    CHECK_OFF(VMCPU, 60, fTraceGroups);
    CHECK_OFF(VMCPU, 124, uAdHoc);
    CHECK_OFF(VMCPU, 128, aStatAdHoc);
    CHECK_OFF(VMCPU, 448, cpum);
    CHECK_OFF(VMCPU, 4032, hm);
    CHECK_OFF(VMCPU, 9600, em);
    CHECK_OFF(VMCPU, 11072, iem);
    CHECK_OFF(VMCPU, 14144, trpm);
    CHECK_OFF(VMCPU, 14272, tm);
    CHECK_OFF(VMCPU, 14656, vmm);
    CHECK_OFF(VMCPU, 15360, pdm);
    CHECK_OFF(VMCPU, 15616, iom);
    CHECK_OFF(VMCPU, 16128, dbgf);
    CHECK_OFF(VMCPU, 16384, pgm);
    CHECK_SIZE(DISCPUSTATE, 184);
    CHECK_OFF(DISCPUSTATE, 88, Param1);
    CHECK_OFF(DISCPUSTATE, 120, Param2);
    CHECK_OFF(DISCPUSTATE, 152, Param3);
    CHECK_OFF(DISCPUSTATE, 56, i32SibDisp);
    CHECK_OFF(DISCPUSTATE, 20, fFilter);
    CHECK_OFF(DISCPUSTATE, 64, uInstrAddr);
    CHECK_OFF(DISCPUSTATE, 40, abInstr);
    CHECK_OFF(DISCPUSTATE, 80, pvUser);
